,index,languageName,submissionId,submitTime,userName,statusMessage,code
0,E,Java,61789008,2023-04-07 19:09:46,小小小巨人,答案错误,"import java.io.*;
import java.math.*;
import java.util.*;
import java.util.Map.*;
/**
 * 
 * @author TCchen 
 */
public class Main {
	public static void main(String[]args) throws IOException {
		new Main().run();
	}
	File input=new File(""input.txt"");
	File output=new File(""output.txt"");
	void run() throws IOException{
		boolean debug=false;
//		debug=true;
		if(debug)new Solve().setIO(input, output).run();
		else new Solve().setIO(System.in,System.out).run();
	}
	class Solve extends ioTask{
		int n,m,k,i,j,len,p,l,r;
		void solve()throws IOException{
			n=in.in()>>1;
			m=in.in()>>1;
			out.println(n==m(?)""Bob"":""Alice"");
		}
		int te;
		void run()throws IOException{
//			init();
			int t=1;
			t=in.in();
			for(te=1;te<=t;te++) {
				solve();
//				out.flush();
			}
			out.close();
		}
//		long timeMillis;
//		void st() {
//			timeMillis=System.currentTimeMillis();
//		}
//		void ed() {
//			System.out.println((System.currentTimeMillis()-timeMillis)+""ms"");
//		}
	}
	class QIn{
		StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
		int in() throws IOException {
			st.nextToken();
			return (int)st.nval;
		}
		long inl() throws IOException {
			st.nextToken();
			return (long)st.nval;
		}
		double ind()throws IOException  {
			st.nextToken();
			return st.nval;
		}
		String ins() throws IOException {
			st.nextToken();
			return st.sval;
		}
	}
	class In{
		private StringTokenizer in=new StringTokenizer("""");
		private InputStream is;
		private BufferedReader br;
		public In(File file) throws IOException {
			is=new FileInputStream(file);
			init();
		}
		public In(InputStream is) throws IOException{
			this.is=is;
			init();
		}
		private void init() throws IOException {
			br=new BufferedReader(new InputStreamReader(is));
		}
		/**
		 * File and OJ only
		 */
		boolean hasNext() throws IOException {
			return in.hasMoreTokens()||br.ready();
		}
		String ins() throws IOException {
			while(!in.hasMoreTokens()) {
				in=new StringTokenizer(br.readLine());
			}
			return in.nextToken();
		}
		int in() throws IOException {
			return Integer.parseInt(ins());
		}
		long inl() throws IOException {
			return Long.parseLong(ins());
		}
		double ind() throws IOException {
			return Double.parseDouble(ins());
		}
		String line() throws IOException {
			return br.readLine();
		}
	}
	class Out{
		PrintWriter out;
		private OutputStream os;
		private void init() {
			out=new PrintWriter(new BufferedWriter(new OutputStreamWriter(os)));
		}
		public Out(File file) throws IOException {
			os=new FileOutputStream(file);
			init();
		}
		public Out(OutputStream os) throws IOException{
			this.os=os;
			init();
		}
	}
	abstract class ioTask{
		In in;
		PrintWriter out;
		public ioTask setIO(File in,File out) throws IOException{
			this.in=new In(in);
			this.out=new Out(out).out;
			return this;
		}
		public ioTask setIO(File in,OutputStream out) throws IOException{
			this.in=new In(in);
			this.out=new Out(out).out;
			return this;
		}
		public ioTask setIO(InputStream in,OutputStream out) throws IOException{
			this.in=new In(in);
			this.out=new Out(out).out;
			return this;
		}
		public ioTask setIO(InputStream in,File out) throws IOException{
			this.in=new In(in);
			this.out=new Out(out).out;
			return this;
		}
		void run()throws IOException{}
	}
}"
1,E,Java,61789821,2023-04-07 19:14:35,小小小巨人,答案正确,"import java.io.*;
import java.math.*;
import java.util.*;
import java.util.Map.*;
/**
 * 
 * @author TCchen 
 */
public class Main {
	public static void main(String[]args) throws IOException {
		new Main().run();
	}
	File input=new File(""input.txt"");
	File output=new File(""output.txt"");
	void run() throws IOException{
		boolean debug=false;
//		debug=true;
		if(debug)new Solve().setIO(input, output).run();
		else new Solve().setIO(System.in,System.out).run();
	}
	class Solve extends ioTask{
		int n,m,k,i,j,len,p,l,r;
		int get(int x) {
			int i=1;
			int num=2;
			while(num<x) {
				num=num+1<<1;
				i++;
			}
			return i;
		}
		void solve()throws IOException{
			n=get(in.in());
			m=get(in.in());
			out.println(n==m(?)""Bob"":""Alice"");
		}
		int te;
		void run()throws IOException{
//			init();
			int t=1;
			t=in.in();
			for(te=1;te<=t;te++) {
				solve();
//				out.flush();
			}
			out.close();
		}
//		long timeMillis;
//		void st() {
//			timeMillis=System.currentTimeMillis();
//		}
//		void ed() {
//			System.out.println((System.currentTimeMillis()-timeMillis)+""ms"");
//		}
	}
	class QIn{
		StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
		int in() throws IOException {
			st.nextToken();
			return (int)st.nval;
		}
		long inl() throws IOException {
			st.nextToken();
			return (long)st.nval;
		}
		double ind()throws IOException  {
			st.nextToken();
			return st.nval;
		}
		String ins() throws IOException {
			st.nextToken();
			return st.sval;
		}
	}
	class In{
		private StringTokenizer in=new StringTokenizer("""");
		private InputStream is;
		private BufferedReader br;
		public In(File file) throws IOException {
			is=new FileInputStream(file);
			init();
		}
		public In(InputStream is) throws IOException{
			this.is=is;
			init();
		}
		private void init() throws IOException {
			br=new BufferedReader(new InputStreamReader(is));
		}
		/**
		 * File and OJ only
		 */
		boolean hasNext() throws IOException {
			return in.hasMoreTokens()||br.ready();
		}
		String ins() throws IOException {
			while(!in.hasMoreTokens()) {
				in=new StringTokenizer(br.readLine());
			}
			return in.nextToken();
		}
		int in() throws IOException {
			return Integer.parseInt(ins());
		}
		long inl() throws IOException {
			return Long.parseLong(ins());
		}
		double ind() throws IOException {
			return Double.parseDouble(ins());
		}
		String line() throws IOException {
			return br.readLine();
		}
	}
	class Out{
		PrintWriter out;
		private OutputStream os;
		private void init() {
			out=new PrintWriter(new BufferedWriter(new OutputStreamWriter(os)));
		}
		public Out(File file) throws IOException {
			os=new FileOutputStream(file);
			init();
		}
		public Out(OutputStream os) throws IOException{
			this.os=os;
			init();
		}
	}
	abstract class ioTask{
		In in;
		PrintWriter out;
		public ioTask setIO(File in,File out) throws IOException{
			this.in=new In(in);
			this.out=new Out(out).out;
			return this;
		}
		public ioTask setIO(File in,OutputStream out) throws IOException{
			this.in=new In(in);
			this.out=new Out(out).out;
			return this;
		}
		public ioTask setIO(InputStream in,OutputStream out) throws IOException{
			this.in=new In(in);
			this.out=new Out(out).out;
			return this;
		}
		public ioTask setIO(InputStream in,File out) throws IOException{
			this.in=new In(in);
			this.out=new Out(out).out;
			return this;
		}
		void run()throws IOException{}
	}
}"
2,E,Java,61791939,2023-04-07 19:28:38,232132323,答案错误,"import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {

        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int t = in.nextInt();
            while (t-- > 0) {
                int n = in.nextInt();
                int m = in.nextInt();
                if (n == m)
                    out.println(""Bob"");
                else 
                    out.println(""Alice"");
            }
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }

    }
}"
3,E,Java,61792718,2023-04-07 19:34:11,可爱抱抱呀😥,答案错误,"//Java快读快写模板，不定时更新优化内容
//@可爱抱抱呀
import java.util.*;
import java.io.*;
import java.math.*;
import java.text.*;
public class Main{
    public static void main(String args[]) throws IOException{
        Read sc=new Read();
        int t=sc.nextInt();
        for(int i=0;i<t;i++){
            int n=sc.nextInt();
            int m=sc.nextInt();
            int count=0;
            while(n>2){
                count++;
                n>>=1;
            }
            while(m>2){
                count++;
                m>>=1;
            }
            sc.println(count%2==1(?)""Alice"":""Bob"");
        }
        //sc.print(0);
        sc.bw.flush();
        sc.bw.close();
    }
}
//记住看数字范围，需要开long吗，需要用BigInteger吗，需要手动处理字符串吗，复杂度数量级控制在1e7或者以下了吗
//开数组的数据范围最高不能超过1e7，数据范围再大就要用哈希表离散化了
//基本数据类型不能自定义sort排序，二维数组就可以了，顺序排序的时候是小减大，注意返回值应该是int
class Read{
    BufferedReader bf;
    StringTokenizer st;
    BufferedWriter bw;
    public Read(){
        bf=new BufferedReader(new InputStreamReader(System.in));
        st=new StringTokenizer("""");
        bw=new BufferedWriter(new OutputStreamWriter(System.out));
        //什么时候才能持续稳定ak力扣、AcWing呢？
        //什么时候才能ak cf的div2，div1呢？才能打div2不计rating呢？
        //什么时候才能ak  abc  不计rating呢？当然arc不计分更好
        //什么时候才能ak 牛客练习赛不计rating呢(?)
    }
    public String nextLine() throws IOException{
        return bf.readLine();
    }
    public String next() throws IOException{
        while(!st.hasMoreTokens()){
            st=new StringTokenizer(bf.readLine());
        }
        return st.nextToken();
    }
    public char nextChar() throws IOException{
        //确定下一个token只有一个字符的时候再用
        return next().charAt(0);
    }
    public int nextInt() throws IOException{
        return Integer.parseInt(next());
    }
    public long nextLong() throws IOException{
        return Long.parseLong(next());
    }
    public double nextDouble() throws IOException{
        return Double.parseDouble(next());
    }
    public float nextFloat() throws IOException{
        return Float.parseFloat(next());
    }
    public byte nextByte() throws IOException{
        return Byte.parseByte(next());
    }
    public short nextShort() throws IOException{
        return Short.parseShort(next());
    }
    public BigInteger nextBigInteger() throws IOException{
        return new BigInteger(next());
    }
    public void println(int a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(int a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(String a) throws IOException{
        bw.write(a);
        bw.newLine();
        return;
    }
    public void print(String a) throws IOException{
        bw.write(a);
        return;
    }
    public void println(long a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(long a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(double a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(double a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void print(BigInteger a) throws IOException{
        bw.write(a.toString());
        return;
    }
    public void print(char a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(char a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
}"
4,E,Java,61792992,2023-04-07 19:36:15,232132323,答案错误,"import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {

        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int t = in.nextInt();
            while (t-- > 0) {
                int n = in.nextInt();
                int m = in.nextInt();
                if (n < m && n <= 2 * m || m < n && m <= 2 * n)
                    out.println(""Alice"");
                else
                    out.println(""Bob"");
            }
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }

    }
}"
5,E,Java,61793126,2023-04-07 19:37:07,232132323,答案错误,"import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {

        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int t = in.nextInt();
            while (t-- > 0) {
                int n = in.nextInt();
                int m = in.nextInt();
                if (n < m && n < 2 * m || m < n && m < 2 * n)
                    out.println(""Alice"");
                else
                    out.println(""Bob"");
            }
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }

    }
}"
6,E,Java,61793789,2023-04-07 19:41:41,牛客765377204号,答案错误,"

import java.util.*;

public class Main {

    static Scanner in = new Scanner(System.in);
    static int[] dx = {1, -1, 0, 0};
    static int[] dy = {0, 0, -1, 1};
    static boolean[][] st;
    static int n, m;
    static char[][] grid;
    static int ans = 0;

//    public static void dfs(int i, int j) {
//        if (i < 0 || i >= n || j < 0 || j >= m || grid[i][j] == '#') return;
//        if (grid[i][j] == '!') ans++;
//        grid[i][j] = '#';
//        for (int k = 0; k < 4; k++) {
//            dfs(i + dx[k], j + dy[k]);
//        }
//    }

    public static boolean dfs(int x, int y) {
        if (x == 1 && y == 1) {
            return false;
        }
        if (x > y) {
            return !dfs(x - x / 2, y);
        } else {
            return !dfs(x, y - y / 2);
        }
    }

    public static void main(String[] args) {
        int t = in.nextInt();
        while (t-- > 0) {
            int x = in.nextInt();
            int y = in.nextInt();
            if (dfs(x, y)) {
                System.out.println(""Alice"");
            } else {
                System.out.println(""Bob"");
            }
        }
    }
}
"
7,E,Java,61793907,2023-04-07 19:42:25,232132323,答案错误,"import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {

        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int t = in.nextInt();
            while (t-- > 0) {
                int n = in.nextInt();
                int m = in.nextInt();
                if (n < m && n * 2 <= m || m < n && m * 2 <= n)
                    out.println(""Alice"");
                else
                    out.println(""Bob"");
            }
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }

    }
}"
8,E,Java,61794070,2023-04-07 19:43:46,陈力明,答案错误,"

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.lang.invoke.MethodHandles;
import java.util.*;



import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
 
public class Main{
 
private static final boolean String = false;
static int []f;
//static int []f2;
static int []size;
//static int []size2;
//static int []a=new int [500001];
static int max=Integer.MAX_VALUE;

static Set<Long>set=new HashSet<>();
static int k;
static long mod= 998244353;
static int res=0;
static int n,m;
static int x1,y1;
 static List<Integer>[]ans;
 static char [][]c;

static int[] dx = {-1, 0, 1, 0}, dy = {0, 1, 0, -1};
	public static void main(String []args) {
		MyScanner s=new MyScanner();
		PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
	
		int t=s.nextInt();
		while(t-->0)
		{
			int a=s.nextInt();
			int b=s.nextInt();
			if(is(a)||is(b))
				out.println(""Alice"");
			else out.println(""Bob"");
		}
	
	out.close();
	}
	public static void dfs(int x,int y,char [][]f,int [][]v)
	{
		v[x][y]=1;
		if(f[x][y]=='!')res++;
		for(int i=0;i<4;i++)
		{
			int x1=x+dx[i];
			int y1=y+dy[i];
			if(x1<0||x1>=f.length||y1<0||y1>=f[0].length||v[x1][y1]==1||f[x1][y1]=='#')continue;
			dfs(x1,y1,f,v);
		}
	}
	public static long shuwei(int i,int  mask,boolean limitnums,boolean isnum,char []c,long [][]dp)
	{
		if(i==c.length)
			return isnum(?)1:0;
					
	
	if(!limitnums&&isnum&&dp[i][mask]!=-1)
		return dp[i][mask];
	long res=0;
	if(!isnum)
	{
		res=shuwei(i+1,mask,false,false,c,dp);
	}
	int up=limitnums(?)c[i]-'0':9;
	for(int d=isnum(?)0:1;d<=up;++d)
	{
		 if((mask>>d&1)==0)
			 res+=shuwei(i+1,mask,limitnums&&d==up,true,c,dp);
	}
	if(!limitnums&&isnum)
		dp[i][mask]=res;
	return res;
}
	
     


	public static boolean is(char []c)
	{
		int l=0;
		int r=c.length-1;
		while(l<r)
		{
			if(c[l]!=c[r])return false;
			l++;r--;
		}
		return true;
	}
	public static void swap (int l,int r,int []f)
	{
		if(l>=f.length||r>=f.length)return;
		int tt=f[l];
		f[l]=f[r];
		f[r]=tt;
		
	}
	
public static void reverse(int []a)
{
	int l=0,r=a.length-1;
	while(l<r)
	{
		int t=a[l];
		a[l]=a[r];
		a[r]=t;
		l++;r--;
	}
}
	public static long sum (int x,long mod)
	{
		
	long sum=1;
		for(int i = 2; i * i <= x; ++i){
			long temp = 1;
			if(x % i == 0){
				long j = i;
				while(x % i == 0){
					temp += j;
					j *= i;
					x /= i;
				}
				sum = (sum * temp) % mod;
			}

	
	}
		if(x > 1) sum = (sum * (1 + x)) % mod;
		return sum;
	}
	  public  static long Mode(long a,  long b, long mode)
	  {
	  	 long sum = 1;
	  	a = a % mode;
	   
	  	while (b > 0) {
	  		if (b % 2 == 1)		//判断是否是奇数，是奇数的话将多出来的数事先乘如sum
	  			sum = (sum * a) % mode;
	   
	  		b /= 2;
	  		a = (a * a) % mode;// 不断的两两合并再取模，减小a和b的规模
	  	}
	  	return sum;
	  }
	public static long is(int mid,long []f,int d)
	{
		long ans=0;
		for(int i=0;i<d;i++)
		{
			
			int   k=i%mid;
			if(k>f.length-1)continue;
			ans+=f[f.length-k-1];
		}
		return ans;
	}
	
	public static boolean is(String a,String b)
	{
		for(int i=0;i<=b.length()-a.length();i++)
		{
			if(b.substring(i,i+a.length()).equals(a))
				return true;
		}
		return false;
		
	}
	
	
	  public static boolean is(int  n) {
		    if (n <= 3) {
		        return n > 1;
		    }
		    // 只有6x-1和6x+1的数才有可能是质数
		    if (n % 6 != 1 && n % 6 != 5) {
		        return false;
		    }
		    // 判断这些数能否被小于sqrt(n)的奇数整除
		    int sqrt = (int) Math.sqrt(n);
		    for (int i = 5; i <= sqrt; i += 6) {
		        if (n % i == 0 || n % (i + 2) == 0) {
		            return false;
		        }
		    }
		    return true;
		}



public static int find (int []father,int x) {
		if(x!=father[x])
			x=find(father,father[x]);
		return father[x];
	}
public static void union(int []father,int x,int y,int []size) {
	x=find(father,x);
	y=find(father,y);
	if(x==y)
		return ;
	if(size[x]<size[y]) {
		 int tem=x;
         x=y;
         y=tem;
	}
	father[y]=x;
	size[x]+=size[y];
return ;
}
		
					
public static void shufu(int []f) {
		for(int i=0;i<f.length;i++) {
			int k=(int)(Math.random()*(f.length));
			int t=f[k];
			
			f[k]=f[0];
			f[0]=t;
			
		}
	}
public static void shufu1(long []f) {
	for(int i=0;i<f.length;i++) {
		int k=(int)(Math.random()*(f.length));
		long t=f[k];
		f[k]=f[0];
		f[0]=t;
	}
}
public  static int  gcd(int x,int y) {
		return y==0(?)x:gcd(y,x%y);
	}
 
 
public  static int  lcm(int x,int y) {
		
		return x*y/gcd(x,y);
}
		
	
	
		
		
	
	
		
	
/*					
public static void buildertree(int k,int l,int r) {
		if(l==r)
		{
			f[k]=a[l];
			return ;
		}
		int m=l+r>>1;
		buildertree(k+k,l,m);
		buildertree(k+k+1,m+1,r);
		f[k]=	
	
	}
public static	void update(int u,int l,int r,int x,int c)
{
    if(l==x && r==x)
    {
        f[u]=c;
        return;
    }
    int mid=l+r>>1;
    if(x<=mid)update(u<<1,l,mid,x,c);
    else if(x>=mid+1)update(u<<1|1,mid+1,r,x,c);
   	f[u]=Math.max(f[u+u], f[u+u+1]);
}
	
public static int query(int k,int l,int r,int x,int y) {
		if(x==l&&y==r) {
			return f[k];
		}
		int m=l+r>>1;
		if(y<=m) {
			return query(k+k,l,m,x,y);
		}
		else if(x>m)return query(k+k+1,m+1,r,x,y);
		else  {
			int i=query(k+k,l,m,x,m),j=query(k+k+1,m+1,r,m+1,y);
		return Math.max(j, Math.max(i+j, i));
		
		}
	}
	
public static void calc(int k,int l,int r,int x,int z) {
 
			f[k]+=z;
			if(l==r) {
				return ;
			}
			int m=l+r>>1;
    		if(x<=m)
    			calc(k+k,l,m,x,z);
    		else calc(k+k+1,m+1,r,x,z);
			
			
		}
	
				
			
 
		*/
		
				
	
			
	
			
	
 
	public static class MyScanner {
	    BufferedReader br;
	    StringTokenizer st;
	 
	    public MyScanner() {
	      try {
	        final String USERDIR = System.getProperty(""user.dir"");
	        String cname = MethodHandles.lookup().lookupClass().getCanonicalName().replace("".MyScanner"", """");
	        cname = cname.lastIndexOf('.') > 0 (?) cname.substring(cname.lastIndexOf('.') + 1) : cname;
	        final File fin = new File(USERDIR + ""/io/c"" + cname.substring(1,5) + ""/"" + cname + "".in"");
	        br = new BufferedReader(new InputStreamReader(fin.exists()
	            (?) new FileInputStream(fin) : System.in));
	      } catch (Exception e) {
	        br = new BufferedReader(new InputStreamReader(System.in));
	      }
	    }
	 
	    public String next() {
	      try {
	        while (st == null || !st.hasMoreElements()) {
	          st = new StringTokenizer(br.readLine());
	        }
	        return st.nextToken();
	      } catch (Exception e) {
	        throw new RuntimeException(e);
	      }
	    }
	 
	    public int nextInt() {
	      return Integer.parseInt(next());
	    }
	 
	    public long nextLong() {
	      return Long.parseLong(next());
	    }
	  }
	
		}"
9,E,Java,61794515,2023-04-07 19:47:12,执梗,答案错误,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t=sc.nextInt();
        while (t-->0){
            int n=sc.nextInt();
            int m=sc.nextInt();
            int s=n+m;
            if (Integer.bitCount(s)==1) System.out.println(""Bob"");
            else System.out.println(""Alice""); 
        }
        
    }
}"
10,E,Java,61794754,2023-04-07 19:48:50,北-北瓜,答案错误,"import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int t= in.nextInt();
            while (t-->0){
                int n= in.nextInt();
                int m= in.nextInt();
                if (n<m){
                    int x=n;
                    n=m;
                    m=x;
                }
                if (m<3){
                    if (n>2) System.out.println(""Alice"");
                    else System.out.println(""Bob"");
                }
                else if (m<6){
                    if (n<6) System.out.println(""Bob"");
                    else System.out.println(""Alice"");
                }
                else {
                    int nn=0;
                    int mm=0;
                    while (n>0){
                        nn++;
                        n=(n-1)/2;
                    }
                    while (m>0){
                        mm++;
                        m=(m-1)/2;
                    }
                    if ((nn+mm)%2==1) System.out.println(""Alice"");
                    else System.out.println(""Bob"");

                }


            }

        }
    }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;
        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}
"
11,E,Java,61794888,2023-04-07 19:49:46,陈力明,答案错误,"

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.lang.invoke.MethodHandles;
import java.util.*;



import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
 
public class Main{
 
private static final boolean String = false;
static int []f;
//static int []f2;
static int []size;
//static int []size2;
//static int []a=new int [500001];
static int max=Integer.MAX_VALUE;

static Set<Long>set=new HashSet<>();
static int k;
static long mod= 998244353;
static int res=0;
static int n,m;
static int x1,y1;
 static List<Integer>[]ans;
 static char [][]c;

static int[] dx = {-1, 0, 1, 0}, dy = {0, 1, 0, -1};
	public static void main(String []args) {
		MyScanner s=new MyScanner();
		PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
	
		int t=s.nextInt();
		while(t-->0)
		{
			int a=s.nextInt();
			int b=s.nextInt();
			if(a!=b&&(a>2||b>2))
				out.println(""Alice"");
			else out.println(""Bob"");
		}
	
	out.close();
	}
	public static void dfs(int x,int y,char [][]f,int [][]v)
	{
		v[x][y]=1;
		if(f[x][y]=='!')res++;
		for(int i=0;i<4;i++)
		{
			int x1=x+dx[i];
			int y1=y+dy[i];
			if(x1<0||x1>=f.length||y1<0||y1>=f[0].length||v[x1][y1]==1||f[x1][y1]=='#')continue;
			dfs(x1,y1,f,v);
		}
	}
	public static long shuwei(int i,int  mask,boolean limitnums,boolean isnum,char []c,long [][]dp)
	{
		if(i==c.length)
			return isnum(?)1:0;
					
	
	if(!limitnums&&isnum&&dp[i][mask]!=-1)
		return dp[i][mask];
	long res=0;
	if(!isnum)
	{
		res=shuwei(i+1,mask,false,false,c,dp);
	}
	int up=limitnums(?)c[i]-'0':9;
	for(int d=isnum(?)0:1;d<=up;++d)
	{
		 if((mask>>d&1)==0)
			 res+=shuwei(i+1,mask,limitnums&&d==up,true,c,dp);
	}
	if(!limitnums&&isnum)
		dp[i][mask]=res;
	return res;
}
	
     


	public static boolean is(char []c)
	{
		int l=0;
		int r=c.length-1;
		while(l<r)
		{
			if(c[l]!=c[r])return false;
			l++;r--;
		}
		return true;
	}
	public static void swap (int l,int r,int []f)
	{
		if(l>=f.length||r>=f.length)return;
		int tt=f[l];
		f[l]=f[r];
		f[r]=tt;
		
	}
	
public static void reverse(int []a)
{
	int l=0,r=a.length-1;
	while(l<r)
	{
		int t=a[l];
		a[l]=a[r];
		a[r]=t;
		l++;r--;
	}
}
	public static long sum (int x,long mod)
	{
		
	long sum=1;
		for(int i = 2; i * i <= x; ++i){
			long temp = 1;
			if(x % i == 0){
				long j = i;
				while(x % i == 0){
					temp += j;
					j *= i;
					x /= i;
				}
				sum = (sum * temp) % mod;
			}

	
	}
		if(x > 1) sum = (sum * (1 + x)) % mod;
		return sum;
	}
	  public  static long Mode(long a,  long b, long mode)
	  {
	  	 long sum = 1;
	  	a = a % mode;
	   
	  	while (b > 0) {
	  		if (b % 2 == 1)		//判断是否是奇数，是奇数的话将多出来的数事先乘如sum
	  			sum = (sum * a) % mode;
	   
	  		b /= 2;
	  		a = (a * a) % mode;// 不断的两两合并再取模，减小a和b的规模
	  	}
	  	return sum;
	  }
	public static long is(int mid,long []f,int d)
	{
		long ans=0;
		for(int i=0;i<d;i++)
		{
			
			int   k=i%mid;
			if(k>f.length-1)continue;
			ans+=f[f.length-k-1];
		}
		return ans;
	}
	
	public static boolean is(String a,String b)
	{
		for(int i=0;i<=b.length()-a.length();i++)
		{
			if(b.substring(i,i+a.length()).equals(a))
				return true;
		}
		return false;
		
	}
	
	
	  public static boolean is(int  n) {
		    if (n <= 3) {
		        return n > 1;
		    }
		    // 只有6x-1和6x+1的数才有可能是质数
		    if (n % 6 != 1 && n % 6 != 5) {
		        return false;
		    }
		    // 判断这些数能否被小于sqrt(n)的奇数整除
		    int sqrt = (int) Math.sqrt(n);
		    for (int i = 5; i <= sqrt; i += 6) {
		        if (n % i == 0 || n % (i + 2) == 0) {
		            return false;
		        }
		    }
		    return true;
		}



public static int find (int []father,int x) {
		if(x!=father[x])
			x=find(father,father[x]);
		return father[x];
	}
public static void union(int []father,int x,int y,int []size) {
	x=find(father,x);
	y=find(father,y);
	if(x==y)
		return ;
	if(size[x]<size[y]) {
		 int tem=x;
         x=y;
         y=tem;
	}
	father[y]=x;
	size[x]+=size[y];
return ;
}
		
					
public static void shufu(int []f) {
		for(int i=0;i<f.length;i++) {
			int k=(int)(Math.random()*(f.length));
			int t=f[k];
			
			f[k]=f[0];
			f[0]=t;
			
		}
	}
public static void shufu1(long []f) {
	for(int i=0;i<f.length;i++) {
		int k=(int)(Math.random()*(f.length));
		long t=f[k];
		f[k]=f[0];
		f[0]=t;
	}
}
public  static int  gcd(int x,int y) {
		return y==0(?)x:gcd(y,x%y);
	}
 
 
public  static int  lcm(int x,int y) {
		
		return x*y/gcd(x,y);
}
		
	
	
		
		
	
	
		
	
/*					
public static void buildertree(int k,int l,int r) {
		if(l==r)
		{
			f[k]=a[l];
			return ;
		}
		int m=l+r>>1;
		buildertree(k+k,l,m);
		buildertree(k+k+1,m+1,r);
		f[k]=	
	
	}
public static	void update(int u,int l,int r,int x,int c)
{
    if(l==x && r==x)
    {
        f[u]=c;
        return;
    }
    int mid=l+r>>1;
    if(x<=mid)update(u<<1,l,mid,x,c);
    else if(x>=mid+1)update(u<<1|1,mid+1,r,x,c);
   	f[u]=Math.max(f[u+u], f[u+u+1]);
}
	
public static int query(int k,int l,int r,int x,int y) {
		if(x==l&&y==r) {
			return f[k];
		}
		int m=l+r>>1;
		if(y<=m) {
			return query(k+k,l,m,x,y);
		}
		else if(x>m)return query(k+k+1,m+1,r,x,y);
		else  {
			int i=query(k+k,l,m,x,m),j=query(k+k+1,m+1,r,m+1,y);
		return Math.max(j, Math.max(i+j, i));
		
		}
	}
	
public static void calc(int k,int l,int r,int x,int z) {
 
			f[k]+=z;
			if(l==r) {
				return ;
			}
			int m=l+r>>1;
    		if(x<=m)
    			calc(k+k,l,m,x,z);
    		else calc(k+k+1,m+1,r,x,z);
			
			
		}
	
				
			
 
		*/
		
				
	
			
	
			
	
 
	public static class MyScanner {
	    BufferedReader br;
	    StringTokenizer st;
	 
	    public MyScanner() {
	      try {
	        final String USERDIR = System.getProperty(""user.dir"");
	        String cname = MethodHandles.lookup().lookupClass().getCanonicalName().replace("".MyScanner"", """");
	        cname = cname.lastIndexOf('.') > 0 (?) cname.substring(cname.lastIndexOf('.') + 1) : cname;
	        final File fin = new File(USERDIR + ""/io/c"" + cname.substring(1,5) + ""/"" + cname + "".in"");
	        br = new BufferedReader(new InputStreamReader(fin.exists()
	            (?) new FileInputStream(fin) : System.in));
	      } catch (Exception e) {
	        br = new BufferedReader(new InputStreamReader(System.in));
	      }
	    }
	 
	    public String next() {
	      try {
	        while (st == null || !st.hasMoreElements()) {
	          st = new StringTokenizer(br.readLine());
	        }
	        return st.nextToken();
	      } catch (Exception e) {
	        throw new RuntimeException(e);
	      }
	    }
	 
	    public int nextInt() {
	      return Integer.parseInt(next());
	    }
	 
	    public long nextLong() {
	      return Long.parseLong(next());
	    }
	  }
	
		}"
12,E,Java,61795029,2023-04-07 19:50:42,232132323,答案错误,"import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {

        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int t = in.nextInt();
            while (t-- > 0) {
                int n = in.nextInt();
                int m = in.nextInt();
                if (n < m && n * 2 - 1 <= m || m < n && m * 2 - 1 <= n)
                    out.println(""Alice"");
                else
                    out.println(""Bob"");
            }
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }

    }
}"
13,E,Java,61795090,2023-04-07 19:51:05,北-北瓜,答案错误,"import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int t= in.nextInt();
            while (t-->0){
                int n= in.nextInt();
                int m= in.nextInt();
                if (n<m){
                    int x=n;
                    n=m;
                    m=x;
                }
                if (m<3){
                    if (n>2) System.out.println(""Alice"");
                    else System.out.println(""Bob"");
                }
                else if (m<6){
                    if (n<6) System.out.println(""Bob"");
                    else System.out.println(""Alice"");
                }
                else {
                    int nn=0;
                    int mm=0;
                    while (n>0){
                        nn++;
                        n=(n-1)/2;
                    }
                    while (m>0){
                        mm++;
                        m=(m-1)/2;
                    }
                    if (nn!=mm) System.out.println(""Alice"");
                    else System.out.println(""Bob"");

                }


            }

        }
    }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;
        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}
"
14,E,Java,61795131,2023-04-07 19:51:20,232132323,答案错误,"import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {

        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int t = in.nextInt();
            while (t-- > 0) {
                int n = in.nextInt();
                int m = in.nextInt();
                if (n < m && n * 2 - 2 <= m || m < n && m * 2 - 2 <= n)
                    out.println(""Alice"");
                else
                    out.println(""Bob"");
            }
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }

    }
}"
15,E,Java,61795191,2023-04-07 19:51:54,迷你滨,答案错误,"import java.io.*;
import java.util.*;
import java.math.*;
//An apple a day

public class Main{
	static int maxn = 200005,n,m;
	static long INF = (long)1e18,ans = 0,mod = (int)1e9+7;
	static Scanner sc = new Scanner (System.in);
	static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st  =new StreamTokenizer(bf);
    static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));
    public static void main(String[]args) throws IOException{
    	int T = 1;
    	T = Integer.parseInt(S());
        
    	while(T-->0) solve();
    	//while(st.nextToken() != st.TT_EOF) {
    		//n = (int)st.nval;solve();
    	//}
        pw.flush();
    }
    static final int I() throws IOException {
    	st.nextToken();
    	return (int)st.nval;
    }
    
    static String S() throws IOException{
    	String res = bf.readLine();
    	while(res.equals("""")) res = bf.readLine();
    	return res;
    }
    
    
    
    static void solve() throws IOException{
    	n = I();m=I();
    	if(n<=2 && m<=2 || n == m) {
    		pw.println(""Bob"");return;
    	}
    	boolean f = false;
    	if(n< m) {
    		int t=n;n=m;m=t;
    	}
        if(m<=2){
            pw.println(""Alice"");
            return;
        }
    	if(n> 2*m) pw.println(""Alice"");
    	else pw.println(""Bob"");
    }
}
"
16,E,Java,61795703,2023-04-07 19:55:35,北-北瓜,答案正确,"import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int t= in.nextInt();
            while (t-->0){
                int n= in.nextInt();
                int m= in.nextInt();
                if (n<m){
                    int x=n;
                    n=m;
                    m=x;
                }
                    int nn=0;
                    int mm=0;
                    while (n>0){
                        nn++;
                        n=(n-1)/2;
                    }
                    while (m>0){
                        mm++;
                        m=(m-1)/2;
                    }
                    if (nn!=mm) System.out.println(""Alice"");
                    else System.out.println(""Bob"");



            }

        }
    }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;
        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}
"
17,E,Java,61796106,2023-04-07 19:58:41,陈力明,答案错误,"

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.lang.invoke.MethodHandles;
import java.util.*;



import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
 
public class Main{
 
private static final boolean String = false;
static int []f;
//static int []f2;
static int []size;
//static int []size2;
//static int []a=new int [500001];
static int max=Integer.MAX_VALUE;

static Set<Long>set=new HashSet<>();
static int k;
static long mod= 998244353;
static int res=0;
static int n,m;
static int x1,y1;
 static List<Integer>[]ans;
 static char [][]c;

static int[] dx = {-1, 0, 1, 0}, dy = {0, 1, 0, -1};
	public static void main(String []args) {
		MyScanner s=new MyScanner();
		PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
	
		int t=s.nextInt();
		while(t-->0)
		{
			int a=s.nextInt();
			int b=s.nextInt();
		      int res=0;
            while(a>2)
            {
                a=a/2;
                res++;
            }
            while(b>2)
            {
                b/=2;
                res++;
            }
            if(res%2==0)
                out.println(""Bob"");
                else  out.println(""Alice"");
		}
	
	out.close();
	}
	public static void dfs(int x,int y,char [][]f,int [][]v)
	{
		v[x][y]=1;
		if(f[x][y]=='!')res++;
		for(int i=0;i<4;i++)
		{
			int x1=x+dx[i];
			int y1=y+dy[i];
			if(x1<0||x1>=f.length||y1<0||y1>=f[0].length||v[x1][y1]==1||f[x1][y1]=='#')continue;
			dfs(x1,y1,f,v);
		}
	}
	public static long shuwei(int i,int  mask,boolean limitnums,boolean isnum,char []c,long [][]dp)
	{
		if(i==c.length)
			return isnum(?)1:0;
					
	
	if(!limitnums&&isnum&&dp[i][mask]!=-1)
		return dp[i][mask];
	long res=0;
	if(!isnum)
	{
		res=shuwei(i+1,mask,false,false,c,dp);
	}
	int up=limitnums(?)c[i]-'0':9;
	for(int d=isnum(?)0:1;d<=up;++d)
	{
		 if((mask>>d&1)==0)
			 res+=shuwei(i+1,mask,limitnums&&d==up,true,c,dp);
	}
	if(!limitnums&&isnum)
		dp[i][mask]=res;
	return res;
}
	
     


	public static boolean is(char []c)
	{
		int l=0;
		int r=c.length-1;
		while(l<r)
		{
			if(c[l]!=c[r])return false;
			l++;r--;
		}
		return true;
	}
	public static void swap (int l,int r,int []f)
	{
		if(l>=f.length||r>=f.length)return;
		int tt=f[l];
		f[l]=f[r];
		f[r]=tt;
		
	}
	
public static void reverse(int []a)
{
	int l=0,r=a.length-1;
	while(l<r)
	{
		int t=a[l];
		a[l]=a[r];
		a[r]=t;
		l++;r--;
	}
}
	public static long sum (int x,long mod)
	{
		
	long sum=1;
		for(int i = 2; i * i <= x; ++i){
			long temp = 1;
			if(x % i == 0){
				long j = i;
				while(x % i == 0){
					temp += j;
					j *= i;
					x /= i;
				}
				sum = (sum * temp) % mod;
			}

	
	}
		if(x > 1) sum = (sum * (1 + x)) % mod;
		return sum;
	}
	  public  static long Mode(long a,  long b, long mode)
	  {
	  	 long sum = 1;
	  	a = a % mode;
	   
	  	while (b > 0) {
	  		if (b % 2 == 1)		//判断是否是奇数，是奇数的话将多出来的数事先乘如sum
	  			sum = (sum * a) % mode;
	   
	  		b /= 2;
	  		a = (a * a) % mode;// 不断的两两合并再取模，减小a和b的规模
	  	}
	  	return sum;
	  }
	public static long is(int mid,long []f,int d)
	{
		long ans=0;
		for(int i=0;i<d;i++)
		{
			
			int   k=i%mid;
			if(k>f.length-1)continue;
			ans+=f[f.length-k-1];
		}
		return ans;
	}
	
	public static boolean is(String a,String b)
	{
		for(int i=0;i<=b.length()-a.length();i++)
		{
			if(b.substring(i,i+a.length()).equals(a))
				return true;
		}
		return false;
		
	}
	
	
	  public static boolean is(int  n) {
		    if (n <= 3) {
		        return n > 1;
		    }
		    // 只有6x-1和6x+1的数才有可能是质数
		    if (n % 6 != 1 && n % 6 != 5) {
		        return false;
		    }
		    // 判断这些数能否被小于sqrt(n)的奇数整除
		    int sqrt = (int) Math.sqrt(n);
		    for (int i = 5; i <= sqrt; i += 6) {
		        if (n % i == 0 || n % (i + 2) == 0) {
		            return false;
		        }
		    }
		    return true;
		}



public static int find (int []father,int x) {
		if(x!=father[x])
			x=find(father,father[x]);
		return father[x];
	}
public static void union(int []father,int x,int y,int []size) {
	x=find(father,x);
	y=find(father,y);
	if(x==y)
		return ;
	if(size[x]<size[y]) {
		 int tem=x;
         x=y;
         y=tem;
	}
	father[y]=x;
	size[x]+=size[y];
return ;
}
		
					
public static void shufu(int []f) {
		for(int i=0;i<f.length;i++) {
			int k=(int)(Math.random()*(f.length));
			int t=f[k];
			
			f[k]=f[0];
			f[0]=t;
			
		}
	}
public static void shufu1(long []f) {
	for(int i=0;i<f.length;i++) {
		int k=(int)(Math.random()*(f.length));
		long t=f[k];
		f[k]=f[0];
		f[0]=t;
	}
}
public  static int  gcd(int x,int y) {
		return y==0(?)x:gcd(y,x%y);
	}
 
 
public  static int  lcm(int x,int y) {
		
		return x*y/gcd(x,y);
}
		
	
	
		
		
	
	
		
	
/*					
public static void buildertree(int k,int l,int r) {
		if(l==r)
		{
			f[k]=a[l];
			return ;
		}
		int m=l+r>>1;
		buildertree(k+k,l,m);
		buildertree(k+k+1,m+1,r);
		f[k]=	
	
	}
public static	void update(int u,int l,int r,int x,int c)
{
    if(l==x && r==x)
    {
        f[u]=c;
        return;
    }
    int mid=l+r>>1;
    if(x<=mid)update(u<<1,l,mid,x,c);
    else if(x>=mid+1)update(u<<1|1,mid+1,r,x,c);
   	f[u]=Math.max(f[u+u], f[u+u+1]);
}
	
public static int query(int k,int l,int r,int x,int y) {
		if(x==l&&y==r) {
			return f[k];
		}
		int m=l+r>>1;
		if(y<=m) {
			return query(k+k,l,m,x,y);
		}
		else if(x>m)return query(k+k+1,m+1,r,x,y);
		else  {
			int i=query(k+k,l,m,x,m),j=query(k+k+1,m+1,r,m+1,y);
		return Math.max(j, Math.max(i+j, i));
		
		}
	}
	
public static void calc(int k,int l,int r,int x,int z) {
 
			f[k]+=z;
			if(l==r) {
				return ;
			}
			int m=l+r>>1;
    		if(x<=m)
    			calc(k+k,l,m,x,z);
    		else calc(k+k+1,m+1,r,x,z);
			
			
		}
	
				
			
 
		*/
		
				
	
			
	
			
	
 
	public static class MyScanner {
	    BufferedReader br;
	    StringTokenizer st;
	 
	    public MyScanner() {
	      try {
	        final String USERDIR = System.getProperty(""user.dir"");
	        String cname = MethodHandles.lookup().lookupClass().getCanonicalName().replace("".MyScanner"", """");
	        cname = cname.lastIndexOf('.') > 0 (?) cname.substring(cname.lastIndexOf('.') + 1) : cname;
	        final File fin = new File(USERDIR + ""/io/c"" + cname.substring(1,5) + ""/"" + cname + "".in"");
	        br = new BufferedReader(new InputStreamReader(fin.exists()
	            (?) new FileInputStream(fin) : System.in));
	      } catch (Exception e) {
	        br = new BufferedReader(new InputStreamReader(System.in));
	      }
	    }
	 
	    public String next() {
	      try {
	        while (st == null || !st.hasMoreElements()) {
	          st = new StringTokenizer(br.readLine());
	        }
	        return st.nextToken();
	      } catch (Exception e) {
	        throw new RuntimeException(e);
	      }
	    }
	 
	    public int nextInt() {
	      return Integer.parseInt(next());
	    }
	 
	    public long nextLong() {
	      return Long.parseLong(next());
	    }
	  }
	
		}"
18,E,Java,61796234,2023-04-07 19:59:38,陈力明,答案错误,"

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.lang.invoke.MethodHandles;
import java.util.*;



import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
 
public class Main{
 
private static final boolean String = false;
static int []f;
//static int []f2;
static int []size;
//static int []size2;
//static int []a=new int [500001];
static int max=Integer.MAX_VALUE;

static Set<Long>set=new HashSet<>();
static int k;
static long mod= 998244353;
static int res=0;
static int n,m;
static int x1,y1;
 static List<Integer>[]ans;
 static char [][]c;

static int[] dx = {-1, 0, 1, 0}, dy = {0, 1, 0, -1};
	public static void main(String []args) {
		MyScanner s=new MyScanner();
		PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
	
		int t=s.nextInt();
		while(t-->0)
		{
			int a=s.nextInt();
			int b=s.nextInt();
		      int res=0;
            while(a>2)
            {
                a=(a-1)/2;
                res++;
            }
            while(b>2)
            {
                b=(b-1)/2;
                res++;
            }
            if(res%2==0)
                out.println(""Bob"");
                else  out.println(""Alice"");
		}
	
	out.close();
	}
	public static void dfs(int x,int y,char [][]f,int [][]v)
	{
		v[x][y]=1;
		if(f[x][y]=='!')res++;
		for(int i=0;i<4;i++)
		{
			int x1=x+dx[i];
			int y1=y+dy[i];
			if(x1<0||x1>=f.length||y1<0||y1>=f[0].length||v[x1][y1]==1||f[x1][y1]=='#')continue;
			dfs(x1,y1,f,v);
		}
	}
	public static long shuwei(int i,int  mask,boolean limitnums,boolean isnum,char []c,long [][]dp)
	{
		if(i==c.length)
			return isnum(?)1:0;
					
	
	if(!limitnums&&isnum&&dp[i][mask]!=-1)
		return dp[i][mask];
	long res=0;
	if(!isnum)
	{
		res=shuwei(i+1,mask,false,false,c,dp);
	}
	int up=limitnums(?)c[i]-'0':9;
	for(int d=isnum(?)0:1;d<=up;++d)
	{
		 if((mask>>d&1)==0)
			 res+=shuwei(i+1,mask,limitnums&&d==up,true,c,dp);
	}
	if(!limitnums&&isnum)
		dp[i][mask]=res;
	return res;
}
	
     


	public static boolean is(char []c)
	{
		int l=0;
		int r=c.length-1;
		while(l<r)
		{
			if(c[l]!=c[r])return false;
			l++;r--;
		}
		return true;
	}
	public static void swap (int l,int r,int []f)
	{
		if(l>=f.length||r>=f.length)return;
		int tt=f[l];
		f[l]=f[r];
		f[r]=tt;
		
	}
	
public static void reverse(int []a)
{
	int l=0,r=a.length-1;
	while(l<r)
	{
		int t=a[l];
		a[l]=a[r];
		a[r]=t;
		l++;r--;
	}
}
	public static long sum (int x,long mod)
	{
		
	long sum=1;
		for(int i = 2; i * i <= x; ++i){
			long temp = 1;
			if(x % i == 0){
				long j = i;
				while(x % i == 0){
					temp += j;
					j *= i;
					x /= i;
				}
				sum = (sum * temp) % mod;
			}

	
	}
		if(x > 1) sum = (sum * (1 + x)) % mod;
		return sum;
	}
	  public  static long Mode(long a,  long b, long mode)
	  {
	  	 long sum = 1;
	  	a = a % mode;
	   
	  	while (b > 0) {
	  		if (b % 2 == 1)		//判断是否是奇数，是奇数的话将多出来的数事先乘如sum
	  			sum = (sum * a) % mode;
	   
	  		b /= 2;
	  		a = (a * a) % mode;// 不断的两两合并再取模，减小a和b的规模
	  	}
	  	return sum;
	  }
	public static long is(int mid,long []f,int d)
	{
		long ans=0;
		for(int i=0;i<d;i++)
		{
			
			int   k=i%mid;
			if(k>f.length-1)continue;
			ans+=f[f.length-k-1];
		}
		return ans;
	}
	
	public static boolean is(String a,String b)
	{
		for(int i=0;i<=b.length()-a.length();i++)
		{
			if(b.substring(i,i+a.length()).equals(a))
				return true;
		}
		return false;
		
	}
	
	
	  public static boolean is(int  n) {
		    if (n <= 3) {
		        return n > 1;
		    }
		    // 只有6x-1和6x+1的数才有可能是质数
		    if (n % 6 != 1 && n % 6 != 5) {
		        return false;
		    }
		    // 判断这些数能否被小于sqrt(n)的奇数整除
		    int sqrt = (int) Math.sqrt(n);
		    for (int i = 5; i <= sqrt; i += 6) {
		        if (n % i == 0 || n % (i + 2) == 0) {
		            return false;
		        }
		    }
		    return true;
		}



public static int find (int []father,int x) {
		if(x!=father[x])
			x=find(father,father[x]);
		return father[x];
	}
public static void union(int []father,int x,int y,int []size) {
	x=find(father,x);
	y=find(father,y);
	if(x==y)
		return ;
	if(size[x]<size[y]) {
		 int tem=x;
         x=y;
         y=tem;
	}
	father[y]=x;
	size[x]+=size[y];
return ;
}
		
					
public static void shufu(int []f) {
		for(int i=0;i<f.length;i++) {
			int k=(int)(Math.random()*(f.length));
			int t=f[k];
			
			f[k]=f[0];
			f[0]=t;
			
		}
	}
public static void shufu1(long []f) {
	for(int i=0;i<f.length;i++) {
		int k=(int)(Math.random()*(f.length));
		long t=f[k];
		f[k]=f[0];
		f[0]=t;
	}
}
public  static int  gcd(int x,int y) {
		return y==0(?)x:gcd(y,x%y);
	}
 
 
public  static int  lcm(int x,int y) {
		
		return x*y/gcd(x,y);
}
		
	
	
		
		
	
	
		
	
/*					
public static void buildertree(int k,int l,int r) {
		if(l==r)
		{
			f[k]=a[l];
			return ;
		}
		int m=l+r>>1;
		buildertree(k+k,l,m);
		buildertree(k+k+1,m+1,r);
		f[k]=	
	
	}
public static	void update(int u,int l,int r,int x,int c)
{
    if(l==x && r==x)
    {
        f[u]=c;
        return;
    }
    int mid=l+r>>1;
    if(x<=mid)update(u<<1,l,mid,x,c);
    else if(x>=mid+1)update(u<<1|1,mid+1,r,x,c);
   	f[u]=Math.max(f[u+u], f[u+u+1]);
}
	
public static int query(int k,int l,int r,int x,int y) {
		if(x==l&&y==r) {
			return f[k];
		}
		int m=l+r>>1;
		if(y<=m) {
			return query(k+k,l,m,x,y);
		}
		else if(x>m)return query(k+k+1,m+1,r,x,y);
		else  {
			int i=query(k+k,l,m,x,m),j=query(k+k+1,m+1,r,m+1,y);
		return Math.max(j, Math.max(i+j, i));
		
		}
	}
	
public static void calc(int k,int l,int r,int x,int z) {
 
			f[k]+=z;
			if(l==r) {
				return ;
			}
			int m=l+r>>1;
    		if(x<=m)
    			calc(k+k,l,m,x,z);
    		else calc(k+k+1,m+1,r,x,z);
			
			
		}
	
				
			
 
		*/
		
				
	
			
	
			
	
 
	public static class MyScanner {
	    BufferedReader br;
	    StringTokenizer st;
	 
	    public MyScanner() {
	      try {
	        final String USERDIR = System.getProperty(""user.dir"");
	        String cname = MethodHandles.lookup().lookupClass().getCanonicalName().replace("".MyScanner"", """");
	        cname = cname.lastIndexOf('.') > 0 (?) cname.substring(cname.lastIndexOf('.') + 1) : cname;
	        final File fin = new File(USERDIR + ""/io/c"" + cname.substring(1,5) + ""/"" + cname + "".in"");
	        br = new BufferedReader(new InputStreamReader(fin.exists()
	            (?) new FileInputStream(fin) : System.in));
	      } catch (Exception e) {
	        br = new BufferedReader(new InputStreamReader(System.in));
	      }
	    }
	 
	    public String next() {
	      try {
	        while (st == null || !st.hasMoreElements()) {
	          st = new StringTokenizer(br.readLine());
	        }
	        return st.nextToken();
	      } catch (Exception e) {
	        throw new RuntimeException(e);
	      }
	    }
	 
	    public int nextInt() {
	      return Integer.parseInt(next());
	    }
	 
	    public long nextLong() {
	      return Long.parseLong(next());
	    }
	  }
	
		}"
19,E,Java,61796430,2023-04-07 20:00:52,人工智能3212卢明涛,答案错误,"import java.util.LinkedList;
import java.util.Queue;
import java.io.*;
import java.util.*;
import java.math.*;
public class Main {
    static InputStream inputStream = System.in;
    static OutputStream outputStream = System.out;
    static InputReader in = new InputReader(inputStream);
    static PrintWriter out = new PrintWriter(outputStream);
    public static void main(String[] args) {
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {

        static int yanx[] = new int[30];
        static int yany[] = new int[30];

        static int yanname[] = new int[30];
        static int yanwei[][] = new int[30][6];
        static int map[][] = new int[1001][1001];
        int huo[][] = new int[1001][1001];
        static int shao[][] = new int[1001][1001];

        int sum = 1;
        int newdi = 1;

        static int n = 0;
        static int m = 0;
        static int yan = 0;

        static int jue = 0;



        static void dfs(int x,int y){

                if (x+1<=n && shao[x+1][y] == 0){
                    shao[x+1][y]++;
                    dfs(x+1,y);
                }
                if (x-1>=1 && shao[x-1][y]==0){
                    shao[x-1][y]=1;
                    dfs(x-1,y);
                }
                if (y+1<=m && shao[x][y+1]==0){
                    shao[x][y+1]=1;
                    dfs(x,y+1);
                }
                if (y-1>=1 && shao[x][y-1]==0){
                    shao[x][y-1]=1;
                    dfs(x,y-1);
                }
        }
        LinkedList<Integer> dep = new LinkedList<>();
        boolean[]vis;

        public void solve(int testNumber, InputReader in, PrintWriter out) {
//            int sum = 0;
            int T = in.nextInt();
            while (T-->0){
                int n = in.nextInt();
                int m = in.nextInt();
                if (n<=2 || m<=2){
                    out.println(""Alice"");
                }
                else {
                    int nqie = n-2;
                    int mqie = m-2;
                    if (nqie % 2==1 && mqie % 2==1){
                        out.println(""Alice"");
                    }
                    else {
                        out.println(""Bob"");
                    }
                }
            }
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        boolean hasNext() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e) {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }

    }
}
"
20,E,Java,61796470,2023-04-07 20:01:04,人工智能3212卢明涛,答案错误,"import java.util.LinkedList;
import java.util.Queue;
import java.io.*;
import java.util.*;
import java.math.*;
public class Main {
    static InputStream inputStream = System.in;
    static OutputStream outputStream = System.out;
    static InputReader in = new InputReader(inputStream);
    static PrintWriter out = new PrintWriter(outputStream);
    public static void main(String[] args) {
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {

        static int yanx[] = new int[30];
        static int yany[] = new int[30];

        static int yanname[] = new int[30];
        static int yanwei[][] = new int[30][6];
        static int map[][] = new int[1001][1001];
        int huo[][] = new int[1001][1001];
        static int shao[][] = new int[1001][1001];

        int sum = 1;
        int newdi = 1;

        static int n = 0;
        static int m = 0;
        static int yan = 0;

        static int jue = 0;



        static void dfs(int x,int y){

                if (x+1<=n && shao[x+1][y] == 0){
                    shao[x+1][y]++;
                    dfs(x+1,y);
                }
                if (x-1>=1 && shao[x-1][y]==0){
                    shao[x-1][y]=1;
                    dfs(x-1,y);
                }
                if (y+1<=m && shao[x][y+1]==0){
                    shao[x][y+1]=1;
                    dfs(x,y+1);
                }
                if (y-1>=1 && shao[x][y-1]==0){
                    shao[x][y-1]=1;
                    dfs(x,y-1);
                }
        }
        LinkedList<Integer> dep = new LinkedList<>();
        boolean[]vis;

        public void solve(int testNumber, InputReader in, PrintWriter out) {
//            int sum = 0;
            int T = in.nextInt();
            while (T-->0){
                int n = in.nextInt();
                int m = in.nextInt();
                if (n<=2 || m<=2){
                    out.println(""Alice"");
                }
                else {
                    int nqie = n-2;
                    int mqie = m-2;
                    if (nqie % 2==1 || mqie % 2==1){
                        out.println(""Alice"");
                    }
                    else {
                        out.println(""Bob"");
                    }
                }
            }
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        boolean hasNext() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e) {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }

    }
}
"
21,E,Java,61797149,2023-04-07 20:06:27,嘎嘎学编程,运行超时,"import java.util.Scanner;

// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
    public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int m = in.nextInt();
		for(int n = 0;n < m; n++) {
			int x = in.nextInt();
			int y = in.nextInt();
			int num = 0;
			for(;x+y > 2;) {
				if(x > y) {
					x = (int)Math.floor(x/2.0);
				}else {
					y = (int)Math.floor(y/2.0);
				}
				num++;
			}
			if(num % 2 == 0) {
				System.out.println(""Bob"");
			}else {
				System.out.println(""Alice"");
			}
		}
    }
}"
22,E,Java,61797495,2023-04-07 20:09:13,人工智能3212卢明涛,答案错误,"import java.util.LinkedList;
import java.util.Queue;
import java.io.*;
import java.util.*;
import java.math.*;
public class Main {
    static InputStream inputStream = System.in;
    static OutputStream outputStream = System.out;
    static InputReader in = new InputReader(inputStream);
    static PrintWriter out = new PrintWriter(outputStream);
    public static void main(String[] args) {
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {

        static int yanx[] = new int[30];
        static int yany[] = new int[30];

        static int yanname[] = new int[30];
        static int yanwei[][] = new int[30][6];
        static int map[][] = new int[1001][1001];
        int huo[][] = new int[1001][1001];
        static int shao[][] = new int[1001][1001];

        int sum = 1;
        int newdi = 1;

        static int n = 0;
        static int m = 0;
        static int yan = 0;

        static int jue = 0;



        static void dfs(int x,int y){

                if (x+1<=n && shao[x+1][y] == 0){
                    shao[x+1][y]++;
                    dfs(x+1,y);
                }
                if (x-1>=1 && shao[x-1][y]==0){
                    shao[x-1][y]=1;
                    dfs(x-1,y);
                }
                if (y+1<=m && shao[x][y+1]==0){
                    shao[x][y+1]=1;
                    dfs(x,y+1);
                }
                if (y-1>=1 && shao[x][y-1]==0){
                    shao[x][y-1]=1;
                    dfs(x,y-1);
                }
        }
        LinkedList<Integer> dep = new LinkedList<>();
        boolean[]vis;

        public void solve(int testNumber, InputReader in, PrintWriter out) {
//            int sum = 0;
            int T = in.nextInt();
            while (T-->0){
                int n = in.nextInt();
                int m = in.nextInt();
                if (n<=2 || m<=2){
                    out.println(""Alice"");
                }
                else {
                    if (n==m){
                        out.println(""Bob"");
                    }
                    else {
                        out.println(""Alice"");
                    }
                }
            }
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        boolean hasNext() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e) {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }

    }
}
"
23,E,Java,61797520,2023-04-07 20:09:27,人工智能3212卢明涛,答案错误,"import java.util.LinkedList;
import java.util.Queue;
import java.io.*;
import java.util.*;
import java.math.*;
public class Main {
    static InputStream inputStream = System.in;
    static OutputStream outputStream = System.out;
    static InputReader in = new InputReader(inputStream);
    static PrintWriter out = new PrintWriter(outputStream);
    public static void main(String[] args) {
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {

        static int yanx[] = new int[30];
        static int yany[] = new int[30];

        static int yanname[] = new int[30];
        static int yanwei[][] = new int[30][6];
        static int map[][] = new int[1001][1001];
        int huo[][] = new int[1001][1001];
        static int shao[][] = new int[1001][1001];

        int sum = 1;
        int newdi = 1;

        static int n = 0;
        static int m = 0;
        static int yan = 0;

        static int jue = 0;



        static void dfs(int x,int y){

                if (x+1<=n && shao[x+1][y] == 0){
                    shao[x+1][y]++;
                    dfs(x+1,y);
                }
                if (x-1>=1 && shao[x-1][y]==0){
                    shao[x-1][y]=1;
                    dfs(x-1,y);
                }
                if (y+1<=m && shao[x][y+1]==0){
                    shao[x][y+1]=1;
                    dfs(x,y+1);
                }
                if (y-1>=1 && shao[x][y-1]==0){
                    shao[x][y-1]=1;
                    dfs(x,y-1);
                }
        }
        LinkedList<Integer> dep = new LinkedList<>();
        boolean[]vis;

        public void solve(int testNumber, InputReader in, PrintWriter out) {
//            int sum = 0;
            int T = in.nextInt();
            while (T-->0){
                int n = in.nextInt();
                int m = in.nextInt();
                
                    if (n==m){
                        out.println(""Bob"");
                    }
                    else {
                        out.println(""Alice"");
                    }
                
            }
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        boolean hasNext() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e) {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }

    }
}
"
24,E,Java,61797814,2023-04-07 20:11:51,人工智能3212卢明涛,答案错误,"import java.util.LinkedList;
import java.util.Queue;
import java.io.*;
import java.util.*;
import java.math.*;
public class Main {
    static InputStream inputStream = System.in;
    static OutputStream outputStream = System.out;
    static InputReader in = new InputReader(inputStream);
    static PrintWriter out = new PrintWriter(outputStream);
    public static void main(String[] args) {
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {

        static int yanx[] = new int[30];
        static int yany[] = new int[30];

        static int yanname[] = new int[30];
        static int yanwei[][] = new int[30][6];
        static int map[][] = new int[1001][1001];
        int huo[][] = new int[1001][1001];
        static int shao[][] = new int[1001][1001];

        int sum = 1;
        int newdi = 1;

        static int n = 0;
        static int m = 0;
        static int yan = 0;

        static int jue = 0;



        static void dfs(int x,int y){

                if (x+1<=n && shao[x+1][y] == 0){
                    shao[x+1][y]++;
                    dfs(x+1,y);
                }
                if (x-1>=1 && shao[x-1][y]==0){
                    shao[x-1][y]=1;
                    dfs(x-1,y);
                }
                if (y+1<=m && shao[x][y+1]==0){
                    shao[x][y+1]=1;
                    dfs(x,y+1);
                }
                if (y-1>=1 && shao[x][y-1]==0){
                    shao[x][y-1]=1;
                    dfs(x,y-1);
                }
        }
        LinkedList<Integer> dep = new LinkedList<>();
        boolean[]vis;

        public void solve(int testNumber, InputReader in, PrintWriter out) {
//            int sum = 0;
            int T = in.nextInt();
            while (T-->0){
                int n = in.nextInt();
                int m = in.nextInt();
                if (n % 2 == 0 || m % 2 == 0) {
                    System.out.println(""Alice"");
                } else {
                    System.out.println(""Bob"");
                }
            }
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        boolean hasNext() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e) {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }

    }
}
"
25,E,Java,61797835,2023-04-07 20:12:03,232132323,答案错误,"import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {

        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int t = in.nextInt();
            while (t-- > 0) {
                int n = in.nextInt();
                int m = in.nextInt();
                if (n == m || Math.abs(n-m) == 1)
                    out.println(""Bob"");
                else
                    out.println(""Alice"");

            }
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }

    }
}"
26,E,Java,61797860,2023-04-07 20:12:16,陈力明,答案错误,"

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.lang.invoke.MethodHandles;
import java.util.*;



import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
 
public class Main{
 
private static final boolean String = false;
static int []f;
//static int []f2;
static int []size;
//static int []size2;
//static int []a=new int [500001];
static int max=Integer.MAX_VALUE;

static Set<Long>set=new HashSet<>();
static int k;
static long mod= 998244353;
static int res=0;
static int n,m;
static int x1,y1;
 static List<Integer>[]ans;
 static char [][]c;

static int[] dx = {-1, 0, 1, 0}, dy = {0, 1, 0, -1};
	public static void main(String []args) {
		MyScanner s=new MyScanner();
		PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
	
		int t=s.nextInt();
		while(t-->0)
		{
			int a=s.nextInt();
			int b=s.nextInt();
		      int c=0,d=0;
            while(a>2)
            {
                a=(a-1)/2;
                c++;
            }
            while(b>2)
            {
                b=(b-1)/2;
                d++;
            }
            if(c>1&&d>1)
                 out.println(""Alice"");
             
                else if(c==0&&d==0) out.println(""Bob"");
            else if(c==1&&d==1)out.println(""Bob"");
            else  out.println(""Alice"");
		}
	
	out.close();
	}
	public static void dfs(int x,int y,char [][]f,int [][]v)
	{
		v[x][y]=1;
		if(f[x][y]=='!')res++;
		for(int i=0;i<4;i++)
		{
			int x1=x+dx[i];
			int y1=y+dy[i];
			if(x1<0||x1>=f.length||y1<0||y1>=f[0].length||v[x1][y1]==1||f[x1][y1]=='#')continue;
			dfs(x1,y1,f,v);
		}
	}
	public static long shuwei(int i,int  mask,boolean limitnums,boolean isnum,char []c,long [][]dp)
	{
		if(i==c.length)
			return isnum(?)1:0;
					
	
	if(!limitnums&&isnum&&dp[i][mask]!=-1)
		return dp[i][mask];
	long res=0;
	if(!isnum)
	{
		res=shuwei(i+1,mask,false,false,c,dp);
	}
	int up=limitnums(?)c[i]-'0':9;
	for(int d=isnum(?)0:1;d<=up;++d)
	{
		 if((mask>>d&1)==0)
			 res+=shuwei(i+1,mask,limitnums&&d==up,true,c,dp);
	}
	if(!limitnums&&isnum)
		dp[i][mask]=res;
	return res;
}
	
     


	public static boolean is(char []c)
	{
		int l=0;
		int r=c.length-1;
		while(l<r)
		{
			if(c[l]!=c[r])return false;
			l++;r--;
		}
		return true;
	}
	public static void swap (int l,int r,int []f)
	{
		if(l>=f.length||r>=f.length)return;
		int tt=f[l];
		f[l]=f[r];
		f[r]=tt;
		
	}
	
public static void reverse(int []a)
{
	int l=0,r=a.length-1;
	while(l<r)
	{
		int t=a[l];
		a[l]=a[r];
		a[r]=t;
		l++;r--;
	}
}
	public static long sum (int x,long mod)
	{
		
	long sum=1;
		for(int i = 2; i * i <= x; ++i){
			long temp = 1;
			if(x % i == 0){
				long j = i;
				while(x % i == 0){
					temp += j;
					j *= i;
					x /= i;
				}
				sum = (sum * temp) % mod;
			}

	
	}
		if(x > 1) sum = (sum * (1 + x)) % mod;
		return sum;
	}
	  public  static long Mode(long a,  long b, long mode)
	  {
	  	 long sum = 1;
	  	a = a % mode;
	   
	  	while (b > 0) {
	  		if (b % 2 == 1)		//判断是否是奇数，是奇数的话将多出来的数事先乘如sum
	  			sum = (sum * a) % mode;
	   
	  		b /= 2;
	  		a = (a * a) % mode;// 不断的两两合并再取模，减小a和b的规模
	  	}
	  	return sum;
	  }
	public static long is(int mid,long []f,int d)
	{
		long ans=0;
		for(int i=0;i<d;i++)
		{
			
			int   k=i%mid;
			if(k>f.length-1)continue;
			ans+=f[f.length-k-1];
		}
		return ans;
	}
	
	public static boolean is(String a,String b)
	{
		for(int i=0;i<=b.length()-a.length();i++)
		{
			if(b.substring(i,i+a.length()).equals(a))
				return true;
		}
		return false;
		
	}
	
	
	  public static boolean is(int  n) {
		    if (n <= 3) {
		        return n > 1;
		    }
		    // 只有6x-1和6x+1的数才有可能是质数
		    if (n % 6 != 1 && n % 6 != 5) {
		        return false;
		    }
		    // 判断这些数能否被小于sqrt(n)的奇数整除
		    int sqrt = (int) Math.sqrt(n);
		    for (int i = 5; i <= sqrt; i += 6) {
		        if (n % i == 0 || n % (i + 2) == 0) {
		            return false;
		        }
		    }
		    return true;
		}



public static int find (int []father,int x) {
		if(x!=father[x])
			x=find(father,father[x]);
		return father[x];
	}
public static void union(int []father,int x,int y,int []size) {
	x=find(father,x);
	y=find(father,y);
	if(x==y)
		return ;
	if(size[x]<size[y]) {
		 int tem=x;
         x=y;
         y=tem;
	}
	father[y]=x;
	size[x]+=size[y];
return ;
}
		
					
public static void shufu(int []f) {
		for(int i=0;i<f.length;i++) {
			int k=(int)(Math.random()*(f.length));
			int t=f[k];
			
			f[k]=f[0];
			f[0]=t;
			
		}
	}
public static void shufu1(long []f) {
	for(int i=0;i<f.length;i++) {
		int k=(int)(Math.random()*(f.length));
		long t=f[k];
		f[k]=f[0];
		f[0]=t;
	}
}
public  static int  gcd(int x,int y) {
		return y==0(?)x:gcd(y,x%y);
	}
 
 
public  static int  lcm(int x,int y) {
		
		return x*y/gcd(x,y);
}
		
	
	
		
		
	
	
		
	
/*					
public static void buildertree(int k,int l,int r) {
		if(l==r)
		{
			f[k]=a[l];
			return ;
		}
		int m=l+r>>1;
		buildertree(k+k,l,m);
		buildertree(k+k+1,m+1,r);
		f[k]=	
	
	}
public static	void update(int u,int l,int r,int x,int c)
{
    if(l==x && r==x)
    {
        f[u]=c;
        return;
    }
    int mid=l+r>>1;
    if(x<=mid)update(u<<1,l,mid,x,c);
    else if(x>=mid+1)update(u<<1|1,mid+1,r,x,c);
   	f[u]=Math.max(f[u+u], f[u+u+1]);
}
	
public static int query(int k,int l,int r,int x,int y) {
		if(x==l&&y==r) {
			return f[k];
		}
		int m=l+r>>1;
		if(y<=m) {
			return query(k+k,l,m,x,y);
		}
		else if(x>m)return query(k+k+1,m+1,r,x,y);
		else  {
			int i=query(k+k,l,m,x,m),j=query(k+k+1,m+1,r,m+1,y);
		return Math.max(j, Math.max(i+j, i));
		
		}
	}
	
public static void calc(int k,int l,int r,int x,int z) {
 
			f[k]+=z;
			if(l==r) {
				return ;
			}
			int m=l+r>>1;
    		if(x<=m)
    			calc(k+k,l,m,x,z);
    		else calc(k+k+1,m+1,r,x,z);
			
			
		}
	
				
			
 
		*/
		
				
	
			
	
			
	
 
	public static class MyScanner {
	    BufferedReader br;
	    StringTokenizer st;
	 
	    public MyScanner() {
	      try {
	        final String USERDIR = System.getProperty(""user.dir"");
	        String cname = MethodHandles.lookup().lookupClass().getCanonicalName().replace("".MyScanner"", """");
	        cname = cname.lastIndexOf('.') > 0 (?) cname.substring(cname.lastIndexOf('.') + 1) : cname;
	        final File fin = new File(USERDIR + ""/io/c"" + cname.substring(1,5) + ""/"" + cname + "".in"");
	        br = new BufferedReader(new InputStreamReader(fin.exists()
	            (?) new FileInputStream(fin) : System.in));
	      } catch (Exception e) {
	        br = new BufferedReader(new InputStreamReader(System.in));
	      }
	    }
	 
	    public String next() {
	      try {
	        while (st == null || !st.hasMoreElements()) {
	          st = new StringTokenizer(br.readLine());
	        }
	        return st.nextToken();
	      } catch (Exception e) {
	        throw new RuntimeException(e);
	      }
	    }
	 
	    public int nextInt() {
	      return Integer.parseInt(next());
	    }
	 
	    public long nextLong() {
	      return Long.parseLong(next());
	    }
	  }
	
		}"
27,E,Java,61798063,2023-04-07 20:13:51,牛客418895276号,运行超时,"import java.util.Scanner;

// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        // 注意 hasNext 和 hasNextLine 的区别
        int t = in.nextInt();
        while (t-->0) { // 注意 while 处理多个 case
            int n = in.nextInt();
            int m = in.nextInt();
            boolean alice = true;
            if(m>n) {
                int tmp = m;
                m=n;
                n=tmp;
            }
            int x = n;
            boolean first=true;
            while(true){
                //System.out.println(x);
                if(x<=2&&first){
                    x = m;
                    first=false;
                }
                if(x<=2&&!first){
                    if(alice){
                        System.out.println(""Bob"");
                    }else{
                        System.out.println(""Alice"");
                    }
                    break;
                }
                if((x&1) == 1){
                    x/=2;
                }else {
                    x=x/2-1;
                }
                
                alice=!alice;
            }
            
        }
    }
}"
28,E,Java,61798297,2023-04-07 20:15:40,迷你滨,答案错误,"import java.io.*;
import java.util.*;
import java.math.*;
//An apple a day

public class Main{
	static int maxn = 200005,n,m;
	static long INF = (long)1e18,ans = 0,mod = (int)1e9+7;
	static Scanner sc = new Scanner (System.in);
	static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st  =new StreamTokenizer(bf);
    static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));
    public static void main(String[]args) throws IOException{
    	int T = 1;
    	T = Integer.parseInt(S());
        
    	while(T-->0) solve();
    	//while(st.nextToken() != st.TT_EOF) {
    		//n = (int)st.nval;solve();
    	//}
        pw.flush();
    }
    static final int I() throws IOException {
    	st.nextToken();
    	return (int)st.nval;
    }
    
    static String S() throws IOException{
    	String res = bf.readLine();
    	while(res.equals("""")) res = bf.readLine();
    	return res;
    }
    
    
    
    static void solve() throws IOException{
    	n = I();m=I();
    	if(n<=2 && m<=2 || n == m) {
    		pw.println(""Bob"");return;
    	}
    	boolean f = false;
    	if(n< m) {
    		int t=n;n=m;m=t;
    	}
        if(m<=2){
            pw.println(""Alice"");
            return;
        }
        int t = m%4;
        int a[] = {1,0,3,2};
    	if(n> m+a[t]) pw.println(""Alice"");
    	else pw.println(""Bob"");
    }
}
"
29,E,Java,61798426,2023-04-07 20:16:44,人工智能3212卢明涛,答案错误,"import java.util.LinkedList;
import java.util.Queue;
import java.io.*;
import java.util.*;
import java.math.*;
public class Main {
    static InputStream inputStream = System.in;
    static OutputStream outputStream = System.out;
    static InputReader in = new InputReader(inputStream);
    static PrintWriter out = new PrintWriter(outputStream);
    public static void main(String[] args) {
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {

        static int yanx[] = new int[30];
        static int yany[] = new int[30];

        static int yanname[] = new int[30];
        static int yanwei[][] = new int[30][6];
        static int map[][] = new int[1001][1001];
        int huo[][] = new int[1001][1001];
        static int shao[][] = new int[1001][1001];

        int sum = 1;
        int newdi = 1;

        static int n = 0;
        static int m = 0;
        static int yan = 0;

        static int jue = 0;



        static void dfs(int x,int y){

                if (x+1<=n && shao[x+1][y] == 0){
                    shao[x+1][y]++;
                    dfs(x+1,y);
                }
                if (x-1>=1 && shao[x-1][y]==0){
                    shao[x-1][y]=1;
                    dfs(x-1,y);
                }
                if (y+1<=m && shao[x][y+1]==0){
                    shao[x][y+1]=1;
                    dfs(x,y+1);
                }
                if (y-1>=1 && shao[x][y-1]==0){
                    shao[x][y-1]=1;
                    dfs(x,y-1);
                }
        }
        LinkedList<Integer> dep = new LinkedList<>();
        boolean[]vis;

        public void solve(int testNumber, InputReader in, PrintWriter out) {
//            int sum = 0;
            int T = in.nextInt();
            while (T-->0){
                int n = in.nextInt();
                int m = in.nextInt();
                if ((n * m % 2 == 0 && Math.min(n, m) != 1) || (Math.min(n, m) == 1 && Math.max(n, m) % 2 == 0)) {
                    System.out.println(""Alice"");
                } else {
                    System.out.println(""Bob"");
                }

            }
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        boolean hasNext() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e) {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }

    }
}
"
30,E,Java,61798519,2023-04-07 20:17:24,嘎嘎学编程,运行超时,"import java.util.Scanner;

// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
    public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int m = in.nextInt();
		for(int n = 0;n < m; n++) {
			int x = in.nextInt();
			int y = in.nextInt();
			int num = x+y;
			for(;x+y > 2;) {
				if(x >= 2) {
					x = (int)Math.floor(x/2.0);
					num++;
				}
				if(y >= 2){
					y = (int)Math.floor(y/2.0);
					num++;
				}
			}
			if(num % 2 == 0) {
				System.out.println(""Bob"");
			}else {
				System.out.println(""Alice"");
			}
		}
    }
}"
31,E,Java,61798812,2023-04-07 20:19:52,陈力明,答案正确,"

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.lang.invoke.MethodHandles;
import java.util.*;



import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
 
public class Main{
 
private static final boolean String = false;
static int []f;
//static int []f2;
static int []size;
//static int []size2;
//static int []a=new int [500001];
static int max=Integer.MAX_VALUE;

static Set<Long>set=new HashSet<>();
static int k;
static long mod= 998244353;
static int res=0;
static int n,m;
static int x1,y1;
 static List<Integer>[]ans;
 static char [][]c;

static int[] dx = {-1, 0, 1, 0}, dy = {0, 1, 0, -1};
	public static void main(String []args) {
		MyScanner s=new MyScanner();
		PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
	
		int t=s.nextInt();
		while(t-->0)
		{
			int a=s.nextInt();
			int b=s.nextInt();
		      int c=0,d=0;
            while(a>2)
            {
                a=(a-1)/2;
                c++;
            }
            while(b>2)
            {
                b=(b-1)/2;
                d++;
            }
            if(c!=d)
                 out.println(""Alice"");
             
             
            else out.println(""Bob"");
        
		}
	
	out.close();
	}
	public static void dfs(int x,int y,char [][]f,int [][]v)
	{
		v[x][y]=1;
		if(f[x][y]=='!')res++;
		for(int i=0;i<4;i++)
		{
			int x1=x+dx[i];
			int y1=y+dy[i];
			if(x1<0||x1>=f.length||y1<0||y1>=f[0].length||v[x1][y1]==1||f[x1][y1]=='#')continue;
			dfs(x1,y1,f,v);
		}
	}
	public static long shuwei(int i,int  mask,boolean limitnums,boolean isnum,char []c,long [][]dp)
	{
		if(i==c.length)
			return isnum(?)1:0;
					
	
	if(!limitnums&&isnum&&dp[i][mask]!=-1)
		return dp[i][mask];
	long res=0;
	if(!isnum)
	{
		res=shuwei(i+1,mask,false,false,c,dp);
	}
	int up=limitnums(?)c[i]-'0':9;
	for(int d=isnum(?)0:1;d<=up;++d)
	{
		 if((mask>>d&1)==0)
			 res+=shuwei(i+1,mask,limitnums&&d==up,true,c,dp);
	}
	if(!limitnums&&isnum)
		dp[i][mask]=res;
	return res;
}
	
     


	public static boolean is(char []c)
	{
		int l=0;
		int r=c.length-1;
		while(l<r)
		{
			if(c[l]!=c[r])return false;
			l++;r--;
		}
		return true;
	}
	public static void swap (int l,int r,int []f)
	{
		if(l>=f.length||r>=f.length)return;
		int tt=f[l];
		f[l]=f[r];
		f[r]=tt;
		
	}
	
public static void reverse(int []a)
{
	int l=0,r=a.length-1;
	while(l<r)
	{
		int t=a[l];
		a[l]=a[r];
		a[r]=t;
		l++;r--;
	}
}
	public static long sum (int x,long mod)
	{
		
	long sum=1;
		for(int i = 2; i * i <= x; ++i){
			long temp = 1;
			if(x % i == 0){
				long j = i;
				while(x % i == 0){
					temp += j;
					j *= i;
					x /= i;
				}
				sum = (sum * temp) % mod;
			}

	
	}
		if(x > 1) sum = (sum * (1 + x)) % mod;
		return sum;
	}
	  public  static long Mode(long a,  long b, long mode)
	  {
	  	 long sum = 1;
	  	a = a % mode;
	   
	  	while (b > 0) {
	  		if (b % 2 == 1)		//判断是否是奇数，是奇数的话将多出来的数事先乘如sum
	  			sum = (sum * a) % mode;
	   
	  		b /= 2;
	  		a = (a * a) % mode;// 不断的两两合并再取模，减小a和b的规模
	  	}
	  	return sum;
	  }
	public static long is(int mid,long []f,int d)
	{
		long ans=0;
		for(int i=0;i<d;i++)
		{
			
			int   k=i%mid;
			if(k>f.length-1)continue;
			ans+=f[f.length-k-1];
		}
		return ans;
	}
	
	public static boolean is(String a,String b)
	{
		for(int i=0;i<=b.length()-a.length();i++)
		{
			if(b.substring(i,i+a.length()).equals(a))
				return true;
		}
		return false;
		
	}
	
	
	  public static boolean is(int  n) {
		    if (n <= 3) {
		        return n > 1;
		    }
		    // 只有6x-1和6x+1的数才有可能是质数
		    if (n % 6 != 1 && n % 6 != 5) {
		        return false;
		    }
		    // 判断这些数能否被小于sqrt(n)的奇数整除
		    int sqrt = (int) Math.sqrt(n);
		    for (int i = 5; i <= sqrt; i += 6) {
		        if (n % i == 0 || n % (i + 2) == 0) {
		            return false;
		        }
		    }
		    return true;
		}



public static int find (int []father,int x) {
		if(x!=father[x])
			x=find(father,father[x]);
		return father[x];
	}
public static void union(int []father,int x,int y,int []size) {
	x=find(father,x);
	y=find(father,y);
	if(x==y)
		return ;
	if(size[x]<size[y]) {
		 int tem=x;
         x=y;
         y=tem;
	}
	father[y]=x;
	size[x]+=size[y];
return ;
}
		
					
public static void shufu(int []f) {
		for(int i=0;i<f.length;i++) {
			int k=(int)(Math.random()*(f.length));
			int t=f[k];
			
			f[k]=f[0];
			f[0]=t;
			
		}
	}
public static void shufu1(long []f) {
	for(int i=0;i<f.length;i++) {
		int k=(int)(Math.random()*(f.length));
		long t=f[k];
		f[k]=f[0];
		f[0]=t;
	}
}
public  static int  gcd(int x,int y) {
		return y==0(?)x:gcd(y,x%y);
	}
 
 
public  static int  lcm(int x,int y) {
		
		return x*y/gcd(x,y);
}
		
	
	
		
		
	
	
		
	
/*					
public static void buildertree(int k,int l,int r) {
		if(l==r)
		{
			f[k]=a[l];
			return ;
		}
		int m=l+r>>1;
		buildertree(k+k,l,m);
		buildertree(k+k+1,m+1,r);
		f[k]=	
	
	}
public static	void update(int u,int l,int r,int x,int c)
{
    if(l==x && r==x)
    {
        f[u]=c;
        return;
    }
    int mid=l+r>>1;
    if(x<=mid)update(u<<1,l,mid,x,c);
    else if(x>=mid+1)update(u<<1|1,mid+1,r,x,c);
   	f[u]=Math.max(f[u+u], f[u+u+1]);
}
	
public static int query(int k,int l,int r,int x,int y) {
		if(x==l&&y==r) {
			return f[k];
		}
		int m=l+r>>1;
		if(y<=m) {
			return query(k+k,l,m,x,y);
		}
		else if(x>m)return query(k+k+1,m+1,r,x,y);
		else  {
			int i=query(k+k,l,m,x,m),j=query(k+k+1,m+1,r,m+1,y);
		return Math.max(j, Math.max(i+j, i));
		
		}
	}
	
public static void calc(int k,int l,int r,int x,int z) {
 
			f[k]+=z;
			if(l==r) {
				return ;
			}
			int m=l+r>>1;
    		if(x<=m)
    			calc(k+k,l,m,x,z);
    		else calc(k+k+1,m+1,r,x,z);
			
			
		}
	
				
			
 
		*/
		
				
	
			
	
			
	
 
	public static class MyScanner {
	    BufferedReader br;
	    StringTokenizer st;
	 
	    public MyScanner() {
	      try {
	        final String USERDIR = System.getProperty(""user.dir"");
	        String cname = MethodHandles.lookup().lookupClass().getCanonicalName().replace("".MyScanner"", """");
	        cname = cname.lastIndexOf('.') > 0 (?) cname.substring(cname.lastIndexOf('.') + 1) : cname;
	        final File fin = new File(USERDIR + ""/io/c"" + cname.substring(1,5) + ""/"" + cname + "".in"");
	        br = new BufferedReader(new InputStreamReader(fin.exists()
	            (?) new FileInputStream(fin) : System.in));
	      } catch (Exception e) {
	        br = new BufferedReader(new InputStreamReader(System.in));
	      }
	    }
	 
	    public String next() {
	      try {
	        while (st == null || !st.hasMoreElements()) {
	          st = new StringTokenizer(br.readLine());
	        }
	        return st.nextToken();
	      } catch (Exception e) {
	        throw new RuntimeException(e);
	      }
	    }
	 
	    public int nextInt() {
	      return Integer.parseInt(next());
	    }
	 
	    public long nextLong() {
	      return Long.parseLong(next());
	    }
	  }
	
		}"
32,E,Java,61798882,2023-04-07 20:20:23,牛客418895276号,答案错误,"import java.util.Scanner;

// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        // 注意 hasNext 和 hasNextLine 的区别
        int t = in.nextInt();
        while (t-->0) { // 注意 while 处理多个 case
            int n = in.nextInt();
            int m = in.nextInt();
            boolean alice = true;
            if(m>n) {
                int tmp = m;
                m=n;
                n=tmp;
            }
            int x = n;
            boolean first=true;
            while(true){
                //System.out.println(x);
                if(x<=2&&first){
                    x = m;
                    first=false;
                }
                if(x<=2&&!first){
                    if(alice){
                        System.out.println(""Bob"");
                    }else{
                        System.out.println(""Alice"");
                    }
                    break;
                }
                if((x&1) == 1){
                    x/=2;
                }else {
                    x=x/2-1;
                }
                alice=!alice;
            }
            
        }
    }
}"
33,E,Java,61798929,2023-04-07 20:20:49,henuyzf,答案错误,"import java.util.*;

// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        // 注意 hasNext 和 hasNextLine 的区别
        int t = in.nextInt();
        while(t>0){
            int n = in.nextInt() ;
            int m = in.nextInt() ;
            if (n == m)
            {
                System.out.println(""Bob"");
            }else
                
            System.out.println(""Alice"");
            
            t-- ;
        }
    
            
    
    }
}"
34,E,Java,61798951,2023-04-07 20:20:59,肿么肥四.,答案错误,"import java.io.*;

public class Main {
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));

    public static void main(String[] args) throws Exception {
        Read sc = new Read();
        int t = sc.nextInt();
        while (t-- > 0) {
            int n = sc.nextInt();
            int m = sc.nextInt();
            if(n==m) out.println(""Bob"");
            else out.println(""Alice"");
        }

        out.flush();
    }
}

class Read {
    StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));

    public int nextInt() throws Exception {
        st.nextToken();
        return (int) st.nval;
    }
}"
35,E,Java,61799015,2023-04-07 20:21:35,迷你滨,答案错误,"import java.io.*;
import java.util.*;
import java.math.*;
//An apple a day

public class Main{
	static int maxn = 200005,n,m;
	static long INF = (long)1e18,ans = 0,mod = (int)1e9+7;
	static Scanner sc = new Scanner (System.in);
	static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st  =new StreamTokenizer(bf);
    static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));
    public static void main(String[]args) throws IOException{
    	int T = 1;
    	T = Integer.parseInt(S());
        
    	while(T-->0) solve();
    	//while(st.nextToken() != st.TT_EOF) {
    		//n = (int)st.nval;solve();
    	//}
        pw.flush();
    }
    static final int I() throws IOException {
    	st.nextToken();
    	return (int)st.nval;
    }
    
    static String S() throws IOException{
    	String res = bf.readLine();
    	while(res.equals("""")) res = bf.readLine();
    	return res;
    }
    
    
    
    static void solve() throws IOException{
    	n = I();m=I();
    	if(n<=2 && m<=2 || n == m) {
    		pw.println(""Bob"");return;
    	}
    	boolean f = false;
    	if(n< m) {
    		int t=n;n=m;m=t;
    	}
        if(m<=2){
            pw.println(""Alice"");
            return;
        }
        int t = (4+m%4-1)%4;
        int a[] = {1,0,3,2};
    	if(n> m+a[t]) pw.println(""Alice"");
    	else pw.println(""Bob"");
    }
}
"
36,E,Java,61799881,2023-04-07 20:28:40,可爱抱抱呀😥,答案错误,"//Java快读快写模板，不定时更新优化内容
//@可爱抱抱呀
import java.util.*;
import java.io.*;
import java.math.*;
import java.text.*;
public class Main{
    public static void main(String args[]) throws IOException{
        Read sc=new Read();
        int t=sc.nextInt();
        for(int i=0;i<t;i++){
            int n=sc.nextInt();
            int m=sc.nextInt();
            int count=0;
            while(n>2){
                count++;
                n>>=1;
            }
            while(m>2){
                count++;
                m>>=1;
            }
            sc.println(count%3==1(?)""Alice"":""Bob"");
        }
        //sc.print(0);
        sc.bw.flush();
        sc.bw.close();
    }
    static boolean cc(int a,int b){
        if(a<=2&&b<=2){
            return false;
        }
        if(a<=2||b<=2){
            return true;
        }
        return true;
    }
}
//记住看数字范围，需要开long吗，需要用BigInteger吗，需要手动处理字符串吗，复杂度数量级控制在1e7或者以下了吗
//开数组的数据范围最高不能超过1e7，数据范围再大就要用哈希表离散化了
//基本数据类型不能自定义sort排序，二维数组就可以了，顺序排序的时候是小减大，注意返回值应该是int
class Read{
    BufferedReader bf;
    StringTokenizer st;
    BufferedWriter bw;
    public Read(){
        bf=new BufferedReader(new InputStreamReader(System.in));
        st=new StringTokenizer("""");
        bw=new BufferedWriter(new OutputStreamWriter(System.out));
        //什么时候才能持续稳定ak力扣、AcWing呢？
        //什么时候才能ak cf的div2，div1呢？才能打div2不计rating呢？
        //什么时候才能ak  abc  不计rating呢？当然arc不计分更好
        //什么时候才能ak 牛客练习赛不计rating呢(?)
    }
    public String nextLine() throws IOException{
        return bf.readLine();
    }
    public String next() throws IOException{
        while(!st.hasMoreTokens()){
            st=new StringTokenizer(bf.readLine());
        }
        return st.nextToken();
    }
    public char nextChar() throws IOException{
        //确定下一个token只有一个字符的时候再用
        return next().charAt(0);
    }
    public int nextInt() throws IOException{
        return Integer.parseInt(next());
    }
    public long nextLong() throws IOException{
        return Long.parseLong(next());
    }
    public double nextDouble() throws IOException{
        return Double.parseDouble(next());
    }
    public float nextFloat() throws IOException{
        return Float.parseFloat(next());
    }
    public byte nextByte() throws IOException{
        return Byte.parseByte(next());
    }
    public short nextShort() throws IOException{
        return Short.parseShort(next());
    }
    public BigInteger nextBigInteger() throws IOException{
        return new BigInteger(next());
    }
    public void println(int a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(int a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(String a) throws IOException{
        bw.write(a);
        bw.newLine();
        return;
    }
    public void print(String a) throws IOException{
        bw.write(a);
        return;
    }
    public void println(long a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(long a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(double a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(double a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void print(BigInteger a) throws IOException{
        bw.write(a.toString());
        return;
    }
    public void print(char a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(char a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
}"
37,E,Java,61799973,2023-04-07 20:29:23,rookie1号,答案错误,"
import java.io.*;
import java.math.*;
import java.util.*;

public class Main {
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
	static int dx[]= {-1,0,1, 0};
	static int dy[]= {0 ,1,0,-1};
    public static void main(String[] args) throws IOException {
        int T=in.nextInt();
        //int T=1;
        while(T>0){
            //String[] strs1 = re.readLine().split("" "");
            //int n=Integer.parseInt(strs1[0]);
            //String s=re.readLine();
            //char arr[]=s.toCharArray();

            //long[][] p = new long[n][2];//对 long 二维数组排序
            //Arrays.sort(p, (a, b) -> a[0] <= b[0] (?) -1 : 1);
            //Set<Integer>set=new HashSet<>();
            //Map<Long,Integer>map=new HashMap<>();
            //Map<Integer,List<Integer>>map=new HashMap<>();
            //TreeSet<Integer> set = new TreeSet<>();
            int n=in.nextInt();int m=in.nextInt();
            int res=0;
            while(n>2){
                if(n%2==0)n--;
                n/=2;
                res++;
            }
            while(m>2){
                if(m%2==0)m--;

                m/=2;
                res++;
            }
            if(res%2==0)out.println(""Bob"");
            else out.println(""Alice"");
            
            
            //out.println(res);
            
            
            



            
            T--;
        }
        out.flush();
        out.close();

    }
    static class Node{
        int x,y,dis;
        public Node(int x, int y,int dis) {
            this.x = x;
            this.y = y;
            this.dis=dis;
        }
    }

    static class in {
        private static final StreamTokenizer input = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));

        public static int nextInt() throws IOException {
            input.nextToken();
            return (int) input.nval;
        }

        public static long nextLong() throws IOException {
            input.nextToken();
            return (long) input.nval;
        }

        public static String next() throws IOException {
            input.nextToken();
            return input.sval;
        }

        public static double nextDouble() throws IOException {
            input.nextToken();
            return input.nval;
        }
    }
}"
38,E,Java,61800232,2023-04-07 20:31:41,wkkwmm,答案错误,"


import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
    	
        public void solve(int testNumber, InputReader in, PrintWriter out) {           
        int t=in.nextInt();
        while(t-->0) {
        	int n=in.nextInt();
        	int m=in.nextInt();
//        	if(n==m&&(n==1||n==2||n==3)){
//        		out.println(""Bob"");
//        	}
//        	else if((n==1&&m==2)||(m==1&&n==2)) {
//        		out.println(""Bob"");
//        	}
//        	else if((n==1||m==1)||(n==2||m==2)||(n==3||m==3)) {
//        		out.println(""Alice"");
//        	}
//        	else {
//        		
//        	}
        	if(n==m) {
        		out.println(""Bob"");
        	}
        	else {
        		out.println(""Alice"");
        	}
        }
        }
    }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
39,E,Java,61800388,2023-04-07 20:32:53,ssssse,答案错误,"import java.util.Arrays;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        for (int i = 0; i < n; i++) {
            int a = in.nextInt();
            int b = in.nextInt();
            if(a!=b){
                System.out.println(""Alice"");
            }else {
                System.out.println(""Bob"");
            }
        }
    }
}"
40,E,Java,61800448,2023-04-07 20:33:27,小怂很怂,答案错误,"import java.io.*;

/**
 * @ClassName 小小博弈
 * @Description TODO
 * @Author 小怂很怂
 * @Date 2023/4/7 20:30
 * @Version 1.0
 **/
public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(br);
    static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));

    public static void main(String[] args) throws Exception {
        int []f=new int[32];
        f[0]=1;f[1]=3;
        for (int i=2;i<=31;i++) f[i]=f[i-1]*2;
        int t=nextInt();
        while (t>0){
            t--;
            int a=nextInt();
            int b=nextInt();
            int sum=0;
            for (int i=1;i<32;i++){
                if (a<f[i]){
                    sum+=i-1;
                    break;
                }
            }
            for (int i=1;i<32;i++){
                if (b<f[i]){
                    sum+=i-1;
                    break;
                }
            }
            if (sum%2==0) pw.println(""Bob"");
            else pw.println(""Alice"");
        }
        pw.flush();
    }

    public static int nextInt() throws Exception {//int型
        st.nextToken();
        return (int) st.nval;
    }

    public static long nextLong() throws Exception {//long型
        st.nextToken();
        return (long) st.nval;
    }
}
"
41,E,Java,61800538,2023-04-07 20:34:10,肿么肥四.,答案错误,"import java.io.*;

public class Main {
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));

    public static void main(String[] args) throws Exception {
        Read sc = new Read();
        long t = sc.nextInt();
        while (t-- > 0) {
            long n = sc.nextInt();
            long m = sc.nextInt();
            long S = n * m;
            for (int i = 1; i <= 1000; i++) {
                long sum = (long) Math.pow(2, i);
                if (S == sum) {
                    if (i % 2 == 0) {
                        out.println(""Bob"");
                    } else {
                        out.println(""Alice"");
                    }
                    break;
                } else if (S < sum) {
                    if (i % 2 == 1) out.println(""Alice"");
                    else out.println(""Bob"");
                    break;
                }
            }
        }

        out.flush();
    }
}

class Read {
    StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));

    public long nextInt() throws Exception {
        st.nextToken();
        return (long) st.nval;
    }
}"
42,E,Java,61800603,2023-04-07 20:34:40,KY.cj,答案错误,"
import java.io.*;
import java.util.*;

public class Main {
    static int n;
    static StreamTokenizer st=new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
    public static void main(String[] args) throws IOException {
        n=nextInt();
        for (int i = 0; i < n; i++) {
            int a=nextInt();
            int b=nextInt();
            if(a==b) System.out.println(""Bob"");
            else System.out.println(""Alice"");
        }
    }

    private static int nextInt() throws IOException {
        st.nextToken();
        return (int)st.nval;
    }
}
"
43,E,Java,61800698,2023-04-07 20:35:29,kk129,答案错误,"import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int t = in.nextInt();
            for (int round = 0; round < t; round++) {
                long n = in.nextLong();
                long m = in.nextLong();
                if(n==m)
                    out.println(""Bob"");
                else
                    out.println(""Alice"");
            }
        }
    }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;
        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
44,E,Java,61800773,2023-04-07 20:36:13,小怂很怂,答案错误,"import java.io.*;

/**
 * @ClassName 小小博弈
 * @Description TODO
 * @Author 小怂很怂
 * @Date 2023/4/7 20:30
 * @Version 1.0
 **/
public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(br);
    static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));

    public static void main(String[] args) throws Exception {
        int []f=new int[32];
        f[0]=1;f[1]=3;
        for (int i=2;i<=31;i++) f[i]=f[i-1]*2+1;
        int t=nextInt();
        while (t>0){
            t--;
            int a=nextInt();
            int b=nextInt();
            int sum=0;
            for (int i=1;i<32;i++){
                if (a<f[i]){
                    sum+=i-1;
                    break;
                }
            }
            for (int i=1;i<32;i++){
                if (b<f[i]){
                    sum+=i-1;
                    break;
                }
            }
            if (sum%2==0) pw.println(""Bob"");
            else pw.println(""Alice"");
        }
        pw.flush();
    }

    public static int nextInt() throws Exception {//int型
        st.nextToken();
        return (int) st.nval;
    }

    public static long nextLong() throws Exception {//long型
        st.nextToken();
        return (long) st.nval;
    }
}
"
45,E,Java,61800775,2023-04-07 20:36:13,rookie1号,答案错误,"
import java.io.*;
import java.math.*;
import java.util.*;

public class Main {
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
	static int dx[]= {-1,0,1, 0};
	static int dy[]= {0 ,1,0,-1};
    public static void main(String[] args) throws IOException {
        int T=in.nextInt();
        //int T=1;
        while(T>0){
            //String[] strs1 = re.readLine().split("" "");
            //int n=Integer.parseInt(strs1[0]);
            //String s=re.readLine();
            //char arr[]=s.toCharArray();

            //long[][] p = new long[n][2];//对 long 二维数组排序
            //Arrays.sort(p, (a, b) -> a[0] <= b[0] (?) -1 : 1);
            //Set<Integer>set=new HashSet<>();
            //Map<Long,Integer>map=new HashMap<>();
            //Map<Integer,List<Integer>>map=new HashMap<>();
            //TreeSet<Integer> set = new TreeSet<>();
            int n=in.nextInt();int m=in.nextInt();
            int res=0;
            while(n>2){
                if(n%2==0)n--;
                n/=2;
                res++;
            }
            while(m>2){
                if(m%2==0)m--;

                m/=2;
                res++;
            }
            if(res%4!=1)out.println(""Bob"");
            else out.println(""Alice"");
            
            
           // out.println(res);

            
            
            



            
            T--;
        }
        out.flush();
        out.close();

    }
    static class Node{
        int x,y,dis;
        public Node(int x, int y,int dis) {
            this.x = x;
            this.y = y;
            this.dis=dis;
        }
    }

    static class in {
        private static final StreamTokenizer input = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));

        public static int nextInt() throws IOException {
            input.nextToken();
            return (int) input.nval;
        }

        public static long nextLong() throws IOException {
            input.nextToken();
            return (long) input.nval;
        }

        public static String next() throws IOException {
            input.nextToken();
            return input.sval;
        }

        public static double nextDouble() throws IOException {
            input.nextToken();
            return input.nval;
        }
    }
}"
46,E,Java,61800859,2023-04-07 20:37:02,ssssse,答案错误,"import java.util.Arrays;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int k = 1;
        for (int i = 0; i < n; i++) {
            int a = in.nextInt();
            int b = in.nextInt();
            if(a%2==0&&b%2==0){
                if(k==0) {
                    System.out.println(""Alice"");
                    k=1;
                }else {
                    System.out.println(""Bob"");
                    k=0;
                }
            }else {
                if(k==1) {
                    System.out.println(""Alice"");
                    k=0;
                }else {
                    System.out.println(""Bob"");
                    k=1;
                }
            }
        }
    }
}"
47,E,Java,61800924,2023-04-07 20:37:38,可爱抱抱呀😥,答案错误,"//Java快读快写模板，不定时更新优化内容
//@可爱抱抱呀
import java.util.*;
import java.io.*;
import java.math.*;
import java.text.*;
public class Main{
    public static void main(String args[]) throws IOException{
        Read sc=new Read();
        int t=sc.nextInt();
        for(int i=0;i<t;i++){
            int n=sc.nextInt();
            int m=sc.nextInt();
            int count=0;
            while(n>2){
                count++;
                n>>=1;
            }
            while(m>2){
                count++;
                m>>=1;
            }
            sc.println(count%3==1(?)""Alice"":""Bob"");
        }
        //sc.print(0);
        sc.bw.flush();
        sc.bw.close();
    }
    static boolean cc(int a,int b){
        if(a<=2&&b<=2){
            return false;
        }
        if(a<=2||b<=2){
            return true;
        }
        return true;
    }
}
//记住看数字范围，需要开long吗，需要用BigInteger吗，需要手动处理字符串吗，复杂度数量级控制在1e7或者以下了吗
//开数组的数据范围最高不能超过1e7，数据范围再大就要用哈希表离散化了
//基本数据类型不能自定义sort排序，二维数组就可以了，顺序排序的时候是小减大，注意返回值应该是int
class Read{
    BufferedReader bf;
    StringTokenizer st;
    BufferedWriter bw;
    public Read(){
        bf=new BufferedReader(new InputStreamReader(System.in));
        st=new StringTokenizer("""");
        bw=new BufferedWriter(new OutputStreamWriter(System.out));
        //什么时候才能持续稳定ak力扣、AcWing呢？
        //什么时候才能ak cf的div2，div1呢？才能打div2不计rating呢？
        //什么时候才能ak  abc  不计rating呢？当然arc不计分更好
        //什么时候才能ak 牛客练习赛不计rating呢(?)
    }
    public String nextLine() throws IOException{
        return bf.readLine();
    }
    public String next() throws IOException{
        while(!st.hasMoreTokens()){
            st=new StringTokenizer(bf.readLine());
        }
        return st.nextToken();
    }
    public char nextChar() throws IOException{
        //确定下一个token只有一个字符的时候再用
        return next().charAt(0);
    }
    public int nextInt() throws IOException{
        return Integer.parseInt(next());
    }
    public long nextLong() throws IOException{
        return Long.parseLong(next());
    }
    public double nextDouble() throws IOException{
        return Double.parseDouble(next());
    }
    public float nextFloat() throws IOException{
        return Float.parseFloat(next());
    }
    public byte nextByte() throws IOException{
        return Byte.parseByte(next());
    }
    public short nextShort() throws IOException{
        return Short.parseShort(next());
    }
    public BigInteger nextBigInteger() throws IOException{
        return new BigInteger(next());
    }
    public void println(int a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(int a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(String a) throws IOException{
        bw.write(a);
        bw.newLine();
        return;
    }
    public void print(String a) throws IOException{
        bw.write(a);
        return;
    }
    public void println(long a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(long a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(double a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(double a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void print(BigInteger a) throws IOException{
        bw.write(a.toString());
        return;
    }
    public void print(char a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(char a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
}"
48,E,Java,61801223,2023-04-07 20:40:09,wkkwmm,答案错误,"


import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
    	
        public void solve(int testNumber, InputReader in, PrintWriter out) {           
        int t=in.nextInt();
        while(t-->0) {
        	int n=in.nextInt();
        	int m=in.nextInt();
//        	if(n==m&&(n==1||n==2||n==3)){
//        		out.println(""Bob"");
//        	}
//        	else if((n==1&&m==2)||(m==1&&n==2)) {
//        		out.println(""Bob"");
//        	}
//        	else if((n==1||m==1)||(n==2||m==2)||(n==3||m==3)) {
//        		out.println(""Alice"");
//        	}
//        	else {
//        		
//        	}
        	if(n==m) {
        		out.println(""Bob"");
        	}
        	else {
        		if((n==1&&m==2)||(n==2&&m==2)) {
        			out.println(""Bob"");
        		}
        		else {
        			out.println(""Alice"");
        		}
        		
        	}
        }
        }
    }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
49,E,Java,61801237,2023-04-07 20:40:22,wkkwmm,答案错误,"


import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
    	
        public void solve(int testNumber, InputReader in, PrintWriter out) {           
        int t=in.nextInt();
        while(t-->0) {
        	int n=in.nextInt();
        	int m=in.nextInt();
//        	if(n==m&&(n==1||n==2||n==3)){
//        		out.println(""Bob"");
//        	}
//        	else if((n==1&&m==2)||(m==1&&n==2)) {
//        		out.println(""Bob"");
//        	}
//        	else if((n==1||m==1)||(n==2||m==2)||(n==3||m==3)) {
//        		out.println(""Alice"");
//        	}
//        	else {
//        		
//        	}
        	if(n==m) {
        		out.println(""Bob"");
        	}
        	else {
        		if((n==1&&m==2)||(n==2&&m==1)) {
        			out.println(""Bob"");
        		}
        		else {
        			out.println(""Alice"");
        		}
        		
        	}
        }
        }
    }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
50,E,Java,61801262,2023-04-07 20:40:35,KY.cj,答案错误,"
import java.io.*;
import java.util.*;

public class Main {
    static int n;
    static StreamTokenizer st=new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
    public static void main(String[] args) throws IOException {
        n=nextInt();
        for (int i = 0; i < n; i++) {
            int a=nextInt();
            int b=nextInt();
            if((a==1&&b==2)||(a==2&&b==1))System.out.println(""Bob"");
            if(a==b) System.out.println(""Bob"");
            else System.out.println(""Alice"");
        }
    }

    private static int nextInt() throws IOException {
        st.nextToken();
        return (int)st.nval;
    }
}
"
51,E,Java,61801593,2023-04-07 20:43:37,KY.cj,答案错误,"
import java.io.*;
import java.util.*;

public class Main {
    static int n;
    static StreamTokenizer st=new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
    public static void main(String[] args) throws IOException {
        n=nextInt();
        for (int i = 0; i < n; i++) {
            int a=nextInt();
            int b=nextInt();
            if((a==1||b==1)&&a!=b)System.out.println(""Alice"");
            if(a==b) System.out.println(""Bob"");
            else System.out.println(""Alice"");
        }
    }

    private static int nextInt() throws IOException {
        st.nextToken();
        return (int)st.nval;
    }
}
"
52,E,Java,61801696,2023-04-07 20:44:25,小怂很怂,答案错误,"import java.io.*;

/**
 * @ClassName 小小博弈
 * @Description TODO
 * @Author 小怂很怂
 * @Date 2023/4/7 20:30
 * @Version 1.0
 **/
public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(br);
    static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));

    public static void main(String[] args) throws Exception {
        int []f=new int[32];
        f[0]=1;f[1]=3;
        for (int i=2;i<=31;i++) f[i]=f[i-1]*2+1;
        int t=nextInt();
        while (t>0){
            t--;
            int a=nextInt();
            int b=nextInt();
            int sum=0;
            for (int i=1;i<32;i++){
                if (a<f[i]){
                    sum+=i-1;
                    break;
                }
            }
            for (int i=1;i<32;i++){
                if (b<f[i]){
                    sum=Math.min(sum,i-1);
                    break;
                }
            }
            if (sum%2==1) pw.println(""Bob"");
            else pw.println(""Alice"");
        }
        pw.flush();
    }

    public static int nextInt() throws Exception {//int型
        st.nextToken();
        return (int) st.nval;
    }

    public static long nextLong() throws Exception {//long型
        st.nextToken();
        return (long) st.nval;
    }
}
"
53,E,Java,61801709,2023-04-07 20:44:27,迷你滨,答案正确,"import java.io.*;
import java.util.*;
import java.math.*;
//An apple a day

public class Main{
	static int maxn = 200005,n,m;
	static long INF = (long)1e18,ans = 0,mod = (int)1e9+7;
	static Scanner sc = new Scanner (System.in);
	static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st  =new StreamTokenizer(bf);
    static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));
    public static void main(String[]args) throws IOException{
    	int T = 1;
    	T = Integer.parseInt(S());
        pre();
    	while(T-->0) solve();
    	//while(st.nextToken() != st.TT_EOF) {
    		//n = (int)st.nval;solve();
    	//}
        pw.flush();
    }
    static final int I() throws IOException {
    	st.nextToken();
    	return (int)st.nval;
    }
    
    static String S() throws IOException{
    	String res = bf.readLine();
    	while(res.equals("""")) res = bf.readLine();
    	return res;
    }
    
    static long p[] = new long [66];
    static int len=0;
    
    static void pre() {
    	len=1;
    	while(true) {
    		p[len] = p[len-1]+(1<<len);
    		len++;
    		if(p[len-1] >1e9) break;
    	}
    }
    
    static void solve() throws IOException{
    	n = I();m=I();
    	if(n<=2 && m<=2 || n == m) {
    		pw.println(""Bob"");return;
    	}
    	boolean f = false;
    	if(n< m) {
    		int t=n;n=m;m=t;
    	}
        if(m<=2){
            pw.println(""Alice"");
            return;
        }
        for(int i=1;i<len;i++) {
        	if(p[i] < m) continue;
        	if(p[i] >= n) pw.println(""Bob"");
        	else pw.println(""Alice"");
        	break;
        }
    }
}
"
54,E,Java,61801822,2023-04-07 20:45:29,kk129,答案错误,"import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int t = in.nextInt();
            for (int round = 0; round < t; round++) {
                long n = in.nextLong();
                long m = in.nextLong();
                if(n==2||m==2)
                    out.println(""Alice"");
                else {
                    if(n==1||m==1)
                        out.println(""Bob"");
                    else {
                        if(n%2!=0&&m%2!=0)
                            out.println(""Alice"");
                        else
                            out.println(""Bob"");
                    }
                }
            }
        }
    }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;
        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
55,E,Java,61801845,2023-04-07 20:45:38,KY.cj,答案错误,"
import java.io.*;
import java.util.*;

public class Main {
    static int n;
    static StreamTokenizer st=new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
    public static void main(String[] args) throws IOException {
        n=nextInt();
        for (int i = 0; i < n; i++) {
            int a=nextInt();
            int b=nextInt();
            if(a==1||b==1||a==b)System.out.println(""Bob"");
            else System.out.println(""Alice"");
        }
    }

    private static int nextInt() throws IOException {
        st.nextToken();
        return (int)st.nval;
    }
}
"
56,E,Java,61801938,2023-04-07 20:46:27,ssssse,答案错误,"import java.util.Arrays;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int k = 1;
        for (int i = 0; i < n; i++) {
            int a = in.nextInt();
            int b = in.nextInt();
            if (a % 2 == 0 && b % 2 == 0&&((a==2&&b==2)||(a!=2&&b!=2))) {
                 System.out.println(""Bob"");
            } else {
                System.out.println(""Alice"");
            }
        }
    }
}"
57,E,Java,61801948,2023-04-07 20:46:32,霖酱,答案错误,"import java.util.*;
import java.math.*;
import java.io.*;

public class Main {
    
    static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter out = new PrintWriter(new BufferedWriter(
        new OutputStreamWriter(System.out)));

    public static void main(String[] args) throws Exception{
        
        int t = read()[0];
        while (t-- > 0) {
            int[] nums = read();
            int n = nums[0], m = nums[1];
            int cnt = 0;
            while (n > 0) {
                n /= 2;
                cnt++;
            }
            while (m > 0) {
                m /= 2; 
                cnt++;
            }
            if (cnt % 2 == 1) {
                out.println(""Alice"");
            } else {
                out.println(""Bob"");
            }
        }
        out.flush();
        in.close();
    } 
    
    static int[] read() throws Exception {
        String[] param = in.readLine().split("" "");
        int[] res = new int[param.length];
        for (int i = 0; i < param.length; i++) res[i] = Integer.parseInt(param[i]);
        return res;
    }
}
"
58,E,Java,61802078,2023-04-07 20:47:42,霖酱,答案错误,"import java.util.*;
import java.math.*;
import java.io.*;

public class Main {
    
    static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter out = new PrintWriter(new BufferedWriter(
        new OutputStreamWriter(System.out)));

    public static void main(String[] args) throws Exception{
        
        int t = read()[0];
        while (t-- > 0) {
            int[] nums = read();
            int n = nums[0], m = nums[1];
            int cnt = 0;
            while (n > 2) {
                n /= 2;
                cnt++;
            }
            while (m > 2) {
                m /= 2; 
                cnt++;
            }
            if (cnt % 2 == 1) {
                out.println(""Alice"");
            } else {
                out.println(""Bob"");
            }
        }
        out.flush();
        in.close();
    } 
    
    static int[] read() throws Exception {
        String[] param = in.readLine().split("" "");
        int[] res = new int[param.length];
        for (int i = 0; i < param.length; i++) res[i] = Integer.parseInt(param[i]);
        return res;
    }
}
"
59,E,Java,61802174,2023-04-07 20:48:34,霖酱,答案错误,"import java.util.*;
import java.math.*;
import java.io.*;

public class Main {
    
    static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter out = new PrintWriter(new BufferedWriter(
        new OutputStreamWriter(System.out)));

    public static void main(String[] args) throws Exception{
        
        int t = read()[0];
        while (t-- > 0) {
            int[] nums = read();
            int n = nums[0], m = nums[1];
            int cnt = 0;
            while (n > 2) {
                if (n % 2 == 0) {
                    n = n / 2 - 1;
                } else n /= 2;
                cnt++;
            }
            while (m > 2) {
                if (m % 2 == 0) {
                    m = m / 2 - 1;
                } else m /= 2; 
                cnt++;
            }
            if (cnt % 2 == 1) {
                out.println(""Alice"");
            } else {
                out.println(""Bob"");
            }
        }
        out.flush();
        in.close();
    } 
    
    static int[] read() throws Exception {
        String[] param = in.readLine().split("" "");
        int[] res = new int[param.length];
        for (int i = 0; i < param.length; i++) res[i] = Integer.parseInt(param[i]);
        return res;
    }
}
"
60,E,Java,61802267,2023-04-07 20:49:23,小怂很怂,答案错误,"import java.io.*;

/**
 * @ClassName 小小博弈
 * @Description TODO
 * @Author 小怂很怂
 * @Date 2023/4/7 20:30
 * @Version 1.0
 **/
public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(br);
    static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));

    public static void main(String[] args) throws Exception {
        int []f=new int[32];
        f[0]=2;
        for (int i=1;i<=31;i++) f[i]=f[i-1]*2;
        int t=nextInt();
        while (t>0){
            t--;
            int a=nextInt();
            int b=nextInt();
            int sum=0;
            for (int i=0;i<32;i++){
                if (a<=f[i]){
                    sum+=i;
                    break;
                }
            }
            for (int i=1;i<32;i++){
                if (b<=f[i]){
                    sum+=i;
                    break;
                }
            }
            if (sum%2==0) pw.println(""Bob"");
            else pw.println(""Alice"");
        }
        pw.flush();
    }

    public static int nextInt() throws Exception {//int型
        st.nextToken();
        return (int) st.nval;
    }

    public static long nextLong() throws Exception {//long型
        st.nextToken();
        return (long) st.nval;
    }
}
"
61,E,Java,61802488,2023-04-07 20:51:03,小怂很怂,答案错误,"import java.io.*;

/**
 * @ClassName 小小博弈
 * @Description TODO
 * @Author 小怂很怂
 * @Date 2023/4/7 20:30
 * @Version 1.0
 **/
public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(br);
    static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));

    public static void main(String[] args) throws Exception {
        int []f=new int[32];
        f[0]=2;
        for (int i=1;i<=31;i++) f[i]=f[i-1]*2;
        int t=nextInt();
        while (t>0){
            t--;
            int a=nextInt();
            int b=nextInt();
            int sum=0;
            for (int i=0;i<32;i++){
                if (a<=f[i]){
                    sum+=i;
                    break;
                }
            }
            for (int i=0;i<32;i++){
                if (b<=f[i]){
                    sum+=i;
                    break;
                }
            }
            if (sum%2==0) pw.println(""Bob"");
            else pw.println(""Alice"");
        }
        pw.flush();
    }

    public static int nextInt() throws Exception {//int型
        st.nextToken();
        return (int) st.nval;
    }

    public static long nextLong() throws Exception {//long型
        st.nextToken();
        return (long) st.nval;
    }
}
"
62,E,Java,61802640,2023-04-07 20:52:17,嘎嘎学编程,答案错误,"import java.util.Scanner;

// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
    public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int m = in.nextInt();
		for(int n = 0;n < m; n++) {
			int x = (int)(Math.log(in.nextInt()) / Math.log(2));
			int y = (int)(Math.log(in.nextInt()) / Math.log(2));
			int num = x+y;
			if(num % 2 == 0) {
				System.out.println(""Bob"");
			}else {
				System.out.println(""Alice"");
			}
		}
    }
}"
63,E,Java,61802698,2023-04-07 20:52:46,霖酱,答案错误,"import java.util.*;
import java.math.*;
import java.io.*;

public class Main {
    
    static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter out = new PrintWriter(new BufferedWriter(
        new OutputStreamWriter(System.out)));

    public static void main(String[] args) throws Exception{
        
        int t = read()[0];
        while (t-- > 0) {
            int[] nums = read();
            int n = nums[0], m = nums[1];
            int cnt = 0;
            while (n > 0) {
                if (n % 2 == 0) {
                    n = n / 2 - 1;
                } else n /= 2;
                cnt++;
            }
            while (m > 0) {
                if (m % 2 == 0) {
                    m = m / 2 - 1;
                } else m /= 2; 
                cnt++;
            }
            if (cnt % 2 == 1) {
                out.println(""Alice"");
            } else {
                out.println(""Bob"");
            }
        }
        out.flush();
        in.close();
    } 
    
    static int[] read() throws Exception {
        String[] param = in.readLine().split("" "");
        int[] res = new int[param.length];
        for (int i = 0; i < param.length; i++) res[i] = Integer.parseInt(param[i]);
        return res;
    }
}
"
64,E,Java,61802719,2023-04-07 20:52:56,嘎嘎学编程,答案错误,"import java.util.Scanner;

// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
    public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int m = in.nextInt();
		for(int n = 0;n < m; n++) {
			int x = (int)Math.floor(Math.log(in.nextInt()) / Math.log(2));
			int y = (int)Math.floor(Math.log(in.nextInt()) / Math.log(2));
			int num = x+y;
			if(num % 2 == 0) {
				System.out.println(""Bob"");
			}else {
				System.out.println(""Alice"");
			}
		}
    }
}"
65,E,Java,61802850,2023-04-07 20:53:55,嘎嘎学编程,答案错误,"import java.util.Scanner;

// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
    public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int m = in.nextInt();
		for(int n = 0;n < m; n++) {
			int x = (int)Math.floor((Math.log(in.nextInt()) / Math.log(2)));
			int y = (int)Math.floor((Math.log(in.nextInt()) / Math.log(2)));
			int num = x+y;
			if(num % 2 == 0) {
				System.out.println(""Bob"");
			}else {
				System.out.println(""Alice"");
			}
		}
    }
}"
66,E,Java,61802869,2023-04-07 20:54:02,wxyyds,答案错误,"import java.io.*;
import java.util.*;
public class Main 
{
	
	static BufferedReader in=new BufferedReader(new InputStreamReader(System.in));
	static PrintWriter out=new PrintWriter(new OutputStreamWriter(System.out));
	public static void main(String[] args) throws IOException 
	{
		int t=Integer.parseInt(in.readLine());
		{
			while(t-->0)
			{
				String[] nm=in.readLine().split("" "");
				int n=Integer.parseInt(nm[0]),m=Integer.parseInt(nm[1]);
				if((n^m)==0)
				{
					out.println(""Bob"");
				}
				else
				{
					out.println(""Alice"");
				}
			}
		}
		out.flush();
	}
	
}"
67,E,Java,61802903,2023-04-07 20:54:15,小怂很怂,答案错误,"import java.io.*;

/**
 * @ClassName 小小博弈
 * @Description TODO
 * @Author 小怂很怂
 * @Date 2023/4/7 20:30
 * @Version 1.0
 **/
public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(br);
    static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));

    public static void main(String[] args) throws Exception {
        int []f=new int[32];
        f[0]=1;
        for (int i=1;i<=31;i++) f[i]=f[i-1]*2+1;
        int t=nextInt();
        while (t>0){
            t--;
            int a=nextInt();
            int b=nextInt();
            int sum=0;
            for (int i=0;i<32;i++){
                if (a<f[i]){
                    sum+=i-1;
                    break;
                }
            }
            for (int i=0;i<32;i++){
                if (b<f[i]){
                    sum+=i-1;
                    break;
                }
            }
            if (sum%2==0) pw.println(""Bob"");
            else pw.println(""Alice"");
        }
        pw.flush();
    }

    public static int nextInt() throws Exception {//int型
        st.nextToken();
        return (int) st.nval;
    }

    public static long nextLong() throws Exception {//long型
        st.nextToken();
        return (long) st.nval;
    }
}
"
68,E,Java,61802948,2023-04-07 20:54:39,嘎嘎学编程,答案错误,"import java.util.Scanner;

// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
    public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int m = in.nextInt();
		for(int n = 0;n < m; n++) {
			long x = (long)Math.floor((Math.log(in.nextInt()) / Math.log(2)));
			long y = (long)Math.floor((Math.log(in.nextInt()) / Math.log(2)));
			long num = x+y;
			if(num % 2 == 0) {
				System.out.println(""Bob"");
			}else {
				System.out.println(""Alice"");
			}
		}
    }
}"
69,E,Java,61803004,2023-04-07 20:55:03,嘎嘎学编程,答案错误,"import java.util.Scanner;

// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
    public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int m = in.nextInt();
		for(int n = 0;n < m; n++) {
			long x = (long)Math.floor((Math.log(in.nextLong()) / Math.log(2)));
			long y = (long)Math.floor((Math.log(in.nextLong()) / Math.log(2)));
			long num = x+y;
			if(num % 2 == 0) {
				System.out.println(""Bob"");
			}else {
				System.out.println(""Alice"");
			}
		}
    }
}"
70,E,Java,61803009,2023-04-07 20:55:09,霖酱,答案错误,"import java.util.*;
import java.math.*;
import java.io.*;

public class Main {
    
    static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter out = new PrintWriter(new BufferedWriter(
        new OutputStreamWriter(System.out)));

    public static void main(String[] args) throws Exception{
        
        int t = read()[0];
        while (t-- > 0) {
            int[] nums = read();
            int n = nums[0], m = nums[1];
            int cnt = 0;
            while (n > 2) {
                if (n % 2 == 0) {
                    n = n / 2 - 1;
                } else n = (n + 1) / 2;
                cnt++;
            }
            while (m > 2) {
                if (m % 2 == 0) {
                    m = m / 2 - 1;
                } else m = (m + 1) / 2; 
                cnt++;
            }
            if (cnt % 2 == 1) {
                out.println(""Alice"");
            } else {
                out.println(""Bob"");
            }
        }
        out.flush();
        in.close();
    } 
    
    static int[] read() throws Exception {
        String[] param = in.readLine().split("" "");
        int[] res = new int[param.length];
        for (int i = 0; i < param.length; i++) res[i] = Integer.parseInt(param[i]);
        return res;
    }
}
"
71,E,Java,61803322,2023-04-07 20:57:46,牛客815947679号,答案错误,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.nio.channels.AcceptPendingException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Queue;
import java.util.Scanner;
import java.util.Stack;

public class Main {
 public static void main(String[] args) throws IOException, ParseException {
  BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

  int t = Integer.parseInt(br.readLine());
  ;

  while ((t--) == 0) {
   long n;
   String[] temp = br.readLine().split("" "");
   n = Long.parseLong(temp[0]) * Long.parseLong(temp[1]);

   if (n < 3)
    System.out.println(""Bob"");
   else
    System.out.println(""Alice"");

   long k = 1;
   int flag = 0;
   for (int i = 0; i < 64; i++) {
    if (k > n)
     break;
    if (k == n)
     flag = 1;
    k *= 2;

   }
   if (flag == 0)
    System.out.println(""Bob"");
   System.out.println(""Alice"");

  }

 }
}"
72,E,Java,61803400,2023-04-07 20:58:16,牛客815947679号,答案错误,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.nio.channels.AcceptPendingException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Queue;
import java.util.Scanner;
import java.util.Stack;

public class Main {
 public static void main(String[] args) throws IOException, ParseException {
  BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

  int t = Integer.parseInt(br.readLine());
  ;

  while ((t--) == 0) {
   long n;
   String[] temp = br.readLine().split("" "");
   n = Long.parseLong(temp[0])+1;

   if (n < 3)
    System.out.println(""Bob"");
   else
    System.out.println(""Alice"");

   long k = 1;
   int flag = 0;
   for (int i = 0; i < 64; i++) {
    if (k > n)
     break;
    if (k == n)
     flag = 1;
    k *= 2;

   }
   if (flag == 0)
    System.out.println(""Bob"");
   System.out.println(""Alice"");

  }

 }
}"
73,E,Java,61803594,2023-04-07 20:59:25,霖酱,答案错误,"import java.util.*;
import java.math.*;
import java.io.*;

public class Main {
    
    static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter out = new PrintWriter(new BufferedWriter(
        new OutputStreamWriter(System.out)));

    public static void main(String[] args) throws Exception{
        
        int t = read()[0];
        while (t-- > 0) {
            int[] nums = read();
            int n = nums[0], m = nums[1];
            int cnt = 0;
            if (n < 6 && n > 4) cnt++;
            if (m < 6 && m > 4) cnt++;
            while (n > 6) {
                if (n % 2 == 0) {
                    n = n / 2 - 1;
                } else n = n / 2;
                cnt++;
            }
            while (m > 6) {
                if (m % 2 == 0) {
                    m = m / 2 - 1;
                } else m = m / 2; 
                cnt++;
            }
            if (cnt % 2 == 1) {
                out.println(""Alice"");
            } else {
                out.println(""Bob"");
            }
        }
        out.flush();
        in.close();
    } 
    
    static int[] read() throws Exception {
        String[] param = in.readLine().split("" "");
        int[] res = new int[param.length];
        for (int i = 0; i < param.length; i++) res[i] = Integer.parseInt(param[i]);
        return res;
    }
}
"
74,E,Java,61803611,2023-04-07 20:59:31,霖酱,答案错误,"import java.util.*;
import java.math.*;
import java.io.*;

public class Main {
    
    static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter out = new PrintWriter(new BufferedWriter(
        new OutputStreamWriter(System.out)));

    public static void main(String[] args) throws Exception{
        
        int t = read()[0];
        while (t-- > 0) {
            int[] nums = read();
            int n = nums[0], m = nums[1];
            int cnt = 0;
            if (n < 6 && n > 4) cnt++;
            if (m < 6 && m > 4) cnt++;
            while (n > 4) {
                if (n % 2 == 0) {
                    n = n / 2 - 1;
                } else n = n / 2;
                cnt++;
            }
            while (m > 4) {
                if (m % 2 == 0) {
                    m = m / 2 - 1;
                } else m = m / 2; 
                cnt++;
            }
            if (cnt % 2 == 1) {
                out.println(""Alice"");
            } else {
                out.println(""Bob"");
            }
        }
        out.flush();
        in.close();
    } 
    
    static int[] read() throws Exception {
        String[] param = in.readLine().split("" "");
        int[] res = new int[param.length];
        for (int i = 0; i < param.length; i++) res[i] = Integer.parseInt(param[i]);
        return res;
    }
}
"
75,E,Java,61803624,2023-04-07 20:59:36,霖酱,答案错误,"import java.util.*;
import java.math.*;
import java.io.*;

public class Main {
    
    static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter out = new PrintWriter(new BufferedWriter(
        new OutputStreamWriter(System.out)));

    public static void main(String[] args) throws Exception{
        
        int t = read()[0];
        while (t-- > 0) {
            int[] nums = read();
            int n = nums[0], m = nums[1];
            int cnt = 0;
            while (n > 4) {
                if (n % 2 == 0) {
                    n = n / 2 - 1;
                } else n = n / 2;
                cnt++;
            }
            while (m > 4) {
                if (m % 2 == 0) {
                    m = m / 2 - 1;
                } else m = m / 2; 
                cnt++;
            }
            if (cnt % 2 == 1) {
                out.println(""Alice"");
            } else {
                out.println(""Bob"");
            }
        }
        out.flush();
        in.close();
    } 
    
    static int[] read() throws Exception {
        String[] param = in.readLine().split("" "");
        int[] res = new int[param.length];
        for (int i = 0; i < param.length; i++) res[i] = Integer.parseInt(param[i]);
        return res;
    }
}
"
76,E,Java,61803769,2023-04-07 21:00:22,wxyyds,答案错误,"import java.io.*;
import java.util.*;
public class Main 
{
	
	static BufferedReader in=new BufferedReader(new InputStreamReader(System.in));
	static PrintWriter out=new PrintWriter(new OutputStreamWriter(System.out));
	public static void main(String[] args) throws IOException 
	{
		int t=Integer.parseInt(in.readLine());
		{
			while(t-->0)
			{
				String[] nm=in.readLine().split("" "");
				int n=Integer.parseInt(nm[0]),m=Integer.parseInt(nm[1]);
				if((n==1||m==1))
				{
					out.println(""Alice"");
				}
				else
				{
					if(n%2!=0&&m%2!=0) 
					{
						out.println(""Alice"");
					}
					else
					{
						if(n==m)
						{
							out.println(""Bob"");
						}
						else
						{
							out.println(""Alice"");
						}
					}
				}
			}
		}
		out.flush();
	}
	
}"
77,E,Java,61803828,2023-04-07 21:00:46,小怂很怂,答案错误,"import java.io.*;

/**
 * @ClassName 小小博弈
 * @Description TODO
 * @Author 小怂很怂
 * @Date 2023/4/7 20:30
 * @Version 1.0
 **/
public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(br);
    static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));

    public static void main(String[] args) throws Exception {
        int []f=new int[32];
        f[0]=1;
        for (int i=1;i<=31;i++) f[i]=f[i-1]*2+1;
        int t=nextInt();
        while (t>0){
            t--;
            int a=nextInt();
            int b=nextInt();
            int sum=0;
            for (int i=0;i<32;i++){
                if (a<f[i]){
                    sum+=i-1;
                    break;
                }
            }
            for (int i=0;i<32;i++){
                if (b<f[i]){
                    sum+=i-1;
                    break;
                }
            }
            if (sum%2==0) pw.println(""Bob"");
            else pw.println(""Alice"");
        }
        pw.flush();
    }

    public static int nextInt() throws Exception {//int型
        st.nextToken();
        return (int) st.nval;
    }

    public static long nextLong() throws Exception {//long型
        st.nextToken();
        return (long) st.nval;
    }
}
"
78,E,Java,61803900,2023-04-07 21:01:32,wxyyds,答案正确,"import java.io.*;
import java.util.*;
import java.math.*;

public class Main{
    static int maxn = 200005,n,m;
    static long INF = (long)1e18,ans = 0,mod = (int)1e9+7;
    static Scanner sc = new Scanner (System.in);
    static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st  =new StreamTokenizer(bf);
    static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));
    public static void main(String[]args) throws IOException{
        int T = 1;
        T = Integer.parseInt(S());
        pre();
        while(T-->0) solve();
        pw.flush();
    }
    static final int I() throws IOException {
        st.nextToken();
        return (int)st.nval;
    }
     
    static String S() throws IOException{
        String res = bf.readLine();
        while(res.equals("""")) res = bf.readLine();
        return res;
    }
     
    static long p[] = new long [66];
    static int len=0;
     
    static void pre() {
        len=1;
        while(true) {
            p[len] = p[len-1]+(1<<len);
            len++;
            if(p[len-1] >1e9) break;
        }
    }
     
    static void solve() throws IOException{
        n = I();m=I();
        if(n<=2 && m<=2 || n == m) {
            pw.println(""Bob"");return;
        }
        boolean f = false;
        if(n< m) {
            int t=n;n=m;m=t;
        }
        if(m<=2){
            pw.println(""Alice"");
            return;
        }
        for(int i=1;i<len;i++) {
            if(p[i] < m) continue;
            if(p[i] >= n) pw.println(""Bob"");
            else pw.println(""Alice"");
            break;
        }
    }
}"
79,E,Java,61803993,2023-04-07 21:02:29,KY.cj,答案错误,"
import java.io.*;
import java.util.*;

public class Main {
    static int n;
    static StreamTokenizer st=new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
    public static void main(String[] args) throws IOException {
        n=nextInt();
        for (int i = 0; i < n; i++) {
            int a=nextInt();
            int b=nextInt();
            if((int)Math.log(a)==(int)Math.log(b)) System.out.println(""Bob"");
            else System.out.println(""Alice"");
        }
    }

    private static int nextInt() throws IOException {
        st.nextToken();
        return (int)st.nval;
    }
}
"
80,E,Java,61804156,2023-04-07 21:04:16,小怂很怂,答案正确,"import java.io.*;

/**
 * @ClassName 小小博弈
 * @Description TODO
 * @Author 小怂很怂
 * @Date 2023/4/7 20:30
 * @Version 1.0
 **/
public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(br);
    static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));

    public static void main(String[] args) throws Exception {
        int []f=new int[32];
        f[0]=1;
        for (int i=1;i<=31;i++) f[i]=f[i-1]*2+1;
        int t=nextInt();
        while (t>0){
            t--;
            int a=nextInt();
            int b=nextInt();
            int sum=0;
            for (int i=0;i<32;i++){
                if (a<f[i]){
                    a=i;
                    break;
                }
            }
            for (int i=0;i<32;i++){
                if (b<f[i]){
                    b=i;
                    break;
                }
            }
            if (a==b) pw.println(""Bob"");
            else pw.println(""Alice"");
        }
        pw.flush();
    }

    public static int nextInt() throws Exception {//int型
        st.nextToken();
        return (int) st.nval;
    }

    public static long nextLong() throws Exception {//long型
        st.nextToken();
        return (long) st.nval;
    }
}
"
81,E,Java,61804195,2023-04-07 21:04:45,KY.cj,答案错误,"
import java.io.*;
import java.util.*;

public class Main {
    static int n;
    static StreamTokenizer st=new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
    public static void main(String[] args) throws IOException {
        n=nextInt();
        for (int i = 0; i < n; i++) {
            int a=nextInt();
            int b=nextInt();
            if((int)Math.log(a+1)==(int)Math.log(b+1)) System.out.println(""Bob"");
            else System.out.println(""Alice"");
        }
    }

    private static int nextInt() throws IOException {
        st.nextToken();
        return (int)st.nval;
    }
}
"
82,E,Java,61804706,2023-04-07 21:11:27,肿么肥四.,答案错误,"import java.io.*;

public class Main {
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));

    public static void main(String[] args) throws Exception {
        Read sc = new Read();
        long t = sc.nextInt();
        int[] a=new int[32];
        a[0]=1;
        for(int i=1;i<32;i++) a[i]=a[i-1]*2+1;
        while (t-- > 0) {
            long n = sc.nextInt();
            long m = sc.nextInt();
            for(int i=0;i<32;i++){
                if(n<a[i]) n=i;
                break;
            }
            for(int i=0;i<32;i++){
                if(m<a[i]) m=i;
                break;
            }
           if(n==m) out.println(""Bob"");
            else out.println(""Alice"");
        }

        out.flush();
    }
}

class Read {
    StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));

    public long nextInt() throws Exception {
        st.nextToken();
        return (long) st.nval;
    }
}"
83,E,Java,61804751,2023-04-07 21:12:11,迷你滨,答案正确,"import java.io.*;
import java.util.*;
import java.math.*;
//An apple a day

public class Main{
	static int maxn = 200005,n,m;
	static long INF = (long)1e18,ans = 0,mod = (int)1e9+7;
	static Scanner sc = new Scanner (System.in);
	static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st  =new StreamTokenizer(bf);
    static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));
    public static void main(String[]args) throws IOException{
    	int T = 1;
    	T = Integer.parseInt(S());
        pre();
    	while(T-->0) solve();
    	//while(st.nextToken() != st.TT_EOF) {
    		//n = (int)st.nval;solve();
    	//}
        pw.flush();
    }
    static final int I() throws IOException {
    	st.nextToken();
    	return (int)st.nval;
    }
    
    static String S() throws IOException{
    	String res = bf.readLine();
    	while(res.equals("""")) res = bf.readLine();
    	return res;
    }
    
    static long p[] = new long [66];
    static int len=0;
    
    static void pre() {
    	len=1;
    	while(true) {
    		p[len] = p[len-1]+(1<<len);
    		len++;
    		if(p[len-1] >1e9) break;
    	}
    }
    
    static void solve() throws IOException{
    	n = I();m=I();
    	if(n< m) {
    		int t=n;n=m;m=t;
    	}
        for(int i=1;i<len;i++) {
        	if(p[i] < m) continue;
        	if(p[i] >= n) pw.println(""Bob"");
        	else pw.println(""Alice"");
        	break;
        }
    }
}
"
84,E,Java,61804785,2023-04-07 21:12:41,肿么肥四.,答案错误,"import java.io.*;

public class Main {
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));

    public static void main(String[] args) throws Exception {
        Read sc = new Read();
        long t = sc.nextInt();
        int[] a=new int[32];
        a[0]=1;
        for(int i=1;i<=31;i++) a[i]=a[i-1]*2+1;
        while (t-- > 0) {
            long n = sc.nextInt();
            long m = sc.nextInt();
            for(int i=0;i<32;i++){
                if(n<a[i]){
                   n=i; 
                } 
               
            }
            for(int i=0;i<32;i++){
                if(m<a[i]) m=i;
                break;
            }
           if(n==m) out.println(""Bob"");
            else out.println(""Alice"");
        }

        out.flush();
    }
}

class Read {
    StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));

    public long nextInt() throws Exception {
        st.nextToken();
        return (long) st.nval;
    }
}"
85,E,Java,61804796,2023-04-07 21:12:49,肿么肥四.,答案正确,"import java.io.*;

public class Main {
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));

    public static void main(String[] args) throws Exception {
        Read sc = new Read();
        long t = sc.nextInt();
        int[] a=new int[32];
        a[0]=1;
        for(int i=1;i<=31;i++) a[i]=a[i-1]*2+1;
        while (t-- > 0) {
            long n = sc.nextInt();
            long m = sc.nextInt();
            for(int i=0;i<32;i++){
                if(n<a[i]){
                   n=i; 
                     break;
                } 
               
            }
            for(int i=0;i<32;i++){
                if(m<a[i]){
                     m=i;
                break;
                }
            }
           if(n==m) out.println(""Bob"");
            else out.println(""Alice"");
        }

        out.flush();
    }
}

class Read {
    StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));

    public long nextInt() throws Exception {
        st.nextToken();
        return (long) st.nval;
    }
}"
86,E,Java,61805063,2023-04-07 21:16:01,牛客765377204号,答案错误,"

import java.util.*;

public class Main {

    static Scanner in = new Scanner(System.in);
    static int[] dx = {1, -1, 0, 0};
    static int[] dy = {0, 0, -1, 1};
    static boolean[][] st;
    static int n, m;
    static char[][] grid;
    static int ans = 0;


    public static boolean dfs(int x, int y) {
        if (x == 1 && y == 1) {
            return false;
        }
        if (x > y) {
            return !dfs(x - x / 2, y);
        } else {
            return !dfs(x, y - y / 2);
        }
    }

    public static void main(String[] args) {
        int t = in.nextInt();
        while (t-- > 0) {
            int x = in.nextInt();
            int y = in.nextInt();
            if (dfs(x, y)) {
                System.out.println(""Alice"");
            } else {
                System.out.println(""Bob"");
            }
        }
    }
}
"
87,E,Java,61806241,2023-04-07 21:41:39,不上紫不该名,答案正确,"//import com.sun.source.tree.Tree;

import java.io.*;
import java.util.*;
public class Main {
    private static long mode = 1_000_000_000+7;
    private static long INF = Long.MAX_VALUE;
  //  private static ArrayList<Character> ans = new ArrayList<Character>();
    static int maxn=200000+100;
    public static FastReader in = new FastReader();
    public static Utility util = new Utility();
  //  Queue<Integer> q=new LinkedList<Integer>();
 //   Vector vt[]=new Vector[maxn];
    static long dp[]=new long[maxn];
    static Vector vt[]=new Vector[maxn];
    static int n,m,ans,sum;
    static int b[]=new int[maxn];
    static int f[]=new int[maxn];
    static long pre[]=new long[maxn];
    static String str=new String();
    static int k;
    static int a[]=new int[1100];
    static Boolean vis[][]=new Boolean[1100][1100];
    static int dx[]={0,0,1,-1};
    static int dy[]={1,-1,0,0};
    static long le[]=new long[1000009];
    static long ri[]=new long[1000009];
    static int sx=0,sy=0;
    public static void main (String [] args) {
        //try {
        //BufferedReader f = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter out = new PrintWriter(System.out);
        // HashMap<Integer,Vector> mp = new HashMap<Integer,Vector>();
        //BufferedReader f = new BufferedReader(new FileReader(""input.in""));
        //PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(""output.out"")));
        int t = 1;
        t = in.nextInt();
       // init();
        while (t > 0) {
            t--;
            n=in.nextInt();
            m=in.nextInt();
            int res1=0,res2=0;
            while(n>0)
            {
                n=(n-1)>>1;
                res1++;
            }
            while(m>0)
            {
                m=(m-1)>>1;
                res2++;
            }
            if(res1!=res2)
                System.out.println(""Alice"");
            else System.out.println(""Bob"");

        }/////////////////////////
    }

    static void init()
    {
        int tt=1;
    }

    static long abs(long x)
    {
        if(x<=0)
            return (-1)*x;
        return x;
    }
    static int abs(int x)
    {
        if(x<=0)
            return (-1)*x;
        return x;
    }




    public static int log2(int N)
    {
        int result = (int)(Math.log(N) / Math.log(2));

        return result;
    }
    public static int lowbit(int x)
    {
        return x&(-x);
    }

    static int max(int a,int b)
    {
        return Math.max(a,b);
    }
    static long max(long a,long b)
    {
        return Math.max(a,b);
    }
    static int min(int a,int b)
    {
        return Math.min(a,b);
    }
    static long min(long a,long b)
    {
        return Math.min(a,b);
    }

    public static long gcd(long a, long b) {
        if (b==0) return a;
        return gcd(b,a%b);
    }
    public static long lcm(long a,long b) {
        long gcd = gcd(a,b);
        return (a*b)/gcd;
    }
   /* public static int[] inp(BufferedReader f, int n){
        try {
            StringTokenizer st = new StringTokenizer(f.readLine());
            int[] out = new int[n];
            for(int i=0;i<n;++i)
                out[i]=Integer.parseInt(st.nextToken());
            return out;
        }catch(Exception e){
            return new int[]{0, 0};
        }
    }
    public static String inp(BufferedReader f,boolean b){
        try {
            return f.readLine();
        }catch(Exception e){
            return """";
        }
    }*/
    public static void out(PrintWriter out,String s) {
       out.print(s);
    }
    public static void nl() {
        System.out.print(""\n"");
    }
    public static void out(PrintWriter out,int[] a) {
        for(int i=0;i<a.length;++i) out.print(a[i]+"" "");

    }
    public static void out(PrintWriter out,long[] a) {
        for(int i=0;i<a.length;++i) out.print(a[i]+"" "");

    }
    public static void out(PrintWriter out,int n) {
        out.println(n);
    }
    public static void out(PrintWriter out,long n) {
        out.println(n);
    }
    public static void sort(int[] a){
        int n = a.length;
        ArrayList<Integer> b = new ArrayList<Integer>();
        for(int i:a)b.add(i);
        Collections.sort(b);
        for(int i=0;i<n;++i){
            a[i]=b.get(i);
        }
    }public static void sort(long[] a){
        int n = a.length;
        ArrayList<Long> b = new ArrayList<Long>();
        for(Long i:a)b.add(i);
        Collections.sort(b);
        for(int i=0;i<n;++i){
            a[i]=b.get(i);
        }
    }
    public static int lower_bound(int[]a,int n,int tar) {
        int k = -1;
        for(int b=n/2;b>=1;b/=2)
            while(k+b<n&&a[k+b]<tar) k+=b;
        return k+1;
    }
    public static int upper_bound(ArrayList<Integer> a,int n,int tar) {
        int k = 0;
        for(int b = n/2; b>=1; b/=2)
            while(k+b<n&&a.get(k+b)<=tar) k+=b;
        return k;
    }
    static class Pair
    {
        int a;
        int b;
        Pair(int a, int b)
        {
            this.a = a;
            this.b = b;
        }
        public void b(int nv){
            b=nv;
        }
        public void a(int nk){
            a=nk;
        }
    }
    static class FastReader{

        BufferedReader br;

        StringTokenizer st;

        public FastReader(){
            br=new BufferedReader(new InputStreamReader(System.in));
        }

        String next(){
            while(st==null || !st.hasMoreTokens()){
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt(){
            return Integer.parseInt(next());
        }

        long nextLong(){
            return Long.parseLong(next());
        }

        double nextDouble(){
            return Double.parseDouble(next());
        }

        String nextLine(){
            String str="""";
            try {
                str=br.readLine().trim();
            } catch (Exception e) {
                e.printStackTrace();
            }
            return str;
        }



    }
    static class Utility{

        int[] createIntArray(){

            String s = in.nextLine();

            return Arrays.stream( s.split("" "") )
                    .mapToInt( Integer::parseInt )
                    .toArray();


        }

        int[] createIntArray(int n){

            int[] arr = new int[n];
            for(int i=0; i<n; i++) arr[i] = in.nextInt();


            return arr;


        }

        int[] createSortedIntArray(int n){

            int [] arr = createIntArray(n);
            Arrays.sort( arr );

            return arr;
        }

        int[][] create2DArray( int n , int m ){

            int[][] arr = new int[n][m];
            for(int i=0; i<n; i++)
                arr[i] = createIntArray( m );

            return arr;



        }

        < T > String joinArray( T[] arr , String s ){

            StringBuilder sb = new StringBuilder("""");

            for(int i=0; i<arr.length; i++)
                sb.append( arr[i] + s  );

            return sb.toString();
        }

        <T> String  joinList(List<T> arr, String s ){

            StringBuilder sb = new StringBuilder("""");

            for(int i=0; i<arr.size(); i++)
                sb.append( arr.get(i) + s  );

            return sb.toString();
        }

    }
}"
88,E,Java,61808735,2023-04-07 23:52:56,牛客285677822号,答案错误,"import java.io.*;
import java.util.*;

public class Main {
    static StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    public static double nextDouble() throws IOException{ in.nextToken(); return in.nval; }
    public static float nextFloat() throws IOException{ in.nextToken(); return (float)in.nval; }
    public static int nextInt() throws IOException { in.nextToken(); return (int)in.nval; }
    public static long nextLong() throws IOException { in.nextToken(); return (long)in.nval; }
    public static String next() throws IOException{ in.nextToken(); return in.sval;}
    static BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));

    public boolean resolve() throws Exception {
        int n=nextInt(),m=nextInt();
        if (n<3&&m<3){
            return false;
        }
        if (n>=3&&m>=3){
            return n!=m;
        }
        return true;
    }

    public static void main(String[] args) throws Exception {
        int t=nextInt();
        for (int i = 0; i < t; i++) {
            boolean b = new Main().resolve();
            if (b) {
                out.println(""Alice"");
            } else {
                out.println(""Bob"");
            }
        }
        out.flush();
    }
}

"
89,E,Java,61808747,2023-04-07 23:54:37,牛客285677822号,答案错误,"import java.io.*;
import java.util.*;

public class Main {
    static StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    public static double nextDouble() throws IOException{ in.nextToken(); return in.nval; }
    public static float nextFloat() throws IOException{ in.nextToken(); return (float)in.nval; }
    public static int nextInt() throws IOException { in.nextToken(); return (int)in.nval; }
    public static long nextLong() throws IOException { in.nextToken(); return (long)in.nval; }
    public static String next() throws IOException{ in.nextToken(); return in.sval;}
    static BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));

    public boolean resolve() throws Exception {
        int n=nextInt(),m=nextInt();
        if (n<3&&m<3){
            return false;
        }
        if (n>=3&&m>=3){
            return n!=m;
        }
        return true;
    }

    public static void main(String[] args) throws Exception {
        int t=nextInt();
        for (int i = 0; i < t; i++) {
            boolean b = new Main().resolve();
            if (b) {
                out.println(""Alice"");
            } else {
                out.println(""Bob"");
            }
        }
        out.flush();
    }
}

"
90,E,Java,61808778,2023-04-07 23:57:34,牛客285677822号,答案错误,"import java.io.*;
import java.util.*;

public class Main {
    static StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    public static double nextDouble() throws IOException{ in.nextToken(); return in.nval; }
    public static float nextFloat() throws IOException{ in.nextToken(); return (float)in.nval; }
    public static int nextInt() throws IOException { in.nextToken(); return (int)in.nval; }
    public static long nextLong() throws IOException { in.nextToken(); return (long)in.nval; }
    public static String next() throws IOException{ in.nextToken(); return in.sval;}
    static BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));

    public boolean resolve() throws Exception {
        int n=nextInt(),m=nextInt();
        if (n<3&&m<3){
            return false;
        }
        if (n>=3&&m>=3){
            return Math.max(n,m)>=Math.min(n,m)*2+1;
        }
        return true;
    }

    public static void main(String[] args) throws Exception {
        int t=nextInt();
        for (int i = 0; i < t; i++) {
            boolean b = new Main().resolve();
            if (b) {
                out.println(""Alice"");
            } else {
                out.println(""Bob"");
            }
        }
        out.flush();
    }
}

"
91,E,Java,61809354,2023-04-08 08:18:14,rookie1号,答案正确,"
import java.io.*;
import java.math.*;
import java.util.*;

public class Main {
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
	static int dx[]= {-1,0,1, 0};
	static int dy[]= {0 ,1,0,-1};
    public static void main(String[] args) throws IOException {
        int T=in.nextInt();
        //int T=1;
        while(T>0){
            //String[] strs1 = re.readLine().split("" "");
            //int n=Integer.parseInt(strs1[0]);
            //String s=re.readLine();
            //char arr[]=s.toCharArray();

            //long[][] p = new long[n][2];//对 long 二维数组排序
            //Arrays.sort(p, (a, b) -> a[0] <= b[0] (?) -1 : 1);
            //Set<Integer>set=new HashSet<>();
            //Map<Long,Integer>map=new HashMap<>();
            //Map<Integer,List<Integer>>map=new HashMap<>();
            //TreeSet<Integer> set = new TreeSet<>();
            int n=in.nextInt();int m=in.nextInt();
            int res=0;
            int res1=0;
            while(n>2){
                if(n%2==0)n--;
                n/=2;
                res++;
            }
            while(m>2){
                if(m%2==0)m--;

                m/=2;
                res1++;
            }
            
            if(res==res1)out.println(""Bob"");
            else out.println(""Alice"");
            
            
           // out.println(res);

            
            
            



            
            T--;
        }
        out.flush();
        out.close();

    }
    static class Node{
        int x,y,dis;
        public Node(int x, int y,int dis) {
            this.x = x;
            this.y = y;
            this.dis=dis;
        }
    }

    static class in {
        private static final StreamTokenizer input = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));

        public static int nextInt() throws IOException {
            input.nextToken();
            return (int) input.nval;
        }

        public static long nextLong() throws IOException {
            input.nextToken();
            return (long) input.nval;
        }

        public static String next() throws IOException {
            input.nextToken();
            return input.sval;
        }

        public static double nextDouble() throws IOException {
            input.nextToken();
            return input.nval;
        }
    }
}"
92,E,Java,61809355,2023-04-08 08:18:15,rookie1号,答案正确,"
import java.io.*;
import java.math.*;
import java.util.*;

public class Main {
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
	static int dx[]= {-1,0,1, 0};
	static int dy[]= {0 ,1,0,-1};
    public static void main(String[] args) throws IOException {
        int T=in.nextInt();
        //int T=1;
        while(T>0){
            //String[] strs1 = re.readLine().split("" "");
            //int n=Integer.parseInt(strs1[0]);
            //String s=re.readLine();
            //char arr[]=s.toCharArray();

            //long[][] p = new long[n][2];//对 long 二维数组排序
            //Arrays.sort(p, (a, b) -> a[0] <= b[0] (?) -1 : 1);
            //Set<Integer>set=new HashSet<>();
            //Map<Long,Integer>map=new HashMap<>();
            //Map<Integer,List<Integer>>map=new HashMap<>();
            //TreeSet<Integer> set = new TreeSet<>();
            int n=in.nextInt();int m=in.nextInt();
            int res=0;
            int res1=0;
            while(n>2){
                if(n%2==0)n--;
                n/=2;
                res++;
            }
            while(m>2){
                if(m%2==0)m--;

                m/=2;
                res1++;
            }
            
            if(res==res1)out.println(""Bob"");
            else out.println(""Alice"");
            
            
           // out.println(res);

            
            
            



            
            T--;
        }
        out.flush();
        out.close();

    }
    static class Node{
        int x,y,dis;
        public Node(int x, int y,int dis) {
            this.x = x;
            this.y = y;
            this.dis=dis;
        }
    }

    static class in {
        private static final StreamTokenizer input = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));

        public static int nextInt() throws IOException {
            input.nextToken();
            return (int) input.nval;
        }

        public static long nextLong() throws IOException {
            input.nextToken();
            return (long) input.nval;
        }

        public static String next() throws IOException {
            input.nextToken();
            return input.sval;
        }

        public static double nextDouble() throws IOException {
            input.nextToken();
            return input.nval;
        }
    }
}"
93,E,Java,61813130,2023-04-08 15:37:16,尖齿柠檬鲨,运行超时,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int t = in.nextInt();
        for (int i = 0; i < t; i++) {
            int n = in.nextInt();
            int m = in.nextInt();
            if (isAliceWin(n, m)) {
                System.out.println(""Alice"");
            } else {
                System.out.println(""Bob"");
            }
        }
    }

    private static boolean isAliceWin(int n, int m) {
        if (n == 1) {
            return m > 2;
        }
        if (m == 1) {
            return n > 2;
        }
        // 横切
        for (int i = 1; i < n / 2; i++) {
            boolean rs = isAliceWin(i, m);
            if (!rs) return true;
        }
        // 竖切
        for (int i = 1; i < m / 2; i++) {
            boolean rs = isAliceWin(n, i);
            if (!rs) return true;
        }
        return false;
    }
}"
94,E,Java,61813248,2023-04-08 15:42:18,尖齿柠檬鲨,运行超时,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int t = in.nextInt();
        for (int i = 0; i < t; i++) {
            int n = in.nextInt();
            int m = in.nextInt();
            if (isAliceWin(n, m)) {
                System.out.println(""Alice"");
            } else {
                System.out.println(""Bob"");
            }
        }
    }

    private static boolean isAliceWin(int n, int m) {
        if (m > n) {
            int t = n;
            n = m;
            m = t;
        }
        if (n == 1 || n == 2) {
            return m > 2;
        } 
        // 横切
        for (int i = 1; i < n / 2; i++) {
            boolean rs = isAliceWin(i, m);
            if (!rs) return true;
        }
        // 竖切
        for (int i = 1; i < m / 2; i++) {
            boolean rs = isAliceWin(n, i);
            if (!rs) return true;
        }
        return false;
    }
}"
95,E,Java,61813740,2023-04-08 16:22:04,尖齿柠檬鲨,运行超时,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int t = in.nextInt();
        for (int i = 0; i < t; i++) {
            int n = in.nextInt();
            int m = in.nextInt();

            if (in(n, 1, 2) || in(n, 3, 7)) {
                if ((in(n, 1, 2) && in(m, 1, 2)) ||
                        (in(n, 3, 7) && in(m, 3, 7))) {
                    System.out.println(""Bob"");
                } else {
                    System.out.println(""Alice"");
                }
            } else {
                int s = 8;
                int e = 17;
                int base = 10;
                while (e < n) {
                    s += base;
                    e += base * 2;
                    base *= 2;
                }
                if (in(m, s, e)) {
                    System.out.println(""Bob"");
                } else {
                    System.out.println(""Alice"");
                }
            }
        }
    }

    private static boolean in(int x, int s, int e) {
        return x >= s && x <= e;
    }
}"
96,E,Java,61815619,2023-04-08 19:58:10,可爱抱抱呀😥,答案正确,"//Java快读快写模板，不定时更新优化内容
//@可爱抱抱呀
import java.util.*;
import java.io.*;
import java.math.*;
import java.text.*;
public class Main{
    public static void main(String args[]) throws IOException{
        Read sc=new Read();
        int n=sc.nextInt();
        for(int i=0;i<n;i++){
            int a=sc.nextInt();
            int b=sc.nextInt();
            sc.println(cc(a,b)(?)""Alice"":""Bob"");
        }
        //sc.print(0);
        sc.bw.flush();
        sc.bw.close();
    }
    static boolean cc(int a,int b){
        int x=0,y=0;
        for(int i=1;i<31;i++){
            int p1=x+(1<<i),p2=y+(1<<i);
            if(a>x&&a<=p1&&b>y&&b<=p2){
                return false;
            }
            x=p1;
            y=p2;
        }
        return true;
    }
}
//记住看数字范围，需要开long吗，需要用BigInteger吗，需要手动处理字符串吗，复杂度数量级控制在1e7或者以下了吗
//开数组的数据范围最高不能超过1e7，数据范围再大就要用哈希表离散化了
//基本数据类型不能自定义sort排序，二维数组就可以了，顺序排序的时候是小减大，注意返回值应该是int
class Read{
    BufferedReader bf;
    StringTokenizer st;
    BufferedWriter bw;
    public Read(){
        bf=new BufferedReader(new InputStreamReader(System.in));
        st=new StringTokenizer("""");
        bw=new BufferedWriter(new OutputStreamWriter(System.out));
        //什么时候才能持续稳定ak力扣、AcWing呢？
        //什么时候才能ak cf的div2，div1呢？才能打div2不计rating呢？
        //什么时候才能ak  abc  不计rating呢？当然arc不计分更好
        //什么时候才能ak 牛客练习赛不计rating呢(?)
    }
    public String nextLine() throws IOException{
        return bf.readLine();
    }
    public String next() throws IOException{
        while(!st.hasMoreTokens()){
            st=new StringTokenizer(bf.readLine());
        }
        return st.nextToken();
    }
    public char nextChar() throws IOException{
        //确定下一个token只有一个字符的时候再用
        return next().charAt(0);
    }
    public int nextInt() throws IOException{
        return Integer.parseInt(next());
    }
    public long nextLong() throws IOException{
        return Long.parseLong(next());
    }
    public double nextDouble() throws IOException{
        return Double.parseDouble(next());
    }
    public float nextFloat() throws IOException{
        return Float.parseFloat(next());
    }
    public byte nextByte() throws IOException{
        return Byte.parseByte(next());
    }
    public short nextShort() throws IOException{
        return Short.parseShort(next());
    }
    public BigInteger nextBigInteger() throws IOException{
        return new BigInteger(next());
    }
    public void println(int a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(int a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(String a) throws IOException{
        bw.write(a);
        bw.newLine();
        return;
    }
    public void print(String a) throws IOException{
        bw.write(a);
        return;
    }
    public void println(long a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(long a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(double a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(double a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void print(BigInteger a) throws IOException{
        bw.write(a.toString());
        return;
    }
    public void print(char a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(char a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
}"
97,E,Java,61823038,2023-04-09 13:23:00,逍~,答案错误,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int t=sc.nextInt();
        int x=0;
        for(int i=0;i<t;i++)
        {
            int n=sc.nextInt();
            int m=sc.nextInt();
            
            if((n+m)%4!=0)
                System.out.println(""Alice"");
            else
                System.out.println(""Bob"");
        }
    }
}"
98,E,Java,61823049,2023-04-09 13:23:25,逍~,运行超时,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int t=sc.nextInt();
        int x=0;
        for(int i=0;i<t;i++)
        {
            int n=sc.nextInt();
            int m=sc.nextInt();
            while (true)
            {
                if(n>2){
                    n=(n-1)/2;
                    x++;
                }
                else break;
            }while (true)
            {
                if(m>2){
                    m=(m-1)/2;
                    x++;
                }
                else break;
            }
            if(x%2==1)
                System.out.println(""Alice"");
            else
                System.out.println(""Bob"");
        }
    }
}"
99,E,Java,61835992,2023-04-10 15:00:59,逍~,运行超时,"import java.util.Scanner;
public class Main
{
    public static void main(String[] args)
    {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        for(int i=0;i<n;i++)
        {
            int x=0;
            int a=sc.nextInt();
            int b=sc.nextInt();
            while(a>2){
                a=(a-1)/2;
                x++;
            }
            while(b>2){
                b=(b-1)/2;
                x++;
            }
            if(x%2==0)
                System.out.println(""Bob"");
            else
                System.out.println(""Alice"");
        }
    }
}"
100,E,Java,61836011,2023-04-10 15:04:32,逍~,运行超时,"import java.util.Scanner;
public class Main
{
    public static void main(String[] args)
    {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int x;
        for(int i=0;i<n;i++)
        {
             x=0;
            int a=sc.nextInt();
            int b=sc.nextInt();
            while(a>2){
                a=(a-1)/2;
                x++;
            }
            while(b>2){
                b=(b-1)/2;
                x++;
            }
            if(x%2==0)
                System.out.println(""Bob"");
            else
                System.out.println(""Alice"");
        }
    }
}"
101,E,Java,61836035,2023-04-10 15:06:32,逍~,运行超时,"import java.util.Scanner;
public class Main
{
    public static void main(String[] args)
    {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int x,y;
        for(int i=0;i<n;i++)
        {
             x=0;y=0;
            int a=sc.nextInt();
            int b=sc.nextInt();
            while(a>2){
                a=(a-1)/2;
                x++;
            }
            while(b>2){
                b=(b-1)/2;
                y++;
            }
            if(x==y)
                System.out.println(""Bob"");
            else
                System.out.println(""Alice"");
        }
    }
}"
102,E,Java,61836039,2023-04-10 15:07:00,逍~,运行超时,"import java.util.Scanner;
public class Main
{
    public static void main(String[] args)
    {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int x,y;
        for(int i=0;i<n;i++)
        {
             x=0;y=0;
            int a=sc.nextInt();
            int b=sc.nextInt();
            while(a>2){
                a=(a-1)/2;
                x++;
            }
            while(b>2){
                b=(b-1)/2;
                y++;
            }
            if(x==y)
                System.out.println(""Bob"");
            else
                System.out.println(""Alice"");
        }
    }
}"
103,E,Java,61836044,2023-04-10 15:07:33,逍~,答案正确,"import java.util.Scanner;
public class Main
{
    public static void main(String[] args)
    {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int x,y;
        for(int i=0;i<n;i++)
        {
             x=0;y=0;
            int a=sc.nextInt();
            int b=sc.nextInt();
            while(a>2){
                a=(a-1)/2;
                x++;
            }
            while(b>2){
                b=(b-1)/2;
                y++;
            }
            if(x==y)
                System.out.println(""Bob"");
            else
                System.out.println(""Alice"");
        }
    }
}"
104,E,Java,61836076,2023-04-10 15:10:55,逍~,运行超时,"import java.util.Scanner;
public class Main
{
    public static void main(String[] args)
    {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int x;
        for(int i=0;i<n;i++)
        {
             x=0;
            int a=sc.nextInt();
            int b=sc.nextInt();
            while(a>2){
                a=(a-1)/2;
                x++;
            }
            while(b>2){
                b=(b-1)/2;
                x++;
            }
            if(x%2==0)
                System.out.println(""Bob"");
            else
                System.out.println(""Alice"");
        }
    }
}"
105,E,Java,61853423,2023-04-11 23:28:48,牛客285677822号,答案正确,"
import java.io.*;
import java.util.*;

public class Main {
    static StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    public static double nextDouble() throws IOException{ in.nextToken(); return in.nval; }
    public static float nextFloat() throws IOException{ in.nextToken(); return (float)in.nval; }
    public static int nextInt() throws IOException { in.nextToken(); return (int)in.nval; }
    public static long nextLong() throws IOException { in.nextToken(); return (long)in.nval; }
    public static String next() throws IOException{ in.nextToken(); return in.sval;}
    static BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));

    public boolean resolve() throws Exception {
        int n=nextInt(),m=nextInt();
        int v1 = (int) (Math.log(n + 1) / Math.log(2)) - 1;
        int v2 = (int) (Math.log(m + 1) / Math.log(2)) - 1;
        return (v1 ^ v2) != 0;
    }

    public static void main(String[] args) throws Exception {
        int t=nextInt();
        for (int i = 0; i < t; i++) {
            boolean b = new Main().resolve();
            if (b) {
                out.println(""Alice"");
            } else {
                out.println(""Bob"");
            }
        }
        out.flush();
    }
}

"
