,index,languageName,submissionId,submitTime,userName,statusMessage,code
0,B,Python3,60846795,2023-02-10 19:07:16,一半醒,答案错误,"

t = int(input())

def solve():
    n = int(input())
    a = input()
    b = input()
    for i in range(n):
        if a[i] > b[i]:
            print(i+1,i+1)
            break
        elif a[i] < b[i]:
            print(i+2,i+2)
            break
            
for _ in range(t):
    solve()"
1,B,Python3,60847026,2023-02-10 19:09:58,礼乐垃圾,答案错误,"t=int(input())
for i in range(t):
    n=int(input())
    a=input().strip()
    b=input().strip()
    for k in range(n):
        if a[k]>b[k]:
            print(k+1,k+1)
            break"
2,B,Python3,60847194,2023-02-10 19:11:49,礼乐垃圾,答案错误,"t=int(input())
for i in range(t):
    n=int(input())
    a=input().strip()
    b=input().strip()
    out=False
    for k in range(n):
        if a[k]>b[k]:
            print(k+1,k+1)
            out=True
            break
    if out==False:print(1,1)"
3,B,Python3,60847256,2023-02-10 19:12:20,一半醒,答案错误,"

t = int(input())

def solve():
    n = int(input())
    a = input()
    b = input()
    ans = -1
    eq = -1
    for i in range(n):
        if a[i] > b[i]:
            ans = i+1
            break
        elif a[i]==b[i]:
              eq = i+1
    if ans!=-1:
        print(ans,ans)
    else:
        print(eq,eq)
for _ in range(t):
    solve()"
4,B,Python3,60847603,2023-02-10 19:16:26,礼乐垃圾,答案正确,"t=int(input())
for i in range(t):
    n=int(input())
    a=input().strip()
    b=input().strip()
    out=False
    for k in range(n):
        if a[k]>b[k]:
            print(k+1,k+1)
            out=True
            break
    if out==False:
        for k in range(n):
            if a[k]==b[k]:
                print(k+1,k+1)
                out=True
                break
    if out==False:
        print(n,n)"
5,B,Python3,60847709,2023-02-10 19:17:29,一半醒,答案正确,"

t = int(input())

def solve():
    n = int(input())
    a = input()
    b = input()
    # 就看第一位
    if a > b:
        i = 0
        while a[i]==b[i]:
            i+=1
        print(i+1,i+1)
    else:
        i = 0
        while a[i]==b[i]:
            i+=1
        if i==0:
            print(2,2)
        else:
            print(i,i)
for _ in range(t):
    solve()"
6,B,Python3,60847992,2023-02-10 19:20:29,Marquis03,答案错误,"for _ in range(int(input())):
    n = int(input())
    A = input()
    B = input()
    for i in range(n):
        if A[i] == B[i]:
            continue
        elif A[i] > B[i]:
            print(i+1,i+1)
            break
        else:
            print(n,n)"
7,B,Python3,60848089,2023-02-10 19:21:35,朱伟滔,运行超时,"T = int(input());
for i in range(T):
    n = int(input());
    a = input();
    b = input();
    x = 0;
    while(x < len(a)):
        ta = int(a[x]);
        tb = int(b[x]);
        if(ta == tb):
            x += 1;
        elif(ta > tb):
            print(x + 1, x + 1);
            break;"
8,B,Python3,60848231,2023-02-10 19:23:07,Marquis03,答案错误,"for _ in range(int(input())):
    n = int(input())
    A = input()
    B = input()
    for i in range(n):
        if A[i] == B[i]:
            continue
        elif A[i] > B[i]:
            print(i+1,i+1)
            break
        else:
            print(n,n)
            break"
9,B,Python3,60848236,2023-02-10 19:23:14,Fei_xiangShi,答案错误,"t = int(input())
for _ in range(t):
    ans = 0
    length = int(input())
    a = input()
    b = input()
    for i in range(length):
        newa = a[:i]+b[i]+a[i+1:]
        newb = b[:i]+a[i]+b[i+1:]
        print(newa,newb)
        if newa < newb:
            print(i+1,i+1)
            break"
10,B,Python3,60848242,2023-02-10 19:23:17,Fei_xiangShi,答案正确,"t = int(input())
for _ in range(t):
    ans = 0
    length = int(input())
    a = input()
    b = input()
    for i in range(length):
        newa = a[:i]+b[i]+a[i+1:]
        newb = b[:i]+a[i]+b[i+1:]
#         print(newa,newb)
        if newa < newb:
            print(i+1,i+1)
            break"
11,B,Python3,60848353,2023-02-10 19:24:22,朱伟滔,答案错误,"T = int(input());
for i in range(T):
    n = int(input());
    a = input();
    b = input();
    x = 0;
    while(x < len(a)):
        ta = int(a[x]);
        tb = int(b[x]);
        if(ta == tb):
            x += 1;
        else:
            print(x + 1, x + 1);
            break;
            "
12,B,Python3,60848516,2023-02-10 19:26:09,渡歌,答案正确,"t = int(input())
for _ in range(t):
    length = int(input())
    a = input()
    b = input()
    for i in range(length):
        c = a[:i]+b[i]+a[i+1:]
        d = b[:i]+a[i]+b[i+1:]
        if c < d:
            print(i+1,i+1)
            break"
13,B,Python3,60848628,2023-02-10 19:27:11,孔老大,答案正确,"import sys
import bisect
import random
import io, os
from bisect import *
from collections import *
from contextlib import redirect_stdout
from itertools import *
from math import sqrt, gcd, inf
# ACW没有comb
# from math import sqrt, gcd, inf, comb
from array import *
from functools import lru_cache
from types import GeneratorType
from heapq import *

# from netexamx import *

RI = lambda: map(int, sys.stdin.readline().split())
RS = lambda: map(bytes.decode, sys.stdin.readline().strip().split())
RILST = lambda: list(RI())
DEBUG = lambda *x: sys.stderr.write(f'{str(x)}\n')


def solve():
    t, = RI()
    for _ in range(t):
        n, = RI()
        a = input()
        b = input()
        for i in range(n):
            if a[i] == b[i]:
                continue
            if a[i] > b[i]:
                print(i + 1, i + 1)
            else:
                if i != n - 1:
                    print(i + 2, i + 2)
                else:
                    print(1, 1)
            break


if __name__ == '__main__':
    solve()
"
14,B,Python3,60848703,2023-02-10 19:27:53,Marquis03,答案错误,"for _ in range(int(input())):
    n = int(input())
    A = input()
    B = input()
    for i in range(n):
        if A[i] == B[i]:
            continue
        elif A[i] > B[i]:
            print(i+1,i+1)
            break
        else:
            if i == n:
                print(1,1)
            else:
                print(n,n)
            break"
15,B,Python3,60848786,2023-02-10 19:28:42,Marquis03,答案错误,"for _ in range(int(input())):
    n = int(input())
    A = input()
    B = input()
    for i in range(n):
        if A[i] == B[i]:
            continue
        elif A[i] > B[i]:
            print(i+1,i+1)
            break
        else:
            if i == n:
                print(n-1,n-1)
            else:
                print(n,n)
            break"
16,B,Python3,60848830,2023-02-10 19:29:04,摆渡人和211,答案错误,"t = int(input())
while t:
    t-=1
    n = int(input())
    s1 = input()
    arr1 = [-1]*10
    for i in range(0,n):
        arr1[int(s1[i])] = i
    s2 = input()
    arr2 = [-1]*10
    for i in range(0,n):
        arr2[int(s2[i])] = i
    for i in range(0,n):
        sign = 0
        for j in range(0,10):
            if arr2[j] != -1 and j < int(s2[i]):
                print(i+1,arr2[j]+1)
                sign = 1
                break
        for j in range(0,10):
            if arr1[j] != -1 and j > int(s1[i]):
                print(arr1[j]+1,i+1)
                sign = 1
                break
        if sign == 1:
            break"
17,B,Python3,60848905,2023-02-10 19:29:55,Marquis03,答案错误,"for _ in range(int(input())):
    n = int(input())
    A = input()
    B = input()
    for i in range(n):
        if A[i] == B[i]:
            continue
        elif A[i] > B[i]:
            print(i+1,i+1)
            break
        else:
            if i == n:
                print(i-1,i-1)
            else:
                print(n,n)
            break"
18,B,Python3,60848942,2023-02-10 19:30:22,Mr.Rongrong,执行出错,"t = int(input())

for uu in range(t):
    n = int(input())
    d1 = list(map(int,input()))
    d2 = list(map(int,input()))
    # 第一位就已经小于b了 就直接over了
    if d1[0] < d2[0]: 
        print(""0 0"")
    else:
        rs = [] #　ｖａｌｕｅｓ　ｉｎｄｅｘ　
        js = [] 
        for i in range(n):
            if d1[i] != d2[i] and d1[i] > d2[i]:
                rs = [d1[i],i]    
                break 
        for j in range(n):
            if d2[j] < rs[0]:
                js = [d2[j],j]
                break 
        print(rs[1] + 1,js[1] + 1)
            "
19,B,Python3,60848958,2023-02-10 19:30:36,朱伟滔,答案正确,"T = int(input());
for i in range(T):
    n = int(input());
    a = input();
    b = input();
    x = 0;
    mi = 10;
    while(x < n):
        ta = int(a[x]);
        tb = int(b[x]);
        if(ta == tb):
            x += 1;
        elif(ta > tb):
            print(x + 1, x + 1);
            break;
        else:
            if(x == 0):
                print(x + 2, x + 2);
            else:
                print(x, x);
            break;
            "
20,B,Python3,60848975,2023-02-10 19:30:49,摆渡人和211,答案错误,"t = int(input())
while t:
    t-=1
    n = int(input())
    s1 = input()
    arr1 = [-1]*10
    for i in range(0,n):
        arr1[int(s1[i])] = i
    s2 = input()
    arr2 = [-1]*10
    for i in range(0,n):
        arr2[int(s2[i])] = i
    for i in range(0,n):
        sign = 0
        for j in range(0,10):
            if arr2[j] != -1 and j < int(s2[i]):
                if j == 0 and i == 0:
                    continue
                print(i+1,arr2[j]+1)
                sign = 1
                break
        for j in range(0,10):
            if arr1[j] != -1 and j > int(s1[i]):
                if j == 0 and i == 0:
                    continue
                print(arr1[j]+1,i+1)
                sign = 1
                break
        if sign == 1:
            break"
21,B,Python3,60849085,2023-02-10 19:31:44,Mr.Rongrong,答案错误,"t = int(input())

for uu in range(t):
    n = int(input())
    d1 = list(map(int,input()))
    d2 = list(map(int,input()))
    # 第一位就已经小于b了 就直接over了
    if d1[0] < d2[0]: 
        print(""0 0"")
    else:
        rs = [0,0] #　ｖａｌｕｅｓ　ｉｎｄｅｘ　
        js = [0,0] 
        for i in range(n):
            if d1[i] != d2[i] and d1[i] > d2[i]:
                rs = [d1[i],i]    
                break 
        for j in range(n):
            if d2[j] < rs[0]:
                js = [d2[j],j]
                break 
        print(rs[1] + 1,js[1] + 1)
            "
22,B,Python3,60849116,2023-02-10 19:32:06,Marquis03,答案正确,"for _ in range(int(input())):
    n = int(input())
    A = input()
    B = input()
    for i in range(n):
        if A[i] == B[i]:
            continue
        elif A[i] > B[i]:
            print(i+1,i+1)
            break
        else:
            if i+1 == n:
                print(i,i)
            else:
                print(n,n)
            break"
23,B,Python3,60849426,2023-02-10 19:35:06,Mr.Rongrong,答案错误,"t = int(input())

for uu in range(t):
    n = int(input())
    d1 = list(map(int,input()))
    d2 = list(map(int,input()))
    # 第一位就已经小于b了 就直接over了
    if d1[0] < d2[0]: 
        print(""0 0"")
    else:
        rs = [0,0] #　ｖａｌｕｅｓ　ｉｎｄｅｘ　
        js = [0,0] 
        f1 = False
        f2 = False
        for i in range(n):
            if d1[i] != d2[i] and d1[i] > d2[i]:
                rs = [d1[i],i]    
                f1 = True
                break 
        for j in range(n):
            if d2[j] < rs[0]:
                js = [d2[j],j]
                f2 = True
                break 
        if f1 and f2: 
            print(rs[1] + 1,js[1] + 1)
        else:
            print(""0 0"")
            "
24,B,Python3,60849704,2023-02-10 19:38:27,摆渡人和211,答案错误,"t = int(input())
while t:
    t-=1
    n = int(input())
    s1 = input()
    arr1 = [-1]*10
    for i in range(n-1,-1,-1):
        arr1[int(s1[i])] = i
    s2 = input()
    arr2 = [-1]*10
    for i in range(0,n):
        arr2[int(s2[i])] = i
    for i in range(0,n):
        sign = 0
        for j in range(0,10):
            if arr2[j] != -1 and j < int(s2[i]):
#                 if j == 0 and i == 0:
#                     continue
                print(i+1,arr2[j]+1)
                sign = 1
                break
        for j in range(0,10):
            if arr1[j] != -1 and j > int(s1[i]):
#                 if j == 0 and i == 0:
#                     continue
                print(arr1[j]+1,i+1)
                sign = 1
                break
        if sign == 1:
            break"
25,B,Python3,60849769,2023-02-10 19:39:08,lgem,运行超时,"t = int(input())
for i in range(t):
    n = int(input())
    a = str(input())
    b = str(input())
    flag = 0
    for j in range(n):
        for k in range(n):
            aa = list(a)
            bb = list(b)
            temp  = aa[j]
            aa[j] = bb[k]
            bb[k] = temp
            aa = ''.join(aa) 
            bb = ''.join(bb) 
            if int(aa) < int(bb):
                flag = 1
                print(j+1,k+1)
                break
        if flag:
            break"
26,B,Python3,60849786,2023-02-10 19:39:21,摆渡人和211,答案错误,"t = int(input())
while t:
    t-=1
    n = int(input())
    s1 = input()
    arr1 = [-1]*10
    for i in range(n-1,-1,-1):
        arr1[int(s1[i])] = i
    s2 = input()
    arr2 = [-1]*10
    for i in range(0,n):
        arr2[int(s2[i])] = i
    for i in range(0,n):
        sign = 0
        for j in range(0,10):
            if arr2[j] != -1 and j < int(s2[i]):
#                 if j == 0 and i == 0:
#                     continue
                print(i+1,arr2[j]+1)
                sign = 1
                break
        if sign == 1:
            break
        for j in range(0,10):
            if arr1[j] != -1 and j > int(s1[i]):
#                 if j == 0 and i == 0:
#                     continue
                print(arr1[j]+1,i+1)
                sign = 1
                break
        if sign == 1:
            break"
27,B,Python3,60849924,2023-02-10 19:40:45,Mr.Rongrong,答案错误,"t = int(input())

for uu in range(t):
    n = int(input())
    d1 = list(map(int,input()))
    d2 = list(map(int,input()))
    # 第一位就已经小于b了 就直接over了
    if d1[0] < d2[0]: 
        print(""0 0"")
    else:
        for i in range(n):
            if d1[i] != d2[i] and d1[i] > d2[i]:
                mind2 = min(d2)
                mind2index = d2.index(mind2)
                print(i + 1,mind2index + 1)
                break 

            "
28,B,Python3,60850031,2023-02-10 19:41:59,Mr.Rongrong,答案错误,"t = int(input())

for uu in range(t):
    n = int(input())
    d1 = list(map(int,input()))
    d2 = list(map(int,input()))
    # 第一位就已经小于b了 就直接over了
    for i in range(n):
        if d1[i] != d2[i] and d1[i] > d2[i]:
            mind2 = min(d2)
            mind2index = d2.index(mind2)
            print(i + 1,mind2index + 1)
            break 

            "
29,B,Python3,60850380,2023-02-10 19:45:58,Mr.Rongrong,答案错误,"t = int(input())

for uu in range(t):
    n = int(input())
    d1 = list(map(int,input()))
    d2 = list(map(int,input()))
    # 第一位就已经小于b了 就直接over了
    flag = False
    for i in range(n):
        if d1[i] != d2[i] and d1[i] > d2[i]:
            mind2 = min(d2)
            mind2index = d2.index(mind2)
            print(i + 1,mind2index + 1)
            flag = True
            break 
    if not flag:
        mind2 = min(d2)
        mind2index = d2.index(mind2)
        print(2,mind2index)
        "
30,B,Python3,60850473,2023-02-10 19:46:56,Mr.Rongrong,答案错误,"t = int(input())

for uu in range(t):
    n = int(input())
    d1 = list(map(int,input()))
    d2 = list(map(int,input()))
    # 第一位就已经小于b了 就直接over了
    flag = False
    for i in range(n):
        if d1[i] > d2[i]:
            mind2 = min(d2)
            mind2index = d2.index(mind2)
            print(i + 1,mind2index + 1)
            flag = True
            break 
    if not flag:
        mind2 = min(d2)
        mind2index = d2.index(mind2)
        print(2,mind2index)
        "
31,B,Python3,60850520,2023-02-10 19:47:37,Mr.Rongrong,答案错误,"t = int(input())

for uu in range(t):
    n = int(input())
    d1 = list(map(int,input()))
    d2 = list(map(int,input()))
    flag = False
    for i in range(n):
        if d1[i] > d2[i]:
            mind2 = min(d2)
            mind2index = d2.index(mind2)
            print(i + 1,mind2index + 1)
            flag = True
            break 
    if not flag:
        mind2 = min(d2)
        mind2index = d2.index(mind2)
        print(2,mind2index + 1)
        "
32,B,Python3,60850627,2023-02-10 19:48:42,小小雨晴,答案错误,"for _ in range(int(input())):
    n = int(input())
    a = list(input())
    b = list(input())
    for i in range(n):
        if a[i] == b[i]:
            continue
        else:
            ai = a[i]
            bi = b[i]
            a[i] = bi
            b[i] = ai
            if a < b:
                print(i, i)"
33,B,Python3,60850661,2023-02-10 19:49:08,摆渡人和211,答案正确,"t = int(input())
while t:
    t-=1
    n = int(input())
    s1 = input()
    arr1 = []
    for i in range(0,n):
        arr1.append(int(s1[i]))
    s2 = input()
    arr2 = []
    for i in range(0,n):
        arr2.append(int(s2[i]))
    for i in range(0,n):
        if arr1[i] > arr2[i]:
            print(i+1,i+1)
            break
        elif arr1[i] < arr2[i]:
            if i != 0:
                print(i,i)
            else:
                print(i+2,i+2)
            break
#         sign = 0
#         for j in range(0,10):
#             if arr2[j] != -1 and j < int(s2[i]):
# #                 if j == 0 and i == 0:
# #                     continue
#                 print(i+1,arr2[j]+1)
#                 sign = 1
#                 break
#         if sign == 1:
#             break
#         for j in range(0,10):
#             if arr1[j] != -1 and j > int(s1[i]):
# #                 if j == 0 and i == 0:
# #                     continue
#                 print(arr1[j]+1,i+1)
#                 sign = 1
#                 break
#         if int(s1[i]) > int(s2[i]):
#             for j in range()
#         if sign == 1:
#             break"
34,B,Python3,60850872,2023-02-10 19:51:25,Mr.Rongrong,答案错误,"t = int(input())

for uu in range(t):
    n = int(input())
    d1 = list(map(int,input()))
    d2 = list(map(int,input()))
    flag = False
    for i in range(n):
        if d1[i] > d2[i]:
            mind2 = min(d2)
            mind2index = d2.index(mind2)
            print(i + 1,mind2index + 1)
            flag = True
            break 
    if not flag:

        mind2 = min(d2)
        mind2index = d2.index(mind2)
        print(2,mind2index + 1)
        "
35,B,Python3,60850917,2023-02-10 19:51:56,小小雨晴,答案错误,"for _ in range(int(input())):
    n = int(input())
    a = list(input())
    b = list(input())
    for i in range(n):
        if a[i] == b[i]:
            continue
        else:
            ai = a[i]
            bi = b[i]
            a[i] = bi
            b[i] = ai
            if ''.join(a) < ''.join(b):
                print(i + 1, i + 1)
                break"
36,B,Python3,60851354,2023-02-10 19:57:15,小小雨晴,答案错误,"for _ in range(int(input())):
    n = int(input())
    a = list(input())
    b = list(input())
    for i in range(n):
        flag = True
        for j in range(n):
            if a[i] == b[j]:
                continue
            temp = a[i]
            a[i] = b[i]
            b[i] = temp
            if ''.join(a) < ''.join(b):
                print(i + 1, j + 1)
                flag = False
                break
        if flag == False:
            break

"
37,B,Python3,60851378,2023-02-10 19:57:32,Mr.Rongrong,答案错误,"t = int(input())

for uu in range(t):
    n = int(input())
    d1 = list(map(int,input()))
    d2 = list(map(int,input()))
    flag = True # 所有的都一样的
    for i in range(n):
        if d1[i] != d2[i]: flag = False 
    if flag:
        mind2 = min(d2)
        mind2index = d2.index(mind2)
        print(2,mind2index + 1)
    else:
        mind2 = min(d2)
        mind2index = d2.index(mind2)
        for k in range(n):
            if d1[k] > d2[k]:
                print(k + 1,mind2index + 1 )
                break 
        
        
#     for i in range(n):
#         if d1[i] > d2[i]:
#             mind2 = min(d2)
#             mind2index = d2.index(mind2)
#             print(i + 1,mind2index + 1)
#             flag = True
#             break 
#     if not flag:
#         mind2 = min(d2)
#         mind2index = d2.index(mind2)
#         print(2,mind2index + 1)
        "
38,B,Python3,60851533,2023-02-10 19:59:53,Mr.Rongrong,答案错误,"t = int(input())

for uu in range(t):
    n = int(input())
    d1 = list(map(int,input()))
    d2 = list(map(int,input()))
    flag = True # 所有的都一样的
    for i in range(n):
        if d1[i] != d2[i]: flag = False 
    if flag:
        mind2 = min(d2)
        mind2index = d2.index(mind2)
        print(2,mind2index + 1)
    else:
        for k in range(n):
            if d1[k] > d2[k]:
                for p in range(n):
                    if d2[p] < d1[k]: 
                            print(k + 1,p + 1 )
                            break 
                break 
        
        
#     for i in range(n):
#         if d1[i] > d2[i]:
#             mind2 = min(d2)
#             mind2index = d2.index(mind2)
#             print(i + 1,mind2index + 1)
#             flag = True
#             break 
#     if not flag:
#         mind2 = min(d2)
#         mind2index = d2.index(mind2)
#         print(2,mind2index + 1)
        "
39,B,Python3,60852101,2023-02-10 20:08:10,triwhiter,答案错误,"if __name__ == ""__main__"":
    t = int(input())

    while t:
        t = t - 1
        n = int(input())
        a = int(input())
        b = int(input())
        
        for i in range(1,n+1):
            f = 0
            for j in range(1,n+1):
                aa = a - (a/(10**n-i)) + (b/(10**n-j))
                bb = b - (b/(10**n-j)) + (a/(10**n-i))
                if aa < bb:
                    print(i,j)
                    f = 1
                    break
                if f == 1:
                    break"
40,B,Python3,60852127,2023-02-10 20:08:37,Mr.Rongrong,答案错误,"t = int(input())

for uu in range(t):
    n = int(input())
    d1 = list(map(int,input()))
    d2 = list(map(int,input()))
    flag = True # 所有的都一样的
    for i in range(n):
        if d1[i] != d2[i]: flag = False 
    if flag:
        mind2 = min(d2)
        mind2index = d2.index(mind2)
        print(2,mind2index + 1)
    else:
        ff = 1 # 所有a都小于b
        for i in range(n):
            if d1[i] >= d2[i]: 
                ff = 0
        if ff == 1: 
            print(""0 0"")
            continue 
        for k in range(n):
            if d1[k] > d2[k]:
                mind2 = min(d2)
                mind2index = d2.index(mind2)
                
                print(k + 1,mind2index + 1 )
    
                break 
        
        
#     for i in range(n):
#         if d1[i] > d2[i]:
#             mind2 = min(d2)
#             mind2index = d2.index(mind2)
#             print(i + 1,mind2index + 1)
#             flag = True
#             break 
#     if not flag:
#         mind2 = min(d2)
#         mind2index = d2.index(mind2)
#         print(2,mind2index + 1)
        "
41,B,Python3,60852347,2023-02-10 20:11:40,月黑风高AC夜,答案错误,"T = int(input())
def fun():
    n = int(input())
    num1 = input()
    num2 = input()
    for i in range(n):
        for j in range(n):
            if num1[i] > num2[j]:
                if num2[j] and i:
                    print(i + 1, j + 1)
                    return 
for i_ in range(T):
    fun()
                "
42,B,Python3,60852401,2023-02-10 20:12:15,月黑风高AC夜,答案错误,"T = int(input())
def fun():
    n = int(input())
    num1 = input()
    num2 = input()
    for i in range(n):
        for j in range(n):
            if num1[i] > num2[j]:
                    print(i + 1, j + 1)
                    return 
for i_ in range(T):
    fun()
                "
43,B,Python3,60852891,2023-02-10 20:19:03,小许刷题,答案错误,"T = int(input())

def slove():
    n = int(input())
    a = input()
    b = input()
    d = {}
    for i in range(n):
        d[a[i]] = i
    for i in range(n):
        x = int(a[i])
        y = int(b[i])
        if x == y:
            continue
        elif x < y:
            if i != n - 1:
                print(i+2,i+2)
                return
            else:
                print(i,i)
                return
        else:# x > y
            if i != 0 and i != n - 1:
                print(i+1,i)
                return
            else:
                print(i+1,i+1)
                return
    
for _ in range(T): slove()
                
    "
44,B,Python3,60852986,2023-02-10 20:20:29,小小雨晴,答案错误,"for _ in range(int(input())):
    n = int(input())
    a = list(input())
    b = list(input())
    for i in range(n):
        flag = True
        for j in range(n):
            if a[i] == b[j]:
                continue
            temp = a[i]
            a[i] = b[i]
            b[i] = temp
            if ''.join(a) < ''.join(b):
                print(i + 1, j + 1)
                flag = False
                break
        if flag == False:
            break

"
45,B,Python3,60853173,2023-02-10 20:22:59,小小雨晴,答案错误,"for _ in range(int(input())):
    n = int(input())
    a = list(input())
    b = list(input())
    for i in range(n):
        fl = True
        flag = True
        for j in range(n):
            if a[i] == 0 or b[i] == 0:
                fl = False
                break
            if a[i] == b[j]:
                continue
            temp = a[i]
            a[i] = b[i]
            b[i] = temp
            if ''.join(a) < ''.join(b):
                print(i + 1, j + 1)
                flag = False
                break
        if flag == False:
            break
        if fl == False:
            continue

"
46,B,Python3,60853241,2023-02-10 20:23:59,Mr.Rongrong,答案错误,"
    
t = int(input())

for uu in range(t):
    n = int(input())
    d1 = list(map(int,input()))
    d2 = list(map(int,input()))
    mind2 = min(d2)
    mind2index = d2.index(mind2)
    fab = False # a绝对大于b
    for i in range(n):
        if d1[i] > d2[i]: # 说明此时a肯定是大于b了
            fab = True
            print(i + 1, mind2index + 1)
            break
        
    if not fab: # 
        print(2, mind2index + 1)
        
    
    
    
    
    
   "
47,B,Python3,60853353,2023-02-10 20:25:41,小七爱英语,答案错误,"print(""accepted"")"
48,B,Python3,60853453,2023-02-10 20:27:03,Mr.Rongrong,答案错误,"
    
t = int(input())

for uu in range(t):
    n = int(input())
    d1 = list(map(int,input()))
    d2 = list(map(int,input()))
    mind2 = min(d2)
    mind2index = d2.index(mind2)
    fab = False # a绝对大于b
    for i in range(n):
        if d1[i] > d2[i]: # 说明此时a肯定是大于b了
            fab = True
            print(i + 1, mind2index + 1)
            break
        
    if not fab: # 
        if d1 == d2: 
            print('0 0')
        else:    
            print(1, mind2index + 1)
        
    
    
    
    
    "
49,B,Python3,60853464,2023-02-10 20:27:14,Mr.Rongrong,答案错误,"
    
t = int(input())

for uu in range(t):
    n = int(input())
    d1 = list(map(int,input()))
    d2 = list(map(int,input()))
    mind2 = min(d2)
    mind2index = d2.index(mind2)
    fab = False # a绝对大于b
    for i in range(n):
        if d1[i] > d2[i]: # 说明此时a肯定是大于b了
            fab = True
            print(i + 1, mind2index + 1)
            break
        
    if not fab: #  
        print(1, mind2index + 1)
        
    
    
    
    
    "
50,B,Python3,60853515,2023-02-10 20:28:09,小许刷题,答案错误,"T = int(input())

def slove():
    n = int(input())
    a = input()
    b = input()
    d = {}
    for i in range(n):
        d[a[i]] = i
    for i in range(n):
        x = int(a[i])
        y = int(b[i])
        if x == y:
            continue
        elif x < y:
            if i != n - 1:
                print(i+2,i+2)
                return
            else:
                print(i+1,i+1)
                return
        else:# x > y
            if i != 0 and i != n - 1:
                print(i+1,i)
                return
            else:
                print(i+1,i+1)
                return
    
for _ in range(T): slove()
                
    "
51,B,Python3,60854066,2023-02-10 20:36:30,月黑风高AC夜,答案错误,"T = int(input())
def fun():
    n = int(input())
    num1 = input()
    num2 = input()
    if int(num1) < int(num2):
        print(1, 1)
        return
    for i in range(n):
        for j in range(n):
            if num1[i] > num2[j]:   
                if not (num2[j] == '0' and i == 0):
                    print(i + 1, j + 1)
                    return 
for i_ in range(T):
    fun()
                "
52,B,Python3,60854367,2023-02-10 20:41:28,月黑风高AC夜,答案错误,"T = int(input())
def fun():
    n = int(input())
    num1 = input()
    num2 = input()
    if int(num1) < int(num2):
        print(1, 1)
        return
    for i in range(n):
        for j in range(n):
            if num1[i] > num2[j]:   
                if not (num2[j] == '0' and i == 0):
                    print(i + 1, j + 1)
                    return 
for i_ in range(T):
    fun()
                "
53,B,Python3,60855322,2023-02-10 20:57:30,susa,执行出错,"t=input()
t=int(t)
while t>0:
	n=input()
	n=int(n)
	a=input()
	b=input()
	c=0
	v=-1
	while c<=n-1:
		if a[c]<b[c]:
			break
		elif a[c]>b[c]:
			v=c+1
			break
		c=c+1
	f=0
	minn=12
	maxx=-1
	if v==-1:
		while f<=n-1:
			if b[f]<=minn:
				minn=b[f]
				i=f+1
		while f<=n-1:
			if a[f]>=maxx:
				maxx=a[f]
				j=f+1
		print(j,i)
	elif v!=-1:
		print(v,v)
	t=t-1"
54,B,Python3,60855336,2023-02-10 20:57:41,李迪锴,运行超时,"import sys
T=int(input())
for k in range(T):
    n=int(sys.stdin.readline().strip())
    a=list(sys.stdin.readline().strip())
    b=list(sys.stdin.readline().strip())
    flag=False
    for i in range(len(a)):
        if(flag):
            break
        for j in range(len(b)):
            a[i],b[j]=b[j],a[i]
            if int(''.join(a))<int(''.join(b)):
                print(i+1,j+1)
                flag=True
                break
            else:
                a[i],b[j]=b[j],a[i]
        "
55,B,Python3,60855425,2023-02-10 20:58:57,susa,执行出错,"t=input()
t=int(t)
while t>0:
	n=input()
	n=int(n)
	a=input()
	b=input()
	c=0
	v=-1
	while c<=n-1:
		if a[c]<b[c]:
			break
		elif a[c]>b[c]:
			v=c+1
			break
		c=c+1
	f=0
	minn=12
	maxx=-1
	if v==-1:
		i=0
		j=0
		while f<=n-1:
			if b[f]<=minn:
				minn=b[f]
				i=f+1
		while f<=n-1:
			if a[f]>=maxx:
				maxx=a[f]
				j=f+1
		print(j,i)
	elif v!=-1:
		print(v,v)
	t=t-1"
56,B,Python3,60856224,2023-02-10 21:14:25,Mr.Rongrong,答案错误,"
    
t = int(input())

for uu in range(t):
    n = int(input())
    d1 = list(map(int,input()))
    d2 = list(map(int,input()))
    for i in range(n):
        if d1[i] > d2[i]:
            print(i + 1,i + 1)
            break  
            
    for i in range(n):
        if d1[i] == d2[i]:
            print(i + 1, i + 1)"
57,B,Python3,60856256,2023-02-10 21:15:06,Mr.Rongrong,答案错误,"
    
t = int(input())

for uu in range(t):
    n = int(input())
    d1 = list(map(int,input()))
    d2 = list(map(int,input()))
    f = True
    for i in range(n):
        if d1[i] > d2[i]:
            print(i + 1,i + 1)
            f = False 
            break  
            
    if f:
        for i in range(n):
            if d1[i] == d2[i]:
                print(i + 1, i + 1)
                break"
58,B,Python3,60856296,2023-02-10 21:16:16,triwhiter,答案错误,"def findpos(str,start_pos,end_pos,num):
    for i in range(start_pos,end_pos):
        if int(str[i]) == num:
            return i
    return -1

if __name__ == ""__main__"":
    t = int(input())

    while t:
        t = t - 1
        n = int(input())
        a = input()
        b = input()
        aa = [0 for i in range(10)]
        bb = [0 for i in range(10)]
        for c in a:
            aa[int(c)] += 1
        for c in b:
            bb[int(c)] += 1
        
        for i in range(n):
            aa[int(a[i])] -= 1
            bb[int(b[i])] -= 1
            if a[i] > b[i]:
                print(i+1,i+1)
                break
            elif a[i] == b[i]:
                f = 0
                for ii in range(int(b[i])+1,10):
                    if aa[ii] > 0:
                        j = findpos(a,i,n,ii)
                        print(j+1,i+1)
                        f = 1
                        break
                if f == 1:
                    break
                for ii in range(0,int(a[i])-1):
                    if bb[ii] > 0:
                        j = findpos(b,i,n,ii)
                        print(i+1,j+1)
                        break
            else:
                print(i+2,i+2)
                break
                    
                "
59,B,Python3,60856328,2023-02-10 21:16:48,susa,答案正确,"t=input()
t=int(t)
while t>0:
	n=input()
	n=int(n)
	a=input()
	b=input()
	for i in range(n):
		c=a[:i]+b[i]+a[i+1:]
		d=b[:i]+a[i]+b[i+1:]
		if c<d:
			print(i+1,i+1)
			break
	t=t-1"
60,B,Python3,60856330,2023-02-10 21:16:50,Mr.Rongrong,答案错误,"    
t = int(input())

for uu in range(t):
    n = int(input())
    d1 = list(map(int,input()))
    d2 = list(map(int,input()))
    mind2 = min(d2)
    mind2index = d2.index(mind2)
    fab = False # a绝对大于b
    for i in range(n):
        if d1[i] > d2[i]: # 说明此时a肯定是大于b了
            fab = True
            print(i + 1, mind2index + 1)
            break
        
    if not fab: # 
        print(2, mind2index + 1)
        
    
    
    
    
    
   "
61,B,Python3,60856554,2023-02-10 21:22:43,Mr.Rongrong,答案错误,"    

def solve():
    n = int(input())
    d1 = list(map(int,input()))
    d2 = list(map(int,input()))

    for i in range(n):
        if d1[i] > d2[i]: # 说明此时a肯定是大于b了
            print(i + 1, i + 1)
            return 

    for i in range(n):
        if d1[i] == d2[i]:
            print(i + 1,i + 1)
            return 
    
    
    
    def main():
        t = int(input())
        for i in range(t):
            solve()
    
    
    
   "
62,B,Python3,60856572,2023-02-10 21:23:07,Mr.Rongrong,答案错误,"    

def solve():
    n = int(input())
    d1 = list(map(int,input()))
    d2 = list(map(int,input()))

    for i in range(n):
        if d1[i] > d2[i]: # 说明此时a肯定是大于b了
            print(i + 1, i + 1)
            return 

    for i in range(n):
        if d1[i] == d2[i]:
            print(i + 1,i + 1)
            return 

    
    
    def main():
        t = int(input())
        for i in range(t):
            solve()
            
    main()
    
    
    
   "
63,B,Python3,60856581,2023-02-10 21:23:28,小许刷题,答案正确,"t=input()
t=int(t)
while t>0:
	n=input()
	n=int(n)
	a=input()
	b=input()
	for i in range(n):
		c=a[:i]+b[i]+a[i+1:]
		d=b[:i]+a[i]+b[i+1:]
		if c<d:
			print(i+1,i+1)
			break
	t=t-1"
64,B,Python3,60856598,2023-02-10 21:23:57,Mr.Rongrong,答案错误,"    

def solve():
    n = int(input())
    d1 = list(map(int,input()))
    d2 = list(map(int,input()))

    for i in range(n):
        if d1[i] > d2[i]: # 说明此时a肯定是大于b了
            print(i + 1, i + 1)
            return 

    for i in range(n):
        if d1[i] == d2[i]:
            print(i + 1,i + 1)
            return 
    

def main():
    t = int(input())
    for i in range(t):
        solve()

main()
    
    
    
   "
65,B,Python3,60856611,2023-02-10 21:24:14,Mr.Rongrong,答案正确,"    

def solve():
    n = int(input())
    d1 = list(map(int,input()))
    d2 = list(map(int,input()))

    for i in range(n):
        if d1[i] > d2[i]: # 说明此时a肯定是大于b了
            print(i + 1, i + 1)
            return 

    for i in range(n):
        if d1[i] == d2[i]:
            print(i + 1,i + 1)
            return 
    print(n,n)

def main():
    t = int(input())
    for i in range(t):
        solve()

main()
    
    
    
   "
66,B,Python3,60856636,2023-02-10 21:24:52,triwhiter,答案错误,"def findpos(str,start_pos,end_pos,num):
    for i in range(start_pos,end_pos):
        if int(str[i]) == num:
            return i
    return -1

if __name__ == ""__main__"":
    t = int(input())

    while t:
        t = t - 1
        n = int(input())
        a = input()
        b = input()
        aa = [0 for i in range(10)]
        bb = [0 for i in range(10)]
        for c in a:
            aa[int(c)] += 1
        for c in b:
            bb[int(c)] += 1
        
        for i in range(n):
            aa[int(a[i])] -= 1
            bb[int(b[i])] -= 1
            if a[i] > b[i]:
                print(i+1,i+1)
                break
            elif a[i] == b[i]:
                f = 0
                for ii in range(int(b[i])+1,10):
                    if aa[ii] > 0:
                        j = findpos(a,i,n,ii)
                        print(j+1,i+1)
                        f = 1
                        break
                if f == 1:
                    break
                for ii in range(0,int(a[i])-1):
                    if bb[ii] > 0:
                        j = findpos(b,i,n,ii)
                        print(i+1,j+1)
                        break
            else:
                if i == n-1:
                    print(i,i)
                else:
                    print(i+2,i+2)
                break
                    
                "
67,B,Python3,60856649,2023-02-10 21:25:10,triwhiter,答案错误,"def findpos(str,start_pos,end_pos,num):
    for i in range(start_pos,end_pos):
        if int(str[i]) == num:
            return i
    return -1

if __name__ == ""__main__"":
    t = int(input())

    while t:
        t = t - 1
        n = int(input())
        a = input()
        b = input()
        aa = [0 for i in range(10)]
        bb = [0 for i in range(10)]
        for c in a:
            aa[int(c)] += 1
        for c in b:
            bb[int(c)] += 1
        
        for i in range(n):
            aa[int(a[i])] -= 1
            bb[int(b[i])] -= 1
            if a[i] > b[i]:
                print(i+1,i+1)
                break
            elif a[i] == b[i]:
                f = 0
                for ii in range(int(b[i])+1,10):
                    if aa[ii] > 0:
                        j = findpos(a,i,n,ii)
                        print(j+1,i+1)
                        f = 1
                        break
                if f == 1:
                    break
                for ii in range(0,int(a[i])-1):
                    if bb[ii] > 0:
                        j = findpos(b,i,n,ii)
                        print(i+1,j+1)
                        break
            else:
                if i == n-1:
                    print(i,i)
                else:
                    print(i+2,i+2)
                break
                    
                "
68,B,Python3,60856651,2023-02-10 21:25:11,Mr.Rongrong,答案正确,"    

def solve():
    n = int(input())
    d1 = list(map(int,input()))
    d2 = list(map(int,input()))

    for i in range(n):
        if d1[i] > d2[i]: # 说明此时a肯定是大于b了
            mind2 = min(d2)
            mind2i = d2.index(mind2)
            print(i + 1, mind2i + 1)
            return 

    for i in range(n):
        if d1[i] == d2[i]:
            print(i + 1,i + 1)
            return 
        
    print(n,n)

def main():
    t = int(input())
    for i in range(t):
        solve()

main()
    
    
    
   "
69,B,Python3,60856685,2023-02-10 21:26:22,triwhiter,答案错误,"def findpos(str,start_pos,end_pos,num):
    for i in range(start_pos,end_pos):
        if int(str[i]) == num:
            return i
    return -1

if __name__ == ""__main__"":
    t = int(input())

    while t:
        t = t - 1
        n = int(input())
        a = input()
        b = input()
        aa = [0 for i in range(10)]
        bb = [0 for i in range(10)]
        for c in a:
            aa[int(c)] += 1
        for c in b:
            bb[int(c)] += 1
        
        for i in range(n):
            aa[int(a[i])] -= 1
            bb[int(b[i])] -= 1
            if a[i] > b[i]:
                print(i+1,i+1)
                break
            elif a[i] == b[i]:
                f = 0
                for ii in range(int(b[i])+1,10):
                    if aa[ii] > 0:
                        j = findpos(a,i,n,ii)
                        print(j+1,i+1)
                        f = 1
                        break
                if f == 1:
                    break
                for ii in range(0,int(a[i])-1):
                    if bb[ii] > 0:
                        j = findpos(b,i,n,ii)
                        print(i+1,j+1)
                        break
            else:
                if i == n-1:
                    print(1,1)
                else:
                    print(i+2,i+2)
                break
                    
                "
70,B,Python3,60856696,2023-02-10 21:26:40,triwhiter,答案错误,"def findpos(str,start_pos,end_pos,num):
    for i in range(start_pos,end_pos):
        if int(str[i]) == num:
            return i
    return -1

if __name__ == ""__main__"":
    t = int(input())

    while t:
        t = t - 1
        n = int(input())
        a = input()
        b = input()
        aa = [0 for i in range(10)]
        bb = [0 for i in range(10)]
        for c in a:
            aa[int(c)] += 1
        for c in b:
            bb[int(c)] += 1
        
        for i in range(n):
            aa[int(a[i])] -= 1
            bb[int(b[i])] -= 1
            if a[i] > b[i]:
                print(i+1,i+1)
                break
            elif a[i] == b[i]:
                f = 0
                for ii in range(int(b[i])+1,10):
                    if aa[ii] > 0:
                        j = findpos(a,i,n,ii)
                        print(j+1,i+1)
                        f = 1
                        break
                if f == 1:
                    break
                for ii in range(0,int(a[i])-1):
                    if bb[ii] > 0:
                        j = findpos(b,i,n,ii)
                        print(i+1,j+1)
                        break
            else:
                if i == n-1:
                    print(i,i)
                else:
                    print(i+2,i+2)
                break
                    
                "
71,B,Python3,60856711,2023-02-10 21:27:03,Mr.Rongrong,答案错误,"    

def solve():
    n = int(input())
    d1 = list(map(int,input()))
    d2 = list(map(int,input()))
    mind2i = d2.index(min(d2))
    
    for i in range(n):
        if d1[i] >= d2[i]: # 说明此时a肯定是大于b了
            print(i + 1, mind2i + 1)
            return 

        
    print(n,n)

def main():
    t = int(input())
    for i in range(t):
        solve()

main()
    
    
    
   "
72,B,Python3,60856780,2023-02-10 21:28:58,triwhiter,答案错误,"def findpos(str,start_pos,end_pos,num):
    for i in range(start_pos,end_pos):
        if int(str[i]) == num:
            return i
    return -1

if __name__ == ""__main__"":
    t = int(input())

    while t:
        t = t - 1
        n = int(input())
        a = input()
        b = input()
        aa = [0 for i in range(10)]
        bb = [0 for i in range(10)]
        for c in a:
            aa[int(c)] += 1
        for c in b:
            bb[int(c)] += 1
        
        for i in range(n):
            aa[int(a[i])] -= 1
            bb[int(b[i])] -= 1
            if a[i] > b[i]:
                print(i+1,i+1)
                break
            elif a[i] == b[i]:
                f = 0
                for ii in range(int(b[i])+1,10):
                    if aa[ii] > 0:
                        j = findpos(a,i,n,ii)
                        print(j+1,i+1)
                        f = 1
                        break
                if f == 1:
                    break
                for ii in range(0,int(a[i])-1):
                    if bb[ii] > 0:
                        j = findpos(b,i,n,ii)
                        print(i+1,j+1)
                        break
            else:
                if i == n-1:
                    print(i,i)
                else:
                    print(i+2,i+2)
                break
                    
                "
73,B,Python3,60856787,2023-02-10 21:29:09,Mr.Rongrong,答案正确,"    

def solve():
    n = int(input())
    d1 = list(map(int,input()))
    d2 = list(map(int,input()))
    mind2i = d2.index(min(d2))
    
    for i in range(n):
        if d1[i] > d2[i]:
            print(i + 1, mind2i + 1)
            return 

    for i in range(n):
        if d1[i] == d2[i]:
            print(i + 1,mind2i + 1)
            return 
        
    print(n,n)

def main():
    t = int(input())
    for i in range(t):
        solve()

main()
    
    
    
   "
74,B,Python3,60856830,2023-02-10 21:29:58,triwhiter,答案错误,"def findpos(str,start_pos,end_pos,num):
    for i in range(start_pos,end_pos):
        if int(str[i]) == num:
            return i
    return -1

if __name__ == ""__main__"":
    t = int(input())

    while t:
        t = t - 1
        n = int(input())
        a = input()
        b = input()
        aa = [0 for i in range(10)]
        bb = [0 for i in range(10)]
        for c in a:
            aa[int(c)] += 1
        for c in b:
            bb[int(c)] += 1
        
        for i in range(n):
            aa[int(a[i])] -= 1
            bb[int(b[i])] -= 1
            if a[i] > b[i]:
                print(i+1,i+1)
                break
            elif a[i] == b[i]:
                f = 0
                for ii in range(int(b[i])+1,10):
                    if aa[ii] > 0:
                        j = findpos(a,i,n,ii)
                        print(j+1,i+1)
                        f = 1
                        break
                if f == 1:
                    break
                for ii in range(0,int(a[i])-1):
                    if bb[ii] > 0:
                        j = findpos(b,i,n,ii)
                        print(i+1,j+1)
                        break
                if i == n-1:
                    print(1,1)
            else:
                if i == n-1:
                    print(i,i)
                else:
                    print(i+2,i+2)
                break
                    
                "
75,B,Python3,60856841,2023-02-10 21:30:15,Mr.Rongrong,执行出错,"    

def solve():
    n = int(input())
    d1 = list(map(int,input()))
    d2 = list(map(int,input()))
    mind2i = d2.index(min(d2))
    
    for i in range(n):
        if d1[i] > d2[i]:
            print(i + 1, mind2i + 1)
            return 

    for i in range(n):
        if d1[i] == d2[i]:
            print(2, 1mind2i + 1)
            return 
        
    print(n,n)

def main():
    t = int(input())
    for i in range(t):
        solve()

main()
    
    
    
   "
76,B,Python3,60856843,2023-02-10 21:30:18,Mr.Rongrong,答案错误,"    

def solve():
    n = int(input())
    d1 = list(map(int,input()))
    d2 = list(map(int,input()))
    mind2i = d2.index(min(d2))
    
    for i in range(n):
        if d1[i] > d2[i]:
            print(i + 1, mind2i + 1)
            return 

    for i in range(n):
        if d1[i] == d2[i]:
            print(2, mind2i + 1)
            return 
        
    print(n,n)

def main():
    t = int(input())
    for i in range(t):
        solve()

main()
    
    
    
   "
77,B,Python3,60856848,2023-02-10 21:30:26,Mr.Rongrong,答案正确,"    

def solve():
    n = int(input())
    d1 = list(map(int,input()))
    d2 = list(map(int,input()))
    mind2i = d2.index(min(d2))
    
    for i in range(n):
        if d1[i] > d2[i]:
            print(i + 1, mind2i + 1)
            return 

    for i in range(n):
        if d1[i] == d2[i]:
            print(i + 1, mind2i + 1)
            return 
        
    print(n,n)

def main():
    t = int(input())
    for i in range(t):
        solve()

main()
    
    
    
   "
78,B,Python3,60857074,2023-02-10 21:37:53,triwhiter,答案错误,"def findpos(str,start_pos,end_pos,num):
    for i in range(start_pos,end_pos):
        if int(str[i]) == num:
            return i
    return -1

if __name__ == ""__main__"":
    t = int(input())

    while t:
        t = t - 1
        n = int(input())
        a = input()
        b = input()
        aa = [0 for i in range(10)]
        bb = [0 for i in range(10)]
        for c in a:
            aa[int(c)] += 1
        for c in b:
            bb[int(c)] += 1
        
        for i in range(n):
            aa[int(a[i])] -= 1
            bb[int(b[i])] -= 1
            if a[i] > b[i]:
                print(i+1,i+1)
                break
            elif a[i] == b[i]:
                f = 0
                for ii in range(int(b[i])+1,10):
                    if aa[ii] > 0:
                        j = findpos(a,i,n,ii)
                        print(j+1,i+1)
                        f = 1
                        break
                if f == 1:
                    break
                for ii in range(0,int(a[i])):
                    if bb[ii] > 0:
                        j = findpos(b,i,n,ii)
                        print(i+1,j+1)
                        break
            else:
                if i == n-1:
                    print(i,i)
                else:
                    print(i+2,i+2)
                break
                    
                "
79,B,Python3,60857097,2023-02-10 21:38:39,triwhiter,答案错误,"def findpos(str,start_pos,end_pos,num):
    for i in range(start_pos,end_pos):
        if int(str[i]) == num:
            return i
    return -1

if __name__ == ""__main__"":
    t = int(input())

    while t:
        t = t - 1
        n = int(input())
        a = input()
        b = input()
        aa = [0 for i in range(10)]
        bb = [0 for i in range(10)]
        for c in a:
            aa[int(c)] += 1
        for c in b:
            bb[int(c)] += 1
        
        for i in range(n):
            aa[int(a[i])] -= 1
            bb[int(b[i])] -= 1
            if a[i] > b[i]:
                print(i+1,i+1)
                break
            elif a[i] == b[i]:
                f = 0
                for ii in range(int(b[i])+1,10):
                    if aa[ii] > 0:
                        j = findpos(a,i,n,ii)
                        print(j+1,i+1)
                        f = 1
                        break
                if f == 1:
                    break
                for ii in range(0,int(a[i])):
                    if bb[ii] > 0:
                        j = findpos(b,i,n,ii)
                        print(i+1,j+1)
                        break
            else:
                if i == n-1:
                    print(i,i)
                else:
                    print(i+2,i+2)
                break
                    
                "
80,B,Python3,60857159,2023-02-10 21:41:18,triwhiter,答案正确,"def findpos(str,start_pos,end_pos,num):
    for i in range(start_pos,end_pos):
        if int(str[i]) == num:
            return i
    return -1

if __name__ == ""__main__"":
    t = int(input())

    while t:
        t = t - 1
        n = int(input())
        a = input()
        b = input()
        aa = [0 for i in range(10)]
        bb = [0 for i in range(10)]
        for c in a:
            aa[int(c)] += 1
        for c in b:
            bb[int(c)] += 1
        
        for i in range(n):
            aa[int(a[i])] -= 1
            bb[int(b[i])] -= 1
            if a[i] > b[i]:
                print(i+1,i+1)
                break
            elif a[i] == b[i]:
                f = 0
                for ii in range(int(b[i])+1,10):
                    if aa[ii] > 0:
                        j = findpos(a,i,n,ii)
                        print(j+1,i+1)
                        f = 1
                        break
                if f == 1:
                    break
                for ii in range(0,int(a[i])):
                    if bb[ii] > 0:
                        j = findpos(b,i,n,ii)
                        print(i+1,j+1)
                        f = 1
                        break
                if f == 1:
                    break
            else:
                if i == n-1:
                    print(i,i)
                else:
                    print(i+2,i+2)
                break
                    
                "
81,B,Python3,60857162,2023-02-10 21:41:21,Mr.Rongrong,答案错误,"    

def solve():
    n = int(input())
    d1 = list(map(int,input()))
    d2 = list(map(int,input()))
    mind2i = d2.index(min(d2))
    
    for i in range(n):
        if d1[i] > d2[i]:
            print(i + 1, mind2i + 1)
            return 

    for i in range(n):
        if d1[i] == d2[i]:
            print(i + 1, mind2i + 1)
            return 
        
#     print(n,n)

def main():
    t = int(input())
    for i in range(t):
        solve()

main()
    
    
    
   "
82,B,Python3,60857197,2023-02-10 21:42:53,Mr.Rongrong,答案错误,"    

def solve():
    n = int(input())
    d1 = list(map(int,input()))
    d2 = list(map(int,input()))
    mind2i = d2.index(min(d2))
    
    for i in range(n):
        if d1[i] > d2[i]:
            print(i + 1, mind2i + 1)
            return 

    for i in range(n):
        if d1[i] == d2[i]:
            print(i + 1, mind2i + 1)
            return 
        
    print(2, mind2i + 1)

def main():
    t = int(input())
    for i in range(t):
        solve()

main()
    
    
    
   "
83,B,Python3,60857207,2023-02-10 21:43:24,Mr.Rongrong,答案正确,"    

def solve():
    n = int(input())
    d1 = list(map(int,input()))
    d2 = list(map(int,input()))
    mind2i = d2.index(min(d2))
    
    for i in range(n):
        if d1[i] > d2[i]:
            print(i + 1, mind2i + 1)
            return 

    for i in range(n):
        if d1[i] == d2[i]:
            print(i + 1, mind2i + 1)
            return 
        
    print(n,n)

def main():
    t = int(input())
    for i in range(t):
        solve()

main()
    
    
    
   "
84,B,Python3,60857631,2023-02-10 22:02:25,李迪锴,答案错误,"import sys
T=int(input())
for k in range(T):
    n=int(sys.stdin.readline().strip())
    a=sys.stdin.readline().strip()
    b=sys.stdin.readline().strip()
    if a<b:
        if a[0]>b[0]:
            print('1 1')
            continue
        else:
            print(n,n)
            continue
    else:
        for i in range(n):
            if(a[i]!=b[i]):
                print(i+1,i+1)
                break
    
        "
85,B,Python3,60857758,2023-02-10 22:09:43,李迪锴,答案正确,"import sys
T=int(input())
for k in range(T):
    n=int(sys.stdin.readline().strip())
    a=list(sys.stdin.readline().strip())
    b=list(sys.stdin.readline().strip())
    flag=False
    for i in range(len(a)):
        if(flag):
            break
        for j in range(len(b)):
            a[i],b[j]=b[j],a[i]
            if a<b:
                print(i+1,j+1)
                flag=True
                break
            else:
                a[i],b[j]=b[j],a[i]
        "
86,B,Python3,60857785,2023-02-10 22:11:23,李迪锴,答案正确,"import sys
T=int(input())
for k in range(T):
    n=int(sys.stdin.readline().strip())
    a=sys.stdin.readline().strip()
    b=sys.stdin.readline().strip()
    if a<b:
        if a[0]>=b[0]:
            print('1 1')
            continue
        else:
            print(n,n)
            continue
    else:
        for i in range(n):
            if(a[i]!=b[i]):
                print(i+1,i+1)
                break
# 若 A<B，则 1 1  和 n n 中必有一个是答案。
# 若 A>B，则交换从高到低 A 和 B不同的那一位。
        "
87,B,Python3,60857809,2023-02-10 22:12:38,dqqqqqqqq,答案错误,"n=int(input())
for i in range(n):
    t=int(input())
    a=input()
    b=input()
    k=0
    for j in range(t):
        if a[j]>b[j]:
            print(j+1,j+1)
            k=1
            break
    if not k:
        print(2,2)
        "
88,B,Python3,60857853,2023-02-10 22:14:38,dqqqqqqqq,答案错误,"n=int(input())
for i in range(n):
    t=int(input())
    a=input()
    b=input()
    k=0
    s=0
    for j in range(t):
        if a[j]>b[j]:
            print(j+1,j+1)
            k=1
            break
        elif a[j]==b[j]:s=j+1
    if not k:
        print(s,s)
        "
89,B,Python3,60857896,2023-02-10 22:17:16,dqqqqqqqq,答案正确,"n=int(input())
for i in range(n):
    t=int(input())
    a=input()
    b=input()
    k=0
    s=0
    for j in range(t):
        if a[j]>b[j]:
            print(j+1,j+1)
            k=1
            break
        elif a[j]==b[j]:s=j+1
    if not k:
        if s:
            print(s,s)
        else:
            print(2,2)
        
        "
90,B,Python3,60858580,2023-02-10 23:11:28,Fei_xiangShi,答案错误,"t = int(input ())
for i in range(t):
    length =int(input())
    ans = 0
    a = input()
    b =input()
    for i in range(length):
        if a[i]>b[i]:
            print (i+1,i+1)
            break
    else:
        print(0,0)"
91,B,Python3,60858584,2023-02-10 23:11:47,Fei_xiangShi,答案错误,"t = int(input ())
for i in range(t):
    length =int(input())
    ans = 0
    a = input()
    b =input()
    for i in range(length):
        if a[i]>b[i]:
            print (i+1,i+1)
            break
    else:
        print(1,1)"
92,B,Python3,60858607,2023-02-10 23:13:23,Fei_xiangShi,答案错误,"t = int(input ())
for i in range(t):
    length =int(input())
    ans = 0
    a = input()
    b =input()
    for i in range(length):
        if a[i]>b[i]:
            print (i+1,i+1)
            break
    else:
        print(length, length)"
93,B,Python3,60858639,2023-02-10 23:15:18,Fei_xiangShi,答案错误,"t = int(input ())
for i in range(t):
    length =int(input())
    ans = 0
    a = input()
    b =input()
    for i in range(length):
        if a[i]>b[i]:
            print (i+1,i+1)
            break"
94,B,Python3,60858687,2023-02-10 23:21:12,Fei_xiangShi,答案错误,"t = int(input ())
for i in range(t):
    length =int(input())
    ans = 0
    a = input()
    b =input()
    if a<b:
        print(1,1)
    else:
        for i in range(length):
            if a[i]>b[i]:
                print (i+1,i+1)
                break"
95,B,Python3,60858727,2023-02-10 23:25:43,Katha,答案错误,"n=int(input())
a=[]
b=[]
for _ in range(n):
    m=int(input())
    a=list(map(int,input()))
    b=list(map(int,input()))
    for i in range(len(a)):
        if a[i]!=b[i]:
            if a[i]<b[i]:
                if i!=n:
                    print(n,n,end=' ')

                else:
                    print(1,1,end=' ')

            else:
                print(i,i,end=' ')
                break
"
96,B,Python3,60858746,2023-02-10 23:27:29,Katha,答案错误,"n=int(input())
a=[]
b=[]
for _ in range(n):
    m=int(input())
    a=list(map(int,input()))
    b=list(map(int,input()))
    for i in range(len(a)):
        if a[i]!=b[i]:
            if a[i]<b[i]:
                if i!=n:
                    print(n,n,end=' ')

                else:
                    print(1,1,end=' ')

            else:
                print(i+1,i+1,end=' ')
                break
"
97,B,Python3,60858761,2023-02-10 23:28:49,Katha,答案错误,"n=int(input())
a=[]
b=[]
for _ in range(n):
    m=int(input())
    a=list(map(int,input()))
    b=list(map(int,input()))
    for i in range(len(a)):
        if a[i]!=b[i]:
            if a[i]<b[i]:
                if i!=n-1:
                    print(n-1,n-1,end=' ')

                else:
                    print(1,1,end=' ')

            else:
                print(i+1,i+1,end=' ')
                break

"
98,B,Python3,60864934,2023-02-11 20:43:01,yingyaoyao,答案错误,"import collections
import random
import sys
import os
import math
from bisect import bisect_left, bisect_right
from collections import Counter, defaultdict, deque
from fractions import Fraction
from itertools import accumulate, combinations, permutations
from heapq import heappop, heappush
from io import BytesIO, IOBase
from copy import deepcopy
from numbers import Rational
from typing import List

BUFSIZE = 4096


def exgcd(a, b):
    if b == 0:
        return 1, 0, a
    else:
        x, y, q = exgcd(b, a % b)
        x, y = y, (x - (a // b) * y)
        return x, y, q


def ModReverse(a, p):
    x, y, q = exgcd(a, p)
    return x % p


def modpow(x, y, mod):
    res = 1
    while y:
        if y & 1: res = res * x % mod
        x = x * x % mod
        y >>= 1
    return res


def qmi(x, y):
    res = 1
    while y:
        if y & 1: res = res * x
        x = x * x
        y >>= 1
    return res


class FenwickTree:
    def __init__(self, n):
        self.n = n
        self.bit = [0] * n

    def sum(self, r):
        res = 0
        while r >= 0:
            res += self.bit[r]
            r = (r & (r + 1)) - 1
        return res

    def rsum(self, l, r):
        return self.sum(r) - self.sum(l - 1)

    def add(self, idx, delta):
        while idx < self.n:
            self.bit[idx] += delta
            idx = idx | (idx + 1)


class MaxNumArray:
    def __init__(self, n):
        self.n = n
        self.tree = [0] * (2 * n)

    def update(self, pos, val):
        pos += self.n
        self.tree[pos] = val
        while pos:
            l = r = pos
            if pos % 2 == 0:
                r = pos + 1
            else:
                l = pos - 1
            self.tree[pos // 2] = max(self.tree[l], self.tree[r])
            pos //= 2

    def maxRange(self, l, r):
        l += self.n
        r += self.n
        ans = 0
        while l <= r:
            if l & 1:
                ans = max(ans, self.tree[l])
                l += 1
            if (r & 1) == 0:
                ans = max(ans, self.tree[r])
                r -= 1
            l //= 2
            r //= 2
        return ans


def gcd(a, b):
    if a < 0: a = -a
    if b < 0: b = -b
    if a < b:
        a, b = b, a
    if a % b == 0:
        return b
    return gcd(b, a % b)


class FastIO(IOBase):
    newlines = 0

    def __init__(self, file):
        self._fd = file.fileno()
        self.buffer = BytesIO()
        self.writable = ""x"" in file.mode or ""r"" not in file.mode
        self.write = self.buffer.write if self.writable else None

    def read(self):
        while True:
            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))
            if not b:
                break
            ptr = self.buffer.tell()
            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)
        self.newlines = 0
        return self.buffer.read()

    def readline(self):
        while self.newlines == 0:
            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))
            self.newlines = b.count(b""\n"") + (not b)
            ptr = self.buffer.tell()
            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)
        self.newlines -= 1
        return self.buffer.readline()

    def flush(self):
        if self.writable:
            os.write(self._fd, self.buffer.getvalue())
            self.buffer.truncate(0), self.buffer.seek(0)


class IOWrapper(IOBase):
    def __init__(self, file):
        self.buffer = FastIO(file)
        self.flush = self.buffer.flush
        self.writable = self.buffer.writable
        self.write = lambda s: self.buffer.write(s.encode(""ascii""))
        self.read = lambda: self.buffer.read().decode(""ascii"")
        self.readline = lambda: self.buffer.readline().decode(""ascii"")


sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)
input = lambda: sys.stdin.readline().rstrip(""\r\n"")


def I():
    return input()


def ii():
    return int(input())


def li():
    return list(input().split())


def lii():
    return list(map(int, input().split()))


def solve():
    for _ in range(ii()):
        n = ii()
        a = [int(v) for v in str(ii())]
        b = [int(v) for v in str(ii())]
        for i in range(n):
            for j in range(n):
                a[i],b[j] = b[j],a[i]
                if a != b:
                    print(i + 1,j + 1)
                    break
                a[i],b[j] = b[j],a[i]
            else:
                continue
            break







if __name__ == '__main__':
    sys.setrecursionlimit(400005)
    solve()
"
99,B,Python3,60864936,2023-02-11 20:43:25,yingyaoyao,运行超时,"import collections
import random
import sys
import os
import math
from bisect import bisect_left, bisect_right
from collections import Counter, defaultdict, deque
from fractions import Fraction
from itertools import accumulate, combinations, permutations
from heapq import heappop, heappush
from io import BytesIO, IOBase
from copy import deepcopy
from numbers import Rational
from typing import List

BUFSIZE = 4096


def exgcd(a, b):
    if b == 0:
        return 1, 0, a
    else:
        x, y, q = exgcd(b, a % b)
        x, y = y, (x - (a // b) * y)
        return x, y, q


def ModReverse(a, p):
    x, y, q = exgcd(a, p)
    return x % p


def modpow(x, y, mod):
    res = 1
    while y:
        if y & 1: res = res * x % mod
        x = x * x % mod
        y >>= 1
    return res


def qmi(x, y):
    res = 1
    while y:
        if y & 1: res = res * x
        x = x * x
        y >>= 1
    return res


class FenwickTree:
    def __init__(self, n):
        self.n = n
        self.bit = [0] * n

    def sum(self, r):
        res = 0
        while r >= 0:
            res += self.bit[r]
            r = (r & (r + 1)) - 1
        return res

    def rsum(self, l, r):
        return self.sum(r) - self.sum(l - 1)

    def add(self, idx, delta):
        while idx < self.n:
            self.bit[idx] += delta
            idx = idx | (idx + 1)


class MaxNumArray:
    def __init__(self, n):
        self.n = n
        self.tree = [0] * (2 * n)

    def update(self, pos, val):
        pos += self.n
        self.tree[pos] = val
        while pos:
            l = r = pos
            if pos % 2 == 0:
                r = pos + 1
            else:
                l = pos - 1
            self.tree[pos // 2] = max(self.tree[l], self.tree[r])
            pos //= 2

    def maxRange(self, l, r):
        l += self.n
        r += self.n
        ans = 0
        while l <= r:
            if l & 1:
                ans = max(ans, self.tree[l])
                l += 1
            if (r & 1) == 0:
                ans = max(ans, self.tree[r])
                r -= 1
            l //= 2
            r //= 2
        return ans


def gcd(a, b):
    if a < 0: a = -a
    if b < 0: b = -b
    if a < b:
        a, b = b, a
    if a % b == 0:
        return b
    return gcd(b, a % b)


class FastIO(IOBase):
    newlines = 0

    def __init__(self, file):
        self._fd = file.fileno()
        self.buffer = BytesIO()
        self.writable = ""x"" in file.mode or ""r"" not in file.mode
        self.write = self.buffer.write if self.writable else None

    def read(self):
        while True:
            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))
            if not b:
                break
            ptr = self.buffer.tell()
            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)
        self.newlines = 0
        return self.buffer.read()

    def readline(self):
        while self.newlines == 0:
            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))
            self.newlines = b.count(b""\n"") + (not b)
            ptr = self.buffer.tell()
            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)
        self.newlines -= 1
        return self.buffer.readline()

    def flush(self):
        if self.writable:
            os.write(self._fd, self.buffer.getvalue())
            self.buffer.truncate(0), self.buffer.seek(0)


class IOWrapper(IOBase):
    def __init__(self, file):
        self.buffer = FastIO(file)
        self.flush = self.buffer.flush
        self.writable = self.buffer.writable
        self.write = lambda s: self.buffer.write(s.encode(""ascii""))
        self.read = lambda: self.buffer.read().decode(""ascii"")
        self.readline = lambda: self.buffer.readline().decode(""ascii"")


sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)
input = lambda: sys.stdin.readline().rstrip(""\r\n"")


def I():
    return input()


def ii():
    return int(input())


def li():
    return list(input().split())


def lii():
    return list(map(int, input().split()))


def solve():
    for _ in range(ii()):
        n = ii()
        a = [int(v) for v in str(ii())]
        b = [int(v) for v in str(ii())]
        for i in range(n):
            for j in range(n):
                a[i],b[j] = b[j],a[i]
                if a < b:
                    print(i + 1,j + 1)
                    break
                a[i],b[j] = b[j],a[i]
            else:
                continue
            break







if __name__ == '__main__':
    sys.setrecursionlimit(400005)
    solve()
"
100,B,Python3,60865022,2023-02-11 20:52:22,yingyaoyao,运行超时,"import collections
import random
import sys
import os
import math
from bisect import bisect_left, bisect_right
from collections import Counter, defaultdict, deque
from fractions import Fraction
from itertools import accumulate, combinations, permutations
from heapq import heappop, heappush
from io import BytesIO, IOBase
from copy import deepcopy
from numbers import Rational
from typing import List

BUFSIZE = 4096


def exgcd(a, b):
    if b == 0:
        return 1, 0, a
    else:
        x, y, q = exgcd(b, a % b)
        x, y = y, (x - (a // b) * y)
        return x, y, q


def ModReverse(a, p):
    x, y, q = exgcd(a, p)
    return x % p


def modpow(x, y, mod):
    res = 1
    while y:
        if y & 1: res = res * x % mod
        x = x * x % mod
        y >>= 1
    return res


def qmi(x, y):
    res = 1
    while y:
        if y & 1: res = res * x
        x = x * x
        y >>= 1
    return res


class FenwickTree:
    def __init__(self, n):
        self.n = n
        self.bit = [0] * n

    def sum(self, r):
        res = 0
        while r >= 0:
            res += self.bit[r]
            r = (r & (r + 1)) - 1
        return res

    def rsum(self, l, r):
        return self.sum(r) - self.sum(l - 1)

    def add(self, idx, delta):
        while idx < self.n:
            self.bit[idx] += delta
            idx = idx | (idx + 1)


class MaxNumArray:
    def __init__(self, n):
        self.n = n
        self.tree = [0] * (2 * n)

    def update(self, pos, val):
        pos += self.n
        self.tree[pos] = val
        while pos:
            l = r = pos
            if pos % 2 == 0:
                r = pos + 1
            else:
                l = pos - 1
            self.tree[pos // 2] = max(self.tree[l], self.tree[r])
            pos //= 2

    def maxRange(self, l, r):
        l += self.n
        r += self.n
        ans = 0
        while l <= r:
            if l & 1:
                ans = max(ans, self.tree[l])
                l += 1
            if (r & 1) == 0:
                ans = max(ans, self.tree[r])
                r -= 1
            l //= 2
            r //= 2
        return ans


def gcd(a, b):
    if a < 0: a = -a
    if b < 0: b = -b
    if a < b:
        a, b = b, a
    if a % b == 0:
        return b
    return gcd(b, a % b)


class FastIO(IOBase):
    newlines = 0

    def __init__(self, file):
        self._fd = file.fileno()
        self.buffer = BytesIO()
        self.writable = ""x"" in file.mode or ""r"" not in file.mode
        self.write = self.buffer.write if self.writable else None

    def read(self):
        while True:
            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))
            if not b:
                break
            ptr = self.buffer.tell()
            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)
        self.newlines = 0
        return self.buffer.read()

    def readline(self):
        while self.newlines == 0:
            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))
            self.newlines = b.count(b""\n"") + (not b)
            ptr = self.buffer.tell()
            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)
        self.newlines -= 1
        return self.buffer.readline()

    def flush(self):
        if self.writable:
            os.write(self._fd, self.buffer.getvalue())
            self.buffer.truncate(0), self.buffer.seek(0)


class IOWrapper(IOBase):
    def __init__(self, file):
        self.buffer = FastIO(file)
        self.flush = self.buffer.flush
        self.writable = self.buffer.writable
        self.write = lambda s: self.buffer.write(s.encode(""ascii""))
        self.read = lambda: self.buffer.read().decode(""ascii"")
        self.readline = lambda: self.buffer.readline().decode(""ascii"")


sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)
input = lambda: sys.stdin.readline().rstrip(""\r\n"")


def I():
    return input()


def ii():
    return int(input())


def li():
    return list(input().split())


def lii():
    return list(map(int, input().split()))


def solve():
    for _ in range(ii()):
        n = ii()
        a = ii()
        b = ii()
        for i in range(n):
            for j in range(n):
                p1,p2 = pow(10,i),pow(10,j)
                va = a // p1 % 10
                vb = b // p2 % 10
                pa = a // (p1 * 10) * p1 * 10 + vb * p1 + a % p1
                pb = b // (p2 * 10) * p2 * 10 + va * p2 + b % p2
                if pa < pb:
                    print(n - i,n - j)
                    break
            else:
                continue
            break









if __name__ == '__main__':
    sys.setrecursionlimit(400005)
    solve()
"
101,B,Python3,60865101,2023-02-11 21:02:16,yingyaoyao,答案错误,"import collections
import random
import sys
import os
import math
from bisect import bisect_left, bisect_right
from collections import Counter, defaultdict, deque
from fractions import Fraction
from itertools import accumulate, combinations, permutations
from heapq import heappop, heappush
from io import BytesIO, IOBase
from copy import deepcopy
from numbers import Rational
from typing import List

BUFSIZE = 4096


def exgcd(a, b):
    if b == 0:
        return 1, 0, a
    else:
        x, y, q = exgcd(b, a % b)
        x, y = y, (x - (a // b) * y)
        return x, y, q


def ModReverse(a, p):
    x, y, q = exgcd(a, p)
    return x % p


def modpow(x, y, mod):
    res = 1
    while y:
        if y & 1: res = res * x % mod
        x = x * x % mod
        y >>= 1
    return res


def qmi(x, y):
    res = 1
    while y:
        if y & 1: res = res * x
        x = x * x
        y >>= 1
    return res


class FenwickTree:
    def __init__(self, n):
        self.n = n
        self.bit = [0] * n

    def sum(self, r):
        res = 0
        while r >= 0:
            res += self.bit[r]
            r = (r & (r + 1)) - 1
        return res

    def rsum(self, l, r):
        return self.sum(r) - self.sum(l - 1)

    def add(self, idx, delta):
        while idx < self.n:
            self.bit[idx] += delta
            idx = idx | (idx + 1)


class MaxNumArray:
    def __init__(self, n):
        self.n = n
        self.tree = [0] * (2 * n)

    def update(self, pos, val):
        pos += self.n
        self.tree[pos] = val
        while pos:
            l = r = pos
            if pos % 2 == 0:
                r = pos + 1
            else:
                l = pos - 1
            self.tree[pos // 2] = max(self.tree[l], self.tree[r])
            pos //= 2

    def maxRange(self, l, r):
        l += self.n
        r += self.n
        ans = 0
        while l <= r:
            if l & 1:
                ans = max(ans, self.tree[l])
                l += 1
            if (r & 1) == 0:
                ans = max(ans, self.tree[r])
                r -= 1
            l //= 2
            r //= 2
        return ans


def gcd(a, b):
    if a < 0: a = -a
    if b < 0: b = -b
    if a < b:
        a, b = b, a
    if a % b == 0:
        return b
    return gcd(b, a % b)


class FastIO(IOBase):
    newlines = 0

    def __init__(self, file):
        self._fd = file.fileno()
        self.buffer = BytesIO()
        self.writable = ""x"" in file.mode or ""r"" not in file.mode
        self.write = self.buffer.write if self.writable else None

    def read(self):
        while True:
            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))
            if not b:
                break
            ptr = self.buffer.tell()
            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)
        self.newlines = 0
        return self.buffer.read()

    def readline(self):
        while self.newlines == 0:
            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))
            self.newlines = b.count(b""\n"") + (not b)
            ptr = self.buffer.tell()
            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)
        self.newlines -= 1
        return self.buffer.readline()

    def flush(self):
        if self.writable:
            os.write(self._fd, self.buffer.getvalue())
            self.buffer.truncate(0), self.buffer.seek(0)


class IOWrapper(IOBase):
    def __init__(self, file):
        self.buffer = FastIO(file)
        self.flush = self.buffer.flush
        self.writable = self.buffer.writable
        self.write = lambda s: self.buffer.write(s.encode(""ascii""))
        self.read = lambda: self.buffer.read().decode(""ascii"")
        self.readline = lambda: self.buffer.readline().decode(""ascii"")


sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)
input = lambda: sys.stdin.readline().rstrip(""\r\n"")


def I():
    return input()


def ii():
    return int(input())


def li():
    return list(input().split())


def lii():
    return list(map(int, input().split()))


def solve():
    for _ in range(ii()):
        n = ii()
        a = I()
        b = I()
        if int(a[0]) < int(b[0]):
            print(2,2)
        elif int(a[0]) > int(b[0]):
            print(1,1)
        else:
            i = 1
            ok = 0
            for i in range(n):
                if b[i] < b[0]:
                    print(1,i + 1)
                    ok = 1
                    break
            if not ok:
                for i in range(n):
                    if a[i] > a[0]:
                        print(i + 1,1)
                        break










if __name__ == '__main__':
    sys.setrecursionlimit(400005)
    solve()
"
102,B,Python3,60865107,2023-02-11 21:03:03,yingyaoyao,答案错误,"import collections
import random
import sys
import os
import math
from bisect import bisect_left, bisect_right
from collections import Counter, defaultdict, deque
from fractions import Fraction
from itertools import accumulate, combinations, permutations
from heapq import heappop, heappush
from io import BytesIO, IOBase
from copy import deepcopy
from numbers import Rational
from typing import List

BUFSIZE = 4096


def exgcd(a, b):
    if b == 0:
        return 1, 0, a
    else:
        x, y, q = exgcd(b, a % b)
        x, y = y, (x - (a // b) * y)
        return x, y, q


def ModReverse(a, p):
    x, y, q = exgcd(a, p)
    return x % p


def modpow(x, y, mod):
    res = 1
    while y:
        if y & 1: res = res * x % mod
        x = x * x % mod
        y >>= 1
    return res


def qmi(x, y):
    res = 1
    while y:
        if y & 1: res = res * x
        x = x * x
        y >>= 1
    return res


class FenwickTree:
    def __init__(self, n):
        self.n = n
        self.bit = [0] * n

    def sum(self, r):
        res = 0
        while r >= 0:
            res += self.bit[r]
            r = (r & (r + 1)) - 1
        return res

    def rsum(self, l, r):
        return self.sum(r) - self.sum(l - 1)

    def add(self, idx, delta):
        while idx < self.n:
            self.bit[idx] += delta
            idx = idx | (idx + 1)


class MaxNumArray:
    def __init__(self, n):
        self.n = n
        self.tree = [0] * (2 * n)

    def update(self, pos, val):
        pos += self.n
        self.tree[pos] = val
        while pos:
            l = r = pos
            if pos % 2 == 0:
                r = pos + 1
            else:
                l = pos - 1
            self.tree[pos // 2] = max(self.tree[l], self.tree[r])
            pos //= 2

    def maxRange(self, l, r):
        l += self.n
        r += self.n
        ans = 0
        while l <= r:
            if l & 1:
                ans = max(ans, self.tree[l])
                l += 1
            if (r & 1) == 0:
                ans = max(ans, self.tree[r])
                r -= 1
            l //= 2
            r //= 2
        return ans


def gcd(a, b):
    if a < 0: a = -a
    if b < 0: b = -b
    if a < b:
        a, b = b, a
    if a % b == 0:
        return b
    return gcd(b, a % b)


class FastIO(IOBase):
    newlines = 0

    def __init__(self, file):
        self._fd = file.fileno()
        self.buffer = BytesIO()
        self.writable = ""x"" in file.mode or ""r"" not in file.mode
        self.write = self.buffer.write if self.writable else None

    def read(self):
        while True:
            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))
            if not b:
                break
            ptr = self.buffer.tell()
            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)
        self.newlines = 0
        return self.buffer.read()

    def readline(self):
        while self.newlines == 0:
            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))
            self.newlines = b.count(b""\n"") + (not b)
            ptr = self.buffer.tell()
            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)
        self.newlines -= 1
        return self.buffer.readline()

    def flush(self):
        if self.writable:
            os.write(self._fd, self.buffer.getvalue())
            self.buffer.truncate(0), self.buffer.seek(0)


class IOWrapper(IOBase):
    def __init__(self, file):
        self.buffer = FastIO(file)
        self.flush = self.buffer.flush
        self.writable = self.buffer.writable
        self.write = lambda s: self.buffer.write(s.encode(""ascii""))
        self.read = lambda: self.buffer.read().decode(""ascii"")
        self.readline = lambda: self.buffer.readline().decode(""ascii"")


sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)
input = lambda: sys.stdin.readline().rstrip(""\r\n"")


def I():
    return input()


def ii():
    return int(input())


def li():
    return list(input().split())


def lii():
    return list(map(int, input().split()))


def solve():
    for _ in range(ii()):
        n = ii()
        a = I()
        b = I()
        if int(a[0]) < int(b[0]):
            print(2,2)
        elif int(a[0]) > int(b[0]):
            print(1,1)
        else:
            for i in range(n):
                if a[i] > a[0]:
                    print(i + 1,1)
                    break











if __name__ == '__main__':
    sys.setrecursionlimit(400005)
    solve()
"
103,B,Python3,60865164,2023-02-11 21:09:44,yingyaoyao,答案错误,"import collections
import random
import sys
import os
import math
from bisect import bisect_left, bisect_right
from collections import Counter, defaultdict, deque
from fractions import Fraction
from itertools import accumulate, combinations, permutations
from heapq import heappop, heappush
from io import BytesIO, IOBase
from copy import deepcopy
from numbers import Rational
from typing import List

BUFSIZE = 4096


def exgcd(a, b):
    if b == 0:
        return 1, 0, a
    else:
        x, y, q = exgcd(b, a % b)
        x, y = y, (x - (a // b) * y)
        return x, y, q


def ModReverse(a, p):
    x, y, q = exgcd(a, p)
    return x % p


def modpow(x, y, mod):
    res = 1
    while y:
        if y & 1: res = res * x % mod
        x = x * x % mod
        y >>= 1
    return res


def qmi(x, y):
    res = 1
    while y:
        if y & 1: res = res * x
        x = x * x
        y >>= 1
    return res


class FenwickTree:
    def __init__(self, n):
        self.n = n
        self.bit = [0] * n

    def sum(self, r):
        res = 0
        while r >= 0:
            res += self.bit[r]
            r = (r & (r + 1)) - 1
        return res

    def rsum(self, l, r):
        return self.sum(r) - self.sum(l - 1)

    def add(self, idx, delta):
        while idx < self.n:
            self.bit[idx] += delta
            idx = idx | (idx + 1)


class MaxNumArray:
    def __init__(self, n):
        self.n = n
        self.tree = [0] * (2 * n)

    def update(self, pos, val):
        pos += self.n
        self.tree[pos] = val
        while pos:
            l = r = pos
            if pos % 2 == 0:
                r = pos + 1
            else:
                l = pos - 1
            self.tree[pos // 2] = max(self.tree[l], self.tree[r])
            pos //= 2

    def maxRange(self, l, r):
        l += self.n
        r += self.n
        ans = 0
        while l <= r:
            if l & 1:
                ans = max(ans, self.tree[l])
                l += 1
            if (r & 1) == 0:
                ans = max(ans, self.tree[r])
                r -= 1
            l //= 2
            r //= 2
        return ans


def gcd(a, b):
    if a < 0: a = -a
    if b < 0: b = -b
    if a < b:
        a, b = b, a
    if a % b == 0:
        return b
    return gcd(b, a % b)


class FastIO(IOBase):
    newlines = 0

    def __init__(self, file):
        self._fd = file.fileno()
        self.buffer = BytesIO()
        self.writable = ""x"" in file.mode or ""r"" not in file.mode
        self.write = self.buffer.write if self.writable else None

    def read(self):
        while True:
            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))
            if not b:
                break
            ptr = self.buffer.tell()
            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)
        self.newlines = 0
        return self.buffer.read()

    def readline(self):
        while self.newlines == 0:
            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))
            self.newlines = b.count(b""\n"") + (not b)
            ptr = self.buffer.tell()
            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)
        self.newlines -= 1
        return self.buffer.readline()

    def flush(self):
        if self.writable:
            os.write(self._fd, self.buffer.getvalue())
            self.buffer.truncate(0), self.buffer.seek(0)


class IOWrapper(IOBase):
    def __init__(self, file):
        self.buffer = FastIO(file)
        self.flush = self.buffer.flush
        self.writable = self.buffer.writable
        self.write = lambda s: self.buffer.write(s.encode(""ascii""))
        self.read = lambda: self.buffer.read().decode(""ascii"")
        self.readline = lambda: self.buffer.readline().decode(""ascii"")


sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)
input = lambda: sys.stdin.readline().rstrip(""\r\n"")


def I():
    return input()


def ii():
    return int(input())


def li():
    return list(input().split())


def lii():
    return list(map(int, input().split()))


def solve():
    for _ in range(ii()):
        n = ii()
        a = I()
        b = I()
        if int(a[0]) < int(b[0]):
            print(2,2)
        elif int(a[0]) > int(b[0]):
            print(1,1)
        else:
            for i in range(n):
                if a[i] > a[0]:
                    print(i + 1,1)
                    break
                if b[i] < b[0]:
                    print(1,i + 1)
                    break













if __name__ == '__main__':
    sys.setrecursionlimit(400005)
    solve()
"
104,B,Python3,60865171,2023-02-11 21:10:35,yingyaoyao,答案错误,"import collections
import random
import sys
import os
import math
from bisect import bisect_left, bisect_right
from collections import Counter, defaultdict, deque
from fractions import Fraction
from itertools import accumulate, combinations, permutations
from heapq import heappop, heappush
from io import BytesIO, IOBase
from copy import deepcopy
from numbers import Rational
from typing import List

BUFSIZE = 4096


def exgcd(a, b):
    if b == 0:
        return 1, 0, a
    else:
        x, y, q = exgcd(b, a % b)
        x, y = y, (x - (a // b) * y)
        return x, y, q


def ModReverse(a, p):
    x, y, q = exgcd(a, p)
    return x % p


def modpow(x, y, mod):
    res = 1
    while y:
        if y & 1: res = res * x % mod
        x = x * x % mod
        y >>= 1
    return res


def qmi(x, y):
    res = 1
    while y:
        if y & 1: res = res * x
        x = x * x
        y >>= 1
    return res


class FenwickTree:
    def __init__(self, n):
        self.n = n
        self.bit = [0] * n

    def sum(self, r):
        res = 0
        while r >= 0:
            res += self.bit[r]
            r = (r & (r + 1)) - 1
        return res

    def rsum(self, l, r):
        return self.sum(r) - self.sum(l - 1)

    def add(self, idx, delta):
        while idx < self.n:
            self.bit[idx] += delta
            idx = idx | (idx + 1)


class MaxNumArray:
    def __init__(self, n):
        self.n = n
        self.tree = [0] * (2 * n)

    def update(self, pos, val):
        pos += self.n
        self.tree[pos] = val
        while pos:
            l = r = pos
            if pos % 2 == 0:
                r = pos + 1
            else:
                l = pos - 1
            self.tree[pos // 2] = max(self.tree[l], self.tree[r])
            pos //= 2

    def maxRange(self, l, r):
        l += self.n
        r += self.n
        ans = 0
        while l <= r:
            if l & 1:
                ans = max(ans, self.tree[l])
                l += 1
            if (r & 1) == 0:
                ans = max(ans, self.tree[r])
                r -= 1
            l //= 2
            r //= 2
        return ans


def gcd(a, b):
    if a < 0: a = -a
    if b < 0: b = -b
    if a < b:
        a, b = b, a
    if a % b == 0:
        return b
    return gcd(b, a % b)


class FastIO(IOBase):
    newlines = 0

    def __init__(self, file):
        self._fd = file.fileno()
        self.buffer = BytesIO()
        self.writable = ""x"" in file.mode or ""r"" not in file.mode
        self.write = self.buffer.write if self.writable else None

    def read(self):
        while True:
            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))
            if not b:
                break
            ptr = self.buffer.tell()
            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)
        self.newlines = 0
        return self.buffer.read()

    def readline(self):
        while self.newlines == 0:
            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))
            self.newlines = b.count(b""\n"") + (not b)
            ptr = self.buffer.tell()
            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)
        self.newlines -= 1
        return self.buffer.readline()

    def flush(self):
        if self.writable:
            os.write(self._fd, self.buffer.getvalue())
            self.buffer.truncate(0), self.buffer.seek(0)


class IOWrapper(IOBase):
    def __init__(self, file):
        self.buffer = FastIO(file)
        self.flush = self.buffer.flush
        self.writable = self.buffer.writable
        self.write = lambda s: self.buffer.write(s.encode(""ascii""))
        self.read = lambda: self.buffer.read().decode(""ascii"")
        self.readline = lambda: self.buffer.readline().decode(""ascii"")


sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)
input = lambda: sys.stdin.readline().rstrip(""\r\n"")


def I():
    return input()


def ii():
    return int(input())


def li():
    return list(input().split())


def lii():
    return list(map(int, input().split()))


def solve():
    for _ in range(ii()):
        n = ii()
        a = I()
        b = I()
        if int(a[0]) < int(b[0]):
            print(2,2)
        elif int(a[0]) > int(b[0]):
            print(1,1)
        else:
            for i in range(n):
                if a[i] > a[0]:
                    print(i + 1,1)
                    break
                if b[i] < b[0]:
                    print(1,i + 1)
                    break
            else:
                print(2,2)













if __name__ == '__main__':
    sys.setrecursionlimit(400005)
    solve()
"
105,B,Python3,60865178,2023-02-11 21:11:44,yingyaoyao,答案错误,"import collections
import random
import sys
import os
import math
from bisect import bisect_left, bisect_right
from collections import Counter, defaultdict, deque
from fractions import Fraction
from itertools import accumulate, combinations, permutations
from heapq import heappop, heappush
from io import BytesIO, IOBase
from copy import deepcopy
from numbers import Rational
from typing import List

BUFSIZE = 4096


def exgcd(a, b):
    if b == 0:
        return 1, 0, a
    else:
        x, y, q = exgcd(b, a % b)
        x, y = y, (x - (a // b) * y)
        return x, y, q


def ModReverse(a, p):
    x, y, q = exgcd(a, p)
    return x % p


def modpow(x, y, mod):
    res = 1
    while y:
        if y & 1: res = res * x % mod
        x = x * x % mod
        y >>= 1
    return res


def qmi(x, y):
    res = 1
    while y:
        if y & 1: res = res * x
        x = x * x
        y >>= 1
    return res


class FenwickTree:
    def __init__(self, n):
        self.n = n
        self.bit = [0] * n

    def sum(self, r):
        res = 0
        while r >= 0:
            res += self.bit[r]
            r = (r & (r + 1)) - 1
        return res

    def rsum(self, l, r):
        return self.sum(r) - self.sum(l - 1)

    def add(self, idx, delta):
        while idx < self.n:
            self.bit[idx] += delta
            idx = idx | (idx + 1)


class MaxNumArray:
    def __init__(self, n):
        self.n = n
        self.tree = [0] * (2 * n)

    def update(self, pos, val):
        pos += self.n
        self.tree[pos] = val
        while pos:
            l = r = pos
            if pos % 2 == 0:
                r = pos + 1
            else:
                l = pos - 1
            self.tree[pos // 2] = max(self.tree[l], self.tree[r])
            pos //= 2

    def maxRange(self, l, r):
        l += self.n
        r += self.n
        ans = 0
        while l <= r:
            if l & 1:
                ans = max(ans, self.tree[l])
                l += 1
            if (r & 1) == 0:
                ans = max(ans, self.tree[r])
                r -= 1
            l //= 2
            r //= 2
        return ans


def gcd(a, b):
    if a < 0: a = -a
    if b < 0: b = -b
    if a < b:
        a, b = b, a
    if a % b == 0:
        return b
    return gcd(b, a % b)


class FastIO(IOBase):
    newlines = 0

    def __init__(self, file):
        self._fd = file.fileno()
        self.buffer = BytesIO()
        self.writable = ""x"" in file.mode or ""r"" not in file.mode
        self.write = self.buffer.write if self.writable else None

    def read(self):
        while True:
            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))
            if not b:
                break
            ptr = self.buffer.tell()
            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)
        self.newlines = 0
        return self.buffer.read()

    def readline(self):
        while self.newlines == 0:
            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))
            self.newlines = b.count(b""\n"") + (not b)
            ptr = self.buffer.tell()
            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)
        self.newlines -= 1
        return self.buffer.readline()

    def flush(self):
        if self.writable:
            os.write(self._fd, self.buffer.getvalue())
            self.buffer.truncate(0), self.buffer.seek(0)


class IOWrapper(IOBase):
    def __init__(self, file):
        self.buffer = FastIO(file)
        self.flush = self.buffer.flush
        self.writable = self.buffer.writable
        self.write = lambda s: self.buffer.write(s.encode(""ascii""))
        self.read = lambda: self.buffer.read().decode(""ascii"")
        self.readline = lambda: self.buffer.readline().decode(""ascii"")


sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)
input = lambda: sys.stdin.readline().rstrip(""\r\n"")


def I():
    return input()


def ii():
    return int(input())


def li():
    return list(input().split())


def lii():
    return list(map(int, input().split()))


def solve():
    for _ in range(ii()):
        n = ii()
        a = I()
        b = I()
        if int(a[0]) < int(b[0]):
            print(2,2)
        elif int(a[0]) > int(b[0]):
            print(1,1)
        else:
            for i in range(n):
                if a[i] > a[0]:
                    print(i + 1,1)
                    break
                if b[i] < b[0]:
                    print(1,i + 1)
                    break
            else:
                for i in range(n):
                    if a[i] > b[i]:
                        print(i + 1,i + 1)













if __name__ == '__main__':
    sys.setrecursionlimit(400005)
    solve()
"
106,B,Python3,60865199,2023-02-11 21:14:22,yingyaoyao,答案错误,"import collections
import random
import sys
import os
import math
from bisect import bisect_left, bisect_right
from collections import Counter, defaultdict, deque
from fractions import Fraction
from itertools import accumulate, combinations, permutations
from heapq import heappop, heappush
from io import BytesIO, IOBase
from copy import deepcopy
from numbers import Rational
from typing import List

BUFSIZE = 4096


def exgcd(a, b):
    if b == 0:
        return 1, 0, a
    else:
        x, y, q = exgcd(b, a % b)
        x, y = y, (x - (a // b) * y)
        return x, y, q


def ModReverse(a, p):
    x, y, q = exgcd(a, p)
    return x % p


def modpow(x, y, mod):
    res = 1
    while y:
        if y & 1: res = res * x % mod
        x = x * x % mod
        y >>= 1
    return res


def qmi(x, y):
    res = 1
    while y:
        if y & 1: res = res * x
        x = x * x
        y >>= 1
    return res


class FenwickTree:
    def __init__(self, n):
        self.n = n
        self.bit = [0] * n

    def sum(self, r):
        res = 0
        while r >= 0:
            res += self.bit[r]
            r = (r & (r + 1)) - 1
        return res

    def rsum(self, l, r):
        return self.sum(r) - self.sum(l - 1)

    def add(self, idx, delta):
        while idx < self.n:
            self.bit[idx] += delta
            idx = idx | (idx + 1)


class MaxNumArray:
    def __init__(self, n):
        self.n = n
        self.tree = [0] * (2 * n)

    def update(self, pos, val):
        pos += self.n
        self.tree[pos] = val
        while pos:
            l = r = pos
            if pos % 2 == 0:
                r = pos + 1
            else:
                l = pos - 1
            self.tree[pos // 2] = max(self.tree[l], self.tree[r])
            pos //= 2

    def maxRange(self, l, r):
        l += self.n
        r += self.n
        ans = 0
        while l <= r:
            if l & 1:
                ans = max(ans, self.tree[l])
                l += 1
            if (r & 1) == 0:
                ans = max(ans, self.tree[r])
                r -= 1
            l //= 2
            r //= 2
        return ans


def gcd(a, b):
    if a < 0: a = -a
    if b < 0: b = -b
    if a < b:
        a, b = b, a
    if a % b == 0:
        return b
    return gcd(b, a % b)


class FastIO(IOBase):
    newlines = 0

    def __init__(self, file):
        self._fd = file.fileno()
        self.buffer = BytesIO()
        self.writable = ""x"" in file.mode or ""r"" not in file.mode
        self.write = self.buffer.write if self.writable else None

    def read(self):
        while True:
            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))
            if not b:
                break
            ptr = self.buffer.tell()
            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)
        self.newlines = 0
        return self.buffer.read()

    def readline(self):
        while self.newlines == 0:
            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))
            self.newlines = b.count(b""\n"") + (not b)
            ptr = self.buffer.tell()
            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)
        self.newlines -= 1
        return self.buffer.readline()

    def flush(self):
        if self.writable:
            os.write(self._fd, self.buffer.getvalue())
            self.buffer.truncate(0), self.buffer.seek(0)


class IOWrapper(IOBase):
    def __init__(self, file):
        self.buffer = FastIO(file)
        self.flush = self.buffer.flush
        self.writable = self.buffer.writable
        self.write = lambda s: self.buffer.write(s.encode(""ascii""))
        self.read = lambda: self.buffer.read().decode(""ascii"")
        self.readline = lambda: self.buffer.readline().decode(""ascii"")


sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)
input = lambda: sys.stdin.readline().rstrip(""\r\n"")


def I():
    return input()


def ii():
    return int(input())


def li():
    return list(input().split())


def lii():
    return list(map(int, input().split()))


def solve():
    for _ in range(ii()):
        n = ii()
        a = I()
        b = I()
        if int(a[0]) < int(b[0]):
            print(2,2)
        elif int(a[0]) > int(b[0]):
            print(1,1)
        else:
            for i in range(n):
                if a[i] > a[0]:
                    print(i + 1,1)
                    break
                if b[i] < b[0]:
                    print(1,i + 1)
                    break
            else:
                for i in range(1,n):
                    if a[i] == b[i]:
                        print(i,i + 1)
                        break
                













if __name__ == '__main__':
    sys.setrecursionlimit(400005)
    solve()
"
107,B,Python3,60865211,2023-02-11 21:15:38,yingyaoyao,答案错误,"import collections
import random
import sys
import os
import math
from bisect import bisect_left, bisect_right
from collections import Counter, defaultdict, deque
from fractions import Fraction
from itertools import accumulate, combinations, permutations
from heapq import heappop, heappush
from io import BytesIO, IOBase
from copy import deepcopy
from numbers import Rational
from typing import List

BUFSIZE = 4096


def exgcd(a, b):
    if b == 0:
        return 1, 0, a
    else:
        x, y, q = exgcd(b, a % b)
        x, y = y, (x - (a // b) * y)
        return x, y, q


def ModReverse(a, p):
    x, y, q = exgcd(a, p)
    return x % p


def modpow(x, y, mod):
    res = 1
    while y:
        if y & 1: res = res * x % mod
        x = x * x % mod
        y >>= 1
    return res


def qmi(x, y):
    res = 1
    while y:
        if y & 1: res = res * x
        x = x * x
        y >>= 1
    return res


class FenwickTree:
    def __init__(self, n):
        self.n = n
        self.bit = [0] * n

    def sum(self, r):
        res = 0
        while r >= 0:
            res += self.bit[r]
            r = (r & (r + 1)) - 1
        return res

    def rsum(self, l, r):
        return self.sum(r) - self.sum(l - 1)

    def add(self, idx, delta):
        while idx < self.n:
            self.bit[idx] += delta
            idx = idx | (idx + 1)


class MaxNumArray:
    def __init__(self, n):
        self.n = n
        self.tree = [0] * (2 * n)

    def update(self, pos, val):
        pos += self.n
        self.tree[pos] = val
        while pos:
            l = r = pos
            if pos % 2 == 0:
                r = pos + 1
            else:
                l = pos - 1
            self.tree[pos // 2] = max(self.tree[l], self.tree[r])
            pos //= 2

    def maxRange(self, l, r):
        l += self.n
        r += self.n
        ans = 0
        while l <= r:
            if l & 1:
                ans = max(ans, self.tree[l])
                l += 1
            if (r & 1) == 0:
                ans = max(ans, self.tree[r])
                r -= 1
            l //= 2
            r //= 2
        return ans


def gcd(a, b):
    if a < 0: a = -a
    if b < 0: b = -b
    if a < b:
        a, b = b, a
    if a % b == 0:
        return b
    return gcd(b, a % b)


class FastIO(IOBase):
    newlines = 0

    def __init__(self, file):
        self._fd = file.fileno()
        self.buffer = BytesIO()
        self.writable = ""x"" in file.mode or ""r"" not in file.mode
        self.write = self.buffer.write if self.writable else None

    def read(self):
        while True:
            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))
            if not b:
                break
            ptr = self.buffer.tell()
            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)
        self.newlines = 0
        return self.buffer.read()

    def readline(self):
        while self.newlines == 0:
            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))
            self.newlines = b.count(b""\n"") + (not b)
            ptr = self.buffer.tell()
            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)
        self.newlines -= 1
        return self.buffer.readline()

    def flush(self):
        if self.writable:
            os.write(self._fd, self.buffer.getvalue())
            self.buffer.truncate(0), self.buffer.seek(0)


class IOWrapper(IOBase):
    def __init__(self, file):
        self.buffer = FastIO(file)
        self.flush = self.buffer.flush
        self.writable = self.buffer.writable
        self.write = lambda s: self.buffer.write(s.encode(""ascii""))
        self.read = lambda: self.buffer.read().decode(""ascii"")
        self.readline = lambda: self.buffer.readline().decode(""ascii"")


sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)
input = lambda: sys.stdin.readline().rstrip(""\r\n"")


def I():
    return input()


def ii():
    return int(input())


def li():
    return list(input().split())


def lii():
    return list(map(int, input().split()))


def solve():
    for _ in range(ii()):
        n = ii()
        a = I()
        b = I()
        if int(a[0]) < int(b[0]) or a < b:
            print(2,2)
        elif int(a[0]) > int(b[0]):
            print(1,1)
        else:
            for i in range(n):
                if a[i] > a[0]:
                    print(i + 1,1)
                    break
                if b[i] < b[0]:
                    print(1,i + 1)
                    break
                
                













if __name__ == '__main__':
    sys.setrecursionlimit(400005)
    solve()
"
108,B,Python3,60865220,2023-02-11 21:16:27,yingyaoyao,答案正确,"import collections
import random
import sys
import os
import math
from bisect import bisect_left, bisect_right
from collections import Counter, defaultdict, deque
from fractions import Fraction
from itertools import accumulate, combinations, permutations
from heapq import heappop, heappush
from io import BytesIO, IOBase
from copy import deepcopy
from numbers import Rational
from typing import List

BUFSIZE = 4096


def exgcd(a, b):
    if b == 0:
        return 1, 0, a
    else:
        x, y, q = exgcd(b, a % b)
        x, y = y, (x - (a // b) * y)
        return x, y, q


def ModReverse(a, p):
    x, y, q = exgcd(a, p)
    return x % p


def modpow(x, y, mod):
    res = 1
    while y:
        if y & 1: res = res * x % mod
        x = x * x % mod
        y >>= 1
    return res


def qmi(x, y):
    res = 1
    while y:
        if y & 1: res = res * x
        x = x * x
        y >>= 1
    return res


class FenwickTree:
    def __init__(self, n):
        self.n = n
        self.bit = [0] * n

    def sum(self, r):
        res = 0
        while r >= 0:
            res += self.bit[r]
            r = (r & (r + 1)) - 1
        return res

    def rsum(self, l, r):
        return self.sum(r) - self.sum(l - 1)

    def add(self, idx, delta):
        while idx < self.n:
            self.bit[idx] += delta
            idx = idx | (idx + 1)


class MaxNumArray:
    def __init__(self, n):
        self.n = n
        self.tree = [0] * (2 * n)

    def update(self, pos, val):
        pos += self.n
        self.tree[pos] = val
        while pos:
            l = r = pos
            if pos % 2 == 0:
                r = pos + 1
            else:
                l = pos - 1
            self.tree[pos // 2] = max(self.tree[l], self.tree[r])
            pos //= 2

    def maxRange(self, l, r):
        l += self.n
        r += self.n
        ans = 0
        while l <= r:
            if l & 1:
                ans = max(ans, self.tree[l])
                l += 1
            if (r & 1) == 0:
                ans = max(ans, self.tree[r])
                r -= 1
            l //= 2
            r //= 2
        return ans


def gcd(a, b):
    if a < 0: a = -a
    if b < 0: b = -b
    if a < b:
        a, b = b, a
    if a % b == 0:
        return b
    return gcd(b, a % b)


class FastIO(IOBase):
    newlines = 0

    def __init__(self, file):
        self._fd = file.fileno()
        self.buffer = BytesIO()
        self.writable = ""x"" in file.mode or ""r"" not in file.mode
        self.write = self.buffer.write if self.writable else None

    def read(self):
        while True:
            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))
            if not b:
                break
            ptr = self.buffer.tell()
            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)
        self.newlines = 0
        return self.buffer.read()

    def readline(self):
        while self.newlines == 0:
            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))
            self.newlines = b.count(b""\n"") + (not b)
            ptr = self.buffer.tell()
            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)
        self.newlines -= 1
        return self.buffer.readline()

    def flush(self):
        if self.writable:
            os.write(self._fd, self.buffer.getvalue())
            self.buffer.truncate(0), self.buffer.seek(0)


class IOWrapper(IOBase):
    def __init__(self, file):
        self.buffer = FastIO(file)
        self.flush = self.buffer.flush
        self.writable = self.buffer.writable
        self.write = lambda s: self.buffer.write(s.encode(""ascii""))
        self.read = lambda: self.buffer.read().decode(""ascii"")
        self.readline = lambda: self.buffer.readline().decode(""ascii"")


sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)
input = lambda: sys.stdin.readline().rstrip(""\r\n"")


def I():
    return input()


def ii():
    return int(input())


def li():
    return list(input().split())


def lii():
    return list(map(int, input().split()))


def solve():
    for _ in range(ii()):
        n = ii()
        a = I()
        b = I()
        if int(a[0]) < int(b[0]):
            print(2,2)
        elif int(a[0]) > int(b[0]):
            print(1,1)
        else:
            if a < b:
                print(1,1)
            else:
                for i in range(n):
                    if a[i] > a[0]:
                        print(i + 1,1)
                        break
                    if b[i] < b[0]:
                        print(1,i + 1)
                        break
                
                













if __name__ == '__main__':
    sys.setrecursionlimit(400005)
    solve()
"
109,B,Python3,60865300,2023-02-11 21:28:29,yingyaoyao,答案正确,"import collections
import random
import sys
import os
import math
from bisect import bisect_left, bisect_right
from collections import Counter, defaultdict, deque
from fractions import Fraction
from itertools import accumulate, combinations, permutations
from heapq import heappop, heappush
from io import BytesIO, IOBase
from copy import deepcopy
from numbers import Rational
from typing import List

BUFSIZE = 4096


def exgcd(a, b):
    if b == 0:
        return 1, 0, a
    else:
        x, y, q = exgcd(b, a % b)
        x, y = y, (x - (a // b) * y)
        return x, y, q


def ModReverse(a, p):
    x, y, q = exgcd(a, p)
    return x % p


def modpow(x, y, mod):
    res = 1
    while y:
        if y & 1: res = res * x % mod
        x = x * x % mod
        y >>= 1
    return res


def qmi(x, y):
    res = 1
    while y:
        if y & 1: res = res * x
        x = x * x
        y >>= 1
    return res


class FenwickTree:
    def __init__(self, n):
        self.n = n
        self.bit = [0] * n

    def sum(self, r):
        res = 0
        while r >= 0:
            res += self.bit[r]
            r = (r & (r + 1)) - 1
        return res

    def rsum(self, l, r):
        return self.sum(r) - self.sum(l - 1)

    def add(self, idx, delta):
        while idx < self.n:
            self.bit[idx] += delta
            idx = idx | (idx + 1)


class MaxNumArray:
    def __init__(self, n):
        self.n = n
        self.tree = [0] * (2 * n)

    def update(self, pos, val):
        pos += self.n
        self.tree[pos] = val
        while pos:
            l = r = pos
            if pos % 2 == 0:
                r = pos + 1
            else:
                l = pos - 1
            self.tree[pos // 2] = max(self.tree[l], self.tree[r])
            pos //= 2

    def maxRange(self, l, r):
        l += self.n
        r += self.n
        ans = 0
        while l <= r:
            if l & 1:
                ans = max(ans, self.tree[l])
                l += 1
            if (r & 1) == 0:
                ans = max(ans, self.tree[r])
                r -= 1
            l //= 2
            r //= 2
        return ans


def gcd(a, b):
    if a < 0: a = -a
    if b < 0: b = -b
    if a < b:
        a, b = b, a
    if a % b == 0:
        return b
    return gcd(b, a % b)


class FastIO(IOBase):
    newlines = 0

    def __init__(self, file):
        self._fd = file.fileno()
        self.buffer = BytesIO()
        self.writable = ""x"" in file.mode or ""r"" not in file.mode
        self.write = self.buffer.write if self.writable else None

    def read(self):
        while True:
            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))
            if not b:
                break
            ptr = self.buffer.tell()
            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)
        self.newlines = 0
        return self.buffer.read()

    def readline(self):
        while self.newlines == 0:
            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))
            self.newlines = b.count(b""\n"") + (not b)
            ptr = self.buffer.tell()
            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)
        self.newlines -= 1
        return self.buffer.readline()

    def flush(self):
        if self.writable:
            os.write(self._fd, self.buffer.getvalue())
            self.buffer.truncate(0), self.buffer.seek(0)


class IOWrapper(IOBase):
    def __init__(self, file):
        self.buffer = FastIO(file)
        self.flush = self.buffer.flush
        self.writable = self.buffer.writable
        self.write = lambda s: self.buffer.write(s.encode(""ascii""))
        self.read = lambda: self.buffer.read().decode(""ascii"")
        self.readline = lambda: self.buffer.readline().decode(""ascii"")


sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)
input = lambda: sys.stdin.readline().rstrip(""\r\n"")


def I():
    return input()


def ii():
    return int(input())


def li():
    return list(input().split())


def lii():
    return list(map(int, input().split()))


def solve():
    for _ in range(ii()):
        n = ii()
        a = I()
        b = I()
        if int(a[0]) < int(b[0]):
            print(2, 2)
        elif int(a[0]) > int(b[0]):
            print(1, 1)
        else:
            for i in range(n):
                if a[i] > a[0]:
                    print(i + 1, 1)
                    break
                if b[i] < b[0]:
                    print(1, i + 1)
                    break
            else:
                print(1,1)


if __name__ == '__main__':
    sys.setrecursionlimit(400005)
    solve()
"
110,B,Python3,60869035,2023-02-12 16:36:30,XiaoJi啊,答案错误,"n=int(input())
#len=input()

while(n):
    len=input()
    a=input()
    b=input()
    a1,b1=a,b
    sum=0
    for i in range(int(len)):
        a,b=a1,b1
        if sum==1 :
            break
        for j in range(int(len)):
            s1,s2=a[i:i+1],b[j:j+1]
            a=a.replace(s1,s2)
            b=b.replace(s2,s1)
            if(int(a) <int(b)):
                sum+=1
                print(i,end="" "")
                print(j)
                break           
    n-=1
            "
111,B,Python3,60869066,2023-02-12 16:39:50,XiaoJi啊,执行出错,"n=int(input())
#len=input()

while(n):
    len=input()
    a=input()
    b=input()
    a1,b1=a,b
    sum=0
    for i in range(1,int(len)+1):
        a,b=a1,b1
        if sum==1 :
            break
        for j in range(1+i,int(len)+1):
            s1,s2=a[i:i+1],b[j:j+1]
            a=a.replace(s1,s2)
            b=b.replace(s2,s1)
            if(int(a) <int(b)):
                sum+=1
                print(i,end="" "")
                print(j)
                break           
    n-=1
            "
112,B,Python3,60880832,2023-02-14 18:28:14,拒绝pua的coder很想五点下,答案错误,"import math

n = int(input())
for i in range(0,n):
    an = int(input())
    f = str(input())
    s = str(input())
    gap = int(s)-int(f)
    
    for i in range(0,len(f)):
        for j in range(0,len(s)):
            intval = int(f[i])-int(s[j])
            t1 = math.pow(10,len(f)-i-1)*intval 
            t2 = math.pow(10,len(s)-j-1)*intval 
            t = gap - t1 + t2
            print(gap,t1,t2,i,j)
            if t  > 0:
                print(i,j)
                i = len(f)+1
                break
    
        
        
    "
113,B,Python3,60880926,2023-02-14 18:42:29,拒绝pua的coder很想五点下,执行出错,"import math
 
def jh(f,s):
    gap = int(s)-int(f)
    for i in range(0,len(f)):
        for j in range(0,len(s)):
            intval = int(f[i])-int(s[j])
            t1 = math.pow(10,len(f)-i-1)*intval 
            t2 = math.pow(10,len(s)-j-1)*intval 
            t = gap + t1 + t2
            #print(t,t1,t2,i,j,intval)
            if t  > 0:
                print(i+1,j+1)
                i = len(f)+10
                j = len(s)+10
                return

n = int(input())
for i in range(0,n):
    an = int(input())
    f = str(input())
    s = str(input())
    jh(f,s)
                
    
        
        
    "
114,B,Python3,60880940,2023-02-14 18:43:58,拒绝pua的coder很想五点下,执行出错,"import math
 
def jh(f,s):
    gap = int(s)-int(f)
    for i in range(0,len(f)):
        for j in range(0,len(s)):
            intval = int(f[i])-int(s[j])
            t1 = math.pow(10,len(f)-i-1)*intval 
            t2 = math.pow(10,len(s)-j-1)*intval 
            t = gap + t1 + t2
            #print(t,t1,t2,i,j,intval)
            if t  > 0:
                print(i+1,j+1)
                i = len(f)+10
                j = len(s)+10
                return

n = int(input())
for i in range(0,n):
    an = int(input())
    f = str(input())
    s = str(input())
    jh(f,s)
                
    
        
        
    "
115,B,Python3,60892575,2023-02-15 12:29:53,summerEDward,答案错误,"T=int(input())
for l in range(T):
    n=int(input())
    A=int(input())
    B=int(input())
    res1,res2=[],[]
    A1,B1=A,B
    while A1>0:
        res1.append(A1%10)
        A1//=10
    while B1>0:
        res2.append(B1%10)
        B1//=10
    res11,res22=res1.copy(),res2.copy()
    res1,res2=res1[::-1],res2[::-1]
    res11.sort()
    res22.sort()
#     print(res1,res2,res11,res22)
    print(res1.index(res11[-1]),res2.index(res22[0]))
    "
116,B,Python3,60892641,2023-02-15 12:44:05,summerEDward,答案正确,"T=int(input())
for l in range(T):
    n=int(input())
    A=int(input())
    B=int(input())
    a,b=str(A),str(B)
    if A<B:
        if a[0]>=b[0]:
            print(1,1)
        else:
            print(n,n)
        continue
    else:
        for j in range(n):
            if a[j]!=b[j]:
                print(j+1,j+1)
                break
    "
117,B,Python3,60893808,2023-02-15 16:12:06,retiredMxrush,答案错误,"'''
A<B: preA=preB, A[i]<B[i]
A>B: preA=preB, A[i]>B[i]

'''
for _ in range(int(input())):
    n = int(input())
    a = input()
    b = input()
    x, y = 0, 0
    for i in range(n):
        if a[i] < b[i]:
            x, y = 1, 1
            break
        elif a[i] > b[i]: 
            x, y = i + 1, i + 1
            break
    print(x, y)"
118,B,Python3,60893853,2023-02-15 16:17:45,retiredMxrush,答案错误,"'''
A<B: preA=preB, A[i]<B[i]
A>B: preA=preB, A[i]>B[i]

'''
for _ in range(int(input())):
    n = int(input())
    a = input()
    b = input()
    x, y = 0, 0
    for i in range(n):
        if a[i] < b[i] and i:
            x, y = 1, 1
            break
        elif a[i] > b[i]: 
            x, y = i + 1, i + 1
            break
    if x and y: print(x, y)
    else:
        # 10 20
        mn = ""9""
        for i in range(n):
            if b[i] <= mn: 
                mn = b[i]
                y = i + 1
        print(1, y)
        "
119,B,Python3,60893861,2023-02-15 16:19:05,retiredMxrush,答案错误,"'''
A<B: preA=preB, A[i]<B[i]
A>B: preA=preB, A[i]>B[i]

'''
for _ in range(int(input())):
    n = int(input())
    a = input()
    b = input()
    x, y = 0, 0
    for i in range(n):
        if a[i] < b[i] and i:
            x, y = 1, 1
            break
        elif a[i] > b[i]: 
            x, y = i + 1, i + 1
            break
    if x and y: print(x, y)
    else:
        # 10 20
        mn = ""9""
        for i in range(n):
            if b[i] <= mn and b[i] != '0': 
                mn = b[i]
                y = i + 1
        print(1, y)
        "
120,B,Python3,60893873,2023-02-15 16:21:02,retiredMxrush,答案错误,"'''
A<B: preA=preB, A[i]<B[i]
A>B: preA=preB, A[i]>B[i]

'''
for _ in range(int(input())):
    n = int(input())
    a = input()
    b = input()
    x, y = 0, 0
    for i in range(n):
        if a[i] < b[i] and i:
            x, y = 1, 1
            break
        elif a[i] > b[i]: 
            x, y = i + 1, i + 1
            break
    if x and y: print(x, y)
    else:
        # 11 22
        
        print(2, 1)
        "
121,B,Python3,60893875,2023-02-15 16:21:34,retiredMxrush,答案错误,"'''
A<B: preA=preB, A[i]<B[i]
A>B: preA=preB, A[i]>B[i]

'''
for _ in range(int(input())):
    n = int(input())
    a = input()
    b = input()
    x, y = 0, 0
    for i in range(n):
        if a[i] < b[i] and i:
            x, y = 1, 1
            break
        elif a[i] > b[i]: 
            x, y = i + 1, i + 1
            break
    if x and y: print(x, y)
    else:
        # 11 22
        print(2, 2)
        "
122,B,Python3,60893911,2023-02-15 16:27:27,retiredMxrush,答案错误,"'''
A<B: preA=preB, A[i]<B[i]
A>B: preA=preB, A[i]>B[i]

'''
for _ in range(int(input())):
    n = int(input())
    a = input()
    b = input()
    x, y = 0, 0
    for i in range(n):
        if a[i] < b[i] and i:
            x, y = 1, 1
            break
        elif a[i] > b[i]: 
            x, y = i + 1, i + 1
            break
    if x and y: print(x, y)
    else:
        # 11 22
        print(n, n)
        "
123,B,Python3,60893923,2023-02-15 16:29:19,retiredMxrush,答案错误,"'''
A<B: preA=preB, A[i]<B[i]
A>B: preA=preB, A[i]>B[i]

'''
for _ in range(int(input())):
    n = int(input())
    a = input()
    b = input()
    x, y = 0, 0
    for i in range(n):
        if a[i] < b[i] and i > 0:
            x, y = 1, 1
            break
        elif a[i] > b[i]:
            x, y = i + 1, i + 1
            break
    
    if x and y: 
        print(x, y)
    else:
        # 11 22
        print(2, 2)
        "
124,B,Python3,60893932,2023-02-15 16:30:41,retiredMxrush,答案正确,"'''
A<B: preA=preB, A[i]<B[i]
A>B: preA=preB, A[i]>B[i]

'''
for _ in range(int(input())):
    n = int(input())
    a = input()
    b = input()
    x, y = 0, 0
    for i in range(n):
        if a[i] > b[i]:
            x, y = i + 1, i + 1
            break
    
    if x and y: 
        print(x, y)
    else:
        # 11 22
        if a[0] < b[0]: print(2, 2)
        else: print(1, 1)
        "
125,B,Python3,60895361,2023-02-15 20:21:46,爱打牌的登子,答案错误,"t = int (input())
for _ in range (t):
    n = int (input())
    a = list(input())
    b = list(input())
    x , y = -1 , -1
    for i in range (n):
        if a[i] > b[i]:
            g = a[i]
            a[i] = b[i]
            b[i] = g
            x = y = i + 1
            break 
    if x != -1:
        print (x , y)
    else:
        print (1 , 1)"
126,B,Python3,60895391,2023-02-15 20:24:43,爱打牌的登子,答案正确,"t = int (input())
for _ in range (t):
    n = int (input())
    a = list(input())
    b = list(input())
    x , y = -1 , -1
    for i in range (n):
        if a[i] > b[i]:
            g = a[i]
            a[i] = b[i]
            b[i] = g
            x = y = i + 1
            break 
    if x != -1:
        print (x , y)
    else:
        if a[0] == b[0]:
            print (1 , 1)
        else:
            print (2 , 2)"
127,B,Python3,60895542,2023-02-15 20:37:27,牛客581067831号,答案错误,"def f(str_a, str_b):
    max_a = str_a[0]
    max_a_idx = 0
    for i, ch in enumerate(str_a):
        if ch > max_a:
            max_a = ch
            max_a_idx = i
    for i in range(len(str_b)):
        if str_b[i] < max_a:
            return (max_a_idx + 1, i + 1)

N = int(input())
for i in range(N):
    n = int(input())
    str_a = input().strip()
    str_b = input().strip()
    print(f(str_a, str_b))
    "
128,B,Python3,60895682,2023-02-15 20:50:52,牛客581067831号,答案错误,"def f(str_a, str_b):
    for i in range(len(str_a)):
        if str_a[i] > str_b[i]:
            return (i + 1, i + 1)
        elif str_a[i] < str_b[i]:
            if i == 0:
                return (i + 2, i + 2)
            else:
                return (0, 0)
            

N = int(input())
for i in range(N):
    n = int(input())
    str_a = input().strip()
    str_b = input().strip()
    print(f(str_a, str_b))
    "
129,B,Python3,60895711,2023-02-15 20:54:25,牛客581067831号,答案错误,"def f(str_a, str_b):
    for i in range(len(str_a)):
        if str_a[i] > str_b[i]:
            return (i + 1, i + 1)
        elif str_a[i] < str_b[i]:
            if i == 0:
                return (i + 2, i + 2)
            else:
                return (0, 0)
            

N = int(input())
for i in range(N):
    n = int(input())
    str_a = input().strip()
    str_b = input().strip()
    tmp = f(str_a, str_b)
    print(tmp[0], tmp[1], )"
130,B,Python3,60895723,2023-02-15 20:55:09,牛客581067831号,答案错误,"def f(str_a, str_b):
    for i in range(len(str_a)):
        if str_a[i] > str_b[i]:
            return (i + 1, i + 1)
        elif str_a[i] < str_b[i]:
            if i == 0:
                return (i + 2, i + 2)
            else:
                return (0, 0)
            

N = int(input())
for i in range(N):
    n = int(input())
    str_a = input().strip()
    str_b = input().strip()
    tmp = f(str_a, str_b)
    print(tmp[0], tmp[1])"
131,B,Python3,60895748,2023-02-15 20:57:58,牛客581067831号,答案错误,"def f(str_a, str_b):
    if str_a[0] < str_b[0]:
        return (2, 2)
    elif str_a[0] > str_b[0]:
        return (1, 1)
    else:
        for i in range(1, len(str_a)):
            if str_a[i] > str_b[i]:
                return (i + 1, i + 1)
            elif str_a[i] < str_b[i]:
                return (0 ,0)
            

N = int(input())
for i in range(N):
    n = int(input())
    str_a = input().strip()
    str_b = input().strip()
    tmp = f(str_a, str_b)
    print(tmp[0], tmp[1])"
132,B,Python3,60895859,2023-02-15 21:11:32,牛客581067831号,答案正确,"def f(str_a, str_b):
    if str_a[0] < str_b[0]:
        return (2, 2)
    elif str_a[0] > str_b[0]:
        return (1, 1)
    else:
        for i in range(1, len(str_a)):
            if str_a[i] > str_b[i]:
                return (i + 1, i + 1)
            elif str_a[i] < str_b[i]:
                return (1  ,1)
        min_, min_idx = str_a[-1], len(str_a) - 1
        for i in range(len(str_a) - 2, -1, -1):
            if str_a[i] < min_:
                min_ = str_a[i]
                min_idx = i
            elif str_a[i] > min_:
                return (i + 1, min_idx + 1)
        return (len(str_a), 1)
N = int(input())
for i in range(N):
    n = int(input())
    str_a = input().strip()
    str_b = input().strip()
    tmp = f(str_a, str_b)
    print(tmp[0], tmp[1])"
133,B,Python3,60929452,2023-02-20 14:53:24,屠晓莹,答案错误,"import math
def numToList(count:int,num)->list:
    listNum=[]
    for i in range(count):
        listNum.append(num//math.pow(10,count-i-1))
        num=num%math.pow(10,count-i-1)
    return listNum
def compare(numCount:int,num1:int,num2:int):
    list1=numToList(numCount,num1)
    list2=numToList(numCount,num2)
    for i in range(numCount):
        if list1[i]>list2[i]:
            return i
count=int(input())
for _ in range (count):
    numCount=int(input())
    num1=int(input())
    num2=int(input())
    k=compare(numCount,num1,num2)
    print(k,k)
    "
134,B,Python3,60929463,2023-02-20 14:54:37,屠晓莹,答案错误,"import math
def numToList(count:int,num)->list:
    listNum=[]
    for i in range(count):
        listNum.append(num//math.pow(10,count-i-1))
        num=num%math.pow(10,count-i-1)
    return listNum
def compare(numCount:int,num1:int,num2:int):
    list1=numToList(numCount,num1)
    list2=numToList(numCount,num2)
    for i in range(numCount):
        if list1[i]>list2[i]:
            return i+1
count=int(input())
for _ in range (count):
    numCount=int(input())
    num1=int(input())
    num2=int(input())
    k=compare(numCount,num1,num2)
    print(k,k)
    "
135,B,Python3,60929491,2023-02-20 14:59:43,屠晓莹,答案错误,"import math
def numToList(count:int,num)->list:
    listNum=[]
    for i in range(count):
        listNum.append(num//math.pow(10,count-i-1))
        num=num%math.pow(10,count-i-1)
    return listNum
def compare(numCount:int,num1:int,num2:int):
    list1=numToList(numCount,num1)
    list2=numToList(numCount,num2)
    for i in range(numCount):
        if list1[i]>list2[i]:
            return i+1
    return 1
count=int(input())
for _ in range (count):
    numCount=int(input())
    num1=int(input())
    num2=int(input())
    k=compare(numCount,num1,num2)
    print(k,k)
    "
136,B,Python3,60929504,2023-02-20 15:02:32,屠晓莹,答案错误,"import math
def numToList(count:int,num)->list:
    listNum=[]
    for i in range(count):
        listNum.append(num//math.pow(10,count-i-1))
        num=num%math.pow(10,count-i-1)
    return listNum
def compare(numCount:int,num1:int,num2:int):
    list1=numToList(numCount,num1)
    list2=numToList(numCount,num2)
    for i in range(numCount):
        if list1[i]>list2[i]:
            return i+1
    return 1
count=int(input())
for _ in range (count):
    numCount=int(input())
    num1=int(input())
    num2=int(input())
    k=compare(numCount,num1,num2)
    print(k,'',k)
    "
137,B,Python3,60931006,2023-02-20 19:06:38,屠晓莹,答案正确,"# import math
# def numToList(count:int,num)->list:
#     listNum=[]
#     for i in range(count):
#         listNum.append(num//math.pow(10,count-i-1))
#         num=num%math.pow(10,count-i-1)
#     return listNum
# def compare(numCount:int,num1:int,num2:int):
#     list1=numToList(numCount,num1)
#     list2=numToList(numCount,num2)
#     for i in range(numCount):
#         if list1[i]>list2[i]:
#             return i+1
#     return 1
# count=int(input())
# for _ in range (count):
#     numCount=int(input())
#     num1=int(input())
#     num2=int(input())
#     k=compare(numCount,num1,num2)
#     print(k, k)
'''
A<B: preA=preB, A[i]<B[i]
A>B: preA=preB, A[i]>B[i]

'''
for _ in range(int(input())):
    n = int(input())
    a = input()
    b = input()
    x, y = 0, 0
    for i in range(n):
        if a[i] > b[i]:
            x, y = i + 1, i + 1
            break
    
    if x and y: 
        print(x, y)
    else:
        # 11 22
        if a[0] < b[0]: print(2, 2)
        else: print(1, 1)
        
    "
138,B,Python3,60931169,2023-02-20 19:18:13,屠晓莹,答案错误,"import math
def numToList(count:int,num)->list:
    listNum=[]
    for i in range(count):
        listNum.append(num//math.pow(10,count-i-1))
        num=num%math.pow(10,count-i-1)
    return listNum
def compare(numCount:int,num1:int,num2:int)->int:
    list1=numToList(numCount,num1)
    list2=numToList(numCount,num2)
    x,y=0,0
    for i in range(numCount):
        if list1[i]>list2[i]:
            x,y=i+1,i+1
            break
    if x and y:
        return (x, y)
    elif list1[0]<list2[0]:
        return (2, 2)
    else:
        return (1, 1)
count=int(input())
for _ in range (count):
    numCount=int(input())
    num1=int(input())
    num2=int(input())
    print(compare(numCount,num1,num2))
# '''
# A<B: preA=preB, A[i]<B[i]
# A>B: preA=preB, A[i]>B[i]

# '''
# for _ in range(int(input())):
#     n = int(input())
#     a = input()
#     b = input()
#     x, y = 0, 0
#     for i in range(n):
#         if a[i] > b[i]:
#             x, y = i + 1, i + 1
#             break
    
#     if x and y: 
#         print(x, y)
#     else:
#         # 11 22
#         if a[0] < b[0]: print(2, 2)
#         else: print(1, 1)
        
    "
139,B,Python3,60931248,2023-02-20 19:23:23,屠晓莹,答案错误,"# import math
# def numToList(count:int,num)->list:
#     listNum=[]
#     for i in range(count):
#         listNum.append(num//math.pow(10,count-i-1))
#         num=num%math.pow(10,count-i-1)
#     return listNum
def compare(numCount,num1,num2):
    x,y=0,0
    for i in range(numCount):
        if num1[i]>num2[i]:
            x,y=i+1,i+1
            break
    if x and y:
        return (x, y)
    elif num1[0]<num2[0]:
        return (2, 2)
    else:
        return (1, 1)
count=int(input())
for _ in range (count):
    numCount=int(input())
    num1=input()
    num2=input()
    print(compare(numCount,num1,num2))
# '''
# A<B: preA=preB, A[i]<B[i]
# A>B: preA=preB, A[i]>B[i]

# '''
# for _ in range(int(input())):
#     n = int(input())
#     a = input()
#     b = input()
#     x, y = 0, 0
#     for i in range(n):
#         if a[i] > b[i]:
#             x, y = i + 1, i + 1
#             break
    
#     if x and y: 
#         print(x, y)
#     else:
#         # 11 22
#         if a[0] < b[0]: print(2, 2)
#         else: print(1, 1)
        
    "
140,B,Python3,60931273,2023-02-20 19:24:49,屠晓莹,答案错误,"# import math
# def numToList(count:int,num)->list:
#     listNum=[]
#     for i in range(count):
#         listNum.append(num//math.pow(10,count-i-1))
#         num=num%math.pow(10,count-i-1)
#     return listNum
def compare(numCount,num1,num2):
    x,y=0,0
    for i in range(numCount):
        if num1[i]>num2[i]:
            x,y=i+1,i+1
            break
    if x and y:
        return (x, y)
    elif num1[0]<num2[0]:
        return (2, 2)
    else:
        return (1, 1)
count=int(input())
for _ in range (count):
    numCount=int(input())
    num1=input()
    num2=input()
    print(compare(numCount,num1,num2))
# '''
# A<B: preA=preB, A[i]<B[i]
# A>B: preA=preB, A[i]>B[i]

# '''
# for _ in range(int(input())):
#     n = int(input())
#     a = input()
#     b = input()
#     x, y = 0, 0
#     for i in range(n):
#         if a[i] > b[i]:
#             x, y = i + 1, i + 1
#             break
    
#     if x and y: 
#         print(x, y)
#     else:
#         # 11 22
#         if a[0] < b[0]: print(2, 2)
#         else: print(1, 1)
        
    "
141,B,Python3,60931340,2023-02-20 19:28:25,屠晓莹,答案正确,"def compare(numCount,num1,num2):
    x,y=0,0
    for i in range(numCount):
        if num1[i]>num2[i]:
            x,y=i+1,i+1
            break
    if x and y:
        return x
    elif num1[0]<num2[0]:
        return 2
    else:
        return 1
count=int(input())
for _ in range (count):
    numCount=int(input())
    num1=input()
    num2=input()
    k=compare(numCount,num1,num2)
    print(k, k)
# '''
# A<B: preA=preB, A[i]<B[i]
# A>B: preA=preB, A[i]>B[i]

# '''
# for _ in range(int(input())):
#     n = int(input())
#     a = input()
#     b = input()
#     x, y = 0, 0
#     for i in range(n):
#         if a[i] > b[i]:
#             x, y = i + 1, i + 1
#             break
    
#     if x and y: 
#         print(x, y)
#     else:
#         # 11 22
#         if a[0] < b[0]: print(2, 2)
#         else: print(1, 1)
        
    "
142,B,Python3,60941781,2023-02-21 20:25:41,懒得改了,答案错误,"for _ in range(int(input())):
    n=input()
    a,b='0'+input(),'0'+input()
    if a<b:
        print(0,0)
    else:
        for i in range(int(n)+1):
            if a[i]>b[i]:
                print(i,i)
                break"
143,B,Python3,60941809,2023-02-21 20:27:17,懒得改了,答案错误,"for _ in range(int(input())):
    n=input()
    a,b='0'+input(),'0'+input()
    if a<b:
        print(1,1)
    else:
        for i in range(int(n)+1):
            if a[i]>b[i]:
                print(i,i)
                break"
144,B,Python3,60941964,2023-02-21 20:35:27,懒得改了,答案错误,"for _ in range(int(input())):
    n=input()
    a,b='0'+input(),input()
    for c in '987654321':
        i=a.find(c)
        if i!=-1:
            break
    for j in range(int(n)):
        if b[j]<a[i]:
            print(j+1,i)
            break
    else:
        print(n,n)"
145,B,Python3,60944901,2023-02-22 12:00:22,懒得改了,答案正确,"for _ in range(int(input())):
    n=input()
    a,b=input(),input()
    if a<b:
        for x in '0123456789':
            if x in a and x in b:
                print(a.find(x)+1,b.find(x)+1)
                break
        else:
            print(n,n)
    else:
        n=int(n)
        for i in range(n):
            if a[i]>b[i]:
                print(i+1,i+1)
                break
        else:
            aa=0
            bb=n-1
            for i in range(n):
                if a[i]>a[aa]:
                    aa=i
            for j in range(n)[::-1]:
                if b[j]<=b[bb]:
                    bb=j
            print(aa+1,bb+1)"
146,B,Python3,61278061,2023-03-13 23:22:49,阿来想AC,答案错误,"t = int(input())
for _ in range(t):
    n = int(input())
    a = input()
    b = input()
    flag = 1
    for i in range(n):
        if flag == 0:
            break
        for j in range(n):
            aa = int(a)+(int(b[j])-int(a[i]))*10**(2-i)
            bb = int(b)+(int(a[i])-int(b[j]))*10**(2-j)
            if aa<bb:
                flag = 0
                print(""{} {}"".format(i+1,j+1))
                break
        

        "
147,B,Python3,61278080,2023-03-13 23:24:47,阿来想AC,答案错误,"t = int(input())
for _ in range(t):
    n = int(input())
    a = input()
    b = input()
    flag = 1
    for i in range(1,n):
        if flag == 0:
            break
        for j in range(i,n):
            aa = int(a)+(int(b[j])-int(a[i]))*10**(2-i)
            bb = int(b)+(int(a[i])-int(b[j]))*10**(2-j)
            if aa<bb:
                flag = 0
                print(""{} {}"".format(i+1,j+1))
                break
        

        "
148,B,Python3,61278085,2023-03-13 23:25:21,阿来想AC,答案错误,"t = int(input())
for _ in range(t):
    n = int(input())
    a = input()
    b = input()
    flag = 1
    for i in range(1,n):
        if flag == 0:
            break
        for j in range(i,n):
            aa = int(a)+(int(b[j])-int(a[i]))*10**(n-i)
            bb = int(b)+(int(a[i])-int(b[j]))*10**(n-j)
            if aa<bb:
                flag = 0
                print(""{} {}"".format(i+1,j+1))
                break
        

        "
149,B,Python3,61278097,2023-03-13 23:26:17,阿来想AC,答案正确,"for _ in range(int(input())):
    n = int(input())
    A = input()
    B = input()
    for i in range(n):
        if A[i] == B[i]:
            continue
        elif A[i] > B[i]:
            print(i+1,i+1)
            break
        else:
            if i+1 == n:
                print(i,i)
            else:
                print(n,n)
            break
        "
