,index,languageName,submissionId,submitTime,userName,statusMessage,code
0,D,Python3,54987765,2022-11-25 20:36:58,牛客956373253号,答案错误,"ex = input()
def sol(n,k,m,qu):
    n = int(n)
    k = int(k)
    m = int(m)
    qu = int(qu)
    if qu==0:
        return n
    def dfs(q):
        temp = 0
        if q*k<n:
            for i in range(1,k+1):
                if q*k+i<n:
                    temp += dfs(q*k+i) + 1
        return temp
    return dfs(qu)+1
        
while True:
    try:
        n,k,m = input().split()
        temp = input().split()
        for i in temp:
            print(sol(n,k,m,i))
            
    except:
        break"
1,D,Python3,54992596,2022-11-25 22:11:32,相ཽ信ཽ光ཽ的ཽ少ཽ年ཽ,答案正确,"import os,sys
from random import randint, shuffle
from io import BytesIO, IOBase
 
from collections import defaultdict,deque,Counter
from bisect import bisect_left,bisect_right
from heapq import heappush,heappop
from functools import lru_cache
from itertools import accumulate, permutations
import math
 
# Fast IO Region
BUFSIZE = 8192
class FastIO(IOBase):
    newlines = 0
    def __init__(self, file):
        self._fd = file.fileno()
        self.buffer = BytesIO()
        self.writable = ""x"" in file.mode or ""r"" not in file.mode
        self.write = self.buffer.write if self.writable else None
    def read(self):
        while True:
            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))
            if not b:
                break
            ptr = self.buffer.tell()
            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)
        self.newlines = 0
        return self.buffer.read()
    def readline(self):
        while self.newlines == 0:
            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))
            self.newlines = b.count(b""\n"") + (not b)
            ptr = self.buffer.tell()
            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)
        self.newlines -= 1
        return self.buffer.readline()
    def flush(self):
        if self.writable:
            os.write(self._fd, self.buffer.getvalue())
            self.buffer.truncate(0), self.buffer.seek(0)
class IOWrapper(IOBase):
    def __init__(self, file):
        self.buffer = FastIO(file)
        self.flush = self.buffer.flush
        self.writable = self.buffer.writable
        self.write = lambda s: self.buffer.write(s.encode(""ascii""))
        self.read = lambda: self.buffer.read().decode(""ascii"")
        self.readline = lambda: self.buffer.readline().decode(""ascii"")
sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)
input = lambda: sys.stdin.readline().rstrip(""\r\n"")
 

     
for _ in range(int(input())):
    n, k, m = list(map(int, input().split()))
    a = list(map(int, input().split()))
    for i in a:
        if k == 1:
            print(n - i)
            continue
        l = r = i
        ans = 0
        while l < n:
            ans += min(n - 1, r) - l + 1
            l, r = k * l + 1, k * r + k
        print(ans)"
2,D,Python3,54993178,2022-11-25 22:41:32,风度翩翩的秋田犬很强大,执行出错,"def dfs(l: int, r: int) -> int:
    if l >= n: return 0
    ans = r - l + 1
    ans += dfs(l * k + 1, min(n - 1, r * k + k))
    return ans

T = int(input())
while T:
    n, k, m = map(int, input().split())
    query = list(map(int, input().split()))
    for q in query:
        print(dfs(q, q))
    T -= 1"
3,D,Python3,54993197,2022-11-25 22:42:31,风度翩翩的秋田犬很强大,执行出错,"import sys
sys.setrecursionlimit(100000) #例如这里设置为十万 

def dfs(l: int, r: int) -> int:
    if l >= n: return 0
    ans = r - l + 1
    ans += dfs(l * k + 1, min(n - 1, r * k + k))
    return ans

T = int(input())
while T:
    n, k, m = map(int, input().split())
    query = list(map(int, input().split()))
    for q in query:
        print(dfs(q, q))
    T -= 1"
4,D,Python3,54993273,2022-11-25 22:46:50,风度翩翩的秋田犬很强大,答案错误,"
def dfs(l: int, r: int) -> int:
    if l >= n: return 0
    ans = r - l + 1
    ans += dfs(l * k + 1, min(n - 1, r * k + k))
    return ans

for _ in range(int(input())):
    n, k, m = map(int, input().split())
    a = list(map(int, input().split()))
    for i in a:
        if k == 1: print(n - i + 1)
        else:
            print(dfs(i, i))"
5,D,Python3,54993288,2022-11-25 22:47:45,风度翩翩的秋田犬很强大,答案正确,"
def dfs(l: int, r: int) -> int:
    if l >= n: return 0
    ans = r - l + 1
    ans += dfs(l * k + 1, min(n - 1, r * k + k))
    return ans

for _ in range(int(input())):
    n, k, m = map(int, input().split())
    a = list(map(int, input().split()))
    for i in a:
        if k == 1: print(n - i)
        else:
            print(dfs(i, i))"
6,D,Python3,54993853,2022-11-25 23:26:51,牛客956373253号,答案错误,"ex = input()
def sol(n,k,m,qu):
    n = int(n)
    k = int(k)
    m = int(m)
    qu = int(qu)
    if qu==0:
        return n
    def dfs(q):
        temp = 0
        if q*k<n:
            for i in range(1,k+1):
                if q*k+i<n:
                    temp += dfs(q*k+i) + 1
        return temp
    return dfs(qu)+1
        
while True:
    try:
        n,k,m = input().split()
        temp = input().split()
        for i in temp:
            print(sol(n,k,m,i))
            
    except:
        break"
7,D,Python3,54993930,2022-11-25 23:31:07,牛客956373253号,执行出错,"ex = input()
def sol(n,k,m,qu):
    n = int(n)
    k = int(k)
    m = int(m)
    qu = int(qu)
    if qu==0:
        return n
    def dfs(q):
        temp = 0
        if q*k<n:
            for i in range(1,k+1):
                if q*k+i<n:
                    temp += dfs(q*k+i) + 1
        return temp
    return dfs(qu)+1
for _ in range(int(ex)):
        n,k,m = input().split()
        temp = input().split()
        for i in temp:
            print(sol(n,k,m,i))
            
"
8,D,Python3,54994022,2022-11-25 23:36:33,牛客956373253号,答案错误,"while True:
    try:
        ex = input()
        def sol(n,k,m,qu):
            n = int(n)
            k = int(k)
            m = int(m)
            qu = int(qu)
            if qu==0:
                return n
            def dfs(q):
                temp = 0
                if q*k<n:
                    for i in range(1,k+1):
                        if q*k+i<n:
                            temp += dfs(q*k+i) + 1
                return temp
            return dfs(qu)+1

        for _ in range(int(ex)):
                n,k,m = input().split()
                temp = input().split()
                for i in temp:
                    print(sol(n,k,m,i))
    
            
    except:
        break
"
9,D,Python3,54994036,2022-11-25 23:37:15,牛客956373253号,答案错误,"while True:
    try:
        ex = input()
        def sol(n,k,m,qu):
            n = int(n)
            k = int(k)
            m = int(m)
            qu = int(qu)
            if qu==0:
                return n
            def dfs(q):
                temp = 0
                if q*k<n:
                    for i in range(1,k+1):
                        if q*k+i<n:
                            temp += dfs(q*k+i) + 1
                return temp
            return dfs(qu)+1

        for _ in range(int(ex)):
                n,k,m = input().split()
                temp = input().split()
                for i in temp:
                    print(sol(n,k,m,i))
    
            
    except:
        break
"
10,D,Python3,54994188,2022-11-25 23:49:16,牛客956373253号,答案错误,"while True:
    try:
        ex = input()
        def sol(n,k,m,qu):
            n = int(n)
            k = int(k)
            m = int(m)
            qu = int(qu)
            if qu==0:
                return n
            def dfs(q):
                temp = 0
                if q*k<n:
                    for i in range(1,k+1):
                        if q*k+i<n:
                            temp += dfs(q*k+i) + 1
                return temp
            return dfs(qu)+1

        for _ in range(int(ex)):
                n,k,m = input().split()
                temp = input().split()
                for i in temp:
                    print(sol(n,k,m,i))
    except:
        break
"
11,D,Python3,54994201,2022-11-25 23:50:41,牛客956373253号,答案错误,"while True:
    try:
        ex = input()
        def sol(n,k,m,qu):
            n = int(n)
            k = int(k)
            m = int(m)
            qu = int(qu)
            if qu==0:
                return n
            def dfs(q):
                temp = 0
                if q*k<n:
                    for i in range(1,k+1):
                        if q*k+i<n:
                            temp += dfs(q*k+i) + 1
                return temp
            return dfs(qu)+1

        for _ in range(int(ex)):
                n,k,m = input().split()
                temp = input().split()
                for i in temp:
                    print(sol(n,k,m,i))
    except:
        break
"
12,D,Python3,54994479,2022-11-26 00:19:10,牛客956373253号,运行超时,"from bisect import bisect_right
while True:
    try:
        ex = int(input())
        def sol(qu):
            ind = bisect_right(l,qu)-1
            cur = 1
            res = 0
            for i in range(ind,len(l)-1):
                res+=cur
                cur*=k
            return res + min(n - qu*cur, cur) 
#             if qu==0:
#                 return n
#             def dfs(q):
#                 temp = 0
#                 if q*k<n:
#                     for i in range(1,k+1):
#                         if q*k+i<n:
#                             temp += dfs(q*k+i) + 1
#                 return temp
#             return dfs(qu)+1

        for _ in range(int(ex)):
            n,k,m = list(map(int,input().split()))
            temp = list(map(int,input().split()))
            l = []
            i = 1
            cur = 0
            while cur<n:
                l.append(cur)
                cur+=i
                i*=k
            for i in temp:
                print(sol(i))
    except:
        break

        
        
    "
13,D,Python3,54994541,2022-11-26 00:26:46,牛客956373253号,运行超时,"from bisect import bisect_right
while True:
    try:
        ex = int(input())
        def sol(qu):
            ind = bisect_right(l,qu)-1
            cur = 1
            res = 0
            st = qu
            for i in range(ind,len(l)-1):
                res+=cur
                cur*=k
                st = st*k+1
            return res + min(max(0,n - st), cur) 
#             if qu==0:
#                 return n
#             def dfs(q):
#                 temp = 0
#                 if q*k<n:
#                     for i in range(1,k+1):
#                         if q*k+i<n:
#                             temp += dfs(q*k+i) + 1
#                 return temp
#             return dfs(qu)+1

        for _ in range(int(ex)):
            n,k,m = list(map(int,input().split()))
            temp = list(map(int,input().split()))
            l = []
            i = 1
            cur = 0
            while cur<n:
                l.append(cur)
                cur+=i
                i*=k
            for i in temp:
                print(sol(i))
    except:
        break

        
        
    "
14,D,Python3,54994559,2022-11-26 00:30:46,牛客956373253号,答案正确,"from bisect import bisect_right
while True:
    try:
        ex = int(input())
        def sol(qu):
            ind = bisect_right(l,qu)-1
            cur = 1
            res = 0
            st = qu
            for i in range(ind,len(l)-1):
                res+=cur
                cur*=k
                st = st*k+1
            return res + min(max(0,n - st), cur) 
#             if qu==0:
#                 return n
#             def dfs(q):
#                 temp = 0
#                 if q*k<n:
#                     for i in range(1,k+1):
#                         if q*k+i<n:
#                             temp += dfs(q*k+i) + 1
#                 return temp
#             return dfs(qu)+1

        for _ in range(int(ex)):
            n,k,m = list(map(int,input().split()))
            temp = list(map(int,input().split()))
            if k==1:
                for i in temp:
                    print(n-i)
            else:
                l = []
                i = 1
                cur = 0
                while cur<n:
                    l.append(cur)
                    cur+=i
                    i*=k
                for i in temp:
                    print(sol(i))
    except:
        break

        
        
    "
15,D,Python3,54996590,2022-11-26 10:44:18,可爱抱抱呀😥,答案正确,"def count(p:int,k:int,n:int)->int:
    if k==1:
        return n-p
    ans=0
    l,r=p,p
    while l<n:
        ans+=r-l+1
        l,r=l*k+1,min(n-1,r*k+k)
    return ans
t=int(input())
for i in range(t):
    n,k,m=map(int,input().split())
    q=list(map(int,input().split()))
    for qq in q:
        print(count(qq,k,n))"
