,index,languageName,submissionId,submitTime,userName,statusMessage,code
0,D,Java,60967202,2023-02-24 19:11:49,人工智能3212卢明涛,答案正确,"import jdk.nashorn.internal.runtime.FindProperty;

import java.io.*;
import java.lang.reflect.Array;
import java.sql.SQLOutput;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int T = in.nextInt();
            int math[] = new int[n+1];
            int sum = 0;
            while (T-->0){
                int id = in.nextInt();
                int ma = in.nextInt();
                int maadd = ma+3;
                int mares = ma-3;
                if (id==1) {
                    if (maadd <= n) {
                        math[maadd]++;
                        if (math[maadd] == 1) {
                            sum++;
                        }
                    }
                    if (mares >= 1) {
                        math[mares]++;
                        if (math[mares] == 1) {
                            sum++;
                        }
                    }
                }
                else {
                    if (maadd <= n && math[maadd]>0) {
                        math[maadd]--;
                        if (math[maadd] == 0) {
                            sum--;
                        }
                    }
                    if (mares >=1 && math[mares]>0) {
                        math[mares]--;
                        if (math[mares] == 0) {
                            sum--;
                        }
                    }
                }
                out.println(sum);
            }

        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
1,D,Java,60967724,2023-02-24 19:17:04,Mosyi.,答案正确,"import java.io.*;
import java.util.*;
import java.math.*;
import java.util.concurrent.LinkedBlockingQueue;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

     static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int m = in.nextInt();
            int q = in.nextInt();
            int[] a = new int[m+1];
            int sum = 0;
            for (int i = 0; i < q; i++) {
                int op = in.nextInt();
                int num = in.nextInt();
                if(op == 1){
                    if(num - 3 >= 1) {
                        if (a[num - 3] == 0) {
                            sum++;
                        }
                        a[num - 3]++;
                    }
                    if(num + 3 <= m){
                        if(a[num + 3] == 0){
                            sum++;
                        }
                        a[num + 3]++;
                    }
                }else{
                    if(num - 3 >= 1){
                        if(a[num - 3] - 1 == 0){
                            sum--;
                        }
                        a[num - 3]--;
                    }
                    if(num + 3 <= m){
                        if(a[num + 3] - 1 == 0){
                            sum--;
                        }
                        a[num + 3]--;
                    }
                }
                out.println(sum);
            }
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

        public void close() {
        }
    }
}"
2,D,Java,60967816,2023-02-24 19:17:59,HMETAO,答案正确,"
import java.io.*;
import java.util.*;

public class Main {

    static StringBuilder sb = new StringBuilder();

    public static void main(String[] args) throws IOException {
        Reader r = new Reader();
        int t = 1;
//        t = r.nextInt();
        while (t-- > 0) {
            solve(r);
        }
        System.out.println(sb.deleteCharAt(sb.length() - 1));

    }


    private static void solve(Reader sc) {
        long m = sc.nextLong();
        long q = sc.nextLong();
        HashMap<Long, Long> map = new HashMap<>();
        while (q-- > 0) {
            int op = sc.nextInt();
            long num = sc.nextLong();
            long l = num + 3;
            long r = num - 3;
            if (op == 1) {
                if (l <= m) {
                    map.merge(l, 1L, Long::sum);
                }
                if (r >= 1) {
                    map.merge(r, 1L, Long::sum);
                }
            } else {
                Long lc = map.getOrDefault(l, 0L);
                if (lc > 0) {
                    if (lc - 1 == 0) map.remove(l);
                    else map.put(l, lc - 1);
                }

                Long rc = map.getOrDefault(r, 0L);
                if (rc > 0) {
                    if (rc - 1 == 0) map.remove(r);
                    else map.put(r, rc - 1);
                }
            }
            println(map.size());
        }

    }

    private static void swap(char[] arr, int a, int b) {
        char temp = arr[a];
        arr[a] = arr[b];
        arr[b] = temp;
    }


    static class BitIndexTree {
        long[] trie;
        int n;

        public BitIndexTree(int n) {
            this.n = n;
            trie = new long[n + 1];
        }

        public static int lowBit(int x) {
            return x & (-x);
        }

        public void add(int index, int v) {
            while (index <= n) {
                trie[index] += v;
                index += lowBit(index);
            }
        }

        public long query(int index) {
            long ans = 0;
            while (index > 0) {
                ans += trie[index];
                index -= lowBit(index);
            }
            return ans;
        }
    }

    private static void swap(int[] arr, int a, int b) {
        int temp = arr[a];
        arr[a] = arr[b];
        arr[b] = temp;
    }

    public static long pow3(long a, long b) {
        long ans = 1;
        while (b > 0) {
            if ((b & 1) == 1) {
                ans *= a;
            }
            a *= a;
            b >>= 1;
        }
        return ans;
    }

    public static long pow4(long a, long b, int p) {
        long ans = 1;
        a %= p;
        while (b > 0) {
            if ((b & 1) == 1) {
                ans = ans * a % p;
            }
            a = a * a % p;
            b >>= 1;
        }
        return ans;
    }

    public static List<Integer> euler(int n) {
        boolean[] check = new boolean[n + 1];
        List<Integer> ans = new ArrayList<>();
        for (int i = 2; i <= n; i++) {
            if (!check[i]) {
                ans.add(i);
            }
            for (Integer item : ans) {
                if (item * i > n) break;
                check[(item * i)] = true;
                if (i % item == 0) break;
            }
        }
        return ans;
    }

    public static void euler_phi(int n) {
        int ans = n;
        for (int i = 2; i <= n / i; i++) {
            if (n % i == 0) {
                ans *= (1 - 1.0 / i);
                while (n % i == 0) {
                    n /= i;
                }
            }
        }
        if (n > 1) ans *= (1 - 1.0 / n);
        System.out.println(ans);
    }

    public static int[] eulers(int n) {
        boolean[] check = new boolean[n + 1];
        int[] phi = new int[n + 1];
        phi[1] = 1;
        ArrayList<Integer> primes = new ArrayList<>();
        for (int i = 2; i <= n; i++) {
            if (!check[i]) {
                primes.add(i);
                phi[i] = i - 1;
            }

            for (Integer item : primes) {
                if (item * i > n) break;
                check[item * i] = true;
                if (i % item == 0) {
                    phi[item * i] = item * phi[i];
                    break;
                }
                phi[item * i] = (item - 1) * phi[i];
            }
        }
        return phi;
    }


    static final Random random = new Random();

    static void ruffleSort(int[] a) {
        int n = a.length;//shuffle, then sort
        for (int i = 0; i < n; i++) {
            int oi = random.nextInt(n), temp = a[oi];
            a[oi] = a[i];
            a[i] = temp;
        }
        Arrays.sort(a);
    }

    static class Reader {
        BufferedReader buf;
        StringTokenizer tok;

        Reader() {
            buf = new BufferedReader(new InputStreamReader(System.in));
        }

        boolean hasNext() {
            while (tok == null || !tok.hasMoreElements()) {
                try {
                    tok = new StringTokenizer(buf.readLine());
                } catch (Exception e) {
                    return false;
                }
            }
            return true;
        }

        String nextLine() {
            try {
                return buf.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        String next() {
            if (hasNext()) return tok.nextToken();
            return null;
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        int[] nextIntArrForSizeIndexOfOne(int size) {
            int[] nums = new int[size + 1];
            for (int i = 1; i <= size; i++) {
                nums[i] = nextInt();
            }
            return nums;
        }

        int[] nextIntArrForSizeIndexOfZero(int size) {
            int[] nums = new int[size];
            for (int i = 0; i < size; i++) {
                nums[i] = nextInt();
            }
            return nums;
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }
    }

    private static void printf(Object t) {
        sb.append(t).append("" "");
    }

    private static void printf(Object... t) {
        for (Object s : t) {
            sb.append(s).append("" "");
        }
        sb.deleteCharAt(sb.length() - 1);
    }

    private static void printf(String end, Object... t) {
        for (Object s : t) {
            sb.append(s).append("" "");
        }
        sb.deleteCharAt(sb.length() - 1);
        sb.append(end);
    }

    private static void println(Object t) {
        sb.append(t).append(""\n"");
    }

    private static void println() {
        sb.append(""\n"");
    }

    private static <T> void printArr(long[] arr) {
        for (Object o : arr) {
            sb.append(o).append("" "");
        }
    }

    private static <T> void printArr(int[] arr) {
        for (Object o : arr) {
            sb.append(o).append("" "");
        }
    }

}


"
3,D,Java,60967908,2023-02-24 19:18:55,悠然小白,答案正确,"import java.util.*;
import java.io.*;

public class Main {

    public static void main(String[] args) {

        Scanner in = new Scanner(new BufferedReader(new InputStreamReader(System.in)));
        PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));

        Set<Integer> set = new HashSet<>();
        Map<Integer, Integer> map = new HashMap<>();
        int m = in.nextInt();
        int q = in.nextInt();
        for (int i = 0; i < q; i++) {
            int op = in.nextInt();
            int num = in.nextInt();
            if (op == 1) {
                map.put(num, map.getOrDefault(num, 0) + 1);
                fun(set, num - 3, 1, m);
                fun(set, num + 3, 1, m);
            } else {
                map.put(num, map.getOrDefault(num, 0) - 1);
                if (map.get(num) == 0) {
                    map.remove(num);
                    if (!map.containsKey(num - 6)) {
                        set.remove(num - 3);
                    }
                    if (!map.containsKey(num + 6)) {
                        set.remove(num + 3);
                    }
                }

            }
            out.println(set.size());
        }

        out.flush();
    }

    private static void fun(Set<Integer> set, int num, int min, int max) {
        if (min <= num && num <= max) {
            set.add(num);
        }
    }

}
"
4,D,Java,60968002,2023-02-24 19:20:09,山东协和学院_张福旭,答案错误,"import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
    static Read sc=new Read(System.in);
    static PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
    public static void main(String[] args) {
        int m=sc.nextInt();
        int q=sc.nextInt();
        int[] a=new int[105];
        int[] b=new int[105];
        long ans=0;
        while (q-->0){
            int opt=sc.nextInt();
            int num=sc.nextInt();
            if (opt==1){
                a[num]++;
                if (a[num]==1){
                    if (num-3>=1) {
                        if(b[num-3]==0)ans++;
                        b[num-3]++;
                    }
                    if (num+3<=10) {
                        if (b[num+3]==0)ans++;
                        b[num+3]++;
                    }
                }
            }
            else if(opt==2){
                a[num]--;
                if (a[num]==0) {
                    if (num-3>=1) {
                        if(b[num-3]==1)ans--;
                        b[num-3]--;
                    }
                    if (num+3<=10) {
                        if(b[num+3]==1)ans--;
                        b[num+3]--;
                    }
                }
            }
            out.println(ans);
        }
        out.flush();
    }
    static class Read {
        BufferedReader br;
        StringTokenizer st;

        public Read(InputStream in) {
            br = new BufferedReader(new InputStreamReader(in), 16384);
            eat("""");
        }

        public void eat(String s) {
            st = new StringTokenizer(s);
        }

        public String nextLine() {
            try {
                return br.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        public boolean hasNext() {
            while (!st.hasMoreTokens()) {
                String s = nextLine();
                if (s == null)
                    return false;
                eat(s);
            }
            return true;
        }

        public String next() {
            hasNext();
            return st.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }
    }
}"
5,D,Java,60968097,2023-02-24 19:21:09,山东协和学院_张福旭,答案错误,"import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
    static Read sc=new Read(System.in);
    static PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
    public static void main(String[] args) {
        int m=sc.nextInt();
        int q=sc.nextInt();
        int[] a=new int[100005];
        int[] b=new int[100005];
        long ans=0;
        while (q-->0){
            int opt=sc.nextInt();
            int num=sc.nextInt();
            if (opt==1){
                a[num]++;
                if (a[num]==1){
                    if (num-3>=1) {
                        if(b[num-3]==0)ans++;
                        b[num-3]++;
                    }
                    if (num+3<=10) {
                        if (b[num+3]==0)ans++;
                        b[num+3]++;
                    }
                }
            }
            else if(opt==2){
                a[num]--;
                if (a[num]==0) {
                    if (num-3>=1) {
                        if(b[num-3]==1)ans--;
                        b[num-3]--;
                    }
                    if (num+3<=10) {
                        if(b[num+3]==1)ans--;
                        b[num+3]--;
                    }
                }
            }
            out.println(ans);
        }
        out.flush();
    }
    static class Read {
        BufferedReader br;
        StringTokenizer st;

        public Read(InputStream in) {
            br = new BufferedReader(new InputStreamReader(in), 16384);
            eat("""");
        }

        public void eat(String s) {
            st = new StringTokenizer(s);
        }

        public String nextLine() {
            try {
                return br.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        public boolean hasNext() {
            while (!st.hasMoreTokens()) {
                String s = nextLine();
                if (s == null)
                    return false;
                eat(s);
            }
            return true;
        }

        public String next() {
            hasNext();
            return st.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }
    }
}"
6,D,Java,60968436,2023-02-24 19:24:27,EGOIST9029,运行超时,"import java.util.*;

public class Main{
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int m  = scanner.nextInt();
        int q = scanner.nextInt();
        Set<Integer> set = new HashSet<>();
        int[] count = new int[m+1];
        for(int i = 0;i<q;i++){
            int op = scanner.nextInt();
            int num = scanner.nextInt();
            if(op==1){
                count[num]++;
                if(num-3>0){
                    set.add(num-3);
                }
                if(num+3<=m){
                    set.add(num+3);
                }
            }else {
                count[num]--;
                if(count[num]==0){
                    if(num - 6 <= 0 || count[num - 6] == 0){
                        set.removeIf(integer -> integer == num - 3);
                    }
                    if(num+6>m||count[num+6]==0){
                        set.removeIf(integer -> integer == num + 3);
                    }
                }
            }
            System.out.println(set.size());
        }
    }
}"
7,D,Java,60968503,2023-02-24 19:25:04,ONE_yy31319,执行出错,"import java.util.*;
import java.math.*;
import java.io.*;

public class Main {

    static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(in);
    static PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));

    public static void main(String[] args) throws Exception {
        
        Map<Integer, Integer> map = new HashMap<>();
        
        String[] mq = in.readLine().split("" "");
        int m = Integer.parseInt(mq[0]), q = Integer.parseInt(mq[1]);
        int[] arr = new int[m + 1];
        while (q-- > 0) {
            String[] s = in.readLine().split("" "");
            int a = Integer.parseInt(s[0]), b = Integer.parseInt(s[1]);
            if (a == 1) {
                if (b - 3 >= 1) map.put(b - 3, map.getOrDefault(b - 3, 0) + 1);
                if (b + 3 <= m) map.put(b + 3, map.getOrDefault(b + 3, 0) + 1);
            } else {
                if (b - 3 >= 1) map.put(b - 3, map.getOrDefault(b - 3, 0) - 1);
                if (b + 3 <= m) map.put(b + 3, map.getOrDefault(b + 3, 0) - 1);
                if (map.get(b - 3) == 0) map.remove(b - 3);
                if (map.get(b + 3) == 0) map.remove(b + 3);
            }
            out.println(map.size());
        }



        out.flush();
        in.close();
    }  
}"
8,D,Java,60968609,2023-02-24 19:26:13,山东协和学院_张福旭,答案错误,"import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
    static Read sc=new Read(System.in);
    static PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
    public static void main(String[] args) {
        int m=sc.nextInt();
        int q=sc.nextInt();
        int[] a=new int[100005];
        int[] b=new int[100005];
        long ans=0;
        while (q-->0){
            int opt=sc.nextInt();
            int num=sc.nextInt();
            if (opt==1){
                a[num]++;
                if (a[num]==1){
                    if (num-3>=1) {
                        if(b[num-3]==0)ans++;
                    }
                    if (num+3<=10) {
                        if (b[num+3]==0)ans++;
                    }
                }
                if (num-3>=1) b[num-3]++;
                if (num+3<=m) b[num+3]++;
            }
            else if(opt==2){
                a[num]--;
                if (a[num]==0) {
                    if (num-3>=1) {
                        if(b[num-3]==1)ans--;
                    }
                    if (num+3<=10) {
                        if(b[num+3]==1)ans--;
                        b[num+3]--;
                    }
                }
                if (num-3>=1) b[num-3]--;
                if (num+3<=m) b[num+3]--;
            }
            out.println(ans);
        }
        out.flush();
    }
    static class Read {
        BufferedReader br;
        StringTokenizer st;

        public Read(InputStream in) {
            br = new BufferedReader(new InputStreamReader(in), 16384);
            eat("""");
        }

        public void eat(String s) {
            st = new StringTokenizer(s);
        }

        public String nextLine() {
            try {
                return br.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        public boolean hasNext() {
            while (!st.hasMoreTokens()) {
                String s = nextLine();
                if (s == null)
                    return false;
                eat(s);
            }
            return true;
        }

        public String next() {
            hasNext();
            return st.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }
    }
}"
9,D,Java,60968635,2023-02-24 19:26:29,孤独二叉树,答案正确,"import java.util.Scanner;
public class Main {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int m = in.nextInt();
		int q = in.nextInt();
		int[] arr = new int[m+1];
		int ans = 0;
		for(int i =0;i<q;i++) {
			int n = in.nextInt();
			int b = in.nextInt();
			if(n==1) {
				if(b-3>0) {
					arr[b-3]++;
					if(arr[b-3]==1)ans++;
				}
				if(b+3<=m) {
					arr[b+3]++;
					if(arr[b+3]==1)ans++;
				}	
				System.out.println(ans);
			}
			else {
				if(b-3>0&&arr[b-3]>0) {
					arr[b-3]--;
					if(arr[b-3]==0)ans--;
				}
				if(b+3<=m&&arr[b+3]>0) {
					arr[b+3]--;
					if(arr[b+3]==0)ans--;
				}
				System.out.println(ans);	
			}
		}
	}
}"
10,D,Java,60968659,2023-02-24 19:26:48,人工智能3211江海洋,答案正确,"import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int m = in.nextInt();
            int q = in.nextInt();
            int[] a = new int[m+1];
            int cnt = 0;
            for (int i = 0; i < q; i++) {
                int op = in.nextInt();
                int num = in.nextInt();
                int a1 = num-3,a2 = num+3;
                if(op==1) {
                    if (a1 >= 1 && a1 <= m){
                        a[a1]++;
                        if(a[a1]==1)
                            cnt++;
                    }
                        
                    if (a2 >= 1 && a2 <= m) {
                        a[a2]++;
                        if(a[a2]==1)
                            cnt++;
                    }
                }
                else {
                    if (a1 >= 1 && a1 <= m){
                        a[a1]--;
                        if(a[a1]==0)
                            cnt--;
                    }
                        
                    if (a2 >= 1 && a2 <= m){
                        a[a2]--;
                        if(a[a2]==0)
                            cnt--;
                    }
                        
                }
                out.println(cnt);
            }

        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        boolean hasNext() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e) {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }

    }
}
"
11,D,Java,60968710,2023-02-24 19:27:29,山东协和学院_张福旭,答案正确,"import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
    static Read sc=new Read(System.in);
    static PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
    public static void main(String[] args) {
        int m=sc.nextInt();
        int q=sc.nextInt();
        int[] a=new int[1000005];
        int[] b=new int[1000005];
        long ans=0;
        while (q-->0){
            int opt=sc.nextInt();
            int num=sc.nextInt();
            if (opt==1){
                a[num]++;
                if (a[num]==1){
                    if (num-3>=1) {
                        if(b[num-3]==0)ans++;
                    }
                    if (num+3<=m) {
                        if (b[num+3]==0)ans++;
                    }
                }
                if (num-3>=1) b[num-3]++;
                if (num+3<=m) b[num+3]++;
            }
            else if(opt==2){
                a[num]--;
                if (a[num]==0) {
                    if (num-3>=1) {
                        if(b[num-3]==1)ans--;
                    }
                    if (num+3<=m) {
                        if(b[num+3]==1)ans--;
                    }
                }
                if (num-3>=1) b[num-3]--;
                if (num+3<=m) b[num+3]--;
            }
            out.println(ans);
        }
        out.flush();
    }
    static class Read {
        BufferedReader br;
        StringTokenizer st;

        public Read(InputStream in) {
            br = new BufferedReader(new InputStreamReader(in), 16384);
            eat("""");
        }

        public void eat(String s) {
            st = new StringTokenizer(s);
        }

        public String nextLine() {
            try {
                return br.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        public boolean hasNext() {
            while (!st.hasMoreTokens()) {
                String s = nextLine();
                if (s == null)
                    return false;
                eat(s);
            }
            return true;
        }

        public String next() {
            hasNext();
            return st.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }
    }
}"
12,D,Java,60969144,2023-02-24 19:32:17,232132323,答案正确,"import java.io.OutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.util.*;
import java.io.BufferedReader;
import java.io.InputStreamReader;
public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int m = in.nextInt();
            int q = in.nextInt();
            Map<Integer,Integer> map = new HashMap<>();
            int ans = 0;
            while (q-- > 0){
                int op = in.nextInt();
                int num = in.nextInt();
                if (op == 1){
                    map.put(num,map.getOrDefault(num,0)+1);
                    if (map.get(num) == 1) {
                        if (num - 3 > 0 && !map.containsKey(num - 6))
                            ans++;
                        if (num + 3 <= m && !map.containsKey(num + 6))
                            ans++;
                    }
                }
                else {
                    map.put(num,map.get(num)-1);
                    if (map.get(num) == 0){
                        map.remove(num);
                        if (num - 3 > 0 && !map.containsKey(num - 6))
                            ans--;
                        if (num + 3 <= m && !map.containsKey(num + 6))
                            ans--;
                    }
                }
                out.println(ans);
            }
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

    }
}"
13,D,Java,60969150,2023-02-24 19:32:26,ONE_yy31319,答案正确,"import java.util.*;
import java.math.*;
import java.io.*;

public class Main {

    static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(in);
    static PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));

    public static void main(String[] args) throws Exception {
        
        Map<Integer, Integer> map = new HashMap<>();
        
        String[] mq = in.readLine().split("" "");
        int m = Integer.parseInt(mq[0]), q = Integer.parseInt(mq[1]);
        while (q-- > 0) {
            String[] s = in.readLine().split("" "");
            int a = Integer.parseInt(s[0]), b = Integer.parseInt(s[1]);
            if (a == 1) {
                if (b - 3 >= 1) map.put(b - 3, map.getOrDefault(b - 3, 0) + 1);
                if (b + 3 <= m) map.put(b + 3, map.getOrDefault(b + 3, 0) + 1);
            } else {
                if (b - 3 >= 1) map.put(b - 3, map.getOrDefault(b - 3, 0) - 1);
                if (b + 3 <= m) map.put(b + 3, map.getOrDefault(b + 3, 0) - 1);
                if (b - 3 >= 1 && map.get(b - 3) == 0) map.remove(b - 3);
                if (b + 3 <= m && map.get(b + 3) == 0) map.remove(b + 3);
            }
            out.println(map.size());
        }



        out.flush();
        in.close();
    }  
}"
14,D,Java,60969202,2023-02-24 19:33:03,EGOIST9029,运行超时,"import java.util.*;

public class Main{
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int m  = scanner.nextInt();
        int q = scanner.nextInt();
        int ans = 0;
        int[] count = new int[m+1];
        for(int i = 0;i<q;i++){
            int op = scanner.nextInt();
            int num = scanner.nextInt();
            if(op==1){
                if(num-3>0&&count[num]==0){
                    if(num-6<=0||count[num-6]==0){
                        ans++;
                    }
                }
                if(num+3<=m&&count[num]==0){
                    if(num+6>m||count[num+6]==0){
                        ans++;
                    }
                }
                count[num]++;
            }else {
                count[num]--;
                if(count[num]==0){
                    if(num - 6 <= 0 || count[num - 6] == 0){
                        ans--;
                    }
                    if(num+6>m||count[num+6]==0){
                        ans--;
                    }
                }
            }
            System.out.println(ans);
        }
    }
}"
15,D,Java,60969245,2023-02-24 19:33:31,就，很有意思,运行超时,"import java.util.HashMap;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int m = in.nextInt(), times = in.nextInt();
        HashMap<Integer, Integer> map = new HashMap<>();
        int[] result = new int[times];
        for (int i = 0; i < times; i++) {
            int op = in.nextInt(), num = in.nextInt();
            int first = num - 3, second = num + 3;
            if (op == 1){
                if (first > 0) map.put(first, map.getOrDefault(first, 0) + 1);
                if (second <= m) map.put(second, map.getOrDefault(second, 0) + 1);
            }else {
                if (first > 0) {
                    map.put(first, map.get(first) - 1);
                    if (map.get(first) == 0) map.remove(first);
                }
                if (second <= m) {
                    map.put(second, map.get(second) - 1);
                    if (map.get(second) == 0) map.remove(second);
                }
            }
            result[i] = map.size();
        }
        for (int i : result) {
            System.out.println(i);
        }
    }
}"
16,D,Java,60969290,2023-02-24 19:33:59,迷你滨,答案正确,"import java.util.*;
import java.io.*;


public class Main {
	static int n,m,mod=(int)1e9+7,maxn=1000002;
	static long ans=0,INF=(long)1e18;
	static Scanner sc = new Scanner (System.in);
	static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
	static StreamTokenizer st = new StreamTokenizer(bf);
	static PrintWriter pw = new PrintWriter(System.out);
	
	public static void main(String[]args) throws IOException{
		int t = 1;
		//t = Integer.parseInt(bf.readLine());
		while(t-->0) solve();
		pw.flush();
	}
	
	static int I() throws IOException{
		st.nextToken();
		return (int)st.nval;
	}
	
	
	static void solve() throws IOException{
		int m=I(),q=I();
		Map<Integer,Integer> mp = new HashMap<>();
		while(q-->0) {
			int op = I(),num = I();
			if(op == 1) {
				if(num+3<=m) {
					if(!mp.containsKey(num+3)) mp.put(num+3, 1);
					else mp.put(num+3, mp.get(num+3)+1);
				}
				if(num-3>=1) {
					if(!mp.containsKey(num-3)) mp.put(num-3, 1);
					else mp.put(num-3, mp.get(num-3)+1);
				}
				
			}
			else {
				if(num+3 <=m) {
					mp.put(num+3, mp.get(num+3)-1);
					if(mp.get(num+3) <= 0) mp.remove(num+3);
				}
				if(num-3>0) {
					mp.put(num-3, mp.get(num-3)-1);
					if(mp.get(num-3) <=0) mp.remove(num-3);
				}
				
				
			}
			pw.println(mp.size());
		}
	}
	
}
"
17,D,Java,60969419,2023-02-24 19:35:21,就，很有意思,运行超时,"import java.util.HashMap;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int m = in.nextInt(), times = in.nextInt();
        HashMap<Integer, Integer> map = new HashMap<>();
        int[] result = new int[times];
        for (int i = 0; i < times; i++) {
            int op = in.nextInt(), num = in.nextInt();
            int first = num - 3, second = num + 3;
            if (op == 1){
                if (first > 0) map.put(first, map.getOrDefault(first, 0) + 1);
                if (second <= m) map.put(second, map.getOrDefault(second, 0) + 1);
            }else {
                if (first > 0) {
                    map.put(first, map.get(first) - 1);
                    if (map.get(first) == 0) map.remove(first);
                }
                if (second <= m) {
                    map.put(second, map.get(second) - 1);
                    if (map.get(second) == 0) map.remove(second);
                }
            }
            result[i] = map.size();
        }
        for (int i : result) {
            System.out.println(i);
        }
    }
}"
18,D,Java,60969536,2023-02-24 19:36:49,EGOIST9029,运行超时,"import java.util.*;

public class Main{
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int m  = scanner.nextInt();
        int q = scanner.nextInt();
        scanner.nextLine();
        int ans = 0;
        int[] count = new int[m+1];
        for(int i = 0;i<q;i++){
            String[] s = scanner.nextLine().split("" "");
            int op = Integer.parseInt(s[0]);
            int num = Integer.parseInt(s[1]);
            boolean b = num + 6 > m || count[num + 6] == 0;
            boolean c = num-6<=0||count[num-6]==0;
            if(op==1){
                if(num-3>0&&count[num]==0&&c){
                    ans++;
                }
                if(num+3<=m&&count[num]==0&&b){
                    ans++;
                }
                count[num]++;
            }else {
                count[num]--;
                if(count[num]==0){
                    if(c){
                        ans--;
                    }
                    if(b){
                        ans--;
                    }
                }
            }
            System.out.println(ans);
        }
    }
}"
19,D,Java,60969670,2023-02-24 19:38:04,智破云霄,答案错误,"
import java.util.*;
import java.io.*;
public class Main {
	
public static void main(String[] args) {
 InputReader in = new InputReader(System.in);
PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
int m = in.nextInt();
int T = in.nextInt();
Set<Integer> set = new HashSet<>();
int[] num = new int[m+1];
int[] cnt = new int[m+1];
while(T-->0)
{
	int res = 0;
	int a = in.nextInt();
	int b = in.nextInt();
	if(a == 1)
	{
		int k = b+3;
		int p = b - 3;
		if(b+3<=m )
			cnt[b+3] ++;
		 if(b-3>=0 )
			cnt[b-3] ++;
		 if(b+3<=m && cnt[k] == 1) set.add(k);
		 if(b-3>=0 && cnt[p] == 1) set.add(p);
			 
	}
	else {
		int k = b+3;
		int p = b - 3;
		if(b+3<=m )
			cnt[k] --;
		 if(b-3>=0 )
			cnt[p] --;
		 if(b+3<=m && cnt[k] == 0) set.remove(k);
		 if(b-3>=0 && cnt[p] == 0) set.remove(p);
	}
	
	
	out.println(set.size());
}


	out.flush();
}


}


class InputReader {
    private final BufferedReader buf;
    private StringTokenizer tkl;

    public InputReader(InputStream is) {
        buf = new BufferedReader(new InputStreamReader(is));
    }

    public boolean hasNext() {
        try {
            while (tkl == null || !tkl.hasMoreElements()) tkl = new StringTokenizer(buf.readLine());
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public String next() {
        return hasNext() (?) tkl.nextToken() : null;
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }
}
"
20,D,Java,60969846,2023-02-24 19:40:15,是单身的查理斯很野蛮,答案正确,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int m = sc.nextInt();
        int q=sc.nextInt();
        int[] arr=new int[m];
        int count=0;
        while (q-->0){
            int a=sc.nextInt();
            int b=sc.nextInt();
            if(a==1){
                if(b-1-3>=0){
                    arr[b-1-3]=arr[b-1-3]+1;
                    if(arr[b-1-3]==1)
                        count++;
                }

                if(b-1+3<m){
                    arr[b-1+3]=arr[b-1+3]+1;
                    if(arr[b-1+3]==1)
                        count++;
                }

            }else {
                if(b-1-3>=0){
                    arr[b-1-3]=arr[b-1-3]-1;
                    if(arr[b-1-3]==0)
                        count--;
                }
                if(b-1+3<m){
                    arr[b-1+3]=arr[b-1+3]-1;
                    if(arr[b-1+3]==0)
                        count--;
                }


            }


            System.out.println(count);
        }

    }
}"
21,D,Java,60969904,2023-02-24 19:40:54,huvz,运行超时,"import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int m=in.nextInt();
        int q=in.nextInt();
        //boolean[] num1 = new boolean[m+1];
        int[] num2 = new int[m+1];
        int[] num1 = new int[m+3];
        for(int i=1;i<=m;i++) {num2[i]=0;}
        while(q-->0)
        {
            int cnt=0;
            int op = in.nextInt();
            int num = in.nextInt();
            if(op==1)
            {
                //num2[num]++;
                if(num+3<=m){num2[num+3]++;}
                if(num-3>=1){num2[num-3]++;}
            }
            else
            {
                //if(num2[ num]==0){
                if(num+3<=m)num2[num+3]--;
                if(num-3>=1)num2[num-3]--;
                //}
            }
            
            for(int i=1;i<=m;i++) if(num2[i]>0)cnt++;
            System.out.println(cnt);
        }
    }
}"
22,D,Java,60969918,2023-02-24 19:41:00,智破云霄,答案错误,"
import java.util.*;
import java.io.*;
public class Main {
	
public static void main(String[] args) {
 InputReader in = new InputReader(System.in);
PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
int m = in.nextInt();
int T = in.nextInt();
Set<Integer> set = new HashSet<>();
int[] num = new int[m+1];
int[] cnt = new int[m+1];
while(T-->0)
{
	int res = 0;
	int a = in.nextInt();
	int b = in.nextInt();
	if(a == 1)
	{
		int k = b+3;
		int p = b - 3;
		int f1 = 0;
		int f2 = 0;
		if(b+3<=m )
			{cnt[b+3] ++;f1=1;}
		 if(b-3>=0 )
			{cnt[b-3] ++;f2 = 1;}
		 if(f1 == 1 && b+3<=m && cnt[k] == 1) set.add(k);
		 if(f2 == 1 && b-3>=0 && cnt[p] == 1) set.add(p);
			 
	}
	else {
		int k = b+3;
		int p = b - 3;
		int f1 = 0;
		int f2 = 0;
		if(b+3<=m )
			{cnt[k] --;f1 =1;}
		 if(b-3>=0 )
			{cnt[p] --;f2 =1;}
		 if(f1 == 1 && b+3<=m && cnt[k] == 0) set.remove(k);
		 if(f2 == 1 && b-3>=0 && cnt[p] == 0) set.remove(p);
	}
	
	
	out.println(set.size());
}


	out.flush();
}


}


class InputReader {
    private final BufferedReader buf;
    private StringTokenizer tkl;

    public InputReader(InputStream is) {
        buf = new BufferedReader(new InputStreamReader(is));
    }

    public boolean hasNext() {
        try {
            while (tkl == null || !tkl.hasMoreElements()) tkl = new StringTokenizer(buf.readLine());
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public String next() {
        return hasNext() (?) tkl.nextToken() : null;
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }
}
"
23,D,Java,60970028,2023-02-24 19:42:16,小怂很怂,答案正确,"
import java.io.*;

/**
 * @ClassName 不点两面
 * @Description TODO
 * @Author 小怂很怂
 * @Date 2023/2/24 19:35
 * @Version 1.0
 **/
public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(br);
    static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));

    public static void main(String[] args) throws Exception {
        int n=nextInt();
        int m=nextInt();
        int count=0;
        int []arr=new int[n+10];
        for (int i=0;i<m;i++){
            int a=nextInt();
            int b=nextInt();
            if (a==1){
                arr[b+3]+=1;
                if (arr[b+3]==1&&b+3<=n) count+=1;
                if (b>3){
                    arr[b-3]+=1;
                    if (arr[b-3]==1) count+=1;
                }
            }else if (a==2){
                arr[b+3]-=1;
                if (arr[b+3]==0&&b+3<=n) count-=1;
                if (b>3){
                    arr[b-3]-=1;
                    if (arr[b-3]==0) count-=1;
                }
            }
            pw.println(count);
        }
        pw.flush();//必须加
    }

    public static int nextInt() throws Exception {//int型
        st.nextToken();
        return (int) st.nval;
    }

    public static long nextLong() throws Exception {//long型
        st.nextToken();
        return (long) st.nval;
    }
}
"
24,D,Java,60970060,2023-02-24 19:42:35,EGOIST9029,答案错误,"import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;

public class Main{
    public static PrintWriter out = new PrintWriter(System.out);
    public static BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
    public static void main(String[] args)throws Exception {
        String[] s = reader.readLine().split("" "");
        int m  = Integer.parseInt(s[0]);
        int q = Integer.parseInt(s[1]);
        int ans = 0;
        int[] count = new int[m+1];
        for(int i = 0;i<q;i++){
            s = reader.readLine().split("" "");
            int op = Integer.parseInt(s[0]);
            int num = Integer.parseInt(s[1]);
            boolean b = num + 6 > m || count[num + 6] == 0;
            boolean c = num-6<=0||count[num-6]==0;
            if(op==1){
                if(count[num]==0){
                    if(num-3>0&&c){
                        ans++;
                    }
                    if(num+3<=m&&b){
                        ans++;
                    }
                }
                count[num]++;
            }else {
                count[num]--;
                if(count[num]==0){
                    if(c){
                        ans--;
                    }
                    if(b){
                        ans--;
                    }
                }
            }
            System.out.println(ans);
        }
    }
}"
25,D,Java,60970162,2023-02-24 19:43:49,陈力明,答案正确,"


import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.lang.invoke.MethodHandles;
import java.util.*;



import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
 
public class Main{
 
static int []f;
//static int []f2;
static int []size;
//static int []size2;
//static int []a=new int [500001];
static int max=Integer.MAX_VALUE;

static Set<Integer>set;
static int k;
static long mod= 998244353;
static int res=0;
static int n,m;
static int x1,y1;
 static List<Integer>[]ans;
 static char [][]c;
 private static int[] dx = {-1, 0, 1, 0}, dy = {0, 1, 0, -1};
	public static void main(String []args) {
		MyScanner s=new MyScanner();
		PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
		int m=s.nextInt();
		int q=s.nextInt();
		int []f=new int [m+1];
        boolean []v=new boolean[m+1];
        int ans=0;
		while(q-->0)
		{
			int x=s.nextInt();
			int y=s.nextInt();
			if(x==1)
			{
				f[y]++;
                if(y+3<=m&&!v[y+3])
                {
                    v[y+3]=true;
                    ans++;
                }
                 if(y-3>=1&&!v[y-3])
                {
                    v[y-3]=true;
                    ans++;
                }
                
			}
			else
            {
                f[y]--;
             if(f[y]==0)
             {
                 if(y+3<=m&&v[y+3])
                {
                     if(y+6<=m&&f[y+6]>0)
                     {
                         
                     }
                    else
                    {v[y+3]=false;
                    ans--;
                         }
                }
                 if(y-3>=1&&v[y-3])
                {
                     if(y-6>=1&&f[y-6]>0)
                     {
                         
                     }
                   
                     else 
                     {v[y-3]=false;
                    ans--;
                          }
                }
             }
            }
			
			
			out.println(ans);
			
		}
		
		
		
		

	out.close();
	}
public static void reverse(int []a)
{
	int l=0,r=a.length-1;
	while(l<r)
	{
		int t=a[l];
		a[l]=a[r];
		a[r]=t;
		l++;r--;
	}
}
	public static long sum (int x,long mod)
	{
		
	long sum=1;
		for(int i = 2; i * i <= x; ++i){
			long temp = 1;
			if(x % i == 0){
				long j = i;
				while(x % i == 0){
					temp += j;
					j *= i;
					x /= i;
				}
				sum = (sum * temp) % mod;
			}

	
	}
		if(x > 1) sum = (sum * (1 + x)) % mod;
		return sum;
	}
	public static long cc(int n,int m)
	{
		long sum = 1;
	for(int i=1;i<=n; i++) {
		sum=sum*(m-n+i)/i;
	}
	return sum;

		
	}
	public static long is(int mid,long []f,int d)
	{
		long ans=0;
		for(int i=0;i<d;i++)
		{
			
			int   k=i%mid;
			if(k>f.length-1)continue;
			ans+=f[f.length-k-1];
		}
		return ans;
	}
	 private static void bfs(int[][] st, int a, int b) {
	        Queue<int[]> q = new LinkedList<>();
	        q.add(new int[]{a, b});
	        st[a][b] = 0;
	        while (!q.isEmpty()) {
	            int[] t = q.poll();
	            int x = t[0], y = t[1];
	            for (int i = 0; i < 4; i++) {
	                int nx = x + dx[i];
	                int ny = y + dy[i];
	                if (nx <n && nx >= 0 && ny <m && ny >= 0 && c[nx][ny] != '*' && st[nx][ny] == -1) {
	                    q.add(new int[]{nx, ny});
	                    st[nx][ny] = st[x][y] + 1;
	                }
	            }
	        }
	    }
	public static boolean is(String a,String b)
	{
		for(int i=0;i<=b.length()-a.length();i++)
		{
			if(b.substring(i,i+a.length()).equals(a))
				return true;
		}
		return false;
		
	}
	public  static void dfs(int u,int k,List <Integer>[]list)
	{
		res=Math.max(res,k);
		for(int x:list [u])
		{
			boolean c=false;
			int kk=0;
			int min=Math.min(f[u], f[x]);
			for(int b:ans[min])
			{
				if(f[u]%b==0&&f[x]%b==0)
				{
					kk++;
					if(kk>=2) {
					c=true;break;
					}
					
				}
				
			}
			if(c)
				dfs(x,k+1,list);
			else dfs(x,1,list);
		}
				
			
		
		
	}
	
	
	  public static boolean is(int  n) {
		    if (n <= 3) {
		        return n > 1;
		    }
		    // 只有6x-1和6x+1的数才有可能是质数
		    if (n % 6 != 1 && n % 6 != 5) {
		        return false;
		    }
		    // 判断这些数能否被小于sqrt(n)的奇数整除
		    int sqrt = (int) Math.sqrt(n);
		    for (int i = 5; i <= sqrt; i += 6) {
		        if (n % i == 0 || n % (i + 2) == 0) {
		            return false;
		        }
		    }
		    return true;
		}
	public static  long find(long k)
	{
		long l=0;long r=(long)2e7;
		while(l<r)
		{
			long mid=l+r>>1;
			if(mid*mid>=k)r=mid;
			else l=mid+1;
		}
		return l;
	}
	public static boolean is(int x,int y,int k,int [][]f)
	{
		int ans=1;
		
		for(int i=x-1;i>=0;i--)
		{
			if(f[i][y]==f[x][y])
				ans++;
			else break;
		}
		for(int i=x+1;i<f.length;i++)
		{
			if(f[i][y]==f[x][y])
				ans++;
			else break;
		}
		if(ans>=k)return true;
		ans=1;
		for(int i=y-1;i>=0;i--)
		{
			if(f[x][i]==f[x][y])
				ans++;
			else break;
		}
		for(int i=y+1;i<f[0].length;i++)
		{
			if(f[x][i]==f[x][y])
				ans++;
			else break;
		}
		if(ans>=k)return true;
		ans=1;
		for(int i=x-1,j=y-1;i>=0&&j>=0;i--,j--)
		{
			if(f[i][j]==f[x][y])
				ans++;
			else break;
		}
		for(int i=x+1,j=y+1;i<f.length&&j<f[0].length;i++,j++)
		{
			if(f[i][j]==f[x][y])
				ans++;
			else break;
		}
		if(ans>=k)return true;
		ans=1;
		for(int i=x-1,j=y+1;i>=0&&j<f[0].length;i--,j++)
		{
			if(f[i][j]==f[x][y])
				ans++;
			else break;
		}
		for(int i=x+1,j=y-1;i<f.length&&j>=0;i++,j--)
		{
			if(f[i][j]==f[x][y])
				ans++;
			else break;
		}
		if(ans>=k)return true;
		return false;
	}
	
		
	
	
public static void dfs(int x,int y,char [][]c,int [][]v){
	if(v[x][y]!=0)
	{
		return ;
	}
	int []dx={1,-1,0,0};
	
	int []dy= {0,0,1,-1};
	
	v[x][y]=1;
	for(int i=0;i<4;i++)
	{
		int x1=x+dx[i];
		
		int y1=y+dy[i];
		if(x1<0||x1>=v.length||y1<0||y1>=v[0].length||v[x1][y1]==1||c[x1][y1]=='#')continue;
		dfs(x1,y1,c,v);
		
	}
		
		
}	
public static void swap(int []a) {
		int l=0,r=a.length-1;
		while(l<r) {
			int t=a[l];
			a[l]=a[r];
			a[r]=t;
			l++;r--;
		}
	}

public static int find (int []father,int x) {
		if(x!=father[x])
			x=find(father,father[x]);
		return father[x];
	}
public static void union(int []father,int x,int y,int []size) {
	x=find(father,x);
	y=find(father,y);
	if(x==y)
		return ;
	if(size[x]<size[y]) {
		 int tem=x;
         x=y;
         y=tem;
	}
	father[y]=x;
	size[x]+=size[y];
return ;
}
		
					
public static void shufu(int []f) {
		for(int i=0;i<f.length;i++) {
			int k=(int)(Math.random()*(f.length));
			int t=f[k];
			
			f[k]=f[0];
			f[0]=t;
			
		}
	}
public static void shufu1(long []f) {
	for(int i=0;i<f.length;i++) {
		int k=(int)(Math.random()*(f.length));
		long t=f[k];
		f[k]=f[0];
		f[0]=t;
	}
}
public  static int  gcd(int x,int y) {
		return y==0(?)x:gcd(y,x%y);
	}
 
 
public  static int  lcm(int x,int y) {
		
		return x*y/gcd(x,y);
}
		
	
	
		
		
	
	
		
	
/*					
public static void buildertree(int k,int l,int r) {
		if(l==r)
		{
			f[k]=a[l];
			return ;
		}
		int m=l+r>>1;
		buildertree(k+k,l,m);
		buildertree(k+k+1,m+1,r);
		f[k]=	
	
	}
public static	void update(int u,int l,int r,int x,int c)
{
    if(l==x && r==x)
    {
        f[u]=c;
        return;
    }
    int mid=l+r>>1;
    if(x<=mid)update(u<<1,l,mid,x,c);
    else if(x>=mid+1)update(u<<1|1,mid+1,r,x,c);
   	f[u]=Math.max(f[u+u], f[u+u+1]);
}
	
public static int query(int k,int l,int r,int x,int y) {
		if(x==l&&y==r) {
			return f[k];
		}
		int m=l+r>>1;
		if(y<=m) {
			return query(k+k,l,m,x,y);
		}
		else if(x>m)return query(k+k+1,m+1,r,x,y);
		else  {
			int i=query(k+k,l,m,x,m),j=query(k+k+1,m+1,r,m+1,y);
		return Math.max(j, Math.max(i+j, i));
		
		}
	}
	
public static void calc(int k,int l,int r,int x,int z) {
 
			f[k]+=z;
			if(l==r) {
				return ;
			}
			int m=l+r>>1;
    		if(x<=m)
    			calc(k+k,l,m,x,z);
    		else calc(k+k+1,m+1,r,x,z);
			
			
		}
	
				
			
 
		*/
		
				
	
			
	
			
	
 
	public static class MyScanner {
	    BufferedReader br;
	    StringTokenizer st;
	 
	    public MyScanner() {
	      try {
	        final String USERDIR = System.getProperty(""user.dir"");
	        String cname = MethodHandles.lookup().lookupClass().getCanonicalName().replace("".MyScanner"", """");
	        cname = cname.lastIndexOf('.') > 0 (?) cname.substring(cname.lastIndexOf('.') + 1) : cname;
	        final File fin = new File(USERDIR + ""/io/c"" + cname.substring(1,5) + ""/"" + cname + "".in"");
	        br = new BufferedReader(new InputStreamReader(fin.exists()
	            (?) new FileInputStream(fin) : System.in));
	      } catch (Exception e) {
	        br = new BufferedReader(new InputStreamReader(System.in));
	      }
	    }
	 
	    public String next() {
	      try {
	        while (st == null || !st.hasMoreElements()) {
	          st = new StringTokenizer(br.readLine());
	        }
	        return st.nextToken();
	      } catch (Exception e) {
	        throw new RuntimeException(e);
	      }
	    }
	 
	    public int nextInt() {
	      return Integer.parseInt(next());
	    }
	 
	    public long nextLong() {
	      return Long.parseLong(next());
	    }
	  }
	
		}"
26,D,Java,60970287,2023-02-24 19:45:32,里卡多·伊泽克松·多斯·桑托斯·莱特,答案错误,"import java.io.*;
import java.util.*;
import java.math.*;
public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {

        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int m= in.nextInt();
            int q= in.nextInt();
            int[]pai=new int[m+6];
            int[]sum=new int[m+6];
            int he=0;
            for (int i = 0; i < q; i++) {
                int op= in.nextInt();
                int num= in.nextInt();
                if (op==1){
                    if (pai[num-1]==0&&num>3){
                        he++;
                    }
                    pai[num-1]++;
                    if (pai[num+5]==0&&num<m-3){
                        he++;
                    }
                    pai[num+5]++;
                }
                else {
                    if (pai[num-1]==1&&num>3){
                        he--;
                    }
                    pai[num-1]--;
                    if (pai[num+5]==1&&num<m-3){
                        he--;
                    }
                    pai[num+5]--;
                }
                System.out.println(he);


            }


        }

    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}

"
27,D,Java,60970368,2023-02-24 19:46:22,闵其其,答案正确,"import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int m = in.nextInt();
            int q = in.nextInt();
            int[] pai = new int[m+1];
            int sum = 0;
            ArrayList<Integer> list = new ArrayList<>();
//            Set<Integer> set = new HashSet<>();
            for (int round = 0; round < q; round++) {
                int o = in.nextInt();
                int num = in.nextInt();
                if(o==1){
                    if(num-3>0){
                        if(pai[num-3]==0){
                            sum++;
                        }
                        pai[num-3]++;
                    }
                    if(num+3<=m){
                        if(pai[num+3]==0){
                            sum++;
                        }
                        pai[num+3]++;
                    }
                }
                else {
                    if(num-3>0){
                        pai[num-3]--;
                        if(pai[num-3]==0)
                            sum--;
                    }
                    if(num+3<=m){
                        pai[num+3]--;
                        if(pai[num+3]==0)
                            sum--;
                    }
                }
                out.println(sum);
            }
        }
    }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}
"
28,D,Java,60970506,2023-02-24 19:47:59,Garett,答案正确,"import java.math.BigInteger;
import java.util.*;
import java.io.*;


/**
 * Built using CHelper plug-in
 * Actual solution is at the top
 */
public class Main {
    public static void main(String[] args) throws IOException {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader sc = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        Task solver = new Task();
        solver.solve(1, sc, out);
        out.close();
    }

    static class Task {
        public static final long INF=Long.MAX_VALUE/4;

        public void solve(int testNumber, InputReader sc, PrintWriter out) throws IOException {
            int m=sc.nextInt();
            int q=sc.nextInt();
            int[] cnt=new int[m+1];
            int cur=0;
            for(int i=0;i<q;i++){
                int op=sc.nextInt();
                int num=sc.nextInt();
                if(op==1){
                    if(num-3>0){
                        cnt[num-3]++;
                        if(cnt[num-3]==1)
                            cur++;
                    }
                    if(num+3<=m){
                        cnt[num+3]++;
                        if(cnt[num+3]==1)
                            cur++;
                    }
                    
                    
                }else{
                    if(num-3>0){
                        cnt[num-3]--; 
                        if(cnt[num-3]==0)
                            cur--;
                    }
                    if(num+3<=m){
                        cnt[num+3]--;
                        if(cnt[num+3]==0)
                            cur--;
                    }


                }
                out.println(cur);
            }
        }

    }

    static class InputReader {
        private InputStreamReader reader;
        private char[] buf;
        private int len, now;

        public InputReader(InputStream stream) {
            reader = new InputStreamReader(stream);
            buf = new char[1024];
            len = 0;
            now = 0;
        }

        public String next() throws IOException {
            if (!hasNext()) throw new NullPointerException();
            StringBuilder sb = new StringBuilder();
            while (!isSpaceChar(buf[now])) {
                sb.append(buf[now]);
                if (!move()) break;
            }
            return sb.toString();
        }

        public int nextInt() throws IOException {
            if (!hasNext()) throw new NullPointerException();
            boolean x = false;
            if (buf[now] == '-') {
                x = true;
                if (!move()) throw new NumberFormatException();
            }
            int ans = 0;
            while (!isSpaceChar(buf[now])) {
                if (isNum(buf[now])) ans = ans * 10 + buf[now] - '0';
                else throw new NumberFormatException();
                if (!move()) break;
            }
            return (x (?) -1 : 1) * ans;
        }

        public String nextLine() throws IOException {
            if (!hasNextLine()) throw new NullPointerException();
            StringBuilder sb = new StringBuilder();
            while (buf[now] != '\n') {
                sb.append(buf[now]);
                if (!move()) return sb.toString();
            }
            now++;
            return sb.toString();
        }

        public long nextLong() throws IOException {
            if (!hasNext()) throw new NullPointerException();
            boolean x = false;
            if (buf[now] == '-') {
                x = true;
                if (!move()) throw new NumberFormatException();
            }
            long ans = 0;
            while (!isSpaceChar(buf[now])) {
                if (isNum(buf[now])) ans = ans * 10 + buf[now] - '0';
                else throw new NumberFormatException();
                if (!move()) break;
            }
            return (x (?) -1 : 1) * ans;
        }

        public double nextDouble() throws IOException {
            return Double.parseDouble(next());
        }

        public int nextHexInt() throws IOException {
            if (!hasNext()) throw new NullPointerException();
            boolean x = false;
            if (buf[now] == '-') {
                x = true;
                if (!move()) throw new NumberFormatException();
            }
            int ans = 0;
            while (!isSpaceChar(buf[now])) {
                if (isHex(buf[now])) ans = (ans << 4) + toHex(buf[now]);
                else throw new NumberFormatException();
                if (!move()) break;
            }
            return (x (?) -1 : 1) * ans;
        }

        public char nextChar() throws IOException {
            if (!hasNext()) throw new NullPointerException();
            char tmp = buf[now];
            move();
            return tmp;
        }
        public int next(char[] s) throws IOException {
            if (!hasNext()) throw new NullPointerException();
            int len=0;
            while (!isSpaceChar(buf[now])&&len<s.length) {
                s[len++]=buf[now];
                if (!move()) break;
            }
            return len;
        }
        public boolean hasNext() throws IOException {
            return skip();
        }

        public boolean hasNextLine() throws IOException {
            return now < len || refill();
        }

        private boolean move() throws IOException {
            now++;
            return hasNextLine();
        }

        private boolean skip() throws IOException {
            if (!hasNextLine()) return false;
            while (isSpaceChar(buf[now])) {
                if (!move()) return false;
            }
            return true;
        }

        private boolean isSpaceChar(char c) {
            return !(c >= 33 && c <= 126);
        }

        private boolean isNum(char c) {
            return c >= '0' && c <= '9';
        }

        private boolean isHex(char c) {
            return c >= '0' && c <= '9' || c >= 'A' && c <= 'F';
        }

        private int toHex(char c) {
            if (c >= '0' && c <= '9') return c - '0';
            else return c - 'A' + 10;
        }

        private boolean refill() throws IOException {
            len = reader.read(buf);
            now = 0;
            return len > 0;
        }
    }
}
"
29,D,Java,60970601,2023-02-24 19:49:12,牛客935801330号（人工智能3211吴华聪）,答案正确,"



import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {

        public void solve(int testNumber, InputReader in, PrintWriter out) {
          int m=in.nextInt();
          int q=in.nextInt();
          int sum=0;
          int vis[]=new int[m+10];
          HashMap<Integer,Integer>map=new HashMap<>();
            for (int i = 0; i <q ; i++) {
                int op=in.nextInt();
                int n=in.nextInt();
                int a=n-3;
                int b=n+3;
                if(op==1){
                    if(a>=1&&a<=m){
                        if(vis[a]==0){
                            sum++;
                        }
                        vis[a]++;
                    }
                    if(b>=1&&b<=m){
                        if(vis[b]==0){
                            sum++;
                        }

                        vis[b]++;
                    }
                    if(map.containsKey(n)){
                        int y=map.get(n);
                        map.put(n,y+1);
                    }
                    else {
                        map.put(n,1);
                    }
                }
                else {
                    if(a>=1&&a<=m){
                        if(vis[a]>0){
                            vis[a]--;
                            if(vis[a]==0){
                                sum--;
                            }
                        }
                    }
                    if(b>=1&&b<=m){
                        if(vis[b]>0){
                            vis[b]--;
                            if(vis[b]==0){
                                sum--;
                            }
                        }
                    }
                    int y=map.get(n);
                    map.put(n,y-1);
                }
                out.println(sum);
            }
        }
    }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}
"
30,D,Java,60970765,2023-02-24 19:51:16,huvz,答案正确,"import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int m=in.nextInt();
        int q=in.nextInt();
        //boolean[] num1 = new boolean[m+1];
        int[] num2 = new int[m+1];
        int[] num1 = new int[m+3];
        for(int i=1;i<=m;i++) {num2[i]=0;}
        int ans=0;
        while(q-->0)
        {
            int op = in.nextInt();
            int num = in.nextInt();
            if(op==1)
            {
                //int cnt=0;
                //num2[num]++;
                if(num+3<=m){
                    num2[num+3]++;
                    if(num2[num+3]==1){ans++;}
                }
                if(num-3>=1){
                    num2[num-3]++;
                    if(num2[num-3]==1){ans++;}
                }
                
                
            }
            else
            {
                //int cnt=0;
                //if(num2[ num]==0){
                if(num+3<=m){
                    num2[num+3]--;
                    if(num2[num+3]==0)ans-=1;
                }
                if(num-3>=1){
                    num2[num-3]--;
                    if(num2[num-3]==0)ans-=1;
                }
            }
            System.out.println(ans);
        }
    }
}"
31,D,Java,60970856,2023-02-24 19:52:31,L-0720,运行超时,"import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int m = scanner.nextInt();
        int q = scanner.nextInt();
        int[] arr = new int[m+1];
        for (int i = 0; i < q; i++) {
            int op = scanner.nextInt();
            int num = scanner.nextInt();
            if (op == 1) {
                if ((num - 3) >= 1) arr[num - 3] ++;
                if ((num + 3) <= m) arr[num + 3] ++;
            }else {
                if ((num - 3) >= 1) arr[num - 3] --;
                if ((num + 3) <= m) arr[num + 3] --;
            }
            int count = 0;
            for (int j = 1; j <= m; j++) {
                count += arr[j] > 0 (?) 1 : 0;
            }
            System.out.println(count);
        }
    }
}"
32,D,Java,60970890,2023-02-24 19:52:59,cuit_zx,答案正确,"
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Scanner;
import java.util.Set;

public class Main {
	public static void main(String[] args) {

		Scanner sc = new Scanner(System.in);
		String[] firstSc = sc.nextLine().split("" "");
		int m = Integer.parseInt(firstSc[0]);
		int q = Integer.parseInt(firstSc[1]);
		int[] f = new int[m+1] ;
		int r = 0;
		for(int i = 0; i < q;i++) {
			String[] input = sc.nextLine().split("" "");
			int op = Integer.parseInt(input[0]);
			int num = Integer.parseInt(input[1]);
			if(op == 1) {
				if(num+3 <= m) {
					f[num+3]++;
					if(f[num+3] == 1) {
						r+=1;
					}
				}
				if(num-3 >= 1) { 
					f[num-3]++;
					if(f[num-3] == 1) {
						r+=1;
					}
				}
			}else {
				if(num+3 <= m) {
					f[num+3]--;
					if(f[num+3] == 0) {
						r-=1;
					}
				}
				if(num-3 >= 1) { 
					f[num-3]--;
					if(f[num-3] == 0) {
						r-=1;
					}
				}
			}
			System.out.println(r);
		}
		
		
		sc.close();
	}
	
	  
	
}


"
33,D,Java,60970891,2023-02-24 19:52:59,何妨吟啸且徐行1,运行超时,"import java.io.*;
import java.util.HashMap;

public class Main {

    public static StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in), 32768));
    public static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    public static int nextInt() throws IOException { in.nextToken(); return (int)in.nval; }

    public static void main(String[] args) throws Exception {
        int m = nextInt();
        int q = nextInt();
        HashMap<Integer,Integer> map=new HashMap<>();
        for(int i = 0; i < q; i++){
            int op = nextInt();
            int num = nextInt();
            if(op == 1){
                map.put(num,map.getOrDefault(num,0)+1);
            } else if(op == 2){
                map.put(num,map.getOrDefault(num,0)-1);
                if (map.get(num)<=0) map.remove(num);
            }
            int count = 0;
            for(int j = 1; j <= m; j++){
                if(map.containsKey(j-3) || map.containsKey(j+3)){
                    count++;
                }
            }
            out.println(count);
        }
        out.close();
    }
}"
34,D,Java,60971009,2023-02-24 19:54:33,里卡多·伊泽克松·多斯·桑托斯·莱特,答案正确,"import java.io.*;
import java.util.*;
import java.math.*;
public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {

        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int m= in.nextInt();
            int q= in.nextInt();
            int[]pai=new int[m+6];
            int he=0;
            for (int i = 0; i < q; i++) {
                int op= in.nextInt();
                int num= in.nextInt();
                if (op==1){
                    if (pai[num-1]==0&&num>3){
                        he++;
                    }
                    pai[num-1]++;
                    if (pai[num+5]==0&&num<=m-3){
                        he++;
                    }
                    pai[num+5]++;
                }
                else {
                    if (pai[num-1]==1&&num>3){
                        he--;
                    }
                    pai[num-1]--;
                    if (pai[num+5]==1&&num<=m-3){
                        he--;
                    }
                    pai[num+5]--;
                }
                System.out.println(he);


            }


        }

    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}

"
35,D,Java,60971215,2023-02-24 19:57:35,KKKZOZ,运行超时,"import java.util.*;
import java.io.*;

public class Main {

    static int status;
    static BufferedReader buf = new BufferedReader(new InputStreamReader(System.in));
    static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
    static PrintWriter cout = new PrintWriter(bw);
    static StreamTokenizer st = new StreamTokenizer(buf);

    public static int nextInt() throws IOException {
        status = st.nextToken();
        return (int) st.nval;
    }

    public static long nextLong() throws IOException {
        status = st.nextToken();
        return (long) st.nval;
    }

    public static String nextString() throws IOException {
        status = st.nextToken();
        return st.sval;
    }

    public static String nextLine() throws IOException {
        String line = buf.readLine();
        while (line.isEmpty())
            line = buf.readLine();
        return line;
    }

    public static int n,m,q;

    public static void main(String[] args) throws Exception{
        m = nextInt();
        q = nextInt();
        Map<Integer,Integer> map = new HashMap<>();

        for(int i=1;i<=q;i++){
            int op = nextInt(),a = nextInt();
            if(op==1){
                if(a-3>=1 && a-3<=m)
                    map.put(a-3,map.getOrDefault(a-3,0)+1);
                if(a+3<=m)
                    map.put(a+3,map.getOrDefault(a+3,0)+1);
            }
            if(op==2){
                if(a-3>=1 && a-3<=m)
                    map.put(a-3,map.getOrDefault(a-3,0)-1);
                if(a+3<=m)
                    map.put(a+3,map.getOrDefault(a+3,0)-1);
            }
            int ans=0;
            for (Map.Entry<Integer, Integer> entry : map.entrySet()) {
                if(entry.getValue()>=1) ans++;
            }
            cout.println(ans);
        }
        cout.flush();
    } // End of main    
}"
36,D,Java,60971235,2023-02-24 19:57:52,智破云霄,答案正确,"
import java.util.*;
import java.io.*;
public class Main {
	
public static void main(String[] args) {
 InputReader in = new InputReader(System.in);
PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
int m = in.nextInt();
int T = in.nextInt();
Set<Integer> set = new HashSet<>();
int[] cnt = new int[m+1];
//2
//2
//2
//2
//1
//2
//4
//6
//8
//7
//5
//6
while(T-->0)
{
	int a = in.nextInt();
	int b = in.nextInt();
	if(a == 1)
	{
		int k = b+3;
		int p = b-3;
		int f1 = 0;
		int f2 = 0;
		if(b+3<=m )
			{cnt[b+3] ++;f1=1;}
		 if(b-3>0 )
			{cnt[b-3] ++;f2 = 1;}
		 if(f1 == 1 && b+3<=m && cnt[k] > 0) set.add(k);
		 if(f2 == 1 && b-3>=0 && cnt[p] > 0) set.add(p);
			 
	}
	else {
		int k = b+3;
		int p = b - 3;
		int f1 = 0;
		int f2 = 0;
		if(b+3<=m )
			{cnt[k] --;f1 =1;}
		 if(b-3>0 )
			{cnt[p] --;f2 =1;}
		 if(f1 == 1  && cnt[k] <= 0 && set.contains(k)) set.remove(k);
		 if(f2 == 1  && cnt[p] <= 0 && set.contains(p)) set.remove(p);
	}
	
	
	out.println(set.size());
}


	out.flush();
}


}


class InputReader {
    private final BufferedReader buf;
    private StringTokenizer tkl;

    public InputReader(InputStream is) {
        buf = new BufferedReader(new InputStreamReader(is));
    }

    public boolean hasNext() {
        try {
            while (tkl == null || !tkl.hasMoreElements()) tkl = new StringTokenizer(buf.readLine());
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public String next() {
        return hasNext() (?) tkl.nextToken() : null;
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }
}
"
37,D,Java,60971393,2023-02-24 19:59:43,L-0720,编译错误,"{""SPECIAL_TM_FH_MEMO_JSON_TAG"":""SPECIAL_TM_FH_MEMO_JSON_TAG"",""stderr"":""Main.java:5: error: cannot find symbol\n    public static void main(String[] args) throws IOException {\n                                                  ^\n  symbol:   class IOException\n  location: class Main\n1 error""}

import java.util.Scanner;

public class Main {

    public static void main(String[] args) throws IOException {
        Scanner scanner = new Scanner(System.in);
        int m = scanner.nextInt();
        int q = scanner.nextInt();
        int[] arr = new int[m+1];
        int count = 0;
        for (int i = 0; i < q; i++) {
            int op = scanner.nextInt();
            int num = scanner.nextInt();
            if (op == 1) {
                if ((num - 3) >= 1) {
                    arr[num - 3] ++;
                    if (arr[num - 3] <= 1) count ++;
                }
                if ((num + 3) <= m) {
                    arr[num + 3] ++;
                    if (arr[num + 3] <= 1) count ++;
                }
            }else {
                if ((num - 3) >= 1) {
                    arr[num - 3] --;
                    if (arr[num - 3] == 0) count --;
                }
                if ((num + 3) <= m) {
                    arr[num + 3] --;
                    if (arr[num + 3] == 0) count --;
                }
            }
            System.out.println(count);
        }
    }
}"
38,D,Java,60971398,2023-02-24 19:59:47,Eunoiay,答案错误,"import java.util.Scanner;
import java.util.HashSet;
import java.io.*;

public class Main {
    static final int N = 100010;
    static int[] h = new int[N];
    
    public static void main(String[] args) throws IOException {
        Scanner sc = new Scanner(System.in);
        PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));
        int n = sc.nextInt();
        int m = sc.nextInt();
        // x: (x + 3 x - 3)
        HashSet<Integer> set = new HashSet<>();
        while (m-- != 0) {
            int op = sc.nextInt();
            int x = sc.nextInt();
            if (op == 1) {
                h[x]++;
                if (x - 3 >= 1) set.add(x - 3); 
                if (x + 3 <= n) set.add(x + 3);

            }
            else {
                h[x]--;
                // x -> x - 3 / x + 3
                // x - 6 / x + 6;
                if (h[x] == 0) {
                    if (x - 6 >= 1 && h[x - 6] == 0 && set.contains(x - 3))
                        set.remove(x - 3);
                    if (x + 6 <= n && h[x + 6] == 0 && set.contains(x + 3));
                        set.remove(x + 3);
                }
            }
            pw.println(set.size());
        }
        pw.flush();
    }
}"
39,D,Java,60971414,2023-02-24 19:59:56,L-0720,答案正确,"import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int m = scanner.nextInt();
        int q = scanner.nextInt();
        int[] arr = new int[m+1];
        int count = 0;
        for (int i = 0; i < q; i++) {
            int op = scanner.nextInt();
            int num = scanner.nextInt();
            if (op == 1) {
                if ((num - 3) >= 1) {
                    arr[num - 3] ++;
                    if (arr[num - 3] <= 1) count ++;
                }
                if ((num + 3) <= m) {
                    arr[num + 3] ++;
                    if (arr[num + 3] <= 1) count ++;
                }
            }else {
                if ((num - 3) >= 1) {
                    arr[num - 3] --;
                    if (arr[num - 3] == 0) count --;
                }
                if ((num + 3) <= m) {
                    arr[num + 3] --;
                    if (arr[num + 3] == 0) count --;
                }
            }
            System.out.println(count);
        }
    }
}"
40,D,Java,60971486,2023-02-24 20:00:52,真没睡醒,答案正确,"
import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int m=sc.nextInt();
        int q=sc.nextInt();
        int[] a = new int[m + 1];
        int count = 0;
        while(q-->0) {
            int op = sc.nextInt();
            int num = sc.nextInt();
            if (op == 1) {
                if (num - 3 > 0) {
                    a[num - 3]++;
                    if(a[num - 3] == 1) count ++;
                }
                if (num + 3 <= m) {
                    a[num + 3]++;
                    if (a[num + 3] == 1) count ++;
                }
            } else {
                    if (num - 3 > 0) {
                        a[num - 3]--;
                        if(a[num - 3] == 0) count --;
                    }
                    if (num + 3 <= m) {
                        a[num + 3]--;
                        if(a[num + 3] == 0) count --;
            }
        }
            System.out.println(count);
        }
    }

}


"
41,D,Java,60971571,2023-02-24 20:02:07,KKKZOZ,答案正确,"import java.util.*;
import java.io.*;

public class Main {

    static int status;
    static BufferedReader buf = new BufferedReader(new InputStreamReader(System.in));
    static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
    static PrintWriter cout = new PrintWriter(bw);
    static StreamTokenizer st = new StreamTokenizer(buf);

    public static int nextInt() throws IOException {
        status = st.nextToken();
        return (int) st.nval;
    }

    public static long nextLong() throws IOException {
        status = st.nextToken();
        return (long) st.nval;
    }

    public static String nextString() throws IOException {
        status = st.nextToken();
        return st.sval;
    }

    public static String nextLine() throws IOException {
        String line = buf.readLine();
        while (line.isEmpty())
            line = buf.readLine();
        return line;
    }

    public static int n,m,q;

    public static void main(String[] args) throws Exception{
        m = nextInt();
        q = nextInt();
        Map<Integer,Integer> map = new HashMap<>();
        int ans=0;
        for(int i=1;i<=q;i++){
            int op = nextInt(),a = nextInt();
            if(op==1){
                if(a-3>=1 && a-3<=m){
                    int cnt = map.getOrDefault(a-3,0);
                    if(cnt==0) ans++;
                    map.put(a-3,cnt+1);
                }
                if(a+3<=m){
                    int cnt = map.getOrDefault(a+3,0);
                    if(cnt==0) ans++;
                    map.put(a+3,cnt+1);
                }
            }
            if(op==2){
                if(a-3>=1 && a-3<=m){
                    int cnt=map.getOrDefault(a-3,0);
                    if(cnt==1) ans--;
                    map.put(a-3,cnt-1);
                }
                if(a+3<=m){
                    int cnt = map.getOrDefault(a+3,0);
                    if(cnt==1) ans--;
                    map.put(a+3,cnt-1);
                }
            }
            cout.println(ans);
        }
        cout.flush();
    } // End of main    
}"
42,D,Java,60971664,2023-02-24 20:03:21,Eunoiay,答案正确,"import java.util.Scanner;
import java.util.HashSet;
import java.io.*;

public class Main {
    static final int N = 100010;
    static int[] h = new int[N];
     
    public static void main(String[] args) throws IOException {
        Scanner sc = new Scanner(System.in);
        PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));
        
        int n = sc.nextInt();
        int m = sc.nextInt();
        // x: (x + 3 x - 3)
        HashSet<Integer> set = new HashSet<>();
        while (m-- != 0) {
            int op = sc.nextInt();
            int x = sc.nextInt();
            if (op == 1) {
                h[x]++;
                if (x - 3 >= 1) set.add(x - 3);
                if (x + 3 <= n) set.add(x + 3);
            }
            else {
                h[x]--;
                // x -> x - 3 / x + 3
                // x - 6 / x + 6;
                if (h[x] <= 0) {
                    if ((x - 6 < 1 || h[x - 6] <= 0) && set.contains(x - 3))
                        set.remove(x - 3);
                    if ((x + 6 > n || h[x + 6] <= 0) && set.contains(x + 3))
                        set.remove(x + 3);
                }
            }
            pw.println(set.size());
        }
        pw.flush();
    }
}"
43,D,Java,60971683,2023-02-24 20:03:34,给个AC吧,答案正确,"
import java.io.*;
import java.math.*;
import java.util.*;

public class Main {
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    static int n, m;
    static boolean[][] f = new boolean[35][35];

    static Scanner scan = new Scanner(System.in);

    public static void main(String[] args) {
        Input sc = new Input(System.in);
        int m = sc.nextInt();
        int q = sc.nextInt();
        Map<Integer, Integer> map = new HashMap<>();
        for (int i = 1; i <= m; i++) {
            map.put(i, 0);
        }
        int tmp = 0;
        for (int i = 0; i < q; i++) {
            int op = sc.nextInt();
            int num = sc.nextInt();
            int x = num + 3;
            int y = num - 3;
            if (op == 1) {
                if (x <= m) {
                    if (map.containsKey(x)) {
                        int tmpx = map.get(x);
                        if (tmpx <= 0) {
                            tmp++;
                        }
                        tmpx++;
                        map.put(x, tmpx);
                    }
                }
                if (y >= 1) {
                    if (map.containsKey(y)) {
                        int tmpy = map.get(y);
                        if (tmpy <= 0) {
                            tmp++;
                        }
                        tmpy++;
                        map.put(y, tmpy);
                    }
                }
            } else {
                if (x <= m) {
                    int sx = map.get(x);
                    sx--;
                    if (sx <= 0) {
                        tmp--;
                    }
                    map.put(x, sx);
                }
                if (y >= 1) {
                    int sy = map.get(y);
                    sy--;
                    if (sy <= 0) {
                        tmp--;
                    }
                    map.put(y, sy);
                }
            }
            out.println(tmp);
        }
        out.flush();
        out.close();
    }

    static class Input {

        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public Input(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                // TODO 自动生成的 catch 块
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }
    }
}
"
44,D,Java,60972096,2023-02-24 20:08:43,EGOIST9029,答案正确,"import java.io.BufferedReader;
import java.io.InputStreamReader;

public class Main{
    public static BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
    public static void main(String[] args)throws Exception {
        String[] s = reader.readLine().split("" "");
        int m  = Integer.parseInt(s[0]);
        int q = Integer.parseInt(s[1]);
        int ans = 0;
        int[] count = new int[m+1];
        for(int i = 0;i<q;i++){
            s = reader.readLine().split("" "");
            int op = Integer.parseInt(s[0]);
            int num = Integer.parseInt(s[1]);
            boolean b = num + 6 > m || count[num + 6] == 0;
            boolean c = num-6<=0||count[num-6]==0;
            if(op==1){
                count[num]++;
                if(count[num]==1){
                    if(num-3>0&&c){
                        ans++;
                    }
                    if(num+3<=m&&b){
                        ans++;
                    }
                }
            }else {
                count[num]--;
                if(count[num]==0){
                    if(num-3>0&&c){
                        ans--;
                    }
                    if(num+3<=m&&b){
                        ans--;
                    }
                }
            }
            System.out.println(ans);
        }
    }
}"
45,D,Java,60972875,2023-02-24 20:19:33,mobili,运行超时,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner in=new Scanner(System.in);
        int m=in.nextInt();
        int q=in.nextInt();
        int []a=new int[m];




        for (int i = 0; i < q; i++) {
            int op=in.nextInt();
            int num=in.nextInt();

            if (op==1){
                a[num-1]++;
            }else {
                a[num-1]--;
            }
            int n=0;
            int []b=new int[m];

            for (int i1 = 0; i1 < m; i1++) {
                if (a[i1]>0){

                    if (i1-3>=0){
                        b[i1-3]=1;}
                    if (i1+3<m){
                        b[i1+3]=1;}
                }
            }
            for (int i1 = 0; i1 < m; i1++) {
                if (b[i1]>0){
                    n++;
                }
            }
            System.out.println(n);
        }

    }
}
"
46,D,Java,60972981,2023-02-24 20:21:03,giao1,执行出错," import java.util.*;
import java.io.*;

public class Main{
    static int[] a = new int[100010];
    static int[] b = new int[100010];
    static int[] c = new int[100010];
    static boolean[] st = new boolean[100010];
    public static void main(String[] args) throws IOException {
        initReader();
        int m = nextInt();int q = nextInt();
        int res = 0;
        //Vector<Integer> ve = new Vector<>();
        while(q-->0){
            int opera = nextInt();
            int num = nextInt();
            if(opera==1){
                c[num]++;
                if(!st[num-3]&&num>3){
                    a[num]++;res++;st[num-3]=true;
                }
                if(!st[num+3]&&num<=m-3){
                    a[num]++;res++;st[num+3]=true;
                }
                if(num>=4){
                    b[num-3]++;
                }
                if(num<=m){
                    b[num+3]++;
                }
            }
            else{
                c[num]--;
                if(num>3){
                    b[num-3]--;
                }
                if(num<=m-3) b[num+3]--;
                if(c[num]==0){
                    res-=a[num];
                    if(num>3)res+=b[num-3];
                    if(num<=m-3)res+=b[num+3];
                }
            }
            pw.println(res);
        }
        pw.close();
    }
    static BufferedReader reader;
    static StringTokenizer tokenizer;
    static PrintWriter pw;

    public static void initReader() throws IOException {
        reader = new BufferedReader(new InputStreamReader(System.in));
        tokenizer = new StringTokenizer("""");
        pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
    }


    public static boolean hasNext() {
        try {
            while (!tokenizer.hasMoreTokens()) {
                tokenizer = new StringTokenizer(reader.readLine());
            }
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public static String next() throws IOException {
        while (!tokenizer.hasMoreTokens()) {
            tokenizer = new StringTokenizer(reader.readLine());
        }
        return tokenizer.nextToken();
    }

    public static String nextLine() {
        try {
            return reader.readLine();
        } catch (Exception e) {
            return null;
        }
    }

    public static int nextInt() throws IOException {
        return Integer.parseInt(next());
    }

    public static long nextLong() throws IOException {
        return Long.parseLong(next());
    }

    public static double nextDouble() throws IOException {
        return Double.parseDouble(next());
    }

    public static char nextChar() throws IOException {
        return next().charAt(0);
    }
}"
47,D,Java,60972989,2023-02-24 20:21:14,mobili,运行超时,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner in=new Scanner(System.in);
        int m=in.nextInt();
        int q=in.nextInt();
        int []a=new int[m];




        for (int i = 0; i < q; i++) {
            int op=in.nextInt();
            int num=in.nextInt();

            if (op==1){
                a[num-1]++;
            }else {
                a[num-1]--;
            }
            int n=0;
            int []b=new int[m];

            for (int i1 = 0; i1 < m; i1++) {
                if (a[i1]>0){

                    if (i1-3>=0){
                        b[i1-3]=1;}
                    if (i1+3<m){
                        b[i1+3]=1;}
                }
            }
            for (int i1 = 0; i1 < m; i1++) {
                if (b[i1]>0){
                    n++;
                }
            }
            System.out.println(n);
        }

    }
}
"
48,D,Java,60973012,2023-02-24 20:21:34,giao1,执行出错," import java.util.*;
import java.io.*;

public class Main{
    static int[] a = new int[1000010];
    static int[] b = new int[1000010];
    static int[] c = new int[1000010];
    static boolean[] st = new boolean[1000010];
    public static void main(String[] args) throws IOException {
        initReader();
        int m = nextInt();int q = nextInt();
        int res = 0;
        //Vector<Integer> ve = new Vector<>();
        while(q-->0){
            int opera = nextInt();
            int num = nextInt();
            if(opera==1){
                c[num]++;
                if(!st[num-3]&&num>3){
                    a[num]++;res++;st[num-3]=true;
                }
                if(!st[num+3]&&num<=m-3){
                    a[num]++;res++;st[num+3]=true;
                }
                if(num>=4){
                    b[num-3]++;
                }
                if(num<=m){
                    b[num+3]++;
                }
            }
            else{
                c[num]--;
                if(num>3){
                    b[num-3]--;
                }
                if(num<=m-3) b[num+3]--;
                if(c[num]==0){
                    res-=a[num];
                    if(num>3)res+=b[num-3];
                    if(num<=m-3)res+=b[num+3];
                }
            }
            pw.println(res);
        }
        pw.close();
    }
    static BufferedReader reader;
    static StringTokenizer tokenizer;
    static PrintWriter pw;

    public static void initReader() throws IOException {
        reader = new BufferedReader(new InputStreamReader(System.in));
        tokenizer = new StringTokenizer("""");
        pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
    }


    public static boolean hasNext() {
        try {
            while (!tokenizer.hasMoreTokens()) {
                tokenizer = new StringTokenizer(reader.readLine());
            }
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public static String next() throws IOException {
        while (!tokenizer.hasMoreTokens()) {
            tokenizer = new StringTokenizer(reader.readLine());
        }
        return tokenizer.nextToken();
    }

    public static String nextLine() {
        try {
            return reader.readLine();
        } catch (Exception e) {
            return null;
        }
    }

    public static int nextInt() throws IOException {
        return Integer.parseInt(next());
    }

    public static long nextLong() throws IOException {
        return Long.parseLong(next());
    }

    public static double nextDouble() throws IOException {
        return Double.parseDouble(next());
    }

    public static char nextChar() throws IOException {
        return next().charAt(0);
    }
}"
49,D,Java,60973069,2023-02-24 20:22:20,可爱抱抱呀😥,执行出错,"//Java快读快写模板，不定时更新优化内容
//@可爱抱抱呀
import java.util.*;
import java.io.*;
import java.math.*;
import java.text.*;
public class Main{
    public static void main(String args[]) throws IOException{
        Read sc=new Read();
        int m=sc.nextInt();
        int q=sc.nextInt();
        int count[]=new int[m+10];
        boolean has[]=new boolean[m+10];
        int ans=0;
        for(int i=0;i<q;i++){
            int op=sc.nextInt();
            int num=sc.nextInt();
            if(op==1){
                count[num]++;
                if(count[num]==1){
                    if(num>=4&&!has[num-3]){
                        has[num-3]=true;
                        ans++;
                    }
                    if(num<=m-3&&!has[num+3]){
                        has[num+3]=true;
                        ans++;
                    }
                }
            }
            else{
                count[num]--;
                if(count[num]==0){
                    //先判断num-3
                    if(num>=4){
                        if(has[num-3]&&(num<7||count[num-6]==0)){
                            has[num-3]=false;
                            ans--;
                        }
                    }
                    if(num<=m-3){
                        if(has[num+3]&&count[num+6]==0){
                            has[num-3]=false;
                            ans--;
                        }
                    }
                }
            }
            sc.println(ans);
        }
        //sc.print(0);
        sc.bw.flush();
        sc.bw.close();
    }
}
//记住看数字范围，需要开long吗，需要用BigInteger吗，需要手动处理字符串吗，复杂度数量级控制在1e7或者以下了吗
//开数组的数据范围最高不能超过1e7，数据范围再大就要用哈希表离散化了
//基本数据类型不能自定义sort排序，二维数组就可以了，顺序排序的时候是小减大，注意返回值应该是int
class Read{
    BufferedReader bf;
    StringTokenizer st;
    BufferedWriter bw;
    public Read(){
        bf=new BufferedReader(new InputStreamReader(System.in));
        st=new StringTokenizer("""");
        bw=new BufferedWriter(new OutputStreamWriter(System.out));
        //什么时候才能持续稳定ak力扣、AcWing呢？
        //什么时候才能ak cf的div2，div1呢？才能打div2不计rating呢？
        //什么时候才能ak  abc  不计rating呢？
        //什么时候才能ak 牛客练习赛不计rating呢(?)
    }
    public String nextLine() throws IOException{
        return bf.readLine();
    }
    public String next() throws IOException{
        while(!st.hasMoreTokens()){
            st=new StringTokenizer(bf.readLine());
        }
        return st.nextToken();
    }
    public char nextChar() throws IOException{
        //确定下一个token只有一个字符的时候再用
        return next().charAt(0);
    }
    public int nextInt() throws IOException{
        return Integer.parseInt(next());
    }
    public long nextLong() throws IOException{
        return Long.parseLong(next());
    }
    public double nextDouble() throws IOException{
        return Double.parseDouble(next());
    }
    public float nextFloat() throws IOException{
        return Float.parseFloat(next());
    }
    public byte nextByte() throws IOException{
        return Byte.parseByte(next());
    }
    public short nextShort() throws IOException{
        return Short.parseShort(next());
    }
    public BigInteger nextBigInteger() throws IOException{
        return new BigInteger(next());
    }
    public void println(int a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(int a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(String a) throws IOException{
        bw.write(a);
        bw.newLine();
        return;
    }
    public void print(String a) throws IOException{
        bw.write(a);
        return;
    }
    public void println(long a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(long a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(double a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(double a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void print(BigInteger a) throws IOException{
        bw.write(a.toString());
        return;
    }
    public void print(char a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(char a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
}"
50,D,Java,60973077,2023-02-24 20:22:28,giao1,执行出错," import java.util.*;
import java.io.*;

public class Main{
    static int[] a = new int[1000010];
    static int[] b = new int[1000010];
    static int[] c = new int[1000010];
    static boolean[] st = new boolean[1000010];
    public static void main(String[] args) throws IOException {
        initReader();
        int m = nextInt();int q = nextInt();
        int res = 0;
        //Vector<Integer> ve = new Vector<>();
        while(q-->0){
            int opera = nextInt();
            int num = nextInt();
            if(opera==1){
                c[num]++;
                if(!st[num-3]&&num>3){
                    a[num]++;res++;st[num-3]=true;
                }
                if(!st[num+3]&&num<=m-3){
                    a[num]++;res++;st[num+3]=true;
                }
                if(num>=4){
                    b[num-3]++;
                }
                if(num<=m-3){
                    b[num+3]++;
                }
            }
            else{
                c[num]--;
                if(num>3){
                    b[num-3]--;
                }
                if(num<=m-3) b[num+3]--;
                if(c[num]==0){
                    res-=a[num];
                    if(num>3)res+=b[num-3];
                    if(num<=m-3)res+=b[num+3];
                }
            }
            pw.println(res);
        }
        pw.close();
    }
    static BufferedReader reader;
    static StringTokenizer tokenizer;
    static PrintWriter pw;

    public static void initReader() throws IOException {
        reader = new BufferedReader(new InputStreamReader(System.in));
        tokenizer = new StringTokenizer("""");
        pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
    }


    public static boolean hasNext() {
        try {
            while (!tokenizer.hasMoreTokens()) {
                tokenizer = new StringTokenizer(reader.readLine());
            }
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public static String next() throws IOException {
        while (!tokenizer.hasMoreTokens()) {
            tokenizer = new StringTokenizer(reader.readLine());
        }
        return tokenizer.nextToken();
    }

    public static String nextLine() {
        try {
            return reader.readLine();
        } catch (Exception e) {
            return null;
        }
    }

    public static int nextInt() throws IOException {
        return Integer.parseInt(next());
    }

    public static long nextLong() throws IOException {
        return Long.parseLong(next());
    }

    public static double nextDouble() throws IOException {
        return Double.parseDouble(next());
    }

    public static char nextChar() throws IOException {
        return next().charAt(0);
    }
}"
51,D,Java,60973180,2023-02-24 20:23:51,可爱抱抱呀😥,答案正确,"//Java快读快写模板，不定时更新优化内容
//@可爱抱抱呀
import java.util.*;
import java.io.*;
import java.math.*;
import java.text.*;
public class Main{
    public static void main(String args[]) throws IOException{
        Read sc=new Read();
        int m=sc.nextInt();
        int q=sc.nextInt();
        int count[]=new int[m+10];
        boolean has[]=new boolean[m+10];
        int ans=0;
        for(int i=0;i<q;i++){
            int op=sc.nextInt();
            int num=sc.nextInt();
            if(op==1){
                count[num]++;
                if(count[num]==1){
                    if(num>=4&&!has[num-3]){
                        has[num-3]=true;
                        ans++;
                    }
                    if(num<=m-3&&!has[num+3]){
                        has[num+3]=true;
                        ans++;
                    }
                }
            }
            else{
                count[num]--;
                if(count[num]==0){
                    //先判断num-3
                    if(num>=4){
                        if(has[num-3]&&(num<7||count[num-6]==0)){
                            has[num-3]=false;
                            ans--;
                        }
                    }
                    //判断num+3
                    if(num<=m-3){
                        if(has[num+3]&&count[num+6]==0){
                            has[num+3]=false;
                            ans--;
                        }
                    }
                }
            }
            sc.println(ans);
        }
        //sc.print(0);
        sc.bw.flush();
        sc.bw.close();
    }
}
//记住看数字范围，需要开long吗，需要用BigInteger吗，需要手动处理字符串吗，复杂度数量级控制在1e7或者以下了吗
//开数组的数据范围最高不能超过1e7，数据范围再大就要用哈希表离散化了
//基本数据类型不能自定义sort排序，二维数组就可以了，顺序排序的时候是小减大，注意返回值应该是int
class Read{
    BufferedReader bf;
    StringTokenizer st;
    BufferedWriter bw;
    public Read(){
        bf=new BufferedReader(new InputStreamReader(System.in));
        st=new StringTokenizer("""");
        bw=new BufferedWriter(new OutputStreamWriter(System.out));
        //什么时候才能持续稳定ak力扣、AcWing呢？
        //什么时候才能ak cf的div2，div1呢？才能打div2不计rating呢？
        //什么时候才能ak  abc  不计rating呢？
        //什么时候才能ak 牛客练习赛不计rating呢(?)
    }
    public String nextLine() throws IOException{
        return bf.readLine();
    }
    public String next() throws IOException{
        while(!st.hasMoreTokens()){
            st=new StringTokenizer(bf.readLine());
        }
        return st.nextToken();
    }
    public char nextChar() throws IOException{
        //确定下一个token只有一个字符的时候再用
        return next().charAt(0);
    }
    public int nextInt() throws IOException{
        return Integer.parseInt(next());
    }
    public long nextLong() throws IOException{
        return Long.parseLong(next());
    }
    public double nextDouble() throws IOException{
        return Double.parseDouble(next());
    }
    public float nextFloat() throws IOException{
        return Float.parseFloat(next());
    }
    public byte nextByte() throws IOException{
        return Byte.parseByte(next());
    }
    public short nextShort() throws IOException{
        return Short.parseShort(next());
    }
    public BigInteger nextBigInteger() throws IOException{
        return new BigInteger(next());
    }
    public void println(int a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(int a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(String a) throws IOException{
        bw.write(a);
        bw.newLine();
        return;
    }
    public void print(String a) throws IOException{
        bw.write(a);
        return;
    }
    public void println(long a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(long a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(double a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(double a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void print(BigInteger a) throws IOException{
        bw.write(a.toString());
        return;
    }
    public void print(char a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(char a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
}"
52,D,Java,60973215,2023-02-24 20:24:31,J.2022,运行超时,"import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        ArrayList<Integer> list = new ArrayList<>();

        Set<Integer> set = new HashSet<>();
        int m = sc.nextInt();
        int q = sc.nextInt();
        for(int i=1;i<=q;i++){
            int op = sc.nextInt();
            int num = sc.nextInt();
            if(op==1){
                list.add(num);
            }else{
                    list.remove((Integer) num);
            }
            Iterator<Integer> iterator = list.iterator();
            while (iterator.hasNext()) {
                int temp = iterator.next();
                if(temp+3<=m){
                    set.add(temp+3);
                }
                if(temp-3>=1){
                    set.add(temp-3);
                }
            }
            System.out.println(set.size());
            set.clear();
        }
    }
}
"
53,D,Java,60973241,2023-02-24 20:25:02,giao1,答案错误," import java.util.*;
import java.io.*;

public class Main{
    static int[] a = new int[1000010];
    static int[] b = new int[1000010];
    static int[] c = new int[1000010];
    static boolean[] st = new boolean[1000010];
    public static void main(String[] args) throws IOException {
        initReader();
        int m = nextInt();int q = nextInt();
        int res = 0;
        //Vector<Integer> ve = new Vector<>();
        while(q-->0){
            int opera = nextInt();
            int num = nextInt();
            if(opera==1){
                c[num]++;
                if(num>3&&!st[num-3]){
                    a[num]++;res++;st[num-3]=true;
                }
                if(num<=m-3&&!st[num+3]){
                    a[num]++;res++;st[num+3]=true;
                }
                if(num>=4){
                    b[num-3]++;
                }
                if(num<=m-3){
                    b[num+3]++;
                }
            }
            else{
                c[num]--;
                if(num>3){
                    b[num-3]--;
                }
                if(num<=m-3) b[num+3]--;
                if(c[num]==0){
                    res-=a[num];
                    if(num>3)res+=b[num-3];
                    if(num<=m-3)res+=b[num+3];
                }
            }
            pw.println(res);
        }
        pw.close();
    }
    static BufferedReader reader;
    static StringTokenizer tokenizer;
    static PrintWriter pw;

    public static void initReader() throws IOException {
        reader = new BufferedReader(new InputStreamReader(System.in));
        tokenizer = new StringTokenizer("""");
        pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
    }


    public static boolean hasNext() {
        try {
            while (!tokenizer.hasMoreTokens()) {
                tokenizer = new StringTokenizer(reader.readLine());
            }
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public static String next() throws IOException {
        while (!tokenizer.hasMoreTokens()) {
            tokenizer = new StringTokenizer(reader.readLine());
        }
        return tokenizer.nextToken();
    }

    public static String nextLine() {
        try {
            return reader.readLine();
        } catch (Exception e) {
            return null;
        }
    }

    public static int nextInt() throws IOException {
        return Integer.parseInt(next());
    }

    public static long nextLong() throws IOException {
        return Long.parseLong(next());
    }

    public static double nextDouble() throws IOException {
        return Double.parseDouble(next());
    }

    public static char nextChar() throws IOException {
        return next().charAt(0);
    }
}"
54,D,Java,60973315,2023-02-24 20:26:05,J.2022,运行超时,"import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        ArrayList<Integer> list = new ArrayList<>();

        Set<Integer> set = new HashSet<>();
        int m = sc.nextInt();
        int q = sc.nextInt();
        for(int i=1;i<=q;i++){
            int op = sc.nextInt();
            int num = sc.nextInt();
            if(op==1){
                list.add(num);
            }else{
                    list.remove((Integer) num);
            }
            Iterator<Integer> iterator = list.iterator();
            while (iterator.hasNext()) {
                int temp = iterator.next();
                if(temp+3<=m){
                    set.add(temp+3);
                }
                if(temp-3>=1){
                    set.add(temp-3);
                }
            }
            System.out.println(set.size());
            set.clear();
        }
    }
}
"
55,D,Java,60973338,2023-02-24 20:26:24,就，很有意思,答案正确,"import java.util.HashMap;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int m = in.nextInt() + 1,times = in.nextInt();
        int[] temp = new int[m];
        int all = 0;
        for (int i = 0; i < times; i++) {
            int op = in.nextInt(), num = in.nextInt();
            int first = num - 3, second = num + 3;
            if (op == 1){
                if (first > 0) {
                    if (temp[first]++ == 0) ++all;
                }
                if (second < m){
                    if (temp[second]++ == 0) ++all;
                }
            }else {
                if (first > 0) {
                    if (--temp[first] == 0) --all;
                }
                if (second < m){
                    if (--temp[second] == 0) --all;
                }
            }
            System.out.println(all);
        }
        
    }
}"
56,D,Java,60973525,2023-02-24 20:29:18,Leoncn,运行超时,"import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int m = sc.nextInt();
        int q = sc.nextInt();
        Map<Integer,Integer> map = new HashMap<>();
        while (q-->0){
            int op = sc.nextInt();
            int num = sc.nextInt();
            if(op==1){
                if(num>3){
                    int cnt = map.getOrDefault(num-3,0);
                    map.put(num-3, cnt+1);
                }
                if(num<=m-3){
                    int cnt = map.getOrDefault(num+3,0);
                    map.put(num+3, cnt+1);
                }

            }else {
                if(num>3){
                    int cnt = map.getOrDefault(num-3,0);
                    if(cnt ==1 ){
                        map.remove(num-3);
                    }else {
                        map.put(num-3, cnt-1);
                    }
                }
                if(num<=m-3){
                    int cnt = map.getOrDefault(num+33,0);
                    if(cnt ==1 ){
                        map.remove(num+3);
                    }else {
                        map.put(num+3, cnt-1);
                    }
                }
            }

            System.out.println(map.size());
        }
    }
}"
57,D,Java,60973653,2023-02-24 20:31:30,扌罢火兰三l三,答案正确,"import java.util.Scanner;

// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        // 注意 hasNext 和 hasNextLine 的区别
        int m;
        int q;
        int res=0;
        m = in.nextInt();
        q = in.nextInt();
        int []a;
        a =  new int[m+1];
        for(;q>0;q--)
        {
            int choose;
            int which;
            choose = in.nextInt();
            which = in.nextInt();
            if(choose==1)
            {
                if(which+3<=m)
                {
                    a[which+3]++;
                    if(a[which+3]==1)
                    {
                        res++;
                    }
                }
                if(which-3>=1)
                {
                a[which-3]++;
                    if(a[which-3]==1)
                    {
                        res++;
                    }
                }
            }
            if(choose==2)
            {
                if(which+3<=m)
                {
                    a[which+3]--;
                    if(a[which+3]==0)
                    {
                        res--;
                    }
                }
                if(which-3>=1)
                {
                    a[which-3]--;
                    if(a[which-3]==0)
                    {
                        res--;
                    }
                }
            }
            System.out.println(res);
        }
        
    }
}
"
58,D,Java,60973720,2023-02-24 20:32:54,233a,运行超时,"import java.io.PrintWriter;
import java.util.*;
public class Main{      
    public static void main(String org[]){
        Scanner sc = new Scanner(System.in);
        int m=sc.nextInt();
        int q=sc.nextInt();
        HashMap<Integer,Integer> map=new HashMap<Integer,Integer>();
        int nub[]=new int[m];for(int x:nub)x=0;
        
        for(int o=0;o<q;o++){
            int op=sc.nextInt();int num=sc.nextInt();
            if(op==1) {map.put(num,num);nub[num-1]++;}
            else {
                if(nub[num-1]==1) {map.remove(num,num);nub[num-1]--;}
                else nub[num-1]--;
                
                };
            HashMap<Integer,Integer> ans=new HashMap<Integer,Integer>();
            for(int i=1;i<=m;i++){
                if(map.containsValue(i+3)||map.containsValue(i-3)){
                    if(!ans.containsValue(i)){ans.put(i,i);}
                }
            }
            System.out.println(ans.size());
        }
    }
}"
59,D,Java,60973788,2023-02-24 20:34:05,Leoncn,答案正确,"import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;
import java.io.PrintWriter;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
         PrintWriter out = new PrintWriter(System.out);
        int m = sc.nextInt();
        int q = sc.nextInt();
        Map<Integer,Integer> map = new HashMap<>();
        while (q-->0){
            int op = sc.nextInt();
            int num = sc.nextInt();
            if(op==1){
                if(num>3){
                    int cnt = map.getOrDefault(num-3,0);
                    map.put(num-3, cnt+1);
                }
                if(num<=m-3){
                    int cnt = map.getOrDefault(num+3,0);
                    map.put(num+3, cnt+1);
                }

            }else {
                if(num>3){
                    int cnt = map.getOrDefault(num-3,0);
                    if(cnt ==1 ){
                        map.remove(num-3);
                    }else {
                        map.put(num-3, cnt-1);
                    }
                }
                if(num<=m-3){
                    int cnt = map.getOrDefault(num+3,0);
                    if(cnt ==1 ){
                        map.remove(num+3);
                    }else {
                        map.put(num+3, cnt-1);
                    }
                }
            }

            out.println(map.size());
        }
        out.close();
    }
}"
60,D,Java,60973845,2023-02-24 20:34:57,栗子ing,运行超时,"import java.util.*;
public class Main{
    static int N = 100010;
    static int[] a = new int[N];
    public static void main(String[] args){
        Scanner scan = new Scanner(System.in);
        int m = scan.nextInt();
        int q = scan.nextInt();
        Map<Integer, Integer> map = new HashMap<>();
        while (q -- > 0){
            int p = scan.nextInt();
            int x = scan.nextInt();
            if (p == 1) {
                a[x] ++;
                if (x - 3 >= 1) map.put(x-3, 1);
                if (x + 3 <= m) map.put(x+3, 1);
            }else {
                a[x] --;
                if (a[x] == 0){
                    if (x - 3 >= 1){
                        if (x - 6 >= 1 && a[x - 6] == 0) map.remove(x-3);
                        else if (x - 6 < 1) map.remove(x-3); 
                    }
                    if (x + 3 <= m){
                        if (x + 6 <= m && a[x + 6] == 0) map.remove(x+3);
                        else if (x + 6 > m) map.remove(x+3);
                    }
                }
            }
            System.out.println(map.size());
        }
    }
}"
61,D,Java,60973917,2023-02-24 20:36:08,栗子ing,运行超时,"import java.util.*;
public class Main{
    static int N = 100010;
    static int[] a = new int[N];
    public static void main(String[] args){
        Scanner scan = new Scanner(System.in);
        int m = scan.nextInt();
        int q = scan.nextInt();
        Map<Integer, Integer> map = new HashMap<>();
        while (q -- > 0){
            int p = scan.nextInt();
            int x = scan.nextInt();
            if (p == 1) {
                a[x] ++;
                if (x - 3 >= 1) map.put(x-3, 1);
                if (x + 3 <= m) map.put(x+3, 1);
            }else {
                a[x] --;
                if (a[x] == 0){
                    if (x - 3 >= 1){
                        if (x - 6 >= 1 && a[x - 6] == 0) map.remove(x-3);
                        else if (x - 6 < 1) map.remove(x-3); 
                    }
                    if (x + 3 <= m){
                        if (x + 6 <= m && a[x + 6] == 0) map.remove(x+3);
                        else if (x + 6 > m) map.remove(x+3);
                    }
                }
            }
            System.out.println(map.size());
        }
    }
}"
62,D,Java,60974386,2023-02-24 20:44:05,giao1,答案错误," import java.util.*;
import java.io.*;

public class Main{
    static int[] a = new int[1000010];
    static int[] b = new int[1000010];
    static int[] c = new int[1000010];
    static boolean[] st = new boolean[1000010];
    public static void main(String[] args) throws IOException {
        initReader();
        int m = nextInt();int q = nextInt();
        int res = 0;
        //Vector<Integer> ve = new Vector<>();
        while(q-->0){
            int opera = nextInt();
            int num = nextInt();
            if(opera==1){
                c[num]++;
                if(num<=m&&num>3&&!st[num-3]){
                    a[num]++;res++;st[num-3]=true;
                }
                if(num>=4&&num<=m-3&&!st[num+3]){
                    a[num]++;res++;st[num+3]=true;
                }
                if(num>=4){
                    b[num-3]++;
                }
                if(num<=m-3){
                    b[num+3]++;
                }
            }
            else{
                c[num]--;
                if(num>3){
                    b[num-3]--;
                }
                if(num<=m-3) b[num+3]--;
                if(c[num]==0){
                    res-=a[num];
                    if(num>3)res+=b[num-3];
                    if(num<=m-3)res+=b[num+3];
                }
            }
            pw.println(res);
        }
        pw.close();
    }
    static BufferedReader reader;
    static StringTokenizer tokenizer;
    static PrintWriter pw;

    public static void initReader() throws IOException {
        reader = new BufferedReader(new InputStreamReader(System.in));
        tokenizer = new StringTokenizer("""");
        pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
    }


    public static boolean hasNext() {
        try {
            while (!tokenizer.hasMoreTokens()) {
                tokenizer = new StringTokenizer(reader.readLine());
            }
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public static String next() throws IOException {
        while (!tokenizer.hasMoreTokens()) {
            tokenizer = new StringTokenizer(reader.readLine());
        }
        return tokenizer.nextToken();
    }

    public static String nextLine() {
        try {
            return reader.readLine();
        } catch (Exception e) {
            return null;
        }
    }

    public static int nextInt() throws IOException {
        return Integer.parseInt(next());
    }

    public static long nextLong() throws IOException {
        return Long.parseLong(next());
    }

    public static double nextDouble() throws IOException {
        return Double.parseDouble(next());
    }

    public static char nextChar() throws IOException {
        return next().charAt(0);
    }
}"
63,D,Java,60974393,2023-02-24 20:44:13,cyclingle,答案正确,"import java.util.*;


//import javafx.scene.shape.SVGPath;

import javax.rmi.ssl.SslRMIClientSocketFactory;

import java.io.*;
import java.lang.reflect.Array;
import java.math.BigInteger;
//import java.lang.reflect.Array;
//import java.rmi.server.SocketSecurityException;
public class Main
{
    
    //static int a[]=new int[200005];
    //static int num[]=new int[200005];
    static List <Integer> l[]=new ArrayList[100005];
    //static int a[]=new int[100005];
    static int b[]=new int[100005];
    static int c[]=new int[100005];
    static int num[]=new int[100005];
    static long sum[]=new long [100005];
    //static int b[]=new int[200005];
    //public Comparator int cmp=Comparator()
    public static BigInteger __gcd(BigInteger x,BigInteger y)
    {
        System.out.println(x+""!""+y);
        if(y.equals(BigInteger.ZERO))return x;
        return __gcd(y,x.mod(y));
    }
    

    public static void main(String [] args)throws IOException
    {
        //Scanner sc=new Scanner(System.in);
        //StreamTokenizer sc=new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
        //sc.nextToken();int n=(int)(sc.nval);
        //FastScanner fs=new FastScanner();
        //System.out.println();
        //int a[][]=new int[10][10];
        FastScanner fs=new FastScanner();
        int num[]=new int[100008];
        int ans=0;
        int m=fs.nextInt();int q=fs.nextInt();
        for(int i=1;i<=q;i++)
        {
            int op,nu;
            op=fs.nextInt();nu=fs.nextInt();
            if(op==1)
            {
                if(nu-3>=1)
                {
                    ++num[nu-3];
                    if(num[nu-3]==1) ans++;
                }
                if(nu+3<=m)
                {
                    ++num[nu+3];
                    if(num[nu+3]==1) ans++;
                }
            }
            else{
                if(nu-3>=1)
                {
                    --num[nu-3];
                    if(num[nu-3]==0) --ans;
                }
                if(nu+3<=m)
                {
                    --num[nu+3];
                    if(num[nu+3]==0) --ans;
                }
            }
            System.out.println(ans);
        }

    }
    static class CompLen implements Comparator<String>{
        @Override
        public int compare(String o1, String o2) {
            return  (o1+o2).compareTo(o2+o1);
        }
    
    }
    
    static class zcr
    {
        int ele;int num;
        public zcr()
        {

        }
        public zcr(int x,int y)
        {
            this.ele=x;this.num=y;
        }
        public void get_ele(int x)
        {
            this.ele=x;
        }
        public void get_num(int x)
        {
            this.num=x;
        }
    }
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("""");
        String next() {
            while (!st.hasMoreTokens())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }
        int [] readArray(int  n) {
            int [] a=new int [n];
            for (int i=0; i<n; i++) a[i]=nextInt();
            return a;
        }
        long nextLong() {
            return Long.parseLong(next());
        }
    }

}"
64,D,Java,60974530,2023-02-24 20:46:04,PhantomBluRay,运行超时,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int m = sc.nextInt();
        int q = sc.nextInt();

        int[] mynum = new int[m+1];
        StringBuffer strb = new StringBuffer();

        for(int i = 0;i < q;i++){
            int op = sc.nextInt();
            int num = sc.nextInt();
            int sum = 0;
            switch(op){
                case 1:
                    if(num+3<m+1) mynum[num+3]++;
                    if(num-3>0) mynum[num-3]++;
                    break;
                case 2:
                    if(num+3<m+1) mynum[num+3]--;
                    if(num-3>0) mynum[num-3]--;
                    break;
            }
            for(int j = 1;j <= m;j++){
                if(mynum[j]!=0){
                    sum++;
                }
            }
            strb.append(sum + ""\n"");
        }
        System.out.println(strb);
    }
}"
65,D,Java,60974828,2023-02-24 20:50:40,giao1,答案错误," import java.util.*;
import java.io.*;

public class Main{
    static int[] a = new int[1000010];
    static int[] b = new int[1000010];
    static int[] c = new int[1000010];
    static boolean[] st = new boolean[1000010];
    public static void main(String[] args) throws IOException {
        initReader();
        int m = nextInt();int q = nextInt();
        int res = 0;
        //Vector<Integer> ve = new Vector<>();
        while(q-->0){
            int opera = nextInt();
            int num = nextInt();
            if(opera==1){
                c[num]++;
                if(num<=m&&num>3&&!st[num-3]){
                    a[num]++;res++;st[num-3]=true;
                }
                if(num>=4&&num<=m-3&&!st[num+3]){
                    a[num]++;res++;st[num+3]=true;
                }
                if(num>=4){
                    b[num-3]++;
                }
                if(num<=m-3){
                    b[num+3]++;
                }
            }
            else{
                c[num]--;
                if(num>3){
                    b[num-3]--;
                }
                if(num<=m-3) b[num+3]--;
                if(c[num]==0){
                    res-=a[num];
                    if(num>3&&st[num-3])res+=b[num-3];
                    if(num<=m-3&&st[num+3])res+=b[num+3];
                }
            }
            pw.println(res);
        }
        pw.close();
    }
    static BufferedReader reader;
    static StringTokenizer tokenizer;
    static PrintWriter pw;

    public static void initReader() throws IOException {
        reader = new BufferedReader(new InputStreamReader(System.in));
        tokenizer = new StringTokenizer("""");
        pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
    }


    public static boolean hasNext() {
        try {
            while (!tokenizer.hasMoreTokens()) {
                tokenizer = new StringTokenizer(reader.readLine());
            }
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public static String next() throws IOException {
        while (!tokenizer.hasMoreTokens()) {
            tokenizer = new StringTokenizer(reader.readLine());
        }
        return tokenizer.nextToken();
    }

    public static String nextLine() {
        try {
            return reader.readLine();
        } catch (Exception e) {
            return null;
        }
    }

    public static int nextInt() throws IOException {
        return Integer.parseInt(next());
    }

    public static long nextLong() throws IOException {
        return Long.parseLong(next());
    }

    public static double nextDouble() throws IOException {
        return Double.parseDouble(next());
    }

    public static char nextChar() throws IOException {
        return next().charAt(0);
    }
}"
66,D,Java,60975376,2023-02-24 20:59:13,giao1,答案错误," import java.util.*;
import java.io.*;

public class Main{
    static int[] a = new int[1000010];
    static int[] b = new int[1000010];
    static int[] c = new int[1000010];
    static boolean[] st = new boolean[1000010];
    public static void main(String[] args) throws IOException {
        initReader();
        int m = nextInt();int q = nextInt();
        int res = 0;
        //Vector<Integer> ve = new Vector<>();
        while(q-->0){
            int opera = nextInt();
            int num = nextInt();
            if(opera==1){
                c[num]++;
                if(num>3&&!st[num-3]){
                    a[num]++;res++;st[num-3]=true;
                }
                if(num>=4&&num<=m-3&&!st[num+3]){
                    a[num]++;res++;st[num+3]=true;
                }
                if(num>=4){
                    b[num-3]++;
                }
                if(num<=m-3){
                    b[num+3]++;
                }
            }
            else{
                c[num]--;
                if(num>3){
                    b[num-3]--;
                }
                if(num<=m-3) b[num+3]--;
                if(c[num]==0){
                    res-=a[num];
                    if(num>3)res+=b[num-3];
                    if(num<=m-3)res+=b[num+3];
                }
            }
            pw.println(res);
        }
        pw.close();
    }
    static BufferedReader reader;
    static StringTokenizer tokenizer;
    static PrintWriter pw;

    public static void initReader() throws IOException {
        reader = new BufferedReader(new InputStreamReader(System.in));
        tokenizer = new StringTokenizer("""");
        pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
    }


    public static boolean hasNext() {
        try {
            while (!tokenizer.hasMoreTokens()) {
                tokenizer = new StringTokenizer(reader.readLine());
            }
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public static String next() throws IOException {
        while (!tokenizer.hasMoreTokens()) {
            tokenizer = new StringTokenizer(reader.readLine());
        }
        return tokenizer.nextToken();
    }

    public static String nextLine() {
        try {
            return reader.readLine();
        } catch (Exception e) {
            return null;
        }
    }

    public static int nextInt() throws IOException {
        return Integer.parseInt(next());
    }

    public static long nextLong() throws IOException {
        return Long.parseLong(next());
    }

    public static double nextDouble() throws IOException {
        return Double.parseDouble(next());
    }

    public static char nextChar() throws IOException {
        return next().charAt(0);
    }
}"
67,D,Java,60975730,2023-02-24 21:05:47,栗子ing,编译错误,"{""SPECIAL_TM_FH_MEMO_JSON_TAG"":""SPECIAL_TM_FH_MEMO_JSON_TAG"",""stderr"":""Main.java:26: error: cannot find symbol\n                        if (x + 6 <= m && a[x + 6] == 0) map.remove(x+3);\n                                                         ^\n  symbol:   variable map\n  location: class Main\nMain.java:27: error: cannot find symbol\n                        else if (x + 6 > m) map.remove(x+3);\n                                            ^\n  symbol:   variable map\n  location: class Main\nMain.java:31: error: cannot find symbol\n            System.out.println(map.size());\n                               ^\n  symbol:   variable map\n  location: class Main\n3 errors""}

import java.util.*;
public class Main{
    static int N = 100010;
    static int[] a = new int[N];
    static int[] b = new int[N];
    public static void main(String[] args){
        Scanner scan = new Scanner(System.in);
        int m = scan.nextInt();
        int q = scan.nextInt();
        int len = 0;
        while (q -- > 0){
            int p = scan.nextInt();
            int x = scan.nextInt();
            if (p == 1) {
                a[x] ++;
                if (x - 3 >= 1) {b[x-3] = 1; len ++;}
                if (x + 3 <= m) {b[x+3] = 1; len ++;}
            }else {
                a[x] --;
                if (a[x] == 0){
                    if (x - 3 >= 1){
                        if (x - 6 >= 1 && a[x - 6] == 0) {b[x-3] = 0; len --;}
                        else if (x - 6 < 1) {b[x-3] = 0; len --;}
                    }
                    if (x + 3 <= m){
                        if (x + 6 <= m && a[x + 6] == 0) map.remove(x+3);
                        else if (x + 6 > m) map.remove(x+3);
                    }
                }
            }
            System.out.println(map.size());
        }
    }
}"
68,D,Java,60975736,2023-02-24 21:05:56,栗子ing,运行超时,"import java.util.*;
public class Main{
    static int N = 100010;
    static int[] a = new int[N];
    public static void main(String[] args){
        Scanner scan = new Scanner(System.in);
        int m = scan.nextInt();
        int q = scan.nextInt();
        Map<Integer, Integer> map = new HashMap<>();
        while (q -- > 0){
            int p = scan.nextInt();
            int x = scan.nextInt();
            if (p == 1) {
                a[x] ++;
                if (x - 3 >= 1) map.put(x-3, 1);
                if (x + 3 <= m) map.put(x+3, 1);
            }else {
                a[x] --;
                if (a[x] == 0){
                    if (x - 3 >= 1){
                        if (x - 6 >= 1 && a[x - 6] == 0) map.remove(x-3);
                        else if (x - 6 < 1) map.remove(x-3); 
                    }
                    if (x + 3 <= m){
                        if (x + 6 <= m && a[x + 6] == 0) map.remove(x+3);
                        else if (x + 6 > m) map.remove(x+3);
                    }
                }
            }
            System.out.println(map.size());
        }
    }
}"
69,D,Java,60975815,2023-02-24 21:08:14,栗子ing,答案错误,"import java.util.*;
import java.io.*;
public class Main{
    static int N = 100010;
    static int[] a = new int[N];
    public static void main(String[] args)throws IOException{
        BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter wt = new PrintWriter(new OutputStreamWriter(System.out));
        String[] str = bf.readLine().split("" "");
        int m = Integer.parseInt(str[0]);
        int q = Integer.parseInt(str[1]);
        Map<Integer, Integer> map = new HashMap<>();
        while (q -- > 0){
            str = bf.readLine().split("" "");
            int p = Integer.parseInt(str[0]);
            int x = Integer.parseInt(str[1]);
            if (p == 1) {
                a[x] ++;
                if (x - 3 >= 1) map.put(x-3, 1);
                if (x + 3 <= m) map.put(x+3, 1);
            }else {
                a[x] --;
                if (a[x] == 0){
                    if (x - 3 >= 1){
                        if (x - 6 >= 1 && a[x - 6] == 0) map.remove(x-3);
                        else if (x - 6 < 1) map.remove(x-3); 
                    }
                    if (x + 3 <= m){
                        if (x + 6 <= m && a[x + 6] == 0) map.remove(x+3);
                        else if (x + 6 > m) map.remove(x+3);
                    }
                }
            }
            wt.println(map.size());
        }
    }
}"
70,D,Java,60975846,2023-02-24 21:09:08,栗子ing,答案正确,"import java.util.*;
import java.io.*;
public class Main{
    static int N = 100010;
    static int[] a = new int[N];
    public static void main(String[] args)throws IOException{
        BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter wt = new PrintWriter(new OutputStreamWriter(System.out));
        String[] str = bf.readLine().split("" "");
        int m = Integer.parseInt(str[0]);
        int q = Integer.parseInt(str[1]);
        Map<Integer, Integer> map = new HashMap<>();
        while (q -- > 0){
            str = bf.readLine().split("" "");
            int p = Integer.parseInt(str[0]);
            int x = Integer.parseInt(str[1]);
            if (p == 1) {
                a[x] ++;
                if (x - 3 >= 1) map.put(x-3, 1);
                if (x + 3 <= m) map.put(x+3, 1);
            }else {
                a[x] --;
                if (a[x] == 0){
                    if (x - 3 >= 1){
                        if (x - 6 >= 1 && a[x - 6] == 0) map.remove(x-3);
                        else if (x - 6 < 1) map.remove(x-3); 
                    }
                    if (x + 3 <= m){
                        if (x + 6 <= m && a[x + 6] == 0) map.remove(x+3);
                        else if (x + 6 > m) map.remove(x+3);
                    }
                }
            }
            wt.println(map.size());
        }
        wt.flush();
    }
}"
71,D,Java,60976023,2023-02-24 21:13:45,给个AC吧,运行超时,"import java.io.*;
import java.math.*;
import java.util.*;

/*
6
0 6 1 5 0 0
6 0 5 0 3 0
1 5 0 5 6 4
5 0 5 0 0 2
0 3 6 0 0 6
0 0 4 2 6 0
*/
public class Main {
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    static int n, m;
    static boolean[][] f = new boolean[35][35];

    static Scanner scan = new Scanner(System.in);

    public static void main(String[] args) {
        Input sc = new Input(System.in);
        int m = sc.nextInt();
        int q = sc.nextInt();
        LinkedList<Integer> list = new LinkedList<>();
        for (int i = 0; i < q; i++) {
            int op = sc.nextInt();
            int num = sc.nextInt();
            if (op == 1) {
                list.add(num);
            } else {
                list.remove(new Integer(num));
            }
            int ans = 0;
            for (int j = 1; j <= m; j++) {
                if (list.contains(j + 3) || list.contains(j - 3)) {
                    ans++;
                }
            }
            out.println(ans);
        }
        out.flush();
    }

    static class Input {

        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public Input(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                // TODO 自动生成的 catch 块
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }
    }
}
"
72,D,Java,60976108,2023-02-24 21:16:22,给个AC吧,答案正确,"
import java.io.*;
import java.math.*;
import java.util.*;

public class Main {
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    static int n, m;
    static boolean[][] f = new boolean[35][35];

    static Scanner scan = new Scanner(System.in);

    public static void main(String[] args) {
        Input sc = new Input(System.in);
        int m = sc.nextInt();
        int q = sc.nextInt();
        Map<Integer, Integer> map = new HashMap<>();
        for (int i = 1; i <= m; i++) {
            map.put(i, 0);
        }
        int tmp = 0;
        for (int i = 0; i < q; i++) {
            int op = sc.nextInt();
            int num = sc.nextInt();
            int x = num + 3;
            int y = num - 3;
            if (op == 1) {
                if (x <= m) {
                    if (map.containsKey(x)) {
                        int tmpx = map.get(x);
                        if (tmpx <= 0) {
                            tmp++;
                        }
                        tmpx++;
                        map.put(x, tmpx);
                    }
                }
                if (y >= 1) {
                    if (map.containsKey(y)) {
                        int tmpy = map.get(y);
                        if (tmpy <= 0) {
                            tmp++;
                        }
                        tmpy++;
                        map.put(y, tmpy);
                    }
                }
            } else {
                if (x <= m) {
                    int sx = map.get(x);
                    sx--;
                    if (sx <= 0) {
                        tmp--;
                    }
                    map.put(x, sx);
                }
                if (y >= 1) {
                    int sy = map.get(y);
                    sy--;
                    if (sy <= 0) {
                        tmp--;
                    }
                    map.put(y, sy);
                }
            }
            out.println(tmp);
        }
        out.flush();
        out.close();
    }

    static class Input {

        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public Input(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                // TODO 自动生成的 catch 块
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }
    }
}
"
73,D,Java,60976517,2023-02-24 21:29:36,giao1,答案错误," import java.util.*;
import java.io.*;

public class Main{
    static int[] a = new int[1000010];
    static int[] b = new int[1000010];
    static int[] c = new int[1000010];
    static boolean[] st = new boolean[1000010];
    public static void main(String[] args) throws IOException {
        initReader();
        int m = nextInt();int q = nextInt();
        int res = 0;
        //Vector<Integer> ve = new Vector<>();
        while(q-->0){
            int opera = nextInt();
            int num = nextInt();
            if(opera==1){
                c[num]++;
                if(num>3&&!st[num-3]){
                    a[num]++;res++;st[num-3]=true;
                }
                if(num>=4&&num<=m-3&&!st[num+3]){
                    a[num]++;res++;st[num+3]=true;
                }
                if(num+3>=4&&num+3<=m){
                    b[num+3]++;
                }
                if(num-3<=m&&num-3>=1){
                    b[num-3]++;
                }
            }
            else{
                c[num]--;
                if(num>3){
                    b[num-3]--;
                }
                if(num<=m-3) b[num+3]--;
                if(c[num]==0){
                    res-=a[num];
                   if(num-3<=m&&num-3>=1)res+=b[num-3];
                    if(num+3>=4&&num+3<=m)res+=b[num+3];
                }
            }
            pw.println(res);
        }
        pw.close();
    }
    static BufferedReader reader;
    static StringTokenizer tokenizer;
    static PrintWriter pw;

    public static void initReader() throws IOException {
        reader = new BufferedReader(new InputStreamReader(System.in));
        tokenizer = new StringTokenizer("""");
        pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
    }


    public static boolean hasNext() {
        try {
            while (!tokenizer.hasMoreTokens()) {
                tokenizer = new StringTokenizer(reader.readLine());
            }
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public static String next() throws IOException {
        while (!tokenizer.hasMoreTokens()) {
            tokenizer = new StringTokenizer(reader.readLine());
        }
        return tokenizer.nextToken();
    }

    public static String nextLine() {
        try {
            return reader.readLine();
        } catch (Exception e) {
            return null;
        }
    }

    public static int nextInt() throws IOException {
        return Integer.parseInt(next());
    }

    public static long nextLong() throws IOException {
        return Long.parseLong(next());
    }

    public static double nextDouble() throws IOException {
        return Double.parseDouble(next());
    }

    public static char nextChar() throws IOException {
        return next().charAt(0);
    }
}"
74,D,Java,60976989,2023-02-24 21:47:05,giao1,答案错误," import java.util.*;
import java.io.*;

public class Main{
    static int[] a = new int[1000010];
    static int[] b = new int[1000010];
    static int[] c = new int[1000010];
    static boolean[] st = new boolean[1000010];
    public static void main(String[] args) throws IOException {
        initReader();
        int m = nextInt();int q = nextInt();
        int res = 0;
        //Vector<Integer> ve = new Vector<>();
        while(q-->0){
            int opera = nextInt();
            int num = nextInt();
            if(opera==1){
                c[num]++;
                if(num>3&&!st[num-3]){
                    a[num]++;res++;st[num-3]=true;
                }
                if(num>=4&&num+3<=m&&!st[num+3]){
                    a[num]++;res++;st[num+3]=true;
                }
                if(num+3>=4&&num+3<=m){
                    b[num+3]++;
                }
                if(num-3<=m&&num-3>=1){
                    b[num-3]++;
                }
            }
            else{
                c[num]--;
                if(num>3){
                    b[num-3]--;
                }
                if(num<=m-3) b[num+3]--;
                if(c[num]==0){
                    res-=a[num];
                   if(num-3<=m&&num-3>=1)res+=b[num-3];
                    if(num+3>=4&&num+3<=m)res+=b[num+3];
                }
            }
            pw.println(res);
        }
        pw.close();
    }
    static BufferedReader reader;
    static StringTokenizer tokenizer;
    static PrintWriter pw;

    public static void initReader() throws IOException {
        reader = new BufferedReader(new InputStreamReader(System.in));
        tokenizer = new StringTokenizer("""");
        pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
    }


    public static boolean hasNext() {
        try {
            while (!tokenizer.hasMoreTokens()) {
                tokenizer = new StringTokenizer(reader.readLine());
            }
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public static String next() throws IOException {
        while (!tokenizer.hasMoreTokens()) {
            tokenizer = new StringTokenizer(reader.readLine());
        }
        return tokenizer.nextToken();
    }

    public static String nextLine() {
        try {
            return reader.readLine();
        } catch (Exception e) {
            return null;
        }
    }

    public static int nextInt() throws IOException {
        return Integer.parseInt(next());
    }

    public static long nextLong() throws IOException {
        return Long.parseLong(next());
    }

    public static double nextDouble() throws IOException {
        return Double.parseDouble(next());
    }

    public static char nextChar() throws IOException {
        return next().charAt(0);
    }
}"
75,D,Java,60976998,2023-02-24 21:47:27,giao1,答案正确,"import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;
import java.io.PrintWriter;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
         PrintWriter out = new PrintWriter(System.out);
        int m = sc.nextInt();
        int q = sc.nextInt();
        Map<Integer,Integer> map = new HashMap<>();
        while (q-->0){
            int op = sc.nextInt();
            int num = sc.nextInt();
            if(op==1){
                if(num>3){
                    int cnt = map.getOrDefault(num-3,0);
                    map.put(num-3, cnt+1);
                }
                if(num<=m-3){
                    int cnt = map.getOrDefault(num+3,0);
                    map.put(num+3, cnt+1);
                }

            }else {
                if(num>3){
                    int cnt = map.getOrDefault(num-3,0);
                    if(cnt ==1 ){
                        map.remove(num-3);
                    }else {
                        map.put(num-3, cnt-1);
                    }
                }
                if(num<=m-3){
                    int cnt = map.getOrDefault(num+3,0);
                    if(cnt ==1 ){
                        map.remove(num+3);
                    }else {
                        map.put(num+3, cnt-1);
                    }
                }
            }

            out.println(map.size());
        }
        out.close();
    }
}"
76,D,Java,60979131,2023-02-25 09:21:44,何妨吟啸且徐行1,答案正确,"import java.io.*;
import java.util.HashMap;

public class Main {

    public static StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in), 32768));
    public static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    public static double nextDouble() throws IOException { in.nextToken(); return in.nval; }
    public static float nextFloat() throws IOException { in.nextToken(); return (float)in.nval; }
    public static int nextInt() throws IOException { in.nextToken(); return (int)in.nval; }
    public static String next() throws IOException { return in.sval; }
    public static long nextLong() throws Exception { in.nextToken(); return (long)in.nval;}

    public static void main(String[] args) throws Exception {
        int m = nextInt();
        int q = nextInt();
        HashMap<Integer,Integer> map=new HashMap<>();
        for(int i = 0; i < q; i++){
            int op = nextInt();
            int num = nextInt();
            if(op == 1){
                if (num>3) map.put(num-3,map.getOrDefault(num-3,0)+1);
                if(num<=m-3) map.put(num+3,map.getOrDefault(num+3,0)+1);
            } else {
                if (num>3){
                    if (map.get(num-3)==1) map.remove(num-3);
                    else map.put(num-3,map.getOrDefault(num-3,0)-1);
                }
                if (num<=m-3){
                    if (map.get(num+3)==1) map.remove(num+3);
                    else map.put(num+3,map.getOrDefault(num+3,0)-1);
                }
            }
            out.println(map.size());
        }
        out.close();
    }
}"
77,D,Java,60981597,2023-02-25 13:29:34,牛客48509928号,运行超时,"import java.util.Scanner;
public class Main{
    public static void main (String[] args){
        Scanner ms = new Scanner(System.in);
        int m = ms.nextInt();
        int q = ms.nextInt(); 
        int[] all = new int[m];

        for(int i =0 ;i < q ; i++){
                int safecard = 0;
                int op = ms.nextInt();
                int num = ms.nextInt();
                if (op == 1){
                    if((num - 3) > 0){
                        all[num-4] += 1;
                    }
                    if((num + 3) <= m){
                        all[num + 2] += 1;
                    }
                }
                else{
                    if((num - 3) > 0){
                        all[num-4] -= 1;
                    }
                    if((num + 3) <= m){
                        all[num + 2] -= 1;
                    }
                }          
                for(int j = 0;j < m;j++){
                    if(all[j] > 0){
                        safecard ++;
                    }
                }
                System.out.println(safecard);
        }
    }
}"
78,D,Java,60981617,2023-02-25 13:30:47,牛客48509928号,运行超时,"import java.util.Scanner;
public class Main{
    public static void main (String[] args){
        Scanner ms = new Scanner(System.in);
        int m = ms.nextInt();
        int q = ms.nextInt(); 
        int[] all = new int[m];

        for(int i =0 ;i < q ; i++){
                int safecard = 0;
                int op = ms.nextInt();
                int num = ms.nextInt();
                if (op == 1){
                    if((num - 3) > 0){
                        all[num-4] += 1;
                    }
                    if((num + 3) <= m){
                        all[num + 2] += 1;
                    }
                }
                else{
                    if((num - 3) > 0){
                        all[num-4] -= 1;
                    }
                    if((num + 3) <= m){
                        all[num + 2] -= 1;
                    }
                }          
                for(int j = 0;j < m;j++){
                    if(all[j] > 0){
                        safecard ++;
                    }
                }
                System.out.println(safecard);
        }
    }
}"
79,D,Java,60981923,2023-02-25 13:48:20,牛客48509928号,编译错误,"{""SPECIAL_TM_FH_MEMO_JSON_TAG"":""SPECIAL_TM_FH_MEMO_JSON_TAG"",""stderr"":""Main.java:17: error: illegal start of expression\n                    if((num + 3) <= m)){\n                                      ^\n1 error""}

import java.util.Scanner;
public class Main{
    public static void main (String[] args){
        Scanner ms = new Scanner(System.in);
        int safecard = 0;
        int m = ms.nextInt();
        int q = ms.nextInt(); 
        int[] all = new int[m];
        for(int i =0 ;i < q ; i++){
                int op = ms.nextInt();
                int num = ms.nextInt();
                if (op == 1){
                    if((num - 3) > 0){
                        all[num-4] += 1;
                        safecard ++;
                    }
                    if((num + 3) <= m)){
                        all[num + 2] += 1;
                        safecard ++;
                    }
                }
                else{
                    if((num - 3) > 0) {
                        all[num-4] -= 1;
                        if (all[num - 4] == 0){
                            safecard --;
                        }
                    }
                    if((num + 3) <= m){
                        all[num + 2] -= 1;
                        if (all[num + 2] == 0){
                            safecard --;
                        }
                    }
                }          
                System.out.println(safecard);
        }
    }
}"
80,D,Java,60981962,2023-02-25 13:50:13,牛客48509928号,答案正确,"import java.util.Scanner;
public class Main{
    public static void main (String[] args){
        Scanner ms = new Scanner(System.in);
        int safecard = 0;
        int m = ms.nextInt();
        int q = ms.nextInt(); 
        int[] all = new int[m];
        for(int i =0 ;i < q ; i++){
                int op = ms.nextInt();
                int num = ms.nextInt();
                if (op == 1){
                    if((num - 3) > 0){
                        all[num-4] += 1;
                        if (all[num - 4] == 1){
                            safecard ++;
                        }
                    }
                    if((num + 3) <= m){
                        all[num + 2] += 1;
                        if (all[num + 2] == 1){
                            safecard ++;
                        }
                    }
                }
                else{
                    if((num - 3) > 0) {
                        all[num-4] -= 1;
                        if (all[num - 4] == 0){
                            safecard --;
                        }
                    }
                    if((num + 3) <= m){
                        all[num + 2] -= 1;
                        if (all[num + 2] == 0){
                            safecard --;
                        }
                    }
                }          
                System.out.println(safecard);
        }
    }
}"
81,D,Java,60982924,2023-02-25 14:37:59,40lc,答案正确,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int m=sc.nextInt(),q=sc.nextInt(),op,num,sum=0;
        int[] a=new int[(int) (1e5+10)];
        while(q-->0){
            op=sc.nextInt();
            num=sc.nextInt();
            if(op==1){
                if(num>3){
                    if(a[num-3]==0)
                        sum++;
                    a[num-3]++;
                }
                if(num<=m-3){
                    if(a[num+3]==0)
                        sum++;
                    a[num+3]++;
                }
            }
            else {
                if(num>3){
                    a[num-3]--;
                    if(a[num-3]==0)
                        sum--;
                }
                if(num<=m-3){
                    a[num+3]--;
                    if(a[num+3]==0)
                        sum--;
                }
            }
            System.out.println(sum);
        }
    }
}
"
82,D,Java,60982944,2023-02-25 14:38:46,40lc,答案正确,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int m=sc.nextInt(),q=sc.nextInt(),op,num,sum=0;
        int[] a=new int[(int) (1e5+10)];
        while(q-->0){
            op=sc.nextInt();
            num=sc.nextInt();
            if(op==1){
                if(num>3){
                    if(a[num-3]==0)
                        sum++;
                    a[num-3]++;
                }
                if(num<=m-3){
                    if(a[num+3]==0)
                        sum++;
                    a[num+3]++;
                }
            }
            else {
                if(num>3){
                    a[num-3]--;
                    if(a[num-3]==0)
                        sum--;
                }
                if(num<=m-3){
                    a[num+3]--;
                    if(a[num+3]==0)
                        sum--;
                }
            }
            System.out.println(sum);
        }
    }
}
"
83,D,Java,60984837,2023-02-25 16:20:12,hhdhhd,运行超时,"import java.util.*;
public class Main{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int m = sc.nextInt();
        int q = sc.nextInt();
        HashMap<Integer,Integer> map = new HashMap<>();
        while(q > 0)
         {
            q--;
            int op = sc.nextInt();
            int x = sc.nextInt();
            if(op == 1){
                int self1 = x - 3;
                int self2 = x + 3;
                if(self1 >= 1 && self1 <= m)map.put(self1,map.getOrDefault(self1,0) + 1);
                if(self2 >= 1 && self2 <= m)map.put(self2,map.getOrDefault(self2,0) + 1);
            }else {
                int self1 = x - 3;
                int self2 = x + 3;
                if(self1 >= 1 && self1 <= m && map.containsKey(self1))map.put(self1,map.getOrDefault(self1,0) - 1);
                if(self2 >= 1 && self2 <= m && map.containsKey(self2))map.put(self2,map.getOrDefault(self2,0) - 1);
                if(map.containsKey(self1) && map.get(self1) == 0)map.remove(self1);
                if(map.containsKey(self2) && map.get(self2) == 0)map.remove(self2);
            }
             System.out.println(map.size());
        }
    }
}"
84,D,Java,60984868,2023-02-25 16:22:06,hhdhhd,运行超时,"import java.util.*;
public class Main{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int m = sc.nextInt();
        int q = sc.nextInt();
        HashMap<Integer,Integer> map = new HashMap<>();
        while(q > 0)
         {
            q--;
            int op = sc.nextInt();
            int x = sc.nextInt();
            if(op == 1){
                int self1 = x - 3;
                int self2 = x + 3;
                if(self1 >= 1 && self1 <= m)map.put(self1,map.getOrDefault(self1,0) + 1);
                if(self2 >= 1 && self2 <= m)map.put(self2,map.getOrDefault(self2,0) + 1);
            }else {
                int self1 = x - 3;
                int self2 = x + 3;
                if(self1 >= 1 && self1 <= m && map.containsKey(self1))map.put(self1,map.getOrDefault(self1,0) - 1);
                if(self2 >= 1 && self2 <= m && map.containsKey(self2))map.put(self2,map.getOrDefault(self2,0) - 1);
                if(map.containsKey(self1) && map.get(self1) == 0)map.remove(self1);
                if(map.containsKey(self2) && map.get(self2) == 0)map.remove(self2);
            }
             System.out.println(map.size());
        }
    }
}"
85,D,Java,60984906,2023-02-25 16:24:33,hhdhhd,运行超时,"import java.util.*;
public class Main{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int m = sc.nextInt();
        int q = sc.nextInt();
        HashMap<Integer,Integer> map = new HashMap<>();
        while(q > 0)
         {
            q--;
            int op = sc.nextInt();
            int x = sc.nextInt();
            if(op == 1){
                int self1 = x - 3;
                int self2 = x + 3;
                if(self1 >= 1 && self1 <= m)map.put(self1,map.getOrDefault(self1,0) + 1);
                if(self2 >= 1 && self2 <= m)map.put(self2,map.getOrDefault(self2,0) + 1);
            }else {
                int self1 = x - 3;
                int self2 = x + 3;
                if(self1 >= 1 && self1 <= m && map.containsKey(self1))map.put(self1,map.getOrDefault(self1,0) - 1);
                if(self2 >= 1 && self2 <= m && map.containsKey(self2))map.put(self2,map.getOrDefault(self2,0) - 1);
                if(map.containsKey(self1) && map.get(self1) == 0)map.remove(self1);
                if(map.containsKey(self2) && map.get(self2) == 0)map.remove(self2);
            }
             System.out.println(map.size());
        }
    }
}"
86,D,Java,60984921,2023-02-25 16:25:50,hhdhhd,运行超时,"import java.util.*;
public class Main{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int m = sc.nextInt();
        int q = sc.nextInt();
        HashMap<Integer,Integer> map = new HashMap<>();
        while(q > 0)
         {
            q--;
            int op = sc.nextInt();
            int x = sc.nextInt();
            if(op == 1){
                int self1 = x - 3;
                int self2 = x + 3;
                if(self1 >= 1 && self1 <= m)map.put(self1,map.getOrDefault(self1,0) + 1);
                if(self2 >= 1 && self2 <= m)map.put(self2,map.getOrDefault(self2,0) + 1);
            }else {
                int self1 = x - 3;
                int self2 = x + 3;
                if(self1 >= 1 && self1 <= m && map.containsKey(self1))map.put(self1,map.getOrDefault(self1,0) - 1);
                if(self2 >= 1 && self2 <= m && map.containsKey(self2))map.put(self2,map.getOrDefault(self2,0) - 1);
                if(map.containsKey(self1) && map.get(self1) == 0)map.remove(self1);
                if(map.containsKey(self2) && map.get(self2) == 0)map.remove(self2);
            }
             System.out.println(map.size());
        }
    }
}"
87,D,Java,60985134,2023-02-25 16:46:03,hhdhhd,运行超时,"import java.util.*;
public class Main{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int m = sc.nextInt();
        int q = sc.nextInt();
        HashMap<Integer,Integer> map = new HashMap<>();
        while(q > 0)
         {
            q--;
            int op = sc.nextInt();
            int x = sc.nextInt();
            if(op == 1){
                int self1 = x - 3;
                int self2 = x + 3;
                if(self1 >= 1 && self1 <= m)map.put(self1,map.getOrDefault(self1,0) + 1);
                if(self2 >= 1 && self2 <= m)map.put(self2,map.getOrDefault(self2,0) + 1);
            }else {
                int self1 = x - 3;
                int self2 = x + 3;
                if(self1 >= 1 && self1 <= m && map.containsKey(self1))map.put(self1,map.getOrDefault(self1,0) - 1);
                if(self2 >= 1 && self2 <= m && map.containsKey(self2))map.put(self2,map.getOrDefault(self2,0) - 1);
                if(map.containsKey(self1) && map.get(self1) == 0)map.remove(self1);
                if(map.containsKey(self2) && map.get(self2) == 0)map.remove(self2);
            }
             System.out.println(map.size());
        }
    }
}"
88,D,Java,61008435,2023-02-27 21:21:48,桔子的冬天,答案错误,"
import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner cin=new Scanner(System.in);
        int n=cin.nextInt();
        int q=cin.nextInt();
        Map<Integer,Integer > map=new HashMap<>();
        while(q-->0){
            int op,num;
            op=cin.nextInt();
            num=cin.nextInt();
            if(op==1){
                if(!map.containsKey(num))
                map.put(num,1);
                else{
                    map.put(num,map.get(num)+1);
                }
            }
            else{
                if(map.containsKey(num)&&map.get(num)==1){
                    map.remove(num);
                }
                else{
                    map.put(num,map.get(num)-1);
                }
            }




            /*set1.clear();
            for(int i:set){
                if((i+3<=n&&i+3>=1)){
                    set1.add(i+3);
                }
                if(i-3<=n&&i-3>=1){
                    set1.add(i-3);
                }
            }
            System.out.println(set1.size());*/

        }


    }
}
"
89,D,Java,61133927,2023-03-08 18:33:53,whb666666,答案正确,"
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;

public class Main {
    public static void main(String[] args) throws IOException {
        Read sc=new Read();
        int m=sc.nextInt();
        int q=sc.nextInt();
        int[] g=new int[100010];
        int ans=0;
        for(int i=0;i<q;i++){
            int op=sc.nextInt();
            int num=sc.nextInt();
            if(op==1){
                if(num-3>=1){
                    g[num-3]++;
                    if(g[num-3]==1)ans++;
                }
                if(num+3<=m){
                    g[num+3]++;
                    if(g[num+3]==1)ans++;
                }

            }else {
                if(num-3>=1){
                    g[num-3]--;
                    if(g[num-3]==0)ans--;
                }
                if(num+3<=m){
                    g[num+3]--;
                    if(g[num+3]==0)ans--;
                }
            }
            System.out.println(ans);
        }
    }
}
class Read {
    StringTokenizer st=new StringTokenizer("""");
    BufferedReader bf=new BufferedReader(new InputStreamReader(System.in));
    String next() throws IOException {
        while(!st.hasMoreTokens()){
            st=new StringTokenizer(bf.readLine());
        }
        return st.nextToken();
    }
    int nextInt() throws IOException {
        return Integer.parseInt(next());
    }
    long nextLong() throws IOException {
        return Long.parseLong(next());
    }
}



"
90,D,Java,61152683,2023-03-10 14:33:15,给个AC吧,答案正确,"import java.io.*;
import java.math.*;
import java.util.*;

public class Main {
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    static int n, m;
    static boolean[][] f = new boolean[35][35];

    static Scanner scan = new Scanner(System.in);

    public static void main(String[] args) {
        Input sc = new Input(System.in);
        int m = sc.nextInt();
        int q = sc.nextInt();
        Map<Integer, Integer> map = new HashMap<>();
        for (int i = 1; i <= m; i++) {
            map.put(i, 0);
        }
        int tmp = 0;
        for (int i = 0; i < q; i++) {
            int op = sc.nextInt();
            int num = sc.nextInt();
            int x = num + 3;
            int y = num - 3;
            if (op == 1) {
                if (x <= m) {
                    if (map.containsKey(x)) {
                        int tmpx = map.get(x);
                        if (tmpx <= 0) {
                            tmp++;
                        }
                        tmpx++;
                        map.put(x, tmpx);
                    }
                }
                if (y >= 1) {
                    if (map.containsKey(y)) {
                        int tmpy = map.get(y);
                        if (tmpy <= 0) {
                            tmp++;
                        }
                        tmpy++;
                        map.put(y, tmpy);
                    }
                }
            } else {
                if (x <= m) {
                    int sx = map.get(x);
                    sx--;
                    if (sx <= 0) {
                        tmp--;
                    }
                    map.put(x, sx);
                }
                if (y >= 1) {
                    int sy = map.get(y);
                    sy--;
                    if (sy <= 0) {
                        tmp--;
                    }
                    map.put(y, sy);
                }
            }
            out.println(tmp);
        }
        out.flush();
        out.close();
    }

    static class Input {

        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public Input(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                // TODO 自动生成的 catch 块
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }
    }
}
"
91,D,Java,61152696,2023-03-10 14:33:52,给个AC吧,答案正确,"import java.io.*;
import java.math.*;
import java.util.*;

public class Main {
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    static int n, m;
    static boolean[][] f = new boolean[35][35];

    static Scanner scan = new Scanner(System.in);

    public static void main(String[] args) {
        Input sc = new Input(System.in);
        int m = sc.nextInt();
        int q = sc.nextInt();
        Map<Integer, Integer> map = new HashMap<>();
        for (int i = 1; i <= m; i++) {
            map.put(i, 0);
        }
        int tmp = 0;
        for (int i = 0; i < q; i++) {
            int op = sc.nextInt();
            int num = sc.nextInt();
            int x = num + 3;
            int y = num - 3;
            if (op == 1) {
                if (x <= m) {
                    if (map.containsKey(x)) {
                        int tmpx = map.get(x);
                        if (tmpx <= 0) {
                            tmp++;
                        }
                        tmpx++;
                        map.put(x, tmpx);
                    }
                }
                if (y >= 1) {
                    if (map.containsKey(y)) {
                        int tmpy = map.get(y);
                        if (tmpy <= 0) {
                            tmp++;
                        }
                        tmpy++;
                        map.put(y, tmpy);
                    }
                }
            } else {
                if (x <= m) {
                    int sx = map.get(x);
                    sx--;
                    if (sx <= 0) {
                        tmp--;
                    }
                    map.put(x, sx);
                }
                if (y >= 1) {
                    int sy = map.get(y);
                    sy--;
                    if (sy <= 0) {
                        tmp--;
                    }
                    map.put(y, sy);
                }
            }
            out.println(tmp);
        }
        out.flush();
        out.close();
    }

    static class Input {

        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public Input(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                // TODO 自动生成的 catch 块
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }
    }
}
"
92,D,Java,61152717,2023-03-10 14:35:10,给个AC吧,答案正确,"import java.io.*;
import java.math.*;
import java.util.*;

public class Main {
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    static int n, m;
    static boolean[][] f = new boolean[35][35];

    static Scanner scan = new Scanner(System.in);

    public static void main(String[] args) {
        Input sc = new Input(System.in);
        int m = sc.nextInt();
        int q = sc.nextInt();
        Map<Integer, Integer> map = new HashMap<>();
        for (int i = 1; i <= m; i++) {
            map.put(i, 0);
        }
        int tmp = 0;
        for (int i = 0; i < q; i++) {
            int op = sc.nextInt();
            int num = sc.nextInt();
            int x = num + 3;
            int y = num - 3;
            if (op == 1) {
                if (x <= m) {
                    if (map.containsKey(x)) {
                        int tmpx = map.get(x);
                        if (tmpx <= 0) {
                            tmp++;
                        }
                        tmpx++;
                        map.put(x, tmpx);
                    }
                }
                if (y >= 1) {
                    if (map.containsKey(y)) {
                        int tmpy = map.get(y);
                        if (tmpy <= 0) {
                            tmp++;
                        }
                        tmpy++;
                        map.put(y, tmpy);
                    }
                }
            } else {
                if (x <= m) {
                    int sx = map.get(x);
                    sx--;
                    if (sx <= 0) {
                        tmp--;
                    }
                    map.put(x, sx);
                }
                if (y >= 1) {
                    int sy = map.get(y);
                    sy--;
                    if (sy <= 0) {
                        tmp--;
                    }
                    map.put(y, sy);
                }
            }
            out.println(tmp);
        }
        out.flush();
        out.close();
    }

    static class Input {

        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public Input(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                // TODO 自动生成的 catch 块
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }
    }
}
"
93,D,Java,61289631,2023-03-14 21:17:25,zcq250,运行超时,"import java.util.*;
import java.io.*;

class mystruct {
    String s;
    int y,m,d;
    int i;
}


public class Main {
    static  StreamTokenizer cin=new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));//用于读入int，long等
    static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));//读字符串
    static  PrintWriter cout=new PrintWriter(new OutputStreamWriter(System.out));//输出流
    static int N=2000000+10;
   // static int[] h=new int[N],ne=new int[N],e=new int[N],w=new int[N];
    static  int idex=0;
    //static boolean []vis=new boolean[N];
    //static long []dist=new long[N];
    static long INF = (long)1e18;
    //static PriorityQueue<long[]>q=new PriorityQueue<>((a,b)->{return (int)a[1]-(int)b[1];});
    //static LinkedList<Integer>prime=new LinkedList<>();
    //static Map<Integer,Integer>Q=new HashMap<>();
    static int [][]dp=new int[N][40];
    static int []num=new int [N];
    static int []log_k=new int[N];
    public static void main(String[] args)throws  Exception {

        String []s=bf.readLine().split("" "");
        int n=Integer.parseInt(s[0]);
        int t=Integer.parseInt(s[1]);
        Map<Integer,Integer>q=new HashMap<>();
        for(int i=1;i<=t;i++)
        {
            s=bf.readLine().split("" "");
            int op=Integer.parseInt(s[0]);
            int num=Integer.parseInt(s[1]);
            if(op==1)
            {
                if(q.containsKey(num))
                {
                    q.put(num,q.get(num).intValue()+1);
                }else
                {
                    q.put(num,1);
                }
            }else
            {
                q.put(num,q.get(num).intValue()-1);

            }
            int res=0;
            for(int j=1;j<=n;j++)
            {
                if(q.containsKey(j+3))
                {
                    if(q.get(j+3)!=0)
                    {
                        res++;
                        continue;
                    }
                }
                if(q.containsKey(j-3))
                {
                    if(q.get(j-3)!=0)
                    {
                        res++;
                        continue;
                    }
                }
            }
            cout.println(res);

        }

        cout.close();
    }




}
"
94,D,Java,61290648,2023-03-14 22:06:37,zcq250,运行超时,"import java.util.*;
import java.io.*;

class mystruct {
    String s;
    int y,m,d;
    int i;
}


public class Main {
    static  StreamTokenizer cin=new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));//用于读入int，long等
    static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));//读字符串
    static  PrintWriter cout=new PrintWriter(new OutputStreamWriter(System.out));//输出流
    static int N=2000000+10;
   // static int[] h=new int[N],ne=new int[N],e=new int[N],w=new int[N];
    static  int idex=0;
    //static boolean []vis=new boolean[N];
    //static long []dist=new long[N];
    static long INF = (long)1e18;
    //static PriorityQueue<long[]>q=new PriorityQueue<>((a,b)->{return (int)a[1]-(int)b[1];});
    //static LinkedList<Integer>prime=new LinkedList<>();
    //static Map<Integer,Integer>Q=new HashMap<>();
    static int [][]dp=new int[N][40];
    static int []num=new int [N];
    static int []log_k=new int[N];
    public static void main(String[] args)throws  Exception {

        String []s=bf.readLine().split("" "");
        int n=Integer.parseInt(s[0]);
        int t=Integer.parseInt(s[1]);
        Map<Integer,Integer>q=new HashMap<>();
        Map<Integer,Integer>q2=new HashMap<>();
        Map<Integer,Integer>q3=new HashMap<>();

        for(int i=1;i<=n;i++)
        {
            if(!q2.containsKey(i))q2.put(i,1);


        }
        int res=0;
        for(int i=1;i<=t;i++)
        {
            s=bf.readLine().split("" "");
            int op=Integer.parseInt(s[0]);
            int num=Integer.parseInt(s[1]);

            if(op==1)
            {
                if(q2.containsKey(num-3))//有这个答案
                {
                      if(q3.containsKey(num-3))
                      {
                          q3.put(num-3,q3.get(num-3).intValue()+1);

                      }else
                      {
                          q3.put(num-3,1);res++;
                      }



                }
                if(q2.containsKey(num+3))
                {
                    if(q3.containsKey(num+3))
                    {
                        q3.put(num+3,q3.get(num+3).intValue()+1);

                    }else
                    {
                        q3.put(num+3,1);
                        res++;
                    }
                }
            }else
            {
                if(q3.containsKey(num-3)&&q3.get(num-3).intValue()!=0)
                {
                    if(q3.containsKey(num-3))
                    {
                        int temp=q3.get(num-3).intValue();

                        temp-=1;
                        if(temp==0)res--;
                        q3.put(num-3,temp);

                    }

                }
                if(q3.containsKey(num+3))
                {
                    if(q3.containsKey(num+3)&&q3.get(num+3).intValue()!=0)
                    {
                        int temp=q3.get(num+3).intValue();

                        temp-=1;
                        if(temp==0)res--;
                        q3.put(num+3,temp);

                    }
                }

            }
            cout.println(res);



        }

        cout.close();
    }




}"
