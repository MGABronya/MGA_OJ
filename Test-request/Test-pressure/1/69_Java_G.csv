,index,languageName,submissionId,submitTime,userName,statusMessage,code
0,G,Java,61489709,2023-03-24 20:42:47,小小小巨人,答案正确,"import java.io.*;
import java.math.*;
import java.util.*;
import java.util.Map.*;
/**
 * 
 * @author TCchen
 */
public class Main {
	public static void main(String[]args) throws IOException {
		new Main().run();
	}
//	File input=new File("".\\input.txt"");
//	File output=new File("".\\output.txt"");
	void run() throws IOException{
//		new Solve().setIO(input, output).run();
		new Solve().setIO(System.in,System.out).run();
	}
	class Solve extends ioTask{
		int n,q,m,k,i,j,x,y,len,l,r;
		int a,b;
		long p;
		char[]ch;
		boolean isNum(char c) {
			k=1;
			return '0'<=c&&c<='9';
		}
		int read() {
			if(!isNum(ch[r]))return 1;
			int k=1;
			int res=0;
			while(r>=0&&isNum(ch[r])) {
				res+=k*(ch[r]-'0');
				k*=10;
				r--;
			}
			r--;
			return res;
		}
		char[]s=new char[2];
		long pow(long a,long b) {
			long res=1;
			while(b>0) {
				if((b&1)==1) 
					res=res*a%p;
				a=a*a%p;
				b>>=1;
			}
			return res;
		}
		long[][]ans;
		long inv[];
		BigInteger pp,aa,bb;
		void solve() throws IOException{
			ch=in.ins().toCharArray();
//			System.out.println(ch);
			l=0;
			r=ch.length-1;
			p=read();
			pp=new BigInteger(""""+p);
			n=read();
			if(ch[r]==')')r--;
			s[1]=ch[r--];
			b=read();
			bb=new BigInteger(""""+b);
			if(ch[r]=='+')r--;
			s[0]=ch[r--];
			a=read();
			aa=new BigInteger(""""+a);
//			System.out.println(a+""""+s[0]+""+""+b+""""+s[1]+"" ""+n+"" ""+p);
			out.print(ch);
			out.print("" = "");
			if(s[0]==s[1]) {
				a+=b;
				a=(int) pow(a,n);
				if(a!=0) {
					if(a!=1) {
						out.print(a+""*"");
					}
					out.print(s[0]);
					if(n!=1)
					out.print(""^""+n);
					out.println(""%""+p);
					
				}else {
					out.println(0);
				}
			}else {
				BigInteger num=BigInteger.ONE;
				k=1;
				ans=new long[n+2][3];
				for(i=0;i<=n;i++) {
					ans[i][0]= Long.parseLong(num.mod(pp).toString());
//					System.out.println(i+"" ""+num);
					num=num.multiply(new BigInteger(""""+(n-i))).divide(new BigInteger(""""+k++));
				}
				num=BigInteger.ONE;
				k=0;
				for(i=0;i<=n;i++) {
					ans[i][0]= Long.parseLong((num.multiply(new BigInteger(ans[i][0]+""""))).mod(pp).toString());
					ans[i][2]=k++;
					num=num.multiply(bb);
				}
				num=BigInteger.ONE;
				k=0;
				for(i=n;i>=0;i--) {
					ans[i][0]= Long.parseLong((num.multiply(new BigInteger(ans[i][0]+""""))).mod(pp).toString());
					ans[i][1]=k++;
					num=num.multiply(aa);
				}
				k=0;
				for(i=0;i<=n;i++) {
					if(ans[i][0]!=0)k++;
				}
				if(k==0)out.println(0);
				else {
					if(k>1)out.print('(');
					boolean book=false;
					boolean mul=false;
					for(i=0;i<=n;i++) {
						if(ans[i][0]==0)continue;
						mul=false;
						if(book)out.print(""+"");
						else book=true;
						if(ans[i][0]!=1) {
							out.print(ans[i][0]);
							if(mul)out.print(""*"");
							else mul=true;
						}
						if(ans[i][1]!=0) {
							if(mul)out.print(""*"");
							else mul=true;
							out.print(s[0]);
							if(ans[i][1]!=1)out.print(""^""+ans[i][1]);
						}
						if(ans[i][2]!=0) {
							if(mul)out.print(""*"");
							else mul=true;
							out.print(s[1]);
							if(ans[i][2]!=1)out.print(""^""+ans[i][2]);
						}
					}
					if(k>1)out.print("")"");
					out.println(""%""+p);
				}
			}
			
		}
		int te=1;
		void run()throws IOException{
//			init();
			int t=1;
//			t=in.in();
			for(te=1;te<=t;te++) {
				solve();
				out.flush();
			}
			out.close();
		}
//		long timeMillis;
//		void st() {
//			timeMillis=System.currentTimeMillis();
//		}
//		void ed() {
//			System.out.println((System.currentTimeMillis()-timeMillis)+""ms"");
//		}
	}
	class QIn{
		StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
		int in() throws IOException {
			st.nextToken();
			return (int)st.nval;
		}
		long inl() throws IOException {
			st.nextToken();
			return (long)st.nval;
		}
		double ind()throws IOException  {
			st.nextToken();
			return st.nval;
		}
		String ins() throws IOException {
			st.nextToken();
			return st.sval;
		}
	}
	class In{
		private StringTokenizer in=new StringTokenizer("""");
		private InputStream is;
		private BufferedReader br;
		public In(File file) throws IOException {
			is=new FileInputStream(file);
			init();
		}
		public In(InputStream is) throws IOException{
			this.is=is;
			init();
		}
		private void init() throws IOException {
			br=new BufferedReader(new InputStreamReader(is));
		}
		/**
		 * File and OJ only
		 */
		boolean hasNext() throws IOException {
			return in.hasMoreTokens()||br.ready();
		}
		String ins() throws IOException {
			while(!in.hasMoreTokens()) {
				in=new StringTokenizer(br.readLine());
			}
			return in.nextToken();
		}
		int in() throws IOException {
			return Integer.parseInt(ins());
		}
		long inl() throws IOException {
			return Long.parseLong(ins());
		}
		double ind() throws IOException {
			return Double.parseDouble(ins());
		}
		String line() throws IOException {
			return br.readLine();
		}
	}
	class Out{
		PrintWriter out;
		private OutputStream os;
		private void init() {
			out=new PrintWriter(new BufferedWriter(new OutputStreamWriter(os)));
		}
		public Out(File file) throws IOException {
			os=new FileOutputStream(file);
			init();
		}
		public Out(OutputStream os) throws IOException{
			this.os=os;
			init();
		}
	}
	abstract class ioTask{
		In in;
		PrintWriter out;
		public ioTask setIO(File in,File out) throws IOException{
			this.in=new In(in);
			this.out=new Out(out).out;
			return this;
		}
		public ioTask setIO(File in,OutputStream out) throws IOException{
			this.in=new In(in);
			this.out=new Out(out).out;
			return this;
		}
		public ioTask setIO(InputStream in,OutputStream out) throws IOException{
			this.in=new In(in);
			this.out=new Out(out).out;
			return this;
		}
		public ioTask setIO(InputStream in,File out) throws IOException{
			this.in=new In(in);
			this.out=new Out(out).out;
			return this;
		}
		void run()throws IOException{}
	}
}"
1,G,Java,61495411,2023-03-24 22:10:32,小小小巨人,答案错误,"import java.io.*;
import java.math.*;
import java.util.*;
import java.util.Map.*;
/**
 * 
 * @author TCchen
 */
public class Main {
	public static void main(String[]args) throws IOException {
		new Main().run();
	}
//	File input=new File("".\\input.txt"");
//	File output=new File("".\\output.txt"");
	void run() throws IOException{
//		new Solve().setIO(input, output).run();
		new Solve().setIO(System.in,System.out).run();
	}
	class Solve extends ioTask{
		int n,q,m,k,i,j,x,y,len,l,r;
		int a,b;
		int p;
		char[]ch;
		int[][]c=new int[1005][1005];
		boolean isNum(char c) {
			k=1;
			return '0'<=c&&c<='9';
		}
		int read() {
			if(!isNum(ch[r]))return 1;
			int k=1;
			int res=0;
			while(r>=0&&isNum(ch[r])) {
				res+=k*(ch[r]-'0');
				k*=10;
				r--;
			}
			r--;
			return res;
		}
		char[]s=new char[2];
		long pow(long a,long b) {
			long res=1;
			while(b>0) {
				if((b&1)==1) 
					res=res*a%p;
				a=a*a%p;
				b>>=1;
			}
			return res;
		}
		long[][]ans;
		void solve() throws IOException{
			ch=in.ins().toCharArray();
//			System.out.println(ch);
			l=0;
			r=ch.length-1;
			p=read();
			n=read();
			init();
			if(ch[r]==')')r--;
			s[1]=ch[r--];
			b=read();
			if(ch[r]=='+')r--;
			s[0]=ch[r--];
			a=read();
			out.print(ch);
			out.print("" = "");
			if(s[0]==s[1]) {
				a+=b;
				a=(int) pow(a,n);
				if(a!=0) {
					if(a!=1) {
						out.print(a+""*"");
					}
					out.print(s[0]);
					if(n!=1)
					out.print(""^""+n);
					out.println(""%""+p);
					
				}else {
					out.println(0);
				}
			}else {
				k=1;
				ans=new long[n+2][3];
				for(i=0;i<=n;i++) {
					ans[i][0]=c[n][i];
				}
				long num=1;
				k=0;
				for(i=0;i<=n;i++) {
					ans[i][0]=num*ans[i][0]%p;
					ans[i][2]=k++;
					num=num*b;
				}
				num=1;
				k=0;
				for(i=n;i>=0;i--) {
					ans[i][0]= num*ans[i][0]%p;
					ans[i][1]=k++;
					num=num*a;
				}
				k=0;
				for(i=0;i<=n;i++) {
					if(ans[i][0]!=0)k++;
				}
				if(k==0)out.println(0);
				else {
					if(k>1)out.print('(');
					boolean book=false;
					boolean mul=false;
					for(i=0;i<=n;i++) {
						if(ans[i][0]==0)continue;
						mul=false;
						if(book)out.print(""+"");
						else book=true;
						if(ans[i][0]!=1) {
							out.print(ans[i][0]);
							if(mul)out.print(""*"");
							else mul=true;
						}
						if(ans[i][1]!=0) {
							if(mul)out.print(""*"");
							else mul=true;
							out.print(s[0]);
							if(ans[i][1]!=1)out.print(""^""+ans[i][1]);
						}
						if(ans[i][2]!=0) {
							if(mul)out.print(""*"");
							else mul=true;
							out.print(s[1]);
							if(ans[i][2]!=1)out.print(""^""+ans[i][2]);
						}
					}
					if(k>1)out.print("")"");
					out.println(""%""+p);
				}
			}
			
		}
		void init() {
			c[0][0]=1;
			for(i=1;i<=n;i++) {
				c[i][0]=1;
				for(j=1;j<=i;j++) {
					c[i][j]=c[i-1][j]+c[i-1][j-1]%p;
				}
			}
		}
		int te=1;
		void run()throws IOException{
//			init();
			int t=1;
//			t=in.in();
			for(te=1;te<=t;te++) {
				solve();
				out.flush();
			}
			out.close();
		}
//		long timeMillis;
//		void st() {
//			timeMillis=System.currentTimeMillis();
//		}
//		void ed() {
//			System.out.println((System.currentTimeMillis()-timeMillis)+""ms"");
//		}
	}
	class QIn{
		StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
		int in() throws IOException {
			st.nextToken();
			return (int)st.nval;
		}
		long inl() throws IOException {
			st.nextToken();
			return (long)st.nval;
		}
		double ind()throws IOException  {
			st.nextToken();
			return st.nval;
		}
		String ins() throws IOException {
			st.nextToken();
			return st.sval;
		}
	}
	class In{
		private StringTokenizer in=new StringTokenizer("""");
		private InputStream is;
		private BufferedReader br;
		public In(File file) throws IOException {
			is=new FileInputStream(file);
			init();
		}
		public In(InputStream is) throws IOException{
			this.is=is;
			init();
		}
		private void init() throws IOException {
			br=new BufferedReader(new InputStreamReader(is));
		}
		/**
		 * File and OJ only
		 */
		boolean hasNext() throws IOException {
			return in.hasMoreTokens()||br.ready();
		}
		String ins() throws IOException {
			while(!in.hasMoreTokens()) {
				in=new StringTokenizer(br.readLine());
			}
			return in.nextToken();
		}
		int in() throws IOException {
			return Integer.parseInt(ins());
		}
		long inl() throws IOException {
			return Long.parseLong(ins());
		}
		double ind() throws IOException {
			return Double.parseDouble(ins());
		}
		String line() throws IOException {
			return br.readLine();
		}
	}
	class Out{
		PrintWriter out;
		private OutputStream os;
		private void init() {
			out=new PrintWriter(new BufferedWriter(new OutputStreamWriter(os)));
		}
		public Out(File file) throws IOException {
			os=new FileOutputStream(file);
			init();
		}
		public Out(OutputStream os) throws IOException{
			this.os=os;
			init();
		}
	}
	abstract class ioTask{
		In in;
		PrintWriter out;
		public ioTask setIO(File in,File out) throws IOException{
			this.in=new In(in);
			this.out=new Out(out).out;
			return this;
		}
		public ioTask setIO(File in,OutputStream out) throws IOException{
			this.in=new In(in);
			this.out=new Out(out).out;
			return this;
		}
		public ioTask setIO(InputStream in,OutputStream out) throws IOException{
			this.in=new In(in);
			this.out=new Out(out).out;
			return this;
		}
		public ioTask setIO(InputStream in,File out) throws IOException{
			this.in=new In(in);
			this.out=new Out(out).out;
			return this;
		}
		void run()throws IOException{}
	}
}"
2,G,Java,61495458,2023-03-24 22:12:00,小小小巨人,答案错误,"import java.io.*;
import java.math.*;
import java.util.*;
import java.util.Map.*;
/**
 * 
 * @author TCchen
 */
public class Main {
	public static void main(String[]args) throws IOException {
		new Main().run();
	}
//	File input=new File("".\\input.txt"");
//	File output=new File("".\\output.txt"");
	void run() throws IOException{
//		new Solve().setIO(input, output).run();
		new Solve().setIO(System.in,System.out).run();
	}
	class Solve extends ioTask{
		int n,q,m,k,i,j,x,y,len,l,r;
		int a,b;
		int p;
		char[]ch;
		int[][]c=new int[1005][1005];
		boolean isNum(char c) {
			k=1;
			return '0'<=c&&c<='9';
		}
		int read() {
			if(!isNum(ch[r]))return 1;
			int k=1;
			int res=0;
			while(r>=0&&isNum(ch[r])) {
				res+=k*(ch[r]-'0');
				k*=10;
				r--;
			}
			r--;
			return res;
		}
		char[]s=new char[2];
		long pow(long a,long b) {
			long res=1;
			while(b>0) {
				if((b&1)==1) 
					res=res*a%p;
				a=a*a%p;
				b>>=1;
			}
			return res;
		}
		long[][]ans;
		void solve() throws IOException{
			ch=in.ins().toCharArray();
//			System.out.println(ch);
			l=0;
			r=ch.length-1;
			p=read();
			n=read();
			init();
			if(ch[r]==')')r--;
			s[1]=ch[r--];
			b=read();
			if(ch[r]=='+')r--;
			s[0]=ch[r--];
			a=read();
			out.print(ch);
			out.print("" = "");
			if(s[0]==s[1]) {
				a+=b;
				a=(int) pow(a,n);
				if(a!=0) {
					if(a!=1) {
						out.print(a+""*"");
					}
					out.print(s[0]);
					if(n!=1)
					out.print(""^""+n);
					out.println(""%""+p);
					
				}else {
					out.println(0);
				}
			}else {
				k=1;
				ans=new long[n+2][3];
				for(i=0;i<=n;i++) {
					ans[i][0]=c[n][i];
				}
				long num=1;
				k=0;
				for(i=0;i<=n;i++) {
					ans[i][0]=num*ans[i][0]%p;
					ans[i][2]=k++;
					num=num*b%p;
				}
				num=1;
				k=0;
				for(i=n;i>=0;i--) {
					ans[i][0]= num*ans[i][0]%p;
					ans[i][1]=k++;
					num=num*a%p;
				}
				k=0;
				for(i=0;i<=n;i++) {
					if(ans[i][0]!=0)k++;
				}
				if(k==0)out.println(0);
				else {
					if(k>1)out.print('(');
					boolean book=false;
					boolean mul=false;
					for(i=0;i<=n;i++) {
						if(ans[i][0]==0)continue;
						mul=false;
						if(book)out.print(""+"");
						else book=true;
						if(ans[i][0]!=1) {
							out.print(ans[i][0]);
							if(mul)out.print(""*"");
							else mul=true;
						}
						if(ans[i][1]!=0) {
							if(mul)out.print(""*"");
							else mul=true;
							out.print(s[0]);
							if(ans[i][1]!=1)out.print(""^""+ans[i][1]);
						}
						if(ans[i][2]!=0) {
							if(mul)out.print(""*"");
							else mul=true;
							out.print(s[1]);
							if(ans[i][2]!=1)out.print(""^""+ans[i][2]);
						}
					}
					if(k>1)out.print("")"");
					out.println(""%""+p);
				}
			}
			
		}
		void init() {
			c[0][0]=1;
			for(i=1;i<=n;i++) {
				c[i][0]=1;
				for(j=1;j<=i;j++) {
					c[i][j]=c[i-1][j]+c[i-1][j-1]%p;
				}
			}
		}
		int te=1;
		void run()throws IOException{
//			init();
			int t=1;
//			t=in.in();
			for(te=1;te<=t;te++) {
				solve();
				out.flush();
			}
			out.close();
		}
//		long timeMillis;
//		void st() {
//			timeMillis=System.currentTimeMillis();
//		}
//		void ed() {
//			System.out.println((System.currentTimeMillis()-timeMillis)+""ms"");
//		}
	}
	class QIn{
		StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
		int in() throws IOException {
			st.nextToken();
			return (int)st.nval;
		}
		long inl() throws IOException {
			st.nextToken();
			return (long)st.nval;
		}
		double ind()throws IOException  {
			st.nextToken();
			return st.nval;
		}
		String ins() throws IOException {
			st.nextToken();
			return st.sval;
		}
	}
	class In{
		private StringTokenizer in=new StringTokenizer("""");
		private InputStream is;
		private BufferedReader br;
		public In(File file) throws IOException {
			is=new FileInputStream(file);
			init();
		}
		public In(InputStream is) throws IOException{
			this.is=is;
			init();
		}
		private void init() throws IOException {
			br=new BufferedReader(new InputStreamReader(is));
		}
		/**
		 * File and OJ only
		 */
		boolean hasNext() throws IOException {
			return in.hasMoreTokens()||br.ready();
		}
		String ins() throws IOException {
			while(!in.hasMoreTokens()) {
				in=new StringTokenizer(br.readLine());
			}
			return in.nextToken();
		}
		int in() throws IOException {
			return Integer.parseInt(ins());
		}
		long inl() throws IOException {
			return Long.parseLong(ins());
		}
		double ind() throws IOException {
			return Double.parseDouble(ins());
		}
		String line() throws IOException {
			return br.readLine();
		}
	}
	class Out{
		PrintWriter out;
		private OutputStream os;
		private void init() {
			out=new PrintWriter(new BufferedWriter(new OutputStreamWriter(os)));
		}
		public Out(File file) throws IOException {
			os=new FileOutputStream(file);
			init();
		}
		public Out(OutputStream os) throws IOException{
			this.os=os;
			init();
		}
	}
	abstract class ioTask{
		In in;
		PrintWriter out;
		public ioTask setIO(File in,File out) throws IOException{
			this.in=new In(in);
			this.out=new Out(out).out;
			return this;
		}
		public ioTask setIO(File in,OutputStream out) throws IOException{
			this.in=new In(in);
			this.out=new Out(out).out;
			return this;
		}
		public ioTask setIO(InputStream in,OutputStream out) throws IOException{
			this.in=new In(in);
			this.out=new Out(out).out;
			return this;
		}
		public ioTask setIO(InputStream in,File out) throws IOException{
			this.in=new In(in);
			this.out=new Out(out).out;
			return this;
		}
		void run()throws IOException{}
	}
}"
3,G,Java,61495559,2023-03-24 22:15:24,小小小巨人,答案正确,"import java.io.*;
import java.math.*;
import java.util.*;
import java.util.Map.*;
/**
 * 
 * @author TCchen
 */
public class Main {
	public static void main(String[]args) throws IOException {
		new Main().run();
	}
//	File input=new File("".\\input.txt"");
//	File output=new File("".\\output.txt"");
	void run() throws IOException{
//		new Solve().setIO(input, output).run();
		new Solve().setIO(System.in,System.out).run();
	}
	class Solve extends ioTask{
		int n,q,m,k,i,j,x,y,len,l,r;
		int a,b;
		int p;
		char[]ch;
		int[][]c=new int[1005][1005];
		boolean isNum(char c) {
			k=1;
			return '0'<=c&&c<='9';
		}
		int read() {
			if(!isNum(ch[r]))return 1;
			int k=1;
			int res=0;
			while(r>=0&&isNum(ch[r])) {
				res+=k*(ch[r]-'0');
				k*=10;
				r--;
			}
			r--;
			return res;
		}
		char[]s=new char[2];
		long pow(long a,long b) {
			long res=1;
			while(b>0) {
				if((b&1)==1) 
					res=res*a%p;
				a=a*a%p;
				b>>=1;
			}
			return res;
		}
		long[][]ans;
		void solve() throws IOException{
			ch=in.ins().toCharArray();
//			System.out.println(ch);
			l=0;
			r=ch.length-1;
			p=read();
			n=read();
			init();
			if(ch[r]==')')r--;
			s[1]=ch[r--];
			b=read();
			if(ch[r]=='+')r--;
			s[0]=ch[r--];
			a=read();
			out.print(ch);
			out.print("" = "");
			if(s[0]==s[1]) {
				a+=b;
				a=(int) pow(a,n);
				if(a!=0) {
					if(a!=1) {
						out.print(a+""*"");
					}
					out.print(s[0]);
					if(n!=1)
					out.print(""^""+n);
					out.println(""%""+p);
					
				}else {
					out.println(0);
				}
			}else {
				k=1;
				ans=new long[n+2][3];
				for(i=0;i<=n;i++) {
					ans[i][0]=c[n][i];
				}
				long num=1;
				k=0;
				for(i=0;i<=n;i++) {
					ans[i][0]=num*ans[i][0]%p;
					ans[i][2]=k++;
					num=num*b%p;
				}
				num=1;
				k=0;
				for(i=n;i>=0;i--) {
					ans[i][0]=num*ans[i][0]%p;
					ans[i][1]=k++;
					num=num*a%p;
				}
				k=0;
				for(i=0;i<=n;i++) {
					if(ans[i][0]!=0)k++;
				}
				if(k==0)out.println(0);
				else {
					if(k>1)out.print('(');
					boolean book=false;
					boolean mul=false;
					for(i=0;i<=n;i++) {
						if(ans[i][0]==0)continue;
						mul=false;
						if(book)out.print(""+"");
						else book=true;
						if(ans[i][0]!=1) {
							out.print(ans[i][0]);
							if(mul)out.print(""*"");
							else mul=true;
						}
						if(ans[i][1]!=0) {
							if(mul)out.print(""*"");
							else mul=true;
							out.print(s[0]);
							if(ans[i][1]!=1)out.print(""^""+ans[i][1]);
						}
						if(ans[i][2]!=0) {
							if(mul)out.print(""*"");
							else mul=true;
							out.print(s[1]);
							if(ans[i][2]!=1)out.print(""^""+ans[i][2]);
						}
					}
					if(k>1)out.print("")"");
					out.println(""%""+p);
				}
			}
			
		}
		void init() {
			c[0][0]=1;
			for(i=1;i<=n;i++) {
				c[i][0]=1;
				for(j=1;j<=i;j++) {
					c[i][j]=(c[i-1][j]+c[i-1][j-1])%p;
				}
			}
		}
		int te=1;
		void run()throws IOException{
//			init();
			int t=1;
//			t=in.in();
			for(te=1;te<=t;te++) {
				solve();
				out.flush();
			}
			out.close();
		}
//		long timeMillis;
//		void st() {
//			timeMillis=System.currentTimeMillis();
//		}
//		void ed() {
//			System.out.println((System.currentTimeMillis()-timeMillis)+""ms"");
//		}
	}
	class QIn{
		StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
		int in() throws IOException {
			st.nextToken();
			return (int)st.nval;
		}
		long inl() throws IOException {
			st.nextToken();
			return (long)st.nval;
		}
		double ind()throws IOException  {
			st.nextToken();
			return st.nval;
		}
		String ins() throws IOException {
			st.nextToken();
			return st.sval;
		}
	}
	class In{
		private StringTokenizer in=new StringTokenizer("""");
		private InputStream is;
		private BufferedReader br;
		public In(File file) throws IOException {
			is=new FileInputStream(file);
			init();
		}
		public In(InputStream is) throws IOException{
			this.is=is;
			init();
		}
		private void init() throws IOException {
			br=new BufferedReader(new InputStreamReader(is));
		}
		/**
		 * File and OJ only
		 */
		boolean hasNext() throws IOException {
			return in.hasMoreTokens()||br.ready();
		}
		String ins() throws IOException {
			while(!in.hasMoreTokens()) {
				in=new StringTokenizer(br.readLine());
			}
			return in.nextToken();
		}
		int in() throws IOException {
			return Integer.parseInt(ins());
		}
		long inl() throws IOException {
			return Long.parseLong(ins());
		}
		double ind() throws IOException {
			return Double.parseDouble(ins());
		}
		String line() throws IOException {
			return br.readLine();
		}
	}
	class Out{
		PrintWriter out;
		private OutputStream os;
		private void init() {
			out=new PrintWriter(new BufferedWriter(new OutputStreamWriter(os)));
		}
		public Out(File file) throws IOException {
			os=new FileOutputStream(file);
			init();
		}
		public Out(OutputStream os) throws IOException{
			this.os=os;
			init();
		}
	}
	abstract class ioTask{
		In in;
		PrintWriter out;
		public ioTask setIO(File in,File out) throws IOException{
			this.in=new In(in);
			this.out=new Out(out).out;
			return this;
		}
		public ioTask setIO(File in,OutputStream out) throws IOException{
			this.in=new In(in);
			this.out=new Out(out).out;
			return this;
		}
		public ioTask setIO(InputStream in,OutputStream out) throws IOException{
			this.in=new In(in);
			this.out=new Out(out).out;
			return this;
		}
		public ioTask setIO(InputStream in,File out) throws IOException{
			this.in=new In(in);
			this.out=new Out(out).out;
			return this;
		}
		void run()throws IOException{}
	}
}"
4,G,Java,61570927,2023-03-26 20:32:26,迷你滨,答案错误,"import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
	static int n,m,mod=(int)1e9+7,maxn=100010;
	static long ans=0,INF=(long)1e18;
	static Scanner sc = new Scanner (System.in);
	static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
	static StreamTokenizer st = new StreamTokenizer(bf);
	static PrintWriter pw = new PrintWriter(System.out);
	
	public static void main(String[]args) throws IOException{
		int T = 1;
		//T = I();
		while(T-->0) solve();
		pw.flush();
	}
	
	static int I() throws IOException{
		st.nextToken();
		return (int)st.nval;
	}
	
	static String S() throws IOException{
		String s = bf.readLine();
		while(s.equals("""")) s = bf.readLine();
		return s;
	}
	
	static long qpow(long a,long b) {
		long res=1;
		a%=mod;
		while(b>0) {
			if(b%2 == 1) res = res*a%mod;
			a = a*a%mod;
			b/=2;
		}
		return res;
	}
	
	static long a=1,b=1;
	static int p=0;
	static char x ,y;
	
	static void pre(String s) {
		String ss = """";
		int i=1;
		while(s.charAt(i)>='0' && s.charAt(i)<='9') {
			ss = ss+s.charAt(i);
			i++;
		}
		x = s.charAt(i++);i++;
		if(!ss.equals(""""))a=Integer.parseInt(ss);
		ss="""";
		
		while(s.charAt(i)>='0' && s.charAt(i)<='9') {
			ss = ss+s.charAt(i);
			i++;
		}
		y=s.charAt(i++);i++;
		if(!ss.equals("""")) b = Integer.parseInt(ss);ss="""";
		if(s.charAt(i) != '^') n=1;
		else {
			i++;
			while(s.charAt(i)>='0' && s.charAt(i)<='9') {
				ss = ss+s.charAt(i);
				i++;
			}
			n = Integer.parseInt(ss);ss="""";
		}
		i++;
		while(i< s.length()&& s.charAt(i)>='0' && s.charAt(i)<='9') {
			ss = ss+s.charAt(i);
			i++;
		}
		p = Integer.parseInt(ss);
	}
	
	static void solve() throws IOException{
		String s = sc.nextLine();
		pre(s);mod=p;
		pw.print(s+"" = "");
		if(x == y) {
			long xi = qpow(a+b,n);
			if(xi == 0) pw.print(0);
			else {
				if(n == 1) pw.print(xi+""*""+x+""%""+p);
				else pw.print(xi+""*""+x+""^""+n+""%""+p);
			}
		}
		else {
			String res =""("";
			BigInteger fac[] = new BigInteger[n+1];
			fac[0] = BigInteger.ONE;
			for(int i=1;i<=n;i++) {
				fac[i] = BigInteger.valueOf(i).multiply(fac[i-1]);
			}
			boolean first=false;
			for(int i = 0 ; i <=n;i++) {
				long xi = fac[n].divide(fac[i]).divide(fac[n-i]).mod(BigInteger.valueOf(mod)).longValue();
                //System.out.println(""xixixiix:  ""+xi);
				xi = xi*qpow(a,n-i)%mod *qpow(b,i)%mod;
				if(xi == 0) continue;
				if(first) res = res+('+');
				first=true;
				if(xi>1) res = res+(xi);
				if(i<n) {
					if(xi > 1) res = res+(""*""+x);
                    else res = res+x;
					if(n-i!=1) res = res+(""^""+(n-i));
				}
				if(i>0) {
					if(xi > 1) res = res+(""*""+y);
                    else res = res+y;
					if(i!=1) res = res+ (""^""+(i));
				}
			}
			res = res+("")"");
            if(res.equals(""()"")) pw.print(0);
            else{
                pw.print(res+""%""+mod);
            }
		}
	}
	
}
"
5,G,Java,61571040,2023-03-26 20:35:22,迷你滨,答案错误,"import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
	static int n,m,mod=(int)1e9+7,maxn=100010;
	static long ans=0,INF=(long)1e18;
	static Scanner sc = new Scanner (System.in);
	static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
	static StreamTokenizer st = new StreamTokenizer(bf);
	static PrintWriter pw = new PrintWriter(System.out);
	
	public static void main(String[]args) throws IOException{
		int T = 1;
		//T = I();
		while(T-->0) solve();
		pw.flush();
	}
	
	static int I() throws IOException{
		st.nextToken();
		return (int)st.nval;
	}
	
	static String S() throws IOException{
		String s = bf.readLine();
		while(s.equals("""")) s = bf.readLine();
		return s;
	}
	
	static long qpow(long a,long b) {
		long res=1;
		a%=mod;
		while(b>0) {
			if(b%2 == 1) res = res*a%mod;
			a = a*a%mod;
			b/=2;
		}
		return res;
	}
	
	static long a=1,b=1;
	static int p=0;
	static char x ,y;
	
	static void pre(String s) {
		String ss = """";
		int i=1;
		while(s.charAt(i)>='0' && s.charAt(i)<='9') {
			ss = ss+s.charAt(i);
			i++;
		}
		x = s.charAt(i++);i++;
		if(!ss.equals(""""))a=Integer.parseInt(ss);
		ss="""";
		
		while(s.charAt(i)>='0' && s.charAt(i)<='9') {
			ss = ss+s.charAt(i);
			i++;
		}
		y=s.charAt(i++);i++;
		if(!ss.equals("""")) b = Integer.parseInt(ss);ss="""";
		if(s.charAt(i) != '^') n=1;
		else {
			i++;
			while(s.charAt(i)>='0' && s.charAt(i)<='9') {
				ss = ss+s.charAt(i);
				i++;
			}
			n = Integer.parseInt(ss);ss="""";
		}
		i++;
		while(i< s.length()&& s.charAt(i)>='0' && s.charAt(i)<='9') {
			ss = ss+s.charAt(i);
			i++;
		}
		p = Integer.parseInt(ss);
	}
	
	static void solve() throws IOException{
		String s = sc.nextLine();
		pre(s);mod=p;
		pw.print(s+"" = "");
		if(x == y) {
			long xi = qpow(a+b,n);
			if(xi == 0) pw.print(0);
			else {
				if(n == 1) pw.print(xi+""*""+x+""%""+p);
				else pw.print(xi+""*""+x+""^""+n+""%""+p);
			}
		}
		else {
			String res ="""";
			BigInteger fac[] = new BigInteger[n+1];
			fac[0] = BigInteger.ONE;
			for(int i=1;i<=n;i++) {
				fac[i] = BigInteger.valueOf(i).multiply(fac[i-1]);
			}
			boolean first=false;
			for(int i = 0 ; i <=n;i++) {
				long xi = fac[n].divide(fac[i]).divide(fac[n-i]).mod(BigInteger.valueOf(mod)).longValue();
                //System.out.println(""xixixiix:  ""+xi);
				xi = xi*qpow(a,n-i)%mod *qpow(b,i)%mod;
				if(xi == 0) continue;
				if(first) res = res+('+');
				first=true;
				if(xi>1) res = res+(xi);
				if(i<n) {
					if(xi > 1) res = res+(""*""+x);
                    else res = res+x;
					if(n-i!=1) res = res+(""^""+(n-i));
				}
				if(i>0) {
					if(xi > 1) res = res+(""*""+y);
                    else res = res+y;
					if(i!=1) res = res+ (""^""+(i));
				}
			}
			
            if(res.equals("""")) pw.print(0);
            else{
                if(res.indexOf(""+"")>=0) res = ""(""+res+"")"";
                pw.print(res+""%""+mod);
            }
		}
	}
	
}
"
6,G,Java,61571189,2023-03-26 20:38:38,迷你滨,答案错误,"import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
	static int n,m,mod=(int)1e9+7,maxn=100010;
	static long ans=0,INF=(long)1e18;
	static Scanner sc = new Scanner (System.in);
	static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
	static StreamTokenizer st = new StreamTokenizer(bf);
	static PrintWriter pw = new PrintWriter(System.out);
	
	public static void main(String[]args) throws IOException{
		int T = 1;
		//T = I();
		while(T-->0) solve();
		pw.flush();
	}
	
	static int I() throws IOException{
		st.nextToken();
		return (int)st.nval;
	}
	
	static String S() throws IOException{
		String s = bf.readLine();
		while(s.equals("""")) s = bf.readLine();
		return s;
	}
	
	static long qpow(long a,long b) {
		long res=1;
		a%=mod;
		while(b>0) {
			if(b%2 == 1) res = res*a%mod;
			a = a*a%mod;
			b/=2;
		}
		return res;
	}
	
	static long a=1,b=1;
	static int p=0;
	static char x ,y;
	
	static void pre(String s) {
		String ss = """";
		int i=1;
		while(s.charAt(i)>='0' && s.charAt(i)<='9') {
			ss = ss+s.charAt(i);
			i++;
		}
		x = s.charAt(i++);i++;
		if(!ss.equals(""""))a=Integer.parseInt(ss);
		ss="""";
		
		while(s.charAt(i)>='0' && s.charAt(i)<='9') {
			ss = ss+s.charAt(i);
			i++;
		}
		y=s.charAt(i++);i++;
		if(!ss.equals("""")) b = Integer.parseInt(ss);ss="""";
		if(s.charAt(i) != '^') n=1;
		else {
			i++;
			while(s.charAt(i)>='0' && s.charAt(i)<='9') {
				ss = ss+s.charAt(i);
				i++;
			}
			n = Integer.parseInt(ss);ss="""";
		}
		i++;
		while(i< s.length()&& s.charAt(i)>='0' && s.charAt(i)<='9') {
			ss = ss+s.charAt(i);
			i++;
		}
		p = Integer.parseInt(ss);
	}
	
	static void solve() throws IOException{
		String s = sc.nextLine();
		pre(s);mod=p;
		pw.print(s+"" = "");
		if(x == y) {
			long xi = qpow(a+b,n);
			if(xi == 0) pw.print(0);
			else {
				if(n == 1) pw.print(xi+""*""+x+""%""+p);
				else pw.print(xi+""*""+x+""^""+n+""%""+p);
			}
		}
		else {
			String res ="""";
			BigInteger fac[] = new BigInteger[n+1];
			fac[0] = BigInteger.ONE;
			for(int i=1;i<=n;i++) {
				fac[i] = BigInteger.valueOf(i).multiply(fac[i-1]);
			}
			boolean first=false;
			for(int i = 0 ; i <=n;i++) {
				long xi = fac[n].divide(fac[i]).divide(fac[n-i]).mod(BigInteger.valueOf(mod)).longValue();
                //System.out.println(""xixixiix:  ""+xi);
				xi = xi*qpow(a,n-i)%mod *qpow(b,i)%mod;
				if(xi == 0) continue;
				if(first) res = res+('+');
				first=true;
				if(xi>1) res = res+(xi);
				if(i<n) {
					if(xi > 1) res = res+(""*""+x);
                    else res = res+x;
					if(n-i!=1) res = res+(""^""+(n-i));
				}
				if(i>0) {
					if(xi > 1 || i<n) res = res+(""*""+y);
                    else res = res+y;
					if(i!=1) res = res+ (""^""+(i));
				}
			}
			
            if(res.equals("""")) pw.print(0);
            else{
                if(res.indexOf(""+"")>=0) res = ""(""+res+"")"";
                pw.print(res+""%""+mod);
            }
		}
	}
	
}
"
7,G,Java,61571508,2023-03-26 20:47:39,迷你滨,答案正确,"import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
	static int n,m,mod=(int)1e9+7,maxn=100010;
	static long ans=0,INF=(long)1e18;
	static Scanner sc = new Scanner (System.in);
	static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
	static StreamTokenizer st = new StreamTokenizer(bf);
	static PrintWriter pw = new PrintWriter(System.out);
	
	public static void main(String[]args) throws IOException{
		int T = 1;
		//T = I();
		while(T-->0) solve();
		pw.flush();
	}
	
	static int I() throws IOException{
		st.nextToken();
		return (int)st.nval;
	}
	
	static String S() throws IOException{
		String s = bf.readLine();
		while(s.equals("""")) s = bf.readLine();
		return s;
	}
	
	static long qpow(long a,long b) {
		long res=1;
		a%=mod;
		while(b>0) {
			if(b%2 == 1) res = res*a%mod;
			a = a*a%mod;
			b/=2;
		}
		return res;
	}
	
	static long a=1,b=1;
	static int p=0;
	static char x ,y;
	
	static void pre(String s) {
		String ss = """";
		int i=1;
		while(s.charAt(i)>='0' && s.charAt(i)<='9') {
			ss = ss+s.charAt(i);
			i++;
		}
		x = s.charAt(i++);i++;
		if(!ss.equals(""""))a=Integer.parseInt(ss);
		ss="""";
		
		while(s.charAt(i)>='0' && s.charAt(i)<='9') {
			ss = ss+s.charAt(i);
			i++;
		}
		y=s.charAt(i++);i++;
		if(!ss.equals("""")) b = Integer.parseInt(ss);ss="""";
		if(s.charAt(i) != '^') n=1;
		else {
			i++;
			while(s.charAt(i)>='0' && s.charAt(i)<='9') {
				ss = ss+s.charAt(i);
				i++;
			}
			n = Integer.parseInt(ss);ss="""";
		}
		i++;
		while(i< s.length()&& s.charAt(i)>='0' && s.charAt(i)<='9') {
			ss = ss+s.charAt(i);
			i++;
		}
		p = Integer.parseInt(ss);
	}
	
	static void solve() throws IOException{
		String s = sc.nextLine();
		pre(s);mod=p;
		pw.print(s+"" = "");
		if(x == y) {
			long xi = qpow(a+b,n);
			if(xi == 0) pw.print(0);
			else {
                if(xi!=1) pw.print(xi+""*"");
				if(n == 1) pw.print(x+""%""+p);
				else pw.print(x+""^""+n+""%""+p);
			}
		}
		else {
			String res ="""";
			BigInteger fac[] = new BigInteger[n+1];
			fac[0] = BigInteger.ONE;
			for(int i=1;i<=n;i++) {
				fac[i] = BigInteger.valueOf(i).multiply(fac[i-1]);
			}
			boolean first=false;
			for(int i = 0 ; i <=n;i++) {
				long xi = fac[n].divide(fac[i]).divide(fac[n-i]).mod(BigInteger.valueOf(mod)).longValue();
                //System.out.println(""xixixiix:  ""+xi);
				xi = xi*qpow(a,n-i)%mod *qpow(b,i)%mod;
				if(xi == 0) continue;
				if(first) res = res+('+');
				first=true;
				if(xi>1) res = res+(xi);
				if(i<n) {
					if(xi > 1) res = res+(""*""+x);
                    else res = res+x;
					if(n-i!=1) res = res+(""^""+(n-i));
				}
				if(i>0) {
					if(xi > 1 || i<n) res = res+(""*""+y);
                    else res = res+y;
					if(i!=1) res = res+ (""^""+(i));
				}
			}
			
            if(res.equals("""")) pw.print(0);
            else{
                if(res.indexOf(""+"")>=0) res = ""(""+res+"")"";
                pw.print(res+""%""+mod);
            }
		}
	}
	
}
"
8,G,Java,61603657,2023-03-29 14:38:19,一只往上爬的蚂蚁,答案错误,"import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
	static int n,m,mod=(int)1e9+7,maxn=100010;
	static long ans=0,INF=(long)1e18;
	static Scanner sc = new Scanner (System.in);
	static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
	static StreamTokenizer st = new StreamTokenizer(bf);
	static PrintWriter pw = new PrintWriter(System.out);
	
	public static void main(String[]args) throws IOException{
		int T = 1;
		//T = I();
		while(T-->0) solve();
		pw.flush();
	}
	
	static int I() throws IOException{
		st.nextToken();
		return (int)st.nval;
	}
	
	static String S() throws IOException{
		String s = bf.readLine();
		while(s.equals("""")) s = bf.readLine();
		return s;
	}
	
	static long qpow(long a,long b) {
		long res = 1;
        res = (long) (Math.pow(a,b) % mod);
        return res;
	}
	
	static long a=1,b=1;
	static int p=0;
	static char x ,y;
	
	static void pre(String s) {
		String ss = """";
		int i=1;
		while(s.charAt(i)>='0' && s.charAt(i)<='9') {
			ss = ss+s.charAt(i);
			i++;
		}
		x = s.charAt(i++);i++;
		if(!ss.equals(""""))a=Integer.parseInt(ss);
		ss="""";
		
		while(s.charAt(i)>='0' && s.charAt(i)<='9') {
			ss = ss+s.charAt(i);
			i++;
		}
		y=s.charAt(i++);i++;
		if(!ss.equals("""")) b = Integer.parseInt(ss);ss="""";
		if(s.charAt(i) != '^') n=1;
		else {
			i++;
			while(s.charAt(i)>='0' && s.charAt(i)<='9') {
				ss = ss+s.charAt(i);
				i++;
			}
			n = Integer.parseInt(ss);ss="""";
		}
		i++;
		while(i< s.length()&& s.charAt(i)>='0' && s.charAt(i)<='9') {
			ss = ss+s.charAt(i);
			i++;
		}
		p = Integer.parseInt(ss);
	}
	
	static void solve() throws IOException{
		String s = sc.nextLine();
		pre(s);mod=p;
		pw.print(s+"" = "");
		if(x == y) {
			long xi = qpow(a+b,n);
			if(xi == 0) pw.print(0);
			else {
                if(xi!=1) pw.print(xi+""*"");
				if(n == 1) pw.print(x+""%""+p);
				else pw.print(x+""^""+n+""%""+p);
			}
		}
		else {
			String res ="""";
			BigInteger fac[] = new BigInteger[n+1];
			fac[0] = BigInteger.ONE;
			for(int i=1;i<=n;i++) {
				fac[i] = BigInteger.valueOf(i).multiply(fac[i-1]);
			}
			boolean first=false;
			for(int i = 0 ; i <=n;i++) {
				long xi = fac[n].divide(fac[i]).divide(fac[n-i]).mod(BigInteger.valueOf(mod)).longValue();
                //System.out.println(""xixixiix:  ""+xi);
				xi = xi*qpow(a,n-i)%mod *qpow(b,i)%mod;
				if(xi == 0) continue;
				if(first) res = res+('+');
				first=true;
				if(xi>1) res = res+(xi);
				if(i<n) {
					if(xi > 1) res = res+(""*""+x);
                    else res = res+x;
					if(n-i!=1) res = res+(""^""+(n-i));
				}
				if(i>0) {
					if(xi > 1 || i<n) res = res+(""*""+y);
                    else res = res+y;
					if(i!=1) res = res+ (""^""+(i));
				}
			}
			
            if(res.equals("""")) pw.print(0);
            else{
                if(res.indexOf(""+"")>=0) res = ""(""+res+"")"";
                pw.print(res+""%""+mod);
            }
		}
	}
	
}
"
9,G,Java,61603683,2023-03-29 14:39:25,一只往上爬的蚂蚁,答案正确,"import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
	static int n,m,mod=(int)1e9+7,maxn=100010;
	static long ans=0,INF=(long)1e18;
	static Scanner sc = new Scanner (System.in);
	static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
	static StreamTokenizer st = new StreamTokenizer(bf);
	static PrintWriter pw = new PrintWriter(System.out);
	
	public static void main(String[]args) throws IOException{
		int T = 1;
		//T = I();
		while(T-->0) solve();
		pw.flush();
	}
	
	static int I() throws IOException{
		st.nextToken();
		return (int)st.nval;
	}
	
	static String S() throws IOException{
		String s = bf.readLine();
		while(s.equals("""")) s = bf.readLine();
		return s;
	}
	
	static long qpow(long a,long b) {
		long res=1;
        a%=mod;
        while(b>0) {
            if(b%2 == 1) res = res*a%mod;
            a = a*a%mod;
            b/=2;
        }
        return res;
	}
	
	static long a=1,b=1;
	static int p=0;
	static char x ,y;
	
	static void pre(String s) {
		String ss = """";
		int i=1;
		while(s.charAt(i)>='0' && s.charAt(i)<='9') {
			ss = ss+s.charAt(i);
			i++;
		}
		x = s.charAt(i++);i++;
		if(!ss.equals(""""))a=Integer.parseInt(ss);
		ss="""";
		
		while(s.charAt(i)>='0' && s.charAt(i)<='9') {
			ss = ss+s.charAt(i);
			i++;
		}
		y=s.charAt(i++);i++;
		if(!ss.equals("""")) b = Integer.parseInt(ss);ss="""";
		if(s.charAt(i) != '^') n=1;
		else {
			i++;
			while(s.charAt(i)>='0' && s.charAt(i)<='9') {
				ss = ss+s.charAt(i);
				i++;
			}
			n = Integer.parseInt(ss);ss="""";
		}
		i++;
		while(i< s.length()&& s.charAt(i)>='0' && s.charAt(i)<='9') {
			ss = ss+s.charAt(i);
			i++;
		}
		p = Integer.parseInt(ss);
	}
	
	static void solve() throws IOException{
		String s = sc.nextLine();
		pre(s);mod=p;
		pw.print(s+"" = "");
		if(x == y) {
			long xi = qpow(a+b,n);
			if(xi == 0) pw.print(0);
			else {
                if(xi!=1) pw.print(xi+""*"");
				if(n == 1) pw.print(x+""%""+p);
				else pw.print(x+""^""+n+""%""+p);
			}
		}
		else {
			String res ="""";
			BigInteger fac[] = new BigInteger[n+1];
			fac[0] = BigInteger.ONE;
			for(int i=1;i<=n;i++) {
				fac[i] = BigInteger.valueOf(i).multiply(fac[i-1]);
			}
			boolean first=false;
			for(int i = 0 ; i <=n;i++) {
				long xi = fac[n].divide(fac[i]).divide(fac[n-i]).mod(BigInteger.valueOf(mod)).longValue();
                //System.out.println(""xixixiix:  ""+xi);
				xi = xi*qpow(a,n-i)%mod *qpow(b,i)%mod;
				if(xi == 0) continue;
				if(first) res = res+('+');
				first=true;
				if(xi>1) res = res+(xi);
				if(i<n) {
					if(xi > 1) res = res+(""*""+x);
                    else res = res+x;
					if(n-i!=1) res = res+(""^""+(n-i));
				}
				if(i>0) {
					if(xi > 1 || i<n) res = res+(""*""+y);
                    else res = res+y;
					if(i!=1) res = res+ (""^""+(i));
				}
			}
			
            if(res.equals("""")) pw.print(0);
            else{
                if(res.indexOf(""+"")>=0) res = ""(""+res+"")"";
                pw.print(res+""%""+mod);
            }
		}
	}
	
}
"
10,G,Java,61630848,2023-03-31 20:10:34,一只往上爬的蚂蚁,执行出错,"import java.io.*;
import java.math.BigInteger;
import java.util.*;
public class Main{
    static int n, m, mod = (int) 1e9 + 7, maxn = 100010;
    static long ans = 0, INF = (long) 1e18;
    static Scanner sc = new Scanner(System.in);
    static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(bf);
    static PrintWriter pw = new PrintWriter(System.out);
    static PrintWriter pa = new PrintWriter(System.out);
    static PrintWriter pb = new PrintWriter(System.out);
    static long a = 1;
    static long b = 1;
    static BigInteger xi = BigInteger.ONE;
    static BigInteger sum = BigInteger.ZERO;
    static BigInteger[] xj = new BigInteger[1000];
    static int p = 0;
    static char x, y;
    static BigInteger c[][] = new BigInteger[1000][1000];

    static void pre(String s) {
        String ss = """";
        int i = 1;
        while (s.charAt(i) > '0' && s.charAt(i) <= '9') {
            ss = ss + s.charAt(i);
            i++;
        }
        x = s.charAt(i++);
        i++;
        if (!ss.equals("""")) a = Integer.parseInt(ss);
        ss = """";
        while (s.charAt(i) > '0' && s.charAt(i) <= '9') {
            ss = ss + s.charAt(i);
            i++;
        }
        y = s.charAt(i++);
        i++;
        if (!ss.equals("""")) b = Integer.parseInt(ss);
        ss = """";
        if (s.charAt(i) != '^') n = 1;
        else {
            i++;
            while (s.charAt(i) > '0' && s.charAt(i) <= '9') {
                ss = ss + s.charAt(i);
                i++;
            }
            if (!ss.equals("""")) n = Integer.parseInt(ss);
            ss = """";
        }
        i++;
        ss = ss + s.charAt(i);
        p = Integer.parseInt(ss);

    }

    //求C(n,n-1,........)阶乘
    static BigInteger C(int n, int m) {
        if (n == m || m == 0) return BigInteger.ONE;
        if (c[n][m] != null) return c[n][m];
        BigInteger up = BigInteger.valueOf(1);
        BigInteger down = BigInteger.valueOf(1);
        for (int i = n; i > n - m; i--) up = up.multiply(BigInteger.valueOf(i));
        for (int i = m; i > 0; i--) down = down.multiply(BigInteger.valueOf(i));
        c[n][m] = up.divide(down).mod(BigInteger.valueOf(p)) ;
        c[n][n - m] = c[n][n - m];
        return c[n][m];
    }

    //n >= m,C(n,m),该方法求变量前的系数
    static void solve(long q, long e, int n, int i, int p) {
        if (i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf((int) Math.pow(q, n))) .mod(BigInteger.valueOf(p));
        else if (n - i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf((int) Math.pow(e, i))).mod(BigInteger.valueOf(p));
        else xi = (C(n, n - i).multiply(BigInteger.valueOf((int) Math.pow(q, n - i) % p)).multiply(BigInteger.valueOf((int) Math.pow(e, i) % p))).mod(BigInteger.valueOf(p));
    }

    public static void main(String[] args) {
        String s = sc.nextLine();
        String eve = """";
        pre(s);
        mod = p;
        pa.print(s + "" = "");
        if (x != y) {
            eve += ""("";
            for (int i = 0; i <= n; i++) {
                solve(a, b, n, i, p);
                xj[i] = xi;
                if (xi.compareTo(BigInteger.ZERO) == 0) continue;
                if (xi.compareTo(BigInteger.ONE) != 0) {
                    if (n != 1) {
                        if (i == 0) eve += xi + ""*"" + x + ""^"" + n + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += xi + ""*"" + x + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""*"" + y + ""+"";
                        }
                    }
                }
                if (xi.compareTo(BigInteger.valueOf(1)) == 0) {
                    if (n != 1) {
                        if (i == 0) eve += x + ""^"" + n + ""+"";
                        else if (i == n) eve += y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += x + ""+"";
                        else if (i == n) eve += y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""*"" + y + ""+"";
                        }
                    }
                }
            }
        } else {
            eve += ""("";
            a = a + b;
            xi = BigInteger.valueOf((int) Math.pow(a, n) % p);
            xj[0] = xi;
            eve += xi + ""*"" + x + ""^"" + n + ""%"" + p;
        }
        if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0&& eve.indexOf("")"") >= 0) pa.print(eve);
        else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            for(int i = 1;i < eve.length();i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") < 0 && eve.indexOf(""+"") < 0 &&eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 0;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually + ""%"" + p);
        }
        pw.flush();
        pa.flush();
        for(int i = 0;i < xj.length;i++) {
            if(xj[i] != BigInteger.ZERO) {
                pa.close();
                continue;
            }else {
                pb.print(""0"");
                pb.close();
            }
        }
    }
}"
11,G,Java,61631434,2023-03-31 20:31:27,一只往上爬的蚂蚁,执行出错,"import java.io.*;
import java.math.BigInteger;
import java.util.*;
public class Main{
    static int n, m, mod = (int) 1e9 + 7, maxn = 100010;
    static long ans = 0, INF = (long) 1e18;
    static Scanner sc = new Scanner(System.in);
    static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(bf);
    static PrintWriter pw = new PrintWriter(System.out);
    static PrintWriter pa = new PrintWriter(System.out);
    static PrintWriter pb = new PrintWriter(System.out);
    static long a = 1;
    static long b = 1;
    static BigInteger xi = BigInteger.ONE;
    static BigInteger sum = BigInteger.ZERO;
    static BigInteger[] xj = new BigInteger[1000];
    static int p = 0;
    static char x, y;
    static BigInteger c[][] = new BigInteger[1000][1000];

    static void pre(String s) {
        String ss = """";
        int i = 1;
        while (s.charAt(i) > '0' && s.charAt(i) <= '9') {
            ss = ss + s.charAt(i);
            i++;
        }
        x = s.charAt(i++);
        i++;
        if (!ss.equals("""")) a = Integer.parseInt(ss);
        ss = """";
        while (s.charAt(i) > '0' && s.charAt(i) <= '9') {
            ss = ss + s.charAt(i);
            i++;
        }
        y = s.charAt(i++);
        i++;
        if (!ss.equals("""")) b = Integer.parseInt(ss);
        ss = """";
        if (s.charAt(i) != '^') n = 1;
        else {
            i++;
            while (s.charAt(i) > '0' && s.charAt(i) <= '9') {
                ss = ss + s.charAt(i);
                i++;
            }
            if (!ss.equals("""")) n = Integer.parseInt(ss);
            ss = """";
        }
        i++;
        ss = ss + s.charAt(i);
        p = Integer.parseInt(ss);

    }

    static long pow(long a,long n) {
        if(n == 0 || a == 1) return 1;
        long sum = 1;
        for(int j = 0;j < n;j++) {
            a = a % p;
            sum = sum * a % p;
        }
        return sum;
    }

    //求C(n,n-1,........)阶乘
    static BigInteger C(int n, int m) {
        if (n == m || m == 0) return BigInteger.ONE;
        if (c[n][m] != null) return c[n][m];
        BigInteger up = BigInteger.valueOf(1);
        BigInteger down = BigInteger.valueOf(1);
        for (int i = n; i > n - m; i--) up = up.multiply(BigInteger.valueOf(i));
        for (int i = m; i > 0; i--) down = down.multiply(BigInteger.valueOf(i));
        c[n][m] = up.divide(down).mod(BigInteger.valueOf(p)) ;
        c[n][n - m] = c[n][n - m];
        return c[n][m];
    }

    //n >= m,C(n,m),该方法求变量前的系数
    static void solve(long q, long e, int n, int i, int p) {
        if (i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(q, n) % p)).mod(BigInteger.valueOf(p));
        else if (n - i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(e, i) % p)).mod(BigInteger.valueOf(p));
        else xi = (C(n, n - i).multiply(BigInteger.valueOf(pow(q, n - i) % p)).multiply(BigInteger.valueOf(pow(e, i) % p))).mod(BigInteger.valueOf(p));
    }

    public static void main(String[] args) {
        String s = sc.nextLine();
        String eve = """";
        pre(s);
        mod = p;
        pa.print(s + "" = "");
        if (x != y) {
            eve += ""("";
            for (int i = 0; i <= n; i++) {
                solve(a, b, n, i, p);
                xj[i] = xi;
                if (xi.compareTo(BigInteger.ZERO) == 0) continue;
                if (xi.compareTo(BigInteger.ONE) != 0) {
                    if (n != 1) {
                        if (i == 0) eve += xi + ""*"" + x + ""^"" + n + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += xi + ""*"" + x + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""*"" + y + ""+"";
                        }
                    }
                }
                if (xi.compareTo(BigInteger.valueOf(1)) == 0) {
                    if (n != 1) {
                        if (i == 0) eve += x + ""^"" + n + ""+"";
                        else if (i == n) eve += y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += x + ""+"";
                        else if (i == n) eve += y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""*"" + y + ""+"";
                        }
                    }
                }
            }
        } else {
            eve += ""("";
            a = a + b;
            xi = BigInteger.valueOf(pow(a, n) % p);
            xj[0] = xi;
            eve += xi + ""*"" + x + ""^"" + n + ""%"" + p;
        }
        if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0&& eve.indexOf("")"") >= 0) pa.print(eve);
        else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            for(int i = 1;i < eve.length();i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") < 0 && eve.indexOf(""+"") < 0 &&eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 0;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually + ""%"" + p);
        }
        pw.flush();
        pa.flush();
        for(int i = 0;i < xj.length;i++) {
            if(xj[i] != BigInteger.ZERO) {
                pa.close();
                continue;
            }else {
                pb.print(""0"");
                pb.close();
            }
        }
    }
}"
12,G,Java,61631783,2023-03-31 20:46:34,一只往上爬的蚂蚁,执行出错,"import java.io.*;
import java.math.BigInteger;
import java.util.*;
public class Main{
    static int n, m, mod = (int) 1e9 + 7, maxn = 100010;
    static long ans = 0, INF = (long) 1e18;
    static Scanner sc = new Scanner(System.in);
    static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(bf);
    static PrintWriter pw = new PrintWriter(System.out);
    static PrintWriter pa = new PrintWriter(System.out);
    static PrintWriter pb = new PrintWriter(System.out);
    static long a = 1;
    static long b = 1;
    static BigInteger xi = BigInteger.ONE;
    static BigInteger sum = BigInteger.ZERO;
    static BigInteger[] xj = new BigInteger[1000];
    static int p = 0;
    static char x, y;
    static BigInteger c[][] = new BigInteger[1000][1000];

    static void pre(String s) {
        String ss = """";
        int i = 1;
        while (s.charAt(i) > '0' && s.charAt(i) <= '9') {
            ss = ss + s.charAt(i);
            i++;
        }
        x = s.charAt(i++);
        i++;
        if (!ss.equals("""")) a = Integer.parseInt(ss);
        ss = """";
        while (s.charAt(i) > '0' && s.charAt(i) <= '9') {
            ss = ss + s.charAt(i);
            i++;
        }
        y = s.charAt(i++);
        i++;
        if (!ss.equals("""")) b = Integer.parseInt(ss);
        ss = """";
        if (s.charAt(i) != '^') n = 1;
        else {
            i++;
            while (s.charAt(i) > '0' && s.charAt(i) <= '9') {
                ss = ss + s.charAt(i);
                i++;
            }
            if (!ss.equals("""")) n = Integer.parseInt(ss);
            ss = """";
        }
        i++;
        ss = ss + s.charAt(i);
        p = Integer.parseInt(ss);

    }

    static long pow(long a,long n) {
        if(n == 0 || a == 1) return 1;
        long sum = 1;
        for(int j = 0;j < n;j++) {
            a = a % p;
            sum = sum * a % p;
        }
        return sum;
    }

    //求C(n,n-1,........)阶乘
    static BigInteger C(int n, int m) {
        if (n == m || m == 0) return BigInteger.ONE;
        if (c[n][m] != null) return c[n][m];
        BigInteger up = BigInteger.valueOf(1);
        BigInteger down = BigInteger.valueOf(1);
        for (int i = n; i > n - m; i--) up = up.multiply(BigInteger.valueOf(i));
        for (int i = m; i > 0; i--) down = down.multiply(BigInteger.valueOf(i));
        c[n][m] = up.divide(down).mod(BigInteger.valueOf(p)) ;
        c[n][n - m] = c[n][n - m];
        return c[n][m];
    }

    //n >= m,C(n,m),该方法求变量前的系数
    static void solve(long q, long e, int n, int i, int p) {
        if (i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(q, n) % p)).mod(BigInteger.valueOf(p));
        else if (n - i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(e, i) % p)).mod(BigInteger.valueOf(p));
        else xi = (C(n, n - i).multiply(BigInteger.valueOf(pow(q, n - i) % p)).multiply(BigInteger.valueOf(pow(e, i) % p))).mod(BigInteger.valueOf(p));
    }

    public static void main(String[] args) throws ArithmeticException{
        String s = sc.nextLine();
        String eve = """";
        pre(s);
        mod = p;
        pa.print(s + "" = "");
        if (x != y) {
            eve += ""("";
            for (int i = 0; i <= n; i++) {
                solve(a, b, n, i, p);
                xj[i] = xi;
                if (xi.compareTo(BigInteger.ZERO) == 0) continue;
                if (xi.compareTo(BigInteger.ONE) != 0) {
                    if (n != 1) {
                        if (i == 0) eve += xi + ""*"" + x + ""^"" + n + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += xi + ""*"" + x + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""*"" + y + ""+"";
                        }
                    }
                }
                if (xi.compareTo(BigInteger.valueOf(1)) == 0) {
                    if (n != 1) {
                        if (i == 0) eve += x + ""^"" + n + ""+"";
                        else if (i == n) eve += y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += x + ""+"";
                        else if (i == n) eve += y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""*"" + y + ""+"";
                        }
                    }
                }
            }
        } else {
            eve += ""("";
            a = a + b;
            xi = BigInteger.valueOf(pow(a, n) % p);
            xj[0] = xi;
            eve += xi + ""*"" + x + ""^"" + n + ""%"" + p;
        }
        if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0&& eve.indexOf("")"") >= 0) pa.print(eve);
        else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            for(int i = 1;i < eve.length();i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") < 0 && eve.indexOf(""+"") < 0 &&eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 0;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually + ""%"" + p);
        }
        pw.flush();
        pa.flush();
        for(int i = 0;i < xj.length;i++) {
            if(xj[i] != BigInteger.ZERO) {
                pa.close();
                continue;
            }else {
                pb.print(""0"");
                pb.close();
            }
        }
    }
}"
13,G,Java,61631807,2023-03-31 20:47:42,一只往上爬的蚂蚁,执行出错,"import java.io.*;
import java.math.BigInteger;
import java.util.*;
public class Main{
    static int n, m, mod = (int) 1e9 + 7, maxn = 100010;
    static long ans = 0, INF = (long) 1e18;
    static Scanner sc = new Scanner(System.in);
    static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(bf);
    static PrintWriter pw = new PrintWriter(System.out);
    static PrintWriter pa = new PrintWriter(System.out);
    static PrintWriter pb = new PrintWriter(System.out);
    static long a = 1;
    static long b = 1;
    static BigInteger xi = BigInteger.ONE;
    static BigInteger sum = BigInteger.ZERO;
    static BigInteger[] xj = new BigInteger[1000];
    static int p = 0;
    static char x, y;
    static BigInteger c[][] = new BigInteger[1000][1000];

    static void pre(String s) {
        String ss = """";
        int i = 1;
        while (s.charAt(i) > '0' && s.charAt(i) <= '9') {
            ss = ss + s.charAt(i);
            i++;
        }
        x = s.charAt(i++);
        i++;
        if (!ss.equals("""")) a = Integer.parseInt(ss);
        ss = """";
        while (s.charAt(i) > '0' && s.charAt(i) <= '9') {
            ss = ss + s.charAt(i);
            i++;
        }
        y = s.charAt(i++);
        i++;
        if (!ss.equals("""")) b = Integer.parseInt(ss);
        ss = """";
        if (s.charAt(i) != '^') n = 1;
        else {
            i++;
            while (s.charAt(i) > '0' && s.charAt(i) <= '9') {
                ss = ss + s.charAt(i);
                i++;
            }
            if (!ss.equals("""")) n = Integer.parseInt(ss);
            ss = """";
        }
        i++;
        ss = ss + s.charAt(i);
        p = Integer.parseInt(ss);

    }

    static long pow(long a,long n) throws ArithmeticException{
        if(n == 0 || a == 1) return 1;
        long sum = 1;
        for(int j = 0;j < n;j++) {
            a = a % p;
            sum = sum * a % p;
        }
        return sum;
    }

    //求C(n,n-1,........)阶乘
    static BigInteger C(int n, int m) {
        if (n == m || m == 0) return BigInteger.ONE;
        if (c[n][m] != null) return c[n][m];
        BigInteger up = BigInteger.valueOf(1);
        BigInteger down = BigInteger.valueOf(1);
        for (int i = n; i > n - m; i--) up = up.multiply(BigInteger.valueOf(i));
        for (int i = m; i > 0; i--) down = down.multiply(BigInteger.valueOf(i));
        c[n][m] = up.divide(down).mod(BigInteger.valueOf(p)) ;
        c[n][n - m] = c[n][n - m];
        return c[n][m];
    }

    //n >= m,C(n,m),该方法求变量前的系数
    static void solve(long q, long e, int n, int i, int p) {
        if (i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(q, n) % p)).mod(BigInteger.valueOf(p));
        else if (n - i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(e, i) % p)).mod(BigInteger.valueOf(p));
        else xi = (C(n, n - i).multiply(BigInteger.valueOf(pow(q, n - i) % p)).multiply(BigInteger.valueOf(pow(e, i) % p))).mod(BigInteger.valueOf(p));
    }

    public static void main(String[] args) throws ArithmeticException {
        String s = sc.nextLine();
        String eve = """";
        pre(s);
        mod = p;
        pa.print(s + "" = "");
        if (x != y) {
            eve += ""("";
            for (int i = 0; i <= n; i++) {
                solve(a, b, n, i, p);
                xj[i] = xi;
                if (xi.compareTo(BigInteger.ZERO) == 0) continue;
                if (xi.compareTo(BigInteger.ONE) != 0) {
                    if (n != 1) {
                        if (i == 0) eve += xi + ""*"" + x + ""^"" + n + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += xi + ""*"" + x + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""*"" + y + ""+"";
                        }
                    }
                }
                if (xi.compareTo(BigInteger.valueOf(1)) == 0) {
                    if (n != 1) {
                        if (i == 0) eve += x + ""^"" + n + ""+"";
                        else if (i == n) eve += y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += x + ""+"";
                        else if (i == n) eve += y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""*"" + y + ""+"";
                        }
                    }
                }
            }
        } else {
            eve += ""("";
            a = a + b;
            xi = BigInteger.valueOf(pow(a, n) % p);
            xj[0] = xi;
            eve += xi + ""*"" + x + ""^"" + n + ""%"" + p;
        }
        if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0&& eve.indexOf("")"") >= 0) pa.print(eve);
        else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            for(int i = 1;i < eve.length();i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") < 0 && eve.indexOf(""+"") < 0 &&eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 0;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually + ""%"" + p);
        }
        pw.flush();
        pa.flush();
        for(int i = 0;i < xj.length;i++) {
            if(xj[i] != BigInteger.ZERO) {
                pa.close();
                continue;
            }else {
                pb.print(""0"");
                pb.close();
            }
        }
    }
}"
14,G,Java,61632082,2023-03-31 21:00:37,一只往上爬的蚂蚁,编译错误,"{""SPECIAL_TM_FH_MEMO_JSON_TAG"":""SPECIAL_TM_FH_MEMO_JSON_TAG"",""stderr"":""Main.java:12: error: cannot find symbol\n            x = s.charAt(i++);\n            ^\n  symbol:   variable x\n  location: class Main\nMain.java:14: error: cannot find symbol\n            if(!ss.equals(\""\"")) a=Integer.parseInt(ss);\n                               ^\n  symbol:   variable a\n  location: class Main\nMain.java:20: error: cannot find symbol\n            y=s.charAt(i++);i++;\n            ^\n  symbol:   variable y\n  location: class Main\nMain.java:21: error: cannot find symbol\n            if(!ss.equals(\""\"")) b=Integer.parseInt(ss);\n                               ^\n  symbol:   variable b\n  location: class Main\nMain.java:23: error: cannot find symbol\n            if(s.charAt(i) != '^') n=1;\n                                   ^\n  symbol:   variable n\n  location: class Main\nMain.java:30: error: cannot find symbol\n                n = Integer.parseInt(ss);ss=\""\"";\n                ^\n  symbol:   variable n\n  location: class Main\nMain.java:37: error: cannot find symbol\n            p = Integer.parseInt(ss);\n            ^\n  symbol:   variable p\n  location: class Main\nMain.java:44: error: cannot find symbol\n            a = a % p;\n                    ^\n  symbol:   variable p\n  location: class Main\nMain.java:45: error: cannot find symbol\n            sum = sum * a % p;\n                            ^\n  symbol:   variable p\n  location: class Main\nMain.java:53: error: cannot find symbol\n        if (c[n][m] != null) return c[n][m];\n            ^\n  symbol:   variable c\n  location: class Main\nMain.java:53: error: cannot find symbol\n        if (c[n][m] != null) return c[n][m];\n                                    ^\n  symbol:   variable c\n  location: class Main\nMain.java:58: error: cannot find symbol\n        c[n][m] = up.divide(down).mod(BigInteger.valueOf(p)) ;\n        ^\n  symbol:   variable c\n  location: class Main\nMain.java:58: error: cannot find symbol\n        c[n][m] = up.divide(down).mod(BigInteger.valueOf(p)) ;\n                                                         ^\n  symbol:   variable p\n  location: class Main\nMain.java:59: error: cannot find symbol\n        c[n][n - m] = c[n][n - m];\n        ^\n  symbol:   variable c\n  location: class Main\nMain.java:59: error: cannot find symbol\n        c[n][n - m] = c[n][n - m];\n                      ^\n  symbol:   variable c\n  location: class Main\nMain.java:60: error: cannot find symbol\n        return c[n][m];\n               ^\n  symbol:   variable c\n  location: class Main\nMain.java:65: error: cannot find symbol\n        if (i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(q, n) % p)).mod(BigInteger.valueOf(p));\n                    ^\n  symbol:   variable xi\n  location: class Main\nMain.java:65: error: cannot find symbol\n        if (i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(q, n) % p)).mod(BigInteger.valueOf(p));\n                                                                                                        ^\n  symbol:   variable p\n  location: class Main\nMain.java:65: error: cannot find symbol\n        if (i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(q, n) % p)).mod(BigInteger.valueOf(p));\n                                                                             ^\n  symbol:   variable p\n  location: class Main\nMain.java:66: error: cannot find symbol\n        else if (n - i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(e, i) % p)).mod(BigInteger.valueOf(p));\n                             ^\n  symbol:   variable xi\n  location: class Main\nMain.java:66: error: cannot find symbol\n        else if (n - i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(e, i) % p)).mod(BigInteger.valueOf(p));\n                                                                                                                 ^\n  symbol:   variable p\n  location: class Main\nMain.java:66: error: cannot find symbol\n        else if (n - i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(e, i) % p)).mod(BigInteger.valueOf(p));\n                                                                                      ^\n  symbol:   variable p\n  location: class Main\nMain.java:67: error: cannot find symbol\n        else xi = (C(n, n - i).multiply(BigInteger.valueOf(pow(q, n - i) % p)).multiply(BigInteger.valueOf(pow(e, i) % p))).mod(BigInteger.valueOf(p));\n             ^\n  symbol:   variable xi\n  location: class Main\nMain.java:67: error: cannot find symbol\n        else xi = (C(n, n - i).multiply(BigInteger.valueOf(pow(q, n - i) % p)).multiply(BigInteger.valueOf(pow(e, i) % p))).mod(BigInteger.valueOf(p));\n                                                                                                                                                   ^\n  symbol:   variable p\n  location: class Main\nMain.java:67: error: cannot find symbol\n        else xi = (C(n, n - i).multiply(BigInteger.valueOf(pow(q, n - i) % p)).multiply(BigInteger.valueOf(pow(e, i) % p))).mod(BigInteger.valueOf(p));\n                                                                                                                       ^\n  symbol:   variable p\n  location: class Main\nMain.java:67: error: cannot find symbol\n        else xi = (C(n, n - i).multiply(BigInteger.valueOf(pow(q, n - i) % p)).multiply(BigInteger.valueOf(pow(e, i) % p))).mod(BigInteger.valueOf(p));\n                                                                           ^\n  symbol:   variable p\n  location: class Main\nMain.java:71: error: cannot find symbol\n        String s = sc.nextLine();\n                   ^\n  symbol:   variable sc\n  location: class Main\nMain.java:74: error: cannot find symbol\n        mod = p;\n        ^\n  symbol:   variable mod\n  location: class Main\nMain.java:74: error: cannot find symbol\n        mod = p;\n              ^\n  symbol:   variable p\n  location: class Main\nMain.java:75: error: cannot find symbol\n        pa.print(s + \"" = \"");\n        ^\n  symbol:   variable pa\n  location: class Main\nMain.java:76: error: cannot find symbol\n        if (x != y) {\n            ^\n  symbol:   variable x\n  location: class Main\nMain.java:76: error: cannot find symbol\n        if (x != y) {\n                 ^\n  symbol:   variable y\n  location: class Main\nMain.java:78: error: cannot find symbol\n            for (int i = 0; i <= n; i++) {\n                                 ^\n  symbol:   variable n\n  location: class Main\nMain.java:79: error: cannot find symbol\n                solve(a, b, n, i);\n                      ^\n  symbol:   variable a\n  location: class Main\nMain.java:79: error: cannot find symbol\n                solve(a, b, n, i);\n                         ^\n  symbol:   variable b\n  location: class Main\nMain.java:79: error: cannot find symbol\n                solve(a, b, n, i);\n                            ^\n  symbol:   variable n\n  location: class Main\nMain.java:80: error: cannot find symbol\n                xj[i] = xi;\n                ^\n  symbol:   variable xj\n  location: class Main\nMain.java:80: error: cannot find symbol\n                xj[i] = xi;\n                        ^\n  symbol:   variable xi\n  location: class Main\nMain.java:81: error: cannot find symbol\n                if (xi.compareTo(BigInteger.ZERO) == 0) continue;\n                    ^\n  symbol:   variable xi\n  location: class Main\nMain.java:82: error: cannot find symbol\n                if (xi.compareTo(BigInteger.ONE) != 0) {\n                    ^\n  symbol:   variable xi\n  location: class Main\nMain.java:83: error: cannot find symbol\n                    if (n != 1) {\n                        ^\n  symbol:   variable n\n  location: class Main\nMain.java:84: error: cannot find symbol\n                        if (i == 0) eve += xi + \""*\"" + x + \""^\"" + n + \""+\"";\n                                           ^\n  symbol:   variable xi\n  location: class Main\nMain.java:84: error: cannot find symbol\n                        if (i == 0) eve += xi + \""*\"" + x + \""^\"" + n + \""+\"";\n                                                      ^\n  symbol:   variable x\n  location: class Main\nMain.java:84: error: cannot find symbol\n                        if (i == 0) eve += xi + \""*\"" + x + \""^\"" + n + \""+\"";\n                                                                ^\n  symbol:   variable n\n  location: class Main\nMain.java:85: error: cannot find symbol\n                        else if (i == n) eve += xi + \""*\"" + y + \""^\"" + n + \"")%\"" + p;\n                                      ^\n  symbol:   variable n\n  location: class Main\nMain.java:85: error: cannot find symbol\n                        else if (i == n) eve += xi + \""*\"" + y + \""^\"" + n + \"")%\"" + p;\n                                                ^\n  symbol:   variable xi\n  location: class Main\nMain.java:85: error: cannot find symbol\n                        else if (i == n) eve += xi + \""*\"" + y + \""^\"" + n + \"")%\"" + p;\n                                                           ^\n  symbol:   variable y\n  location: class Main\nMain.java:85: error: cannot find symbol\n                        else if (i == n) eve += xi + \""*\"" + y + \""^\"" + n + \"")%\"" + p;\n                                                                     ^\n  symbol:   variable n\n  location: class Main\nMain.java:85: error: cannot find symbol\n                        else if (i == n) eve += xi + \""*\"" + y + \""^\"" + n + \"")%\"" + p;\n                                                                                ^\n  symbol:   variable p\n  location: class Main\nMain.java:87: error: cannot find symbol\n                            if (i == 1 && n - i != 1) eve += xi + \""*\"" + x + \""^\"" + (n - i) + \""*\"" + y + \""+\"";\n                                          ^\n  symbol:   variable n\n  location: class Main\nMain.java:87: error: cannot find symbol\n                            if (i == 1 && n - i != 1) eve += xi + \""*\"" + x + \""^\"" + (n - i) + \""*\"" + y + \""+\"";\n                                                             ^\n  symbol:   variable xi\n  location: class Main\nMain.java:87: error: cannot find symbol\n                            if (i == 1 && n - i != 1) eve += xi + \""*\"" + x + \""^\"" + (n - i) + \""*\"" + y + \""+\"";\n                                                                        ^\n  symbol:   variable x\n  location: class Main\nMain.java:87: error: cannot find symbol\n                            if (i == 1 && n - i != 1) eve += xi + \""*\"" + x + \""^\"" + (n - i) + \""*\"" + y + \""+\"";\n                                                                                   ^\n  symbol:   variable n\n  location: class Main\nMain.java:87: error: cannot find symbol\n                            if (i == 1 && n - i != 1) eve += xi + \""*\"" + x + \""^\"" + (n - i) + \""*\"" + y + \""+\"";\n                                                                                                  ^\n  symbol:   variable y\n  location: class Main\nMain.java:88: error: cannot find symbol\n                            else if (n - i == 1 && i != 1) eve += xi + \""*\"" + x + \""*\"" + y + \""^\"" + i + \""+\"";\n                                     ^\n  symbol:   variable n\n  location: class Main\nMain.java:88: error: cannot find symbol\n                            else if (n - i == 1 && i != 1) eve += xi + \""*\"" + x + \""*\"" + y + \""^\"" + i + \""+\"";\n                                                                  ^\n  symbol:   variable xi\n  location: class Main\nMain.java:88: error: cannot find symbol\n                            else if (n - i == 1 && i != 1) eve += xi + \""*\"" + x + \""*\"" + y + \""^\"" + i + \""+\"";\n                                                                             ^\n  symbol:   variable x\n  location: class Main\nMain.java:88: error: cannot find symbol\n                            else if (n - i == 1 && i != 1) eve += xi + \""*\"" + x + \""*\"" + y + \""^\"" + i + \""+\"";\n                                                                                       ^\n  symbol:   variable y\n  location: class Main\nMain.java:89: error: cannot find symbol\n                            else if (i == 1 && n - i == 1) eve += xi + \""*\"" + x + \""*\"" + y + \""+\"";\n                                               ^\n  symbol:   variable n\n  location: class Main\nMain.java:89: error: cannot find symbol\n                            else if (i == 1 && n - i == 1) eve += xi + \""*\"" + x + \""*\"" + y + \""+\"";\n                                                                  ^\n  symbol:   variable xi\n  location: class Main\nMain.java:89: error: cannot find symbol\n                            else if (i == 1 && n - i == 1) eve += xi + \""*\"" + x + \""*\"" + y + \""+\"";\n                                                                             ^\n  symbol:   variable x\n  location: class Main\nMain.java:89: error: cannot find symbol\n                            else if (i == 1 && n - i == 1) eve += xi + \""*\"" + x + \""*\"" + y + \""+\"";\n                                                                                       ^\n  symbol:   variable y\n  location: class Main\nMain.java:90: error: cannot find symbol\n                            else eve += xi + \""*\"" + x + \""^\"" + (n - i) + \""*\"" + y + \""^\"" + i + \""+\"";\n                                        ^\n  symbol:   variable xi\n  location: class Main\nMain.java:90: error: cannot find symbol\n                            else eve += xi + \""*\"" + x + \""^\"" + (n - i) + \""*\"" + y + \""^\"" + i + \""+\"";\n                                                   ^\n  symbol:   variable x\n  location: class Main\nMain.java:90: error: cannot find symbol\n                            else eve += xi + \""*\"" + x + \""^\"" + (n - i) + \""*\"" + y + \""^\"" + i + \""+\"";\n                                                              ^\n  symbol:   variable n\n  location: class Main\nMain.java:90: error: cannot find symbol\n                            else eve += xi + \""*\"" + x + \""^\"" + (n - i) + \""*\"" + y + \""^\"" + i + \""+\"";\n                                                                             ^\n  symbol:   variable y\n  location: class Main\nMain.java:93: error: cannot find symbol\n                        if (i == 0) eve += xi + \""*\"" + x + \""+\"";\n                                           ^\n  symbol:   variable xi\n  location: class Main\nMain.java:93: error: cannot find symbol\n                        if (i == 0) eve += xi + \""*\"" + x + \""+\"";\n                                                      ^\n  symbol:   variable x\n  location: class Main\nMain.java:94: error: cannot find symbol\n                        else if (i == n) eve += xi + \""*\"" + y + \"")%\"" + p;\n                                      ^\n  symbol:   variable n\n  location: class Main\nMain.java:94: error: cannot find symbol\n                        else if (i == n) eve += xi + \""*\"" + y + \"")%\"" + p;\n                                                ^\n  symbol:   variable xi\n  location: class Main\nMain.java:94: error: cannot find symbol\n                        else if (i == n) eve += xi + \""*\"" + y + \"")%\"" + p;\n                                                           ^\n  symbol:   variable y\n  location: class Main\nMain.java:94: error: cannot find symbol\n                        else if (i == n) eve += xi + \""*\"" + y + \"")%\"" + p;\n                                                                      ^\n  symbol:   variable p\n  location: class Main\nMain.java:96: error: cannot find symbol\n                            if (i == 1 && n - i != 1) eve += xi + \""*\"" + x + \""*\"" + y + \""+\"";\n                                          ^\n  symbol:   variable n\n  location: class Main\nMain.java:96: error: cannot find symbol\n                            if (i == 1 && n - i != 1) eve += xi + \""*\"" + x + \""*\"" + y + \""+\"";\n                                                             ^\n  symbol:   variable xi\n  location: class Main\nMain.java:96: error: cannot find symbol\n                            if (i == 1 && n - i != 1) eve += xi + \""*\"" + x + \""*\"" + y + \""+\"";\n                                                                        ^\n  symbol:   variable x\n  location: class Main\nMain.java:96: error: cannot find symbol\n                            if (i == 1 && n - i != 1) eve += xi + \""*\"" + x + \""*\"" + y + \""+\"";\n                                                                                  ^\n  symbol:   variable y\n  location: class Main\nMain.java:97: error: cannot find symbol\n                            else if (n - i == 1 && i != 1) eve += xi + \""*\"" + x + \""*\"" + y + \""+\"";\n                                     ^\n  symbol:   variable n\n  location: class Main\nMain.java:97: error: cannot find symbol\n                            else if (n - i == 1 && i != 1) eve += xi + \""*\"" + x + \""*\"" + y + \""+\"";\n                                                                  ^\n  symbol:   variable xi\n  location: class Main\nMain.java:97: error: cannot find symbol\n                            else if (n - i == 1 && i != 1) eve += xi + \""*\"" + x + \""*\"" + y + \""+\"";\n                                                                             ^\n  symbol:   variable x\n  location: class Main\nMain.java:97: error: cannot find symbol\n                            else if (n - i == 1 && i != 1) eve += xi + \""*\"" + x + \""*\"" + y + \""+\"";\n                                                                                       ^\n  symbol:   variable y\n  location: class Main\nMain.java:98: error: cannot find symbol\n                            else if (i == 1 && n - i == 1) eve += xi + \""*\"" + x + \""*\"" + y + \""+\"";\n                                               ^\n  symbol:   variable n\n  location: class Main\nMain.java:98: error: cannot find symbol\n                            else if (i == 1 && n - i == 1) eve += xi + \""*\"" + x + \""*\"" + y + \""+\"";\n                                                                  ^\n  symbol:   variable xi\n  location: class Main\nMain.java:98: error: cannot find symbol\n                            else if (i == 1 && n - i == 1) eve += xi + \""*\"" + x + \""*\"" + y + \""+\"";\n                                                                             ^\n  symbol:   variable x\n  location: class Main\nMain.java:98: error: cannot find symbol\n                            else if (i == 1 && n - i == 1) eve += xi + \""*\"" + x + \""*\"" + y + \""+\"";\n                                                                                       ^\n  symbol:   variable y\n  location: class Main\nMain.java:99: error: cannot find symbol\n                            else eve += xi + \""*\"" + x + \""*\"" + y + \""+\"";\n                                        ^\n  symbol:   variable xi\n  location: class Main\nMain.java:99: error: cannot find symbol\n                            else eve += xi + \""*\"" + x + \""*\"" + y + \""+\"";\n                                                   ^\n  symbol:   variable x\n  location: class Main\nMain.java:99: error: cannot find symbol\n                            else eve += xi + \""*\"" + x + \""*\"" + y + \""+\"";\n                                                             ^\n  symbol:   variable y\n  location: class Main\nMain.java:103: error: cannot find symbol\n                if (xi.compareTo(BigInteger.valueOf(1)) == 0) {\n                    ^\n  symbol:   variable xi\n  location: class Main\nMain.java:104: error: cannot find symbol\n                    if (n != 1) {\n                        ^\n  symbol:   variable n\n  location: class Main\nMain.java:105: error: cannot find symbol\n                        if (i == 0) eve += x + \""^\"" + n + \""+\"";\n                                           ^\n  symbol:   variable x\n  location: class Main\nMain.java:105: error: cannot find symbol\n                        if (i == 0) eve += x + \""^\"" + n + \""+\"";\n                                                     ^\n  symbol:   variable n\n  location: class Main\nMain.java:106: error: cannot find symbol\n                        else if (i == n) eve += y + \""^\"" + n + \"")%\"" + p;\n                                      ^\n  symbol:   variable n\n  location: class Main\nMain.java:106: error: cannot find symbol\n                        else if (i == n) eve += y + \""^\"" + n + \"")%\"" + p;\n                                                ^\n  symbol:   variable y\n  location: class Main\nMain.java:106: error: cannot find symbol\n                        else if (i == n) eve += y + \""^\"" + n + \"")%\"" + p;\n                                                          ^\n  symbol:   variable n\n  location: class Main\nMain.java:106: error: cannot find symbol\n                        else if (i == n) eve += y + \""^\"" + n + \"")%\"" + p;\n                                                                     ^\n  symbol:   variable p\n  location: class Main\nMain.java:108: error: cannot find symbol\n                            if (i == 1 && n - i != 1) eve += x + \""^\"" + (n - i) + \""*\"" + y + \""+\"";\n                                          ^\n  symbol:   variable n\n  location: class Main\nMain.java:108: error: cannot find symbol\n                            if (i == 1 && n - i != 1) eve += x + \""^\"" + (n - i) + \""*\"" + y + \""+\"";\n                                                             ^\n  symbol:   variable x\n  location: class Main\nMain.java:108: error: cannot find symbol\n                            if (i == 1 && n - i != 1) eve += x + \""^\"" + (n - i) + \""*\"" + y + \""+\"";\n                                                                        ^\n  symbol:   variable n\n  location: class Main\nMain.java:108: error: cannot find symbol\n                            if (i == 1 && n - i != 1) eve += x + \""^\"" + (n - i) + \""*\"" + y + \""+\"";\n                                                                                       ^\n  symbol:   variable y\n  location: class Main\nMain.java:109: error: cannot find symbol\n                            else if (n - i == 1 && i != 1) eve += x + \""*\"" + y + \""^\"" + i + \""+\"";\n                                     ^\n  symbol:   variable n\n  location: class Main\n100 errors""}

import java.io.*;
import java.math.BigInteger;
import java.util.*;
public class Main{
    static void pre(String s) {
            String ss = """";
            int i=1;
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            x = s.charAt(i++);
            i++;
            if(!ss.equals("""")) a=Integer.parseInt(ss);
            ss="""";
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            y=s.charAt(i++);i++;
            if(!ss.equals("""")) b=Integer.parseInt(ss);
            ss="""";
            if(s.charAt(i) != '^') n=1;
            else {
                i++;
                while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                    ss = ss+s.charAt(i);
                    i++;
                }
                n = Integer.parseInt(ss);ss="""";
            }
            i++;
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            p = Integer.parseInt(ss);
        }

    static long pow(long a,long n) {
        if(n == 0 || a == 1) return 1;
        long sum = 1;
        for(int j = 0;j < n;j++) {
            a = a % p;
            sum = sum * a % p;
        }
        return sum;
    }

    //求C(n,n-1,........)阶乘
    static BigInteger C(int n, int m) {
        if (n == m || m == 0) return BigInteger.ONE;
        if (c[n][m] != null) return c[n][m];
        BigInteger up = BigInteger.valueOf(1);
        BigInteger down = BigInteger.valueOf(1);
        for (int i = n; i > n - m; i--) up = up.multiply(BigInteger.valueOf(i));
        for (int i = m; i > 0; i--) down = down.multiply(BigInteger.valueOf(i));
        c[n][m] = up.divide(down).mod(BigInteger.valueOf(p)) ;
        c[n][n - m] = c[n][n - m];
        return c[n][m];
    }

    //n >= m,C(n,m),该方法求变量前的系数
    static void solve(long q, long e, int n, int i) {
        if (i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(q, n) % p)).mod(BigInteger.valueOf(p));
        else if (n - i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(e, i) % p)).mod(BigInteger.valueOf(p));
        else xi = (C(n, n - i).multiply(BigInteger.valueOf(pow(q, n - i) % p)).multiply(BigInteger.valueOf(pow(e, i) % p))).mod(BigInteger.valueOf(p));
    }

    public static void main(String[] args) throws ArithmeticException{
        String s = sc.nextLine();
        String eve = """";
        pre(s);
        mod = p;
        pa.print(s + "" = "");
        if (x != y) {
            eve += ""("";
            for (int i = 0; i <= n; i++) {
                solve(a, b, n, i);
                xj[i] = xi;
                if (xi.compareTo(BigInteger.ZERO) == 0) continue;
                if (xi.compareTo(BigInteger.ONE) != 0) {
                    if (n != 1) {
                        if (i == 0) eve += xi + ""*"" + x + ""^"" + n + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += xi + ""*"" + x + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""*"" + y + ""+"";
                        }
                    }
                }
                if (xi.compareTo(BigInteger.valueOf(1)) == 0) {
                    if (n != 1) {
                        if (i == 0) eve += x + ""^"" + n + ""+"";
                        else if (i == n) eve += y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += x + ""+"";
                        else if (i == n) eve += y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""*"" + y + ""+"";
                        }
                    }
                }
            }
        } else {
            eve += ""("";
            a = a + b;
            xi = BigInteger.valueOf(pow(a, n) % p);
            xj[0] = xi;
            eve += xi + ""*"" + x + ""^"" + n + ""%"" + p;
        }
        if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0&& eve.indexOf("")"") >= 0) pa.print(eve);
        else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            for(int i = 1;i < eve.length();i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") < 0 && eve.indexOf(""+"") < 0 &&eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 0;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually + ""%"" + p);
        }
        pw.flush();
        pa.flush();
        for(int i = 0;i < xj.length;i++) {
            if(xj[i] != BigInteger.ZERO) {
                pa.close();
                continue;
            }else {
                pb.print(""0"");
                pb.close();
            }
        }
    }
}"
15,G,Java,61632113,2023-03-31 21:01:23,一只往上爬的蚂蚁,执行出错,"import java.io.*;
import java.math.BigInteger;
import java.util.*;
public class Main{
    static int n, m, mod = (int) 1e9 + 7, maxn = 100010;
    static long ans = 0, INF = (long) 1e18;
    static Scanner sc = new Scanner(System.in);
    static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(bf);
    static PrintWriter pw = new PrintWriter(System.out);
    static PrintWriter pa = new PrintWriter(System.out);
    static PrintWriter pb = new PrintWriter(System.out);
    static long a = 1;
    static long b = 1;
    static BigInteger xi = BigInteger.ONE;
    static BigInteger sum = BigInteger.ZERO;
    static BigInteger[] xj = new BigInteger[1000];
    static int p = 1;
    static char x, y;
    static BigInteger c[][] = new BigInteger[1000][1000];
    static void pre(String s) {
            String ss = """";
            int i=1;
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            x = s.charAt(i++);
            i++;
            if(!ss.equals("""")) a=Integer.parseInt(ss);
            ss="""";
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            y=s.charAt(i++);i++;
            if(!ss.equals("""")) b=Integer.parseInt(ss);
            ss="""";
            if(s.charAt(i) != '^') n=1;
            else {
                i++;
                while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                    ss = ss+s.charAt(i);
                    i++;
                }
                n = Integer.parseInt(ss);ss="""";
            }
            i++;
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            p = Integer.parseInt(ss);
        }

    static long pow(long a,long n) {
        if(n == 0 || a == 1) return 1;
        long sum = 1;
        for(int j = 0;j < n;j++) {
            a = a % p;
            sum = sum * a % p;
        }
        return sum;
    }

    //求C(n,n-1,........)阶乘
    static BigInteger C(int n, int m) {
        if (n == m || m == 0) return BigInteger.ONE;
        if (c[n][m] != null) return c[n][m];
        BigInteger up = BigInteger.valueOf(1);
        BigInteger down = BigInteger.valueOf(1);
        for (int i = n; i > n - m; i--) up = up.multiply(BigInteger.valueOf(i));
        for (int i = m; i > 0; i--) down = down.multiply(BigInteger.valueOf(i));
        c[n][m] = up.divide(down).mod(BigInteger.valueOf(p)) ;
        c[n][n - m] = c[n][n - m];
        return c[n][m];
    }

    //n >= m,C(n,m),该方法求变量前的系数
    static void solve(long q, long e, int n, int i) {
        if (i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(q, n) % p)).mod(BigInteger.valueOf(p));
        else if (n - i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(e, i) % p)).mod(BigInteger.valueOf(p));
        else xi = (C(n, n - i).multiply(BigInteger.valueOf(pow(q, n - i) % p)).multiply(BigInteger.valueOf(pow(e, i) % p))).mod(BigInteger.valueOf(p));
    }

    public static void main(String[] args) throws ArithmeticException{
        String s = sc.nextLine();
        String eve = """";
        pre(s);
        mod = p;
        pa.print(s + "" = "");
        if (x != y) {
            eve += ""("";
            for (int i = 0; i <= n; i++) {
                solve(a, b, n, i);
                xj[i] = xi;
                if (xi.compareTo(BigInteger.ZERO) == 0) continue;
                if (xi.compareTo(BigInteger.ONE) != 0) {
                    if (n != 1) {
                        if (i == 0) eve += xi + ""*"" + x + ""^"" + n + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += xi + ""*"" + x + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""*"" + y + ""+"";
                        }
                    }
                }
                if (xi.compareTo(BigInteger.valueOf(1)) == 0) {
                    if (n != 1) {
                        if (i == 0) eve += x + ""^"" + n + ""+"";
                        else if (i == n) eve += y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += x + ""+"";
                        else if (i == n) eve += y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""*"" + y + ""+"";
                        }
                    }
                }
            }
        } else {
            eve += ""("";
            a = a + b;
            xi = BigInteger.valueOf(pow(a, n) % p);
            xj[0] = xi;
            eve += xi + ""*"" + x + ""^"" + n + ""%"" + p;
        }
        if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0&& eve.indexOf("")"") >= 0) pa.print(eve);
        else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            for(int i = 1;i < eve.length();i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") < 0 && eve.indexOf(""+"") < 0 &&eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 0;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually + ""%"" + p);
        }
        pw.flush();
        pa.flush();
        for(int i = 0;i < xj.length;i++) {
            if(xj[i] != BigInteger.ZERO) {
                pa.close();
                continue;
            }else {
                pb.print(""0"");
                pb.close();
            }
        }
    }
}"
16,G,Java,61632126,2023-03-31 21:02:17,一只往上爬的蚂蚁,执行出错,"import java.io.*;
import java.math.BigInteger;
import java.util.*;
public class Main{
    static int n, m, mod = (int) 1e9 + 7, maxn = 100010;
    static long ans = 0, INF = (long) 1e18;
    static Scanner sc = new Scanner(System.in);
    static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(bf);
    static PrintWriter pw = new PrintWriter(System.out);
    static PrintWriter pa = new PrintWriter(System.out);
    static PrintWriter pb = new PrintWriter(System.out);
    static long a = 1;
    static long b = 1;
    static BigInteger xi = BigInteger.ONE;
    static BigInteger sum = BigInteger.ZERO;
    static BigInteger[] xj = new BigInteger[1000];
    static int p = 1;
    static char x, y;
    static BigInteger c[][] = new BigInteger[1000][1000];
    static void pre(String s) {
            String ss = """";
            int i=1;
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            x = s.charAt(i++);
            i++;
            if(!ss.equals("""")) a=Integer.parseInt(ss);
            ss="""";
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            y=s.charAt(i++);i++;
            if(!ss.equals("""")) b=Integer.parseInt(ss);
            ss="""";
            if(s.charAt(i) != '^') n=1;
            else {
                i++;
                while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                    ss = ss+s.charAt(i);
                    i++;
                }
                n = Integer.parseInt(ss);ss="""";
            }
            i++;
            while(i< s.length() &&s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            p = Integer.parseInt(ss);
        }

    static long pow(long a,long n) {
        if(n == 0 || a == 1) return 1;
        long sum = 1;
        for(int j = 0;j < n;j++) {
            a = a % p;
            sum = sum * a % p;
        }
        return sum;
    }

    //求C(n,n-1,........)阶乘
    static BigInteger C(int n, int m) {
        if (n == m || m == 0) return BigInteger.ONE;
        if (c[n][m] != null) return c[n][m];
        BigInteger up = BigInteger.valueOf(1);
        BigInteger down = BigInteger.valueOf(1);
        for (int i = n; i > n - m; i--) up = up.multiply(BigInteger.valueOf(i));
        for (int i = m; i > 0; i--) down = down.multiply(BigInteger.valueOf(i));
        c[n][m] = up.divide(down).mod(BigInteger.valueOf(p)) ;
        c[n][n - m] = c[n][n - m];
        return c[n][m];
    }

    //n >= m,C(n,m),该方法求变量前的系数
    static void solve(long q, long e, int n, int i) {
        if (i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(q, n) % p)).mod(BigInteger.valueOf(p));
        else if (n - i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(e, i) % p)).mod(BigInteger.valueOf(p));
        else xi = (C(n, n - i).multiply(BigInteger.valueOf(pow(q, n - i) % p)).multiply(BigInteger.valueOf(pow(e, i) % p))).mod(BigInteger.valueOf(p));
    }

    public static void main(String[] args) throws ArithmeticException{
        String s = sc.nextLine();
        String eve = """";
        pre(s);
        mod = p;
        pa.print(s + "" = "");
        if (x != y) {
            eve += ""("";
            for (int i = 0; i <= n; i++) {
                solve(a, b, n, i);
                xj[i] = xi;
                if (xi.compareTo(BigInteger.ZERO) == 0) continue;
                if (xi.compareTo(BigInteger.ONE) != 0) {
                    if (n != 1) {
                        if (i == 0) eve += xi + ""*"" + x + ""^"" + n + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += xi + ""*"" + x + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""*"" + y + ""+"";
                        }
                    }
                }
                if (xi.compareTo(BigInteger.valueOf(1)) == 0) {
                    if (n != 1) {
                        if (i == 0) eve += x + ""^"" + n + ""+"";
                        else if (i == n) eve += y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += x + ""+"";
                        else if (i == n) eve += y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""*"" + y + ""+"";
                        }
                    }
                }
            }
        } else {
            eve += ""("";
            a = a + b;
            xi = BigInteger.valueOf(pow(a, n) % p);
            xj[0] = xi;
            eve += xi + ""*"" + x + ""^"" + n + ""%"" + p;
        }
        if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0&& eve.indexOf("")"") >= 0) pa.print(eve);
        else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            for(int i = 1;i < eve.length();i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") < 0 && eve.indexOf(""+"") < 0 &&eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 0;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually + ""%"" + p);
        }
        pw.flush();
        pa.flush();
        for(int i = 0;i < xj.length;i++) {
            if(xj[i] != BigInteger.ZERO) {
                pa.close();
                continue;
            }else {
                pb.print(""0"");
                pb.close();
            }
        }
    }
}"
17,G,Java,61632163,2023-03-31 21:03:25,一只往上爬的蚂蚁,执行出错,"import java.io.*;
import java.math.BigInteger;
import java.util.*;
public class Main{
    static int n, m, mod = (int) 1e9 + 7, maxn = 100010;
    static long ans = 0, INF = (long) 1e18;
    static Scanner sc = new Scanner(System.in);
    static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(bf);
    static PrintWriter pw = new PrintWriter(System.out);
    static PrintWriter pa = new PrintWriter(System.out);
    static PrintWriter pb = new PrintWriter(System.out);
    static long a = 1;
    static long b = 1;
    static BigInteger xi = BigInteger.ONE;
    static BigInteger sum = BigInteger.ZERO;
    static BigInteger[] xj = new BigInteger[1000];
    static int p = 1;
    static char x, y;
    static BigInteger c[][] = new BigInteger[1010][1010];
    static void pre(String s) {
            String ss = """";
            int i=1;
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            x = s.charAt(i++);
            i++;
            if(!ss.equals("""")) a=Integer.parseInt(ss);
            ss="""";
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            y=s.charAt(i++);i++;
            if(!ss.equals("""")) b=Integer.parseInt(ss);
            ss="""";
            if(s.charAt(i) != '^') n=1;
            else {
                i++;
                while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                    ss = ss+s.charAt(i);
                    i++;
                }
                n = Integer.parseInt(ss);ss="""";
            }
            i++;
            while(i< s.length() &&s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            p = Integer.parseInt(ss);
        }

    static long pow(long a,long n) {
        if(n == 0 || a == 1) return 1;
        long sum = 1;
        for(int j = 0;j < n;j++) {
            a = a % p;
            sum = sum * a % p;
        }
        return sum;
    }

    //求C(n,n-1,........)阶乘
    static BigInteger C(int n, int m) {
        if (n == m || m == 0) return BigInteger.ONE;
        if (c[n][m] != null) return c[n][m];
        BigInteger up = BigInteger.valueOf(1);
        BigInteger down = BigInteger.valueOf(1);
        for (int i = n; i > n - m; i--) up = up.multiply(BigInteger.valueOf(i));
        for (int i = m; i > 0; i--) down = down.multiply(BigInteger.valueOf(i));
        c[n][m] = up.divide(down).mod(BigInteger.valueOf(p)) ;
        c[n][n - m] = c[n][n - m];
        return c[n][m];
    }

    //n >= m,C(n,m),该方法求变量前的系数
    static void solve(long q, long e, int n, int i) {
        if (i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(q, n) % p)).mod(BigInteger.valueOf(p));
        else if (n - i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(e, i) % p)).mod(BigInteger.valueOf(p));
        else xi = (C(n, n - i).multiply(BigInteger.valueOf(pow(q, n - i) % p)).multiply(BigInteger.valueOf(pow(e, i) % p))).mod(BigInteger.valueOf(p));
    }

    public static void main(String[] args) throws ArithmeticException{
        String s = sc.nextLine();
        String eve = """";
        pre(s);
        mod = p;
        pa.print(s + "" = "");
        if (x != y) {
            eve += ""("";
            for (int i = 0; i <= n; i++) {
                solve(a, b, n, i);
                xj[i] = xi;
                if (xi.compareTo(BigInteger.ZERO) == 0) continue;
                if (xi.compareTo(BigInteger.ONE) != 0) {
                    if (n != 1) {
                        if (i == 0) eve += xi + ""*"" + x + ""^"" + n + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += xi + ""*"" + x + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""*"" + y + ""+"";
                        }
                    }
                }
                if (xi.compareTo(BigInteger.valueOf(1)) == 0) {
                    if (n != 1) {
                        if (i == 0) eve += x + ""^"" + n + ""+"";
                        else if (i == n) eve += y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += x + ""+"";
                        else if (i == n) eve += y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""*"" + y + ""+"";
                        }
                    }
                }
            }
        } else {
            eve += ""("";
            a = a + b;
            xi = BigInteger.valueOf(pow(a, n) % p);
            xj[0] = xi;
            eve += xi + ""*"" + x + ""^"" + n + ""%"" + p;
        }
        if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0&& eve.indexOf("")"") >= 0) pa.print(eve);
        else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            for(int i = 1;i < eve.length();i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") < 0 && eve.indexOf(""+"") < 0 &&eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 0;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually + ""%"" + p);
        }
        pw.flush();
        pa.flush();
        for(int i = 0;i < xj.length;i++) {
            if(xj[i] != BigInteger.ZERO) {
                pa.close();
                continue;
            }else {
                pb.print(""0"");
                pb.close();
            }
        }
    }
}"
18,G,Java,61632197,2023-03-31 21:04:35,一只往上爬的蚂蚁,答案错误,"import java.io.*;
import java.math.BigInteger;
import java.util.*;
public class Main{
    static int n, m, mod = (int) 1e9 + 7, maxn = 100010;
    static long ans = 0, INF = (long) 1e18;
    static Scanner sc = new Scanner(System.in);
    static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(bf);
    static PrintWriter pw = new PrintWriter(System.out);
    static PrintWriter pa = new PrintWriter(System.out);
    static PrintWriter pb = new PrintWriter(System.out);
    static long a = 1;
    static long b = 1;
    static BigInteger xi = BigInteger.ONE;
    static BigInteger sum = BigInteger.ZERO;
    static BigInteger[] xj = new BigInteger[1010];
    static int p = 1;
    static char x, y;
    static BigInteger c[][] = new BigInteger[1010][1010];
    static void pre(String s) {
            String ss = """";
            int i=1;
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            x = s.charAt(i++);
            i++;
            if(!ss.equals("""")) a=Integer.parseInt(ss);
            ss="""";
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            y=s.charAt(i++);i++;
            if(!ss.equals("""")) b=Integer.parseInt(ss);
            ss="""";
            if(s.charAt(i) != '^') n=1;
            else {
                i++;
                while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                    ss = ss+s.charAt(i);
                    i++;
                }
                n = Integer.parseInt(ss);ss="""";
            }
            i++;
            while(i< s.length() &&s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            p = Integer.parseInt(ss);
        }

    static long pow(long a,long n) {
        if(n == 0 || a == 1) return 1;
        long sum = 1;
        for(int j = 0;j < n;j++) {
            a = a % p;
            sum = sum * a % p;
        }
        return sum;
    }

    //求C(n,n-1,........)阶乘
    static BigInteger C(int n, int m) {
        if (n == m || m == 0) return BigInteger.ONE;
        if (c[n][m] != null) return c[n][m];
        BigInteger up = BigInteger.valueOf(1);
        BigInteger down = BigInteger.valueOf(1);
        for (int i = n; i > n - m; i--) up = up.multiply(BigInteger.valueOf(i));
        for (int i = m; i > 0; i--) down = down.multiply(BigInteger.valueOf(i));
        c[n][m] = up.divide(down).mod(BigInteger.valueOf(p)) ;
        c[n][n - m] = c[n][n - m];
        return c[n][m];
    }

    //n >= m,C(n,m),该方法求变量前的系数
    static void solve(long q, long e, int n, int i) {
        if (i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(q, n) % p)).mod(BigInteger.valueOf(p));
        else if (n - i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(e, i) % p)).mod(BigInteger.valueOf(p));
        else xi = (C(n, n - i).multiply(BigInteger.valueOf(pow(q, n - i) % p)).multiply(BigInteger.valueOf(pow(e, i) % p))).mod(BigInteger.valueOf(p));
    }

    public static void main(String[] args) throws ArithmeticException{
        String s = sc.nextLine();
        String eve = """";
        pre(s);
        mod = p;
        pa.print(s + "" = "");
        if (x != y) {
            eve += ""("";
            for (int i = 0; i <= n; i++) {
                solve(a, b, n, i);
                xj[i] = xi;
                if (xi.compareTo(BigInteger.ZERO) == 0) continue;
                if (xi.compareTo(BigInteger.ONE) != 0) {
                    if (n != 1) {
                        if (i == 0) eve += xi + ""*"" + x + ""^"" + n + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += xi + ""*"" + x + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""*"" + y + ""+"";
                        }
                    }
                }
                if (xi.compareTo(BigInteger.valueOf(1)) == 0) {
                    if (n != 1) {
                        if (i == 0) eve += x + ""^"" + n + ""+"";
                        else if (i == n) eve += y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += x + ""+"";
                        else if (i == n) eve += y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""*"" + y + ""+"";
                        }
                    }
                }
            }
        } else {
            eve += ""("";
            a = a + b;
            xi = BigInteger.valueOf(pow(a, n) % p);
            xj[0] = xi;
            eve += xi + ""*"" + x + ""^"" + n + ""%"" + p;
        }
        if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0&& eve.indexOf("")"") >= 0) pa.print(eve);
        else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            for(int i = 1;i < eve.length();i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") < 0 && eve.indexOf(""+"") < 0 &&eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 0;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually + ""%"" + p);
        }
        pw.flush();
        pa.flush();
        for(int i = 0;i < xj.length;i++) {
            if(xj[i] != BigInteger.ZERO) {
                pa.close();
                continue;
            }else {
                pb.print(""0"");
                pb.close();
            }
        }
    }
}"
19,G,Java,61632677,2023-03-31 21:27:04,一只往上爬的蚂蚁,答案错误,"import java.io.*;
import java.math.BigInteger;
import java.util.*;
public class Main{
    static int n, m, mod = (int) 1e9 + 7, maxn = 100010;
    static long ans = 0, INF = (long) 1e18;
    static Scanner sc = new Scanner(System.in);
    static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(bf);
    static PrintWriter pw = new PrintWriter(System.out);
    static PrintWriter pa = new PrintWriter(System.out);
    static PrintWriter pb = new PrintWriter(System.out);
    static long a = 1;
    static long b = 1;
    static BigInteger xi = BigInteger.ONE;
    static BigInteger sum = BigInteger.ZERO;
    static BigInteger[] xj = new BigInteger[1010];
    static int p = 1;
    static char x, y;
    static BigInteger c[][] = new BigInteger[1010][1010];
    static void pre(String s) {
            String ss = """";
            int i=1;
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            x = s.charAt(i++);
            i++;
            if(!ss.equals("""")) a=Integer.parseInt(ss);
            ss="""";
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            y=s.charAt(i++);i++;
            if(!ss.equals("""")) b=Integer.parseInt(ss);
            ss="""";
            if(s.charAt(i) != '^') n=1;
            else {
                i++;
                while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                    ss = ss+s.charAt(i);
                    i++;
                }
                n = Integer.parseInt(ss);ss="""";
            }
            i++;
            while(i< s.length() &&s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            p = Integer.parseInt(ss);
        }

    static long pow(long a,long n) {
        if(n == 0 || a == 1) return 1;
        long sum = 1;
        for(int j = 0;j < n;j++) {
            a = a % p;
            sum = sum * a % p;
        }
        return sum;
    }

    //求C(n,n-1,........)阶乘
    static BigInteger C(int n, int m) {
        if (n == m || m == 0) return BigInteger.ONE;
        if (c[n][m] != null) return c[n][m];
        BigInteger up = BigInteger.valueOf(1);
        BigInteger down = BigInteger.valueOf(1);
        for (int i = n; i > n - m; i--) up = up.multiply(BigInteger.valueOf(i));
        for (int i = m; i > 0; i--) down = down.multiply(BigInteger.valueOf(i));
        c[n][m] = up.divide(down).mod(BigInteger.valueOf(p)) ;
        c[n][n - m] = c[n][n - m];
        return c[n][m];
    }

    //n >= m,C(n,m),该方法求变量前的系数
    static void solve(long q, long e, int n, int i) {
        if (i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(q, n) % p)).mod(BigInteger.valueOf(p));
        else if (n - i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(e, i) % p)).mod(BigInteger.valueOf(p));
        else xi = (C(n, n - i).multiply(BigInteger.valueOf(pow(q, n - i) % p)).multiply(BigInteger.valueOf(pow(e, i) % p))).mod(BigInteger.valueOf(p));
    }

    public static void main(String[] args) throws ArithmeticException{
        String s = sc.nextLine();
        String eve = """";
        pre(s);
        mod = p;
        pa.print(s + "" = "");
        if (x != y) {
            eve += ""("";
            for (int i = 0; i <= n; i++) {
                solve(a, b, n, i);
                xj[i] = xi;
                if (xi.compareTo(BigInteger.ZERO) == 0) continue;
                if (xi.compareTo(BigInteger.ONE) != 0) {
                    if (n != 1) {
                        if (i == 0) eve += xi + ""*"" + x + ""^"" + n + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += xi + ""*"" + x + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""*"" + y + ""+"";
                        }
                    }
                }
                if (xi.compareTo(BigInteger.valueOf(1)) == 0) {
                    if (n != 1) {
                        if (i == 0) eve += x + ""^"" + n + ""+"";
                        else if (i == n) eve += y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += x + ""+"";
                        else if (i == n) eve += y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""*"" + y + ""+"";
                        }
                    }
                }
            }
        } else {
            eve += ""("";
            a = a + b;
            xi = BigInteger.valueOf(pow(a, n) % p);
            xj[0] = xi;
            if(xi.compareTo(BigInteger.ONE) == 0) eve += x + ""^"" + n + ""%"" + p;
            else eve += xi + ""*"" + x + ""^"" + n + ""%"" + p;
        }
        if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0&& eve.indexOf("")"") >= 0) pa.print(eve);
        else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            for(int i = 1;i < eve.length();i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") < 0 && eve.indexOf(""+"") < 0 &&eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 0;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually + ""%"" + p);
        }
        pw.flush();
        pa.flush();
        for(int i = 0;i < xj.length;i++) {
            if(xj[i] != BigInteger.ZERO) {
                pa.close();
                continue;
            }else {
                pb.print(""0"");
                pb.close();
            }
        }
    }
}"
20,G,Java,61632793,2023-03-31 21:32:07,一只往上爬的蚂蚁,执行出错,"import java.io.*;
import java.math.BigInteger;
import java.util.*;
public class Main{
    static int n, m, mod = (int) 1e9 + 7, maxn = 100010;
    static long ans = 0, INF = (long) 1e18;
    static Scanner sc = new Scanner(System.in);
    static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(bf);
    static PrintWriter pw = new PrintWriter(System.out);
    static PrintWriter pa = new PrintWriter(System.out);
    static PrintWriter pb = new PrintWriter(System.out);
    static long a = 1;
    static long b = 1;
    static BigInteger xi = BigInteger.ONE;
    static BigInteger sum = BigInteger.ZERO;
    static BigInteger[] xj = new BigInteger[1010];
    static int p = 1;
    static char x, y;
    static BigInteger c[][] = new BigInteger[1010][1010];
    static void pre(String s) {
            String ss = """";
            int i=1;
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            x = s.charAt(i++);
            i++;
            if(!ss.equals("""")) a=Integer.parseInt(ss);
            ss="""";
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            y=s.charAt(i++);i++;
            if(!ss.equals("""")) b=Integer.parseInt(ss);
            ss="""";
            if(s.charAt(i) != '^') n=1;
            else {
                i++;
                while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                    ss = ss+s.charAt(i);
                    i++;
                }
                n = Integer.parseInt(ss);ss="""";
            }
            i++;
            while(i< s.length() &&s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            p = Integer.parseInt(ss);
        }

    static long pow(long a,long n) {
        if(n == 0 || a == 1) return 1;
        long sum = 1;
        for(int j = 0;j < n;j++) {
            a = a % p;
            sum = sum * a % p;
        }
        return sum;
    }

    //求C(n,n-1,........)阶乘
    static BigInteger C(int n, int m) {
        if (n == m || m == 0) return BigInteger.ONE;
        if (c[n][m] != null) return c[n][m];
        BigInteger up = BigInteger.valueOf(1);
        BigInteger down = BigInteger.valueOf(1);
        for (int i = n; i > n - m; i--) up = up.multiply(BigInteger.valueOf(i));
        for (int i = m; i > 0; i--) down = down.multiply(BigInteger.valueOf(i));
        c[n][m] = up.divide(down).mod(BigInteger.valueOf(p)) ;
        c[n][n - m] = c[n][n - m];
        return c[n][m];
    }

    //n >= m,C(n,m),该方法求变量前的系数
    static void solve(long q, long e, int n, int i) {
        if (i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(q, n) % p)).mod(BigInteger.valueOf(p));
        else if (n - i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(e, i) % p)).mod(BigInteger.valueOf(p));
        else xi = (C(n, n - i).multiply(BigInteger.valueOf(pow(q, n - i) % p)).multiply(BigInteger.valueOf(pow(e, i) % p))).mod(BigInteger.valueOf(p));
    }

    public static void main(String[] args) throws ArithmeticException{
        String s = sc.nextLine();
        String eve = """";
        pre(s);
        mod = p;
        pa.print(s + "" = "");
        if (x != y) {
            eve += ""("";
            for (int i = 0; i <= n; i++) {
                solve(a, b, n, i);
                xj[i] = xi;
                if (xi.compareTo(BigInteger.ZERO) == 0) continue;
                if (xi.compareTo(BigInteger.ONE) != 0) {
                    if (n != 1) {
                        if (i == 0) eve += xi + ""*"" + x + ""^"" + n + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += xi + ""*"" + x + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""*"" + y + ""+"";
                        }
                    }
                }
                if (xi.compareTo(BigInteger.valueOf(1)) == 0) {
                    if (n != 1) {
                        if (i == 0) eve += x + ""^"" + n + ""+"";
                        else if (i == n) eve += y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += x + ""+"";
                        else if (i == n) eve += y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""*"" + y + ""+"";
                        }
                    }
                }
            }
        } else {
            eve += ""("";
            a = a + b;
            xi = BigInteger.valueOf(pow(a, n) % p);
            xj[0] = xi;
            if(xi.compareTo(BigInteger.ONE) == 0) eve += x + ""^"" + n + ""%"" + p;
            else if(xi.compareTo(BigInteger.ZERO) != 0 && xi.compareTo(BigInteger.ONE) != 0) eve += xi + ""*"" + x + ""^"" + n + ""%"" + p;
        }
        if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0&& eve.indexOf("")"") >= 0) pa.print(eve);
        else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            for(int i = 1;i < eve.length();i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") < 0 && eve.indexOf(""+"") < 0 &&eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 0;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually + ""%"" + p);
        }
        pw.flush();
        pa.flush();
        for(int i = 0;i < xj.length;i++) {
            if(xj[i].compareTo(BigInteger.ZERO) != 0) {
                pa.close();
                continue;
            }else {
                pb.print(""0"");
                pb.close();
            }
        }
    }
}"
21,G,Java,61632815,2023-03-31 21:33:28,一只往上爬的蚂蚁,执行出错,"import java.io.*;
import java.math.BigInteger;
import java.util.*;
public class Main{
    static int n, m, mod = (int) 1e9 + 7, maxn = 100010;
    static long ans = 0, INF = (long) 1e18;
    static Scanner sc = new Scanner(System.in);
    static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(bf);
    static PrintWriter pw = new PrintWriter(System.out);
    static PrintWriter pa = new PrintWriter(System.out);
    static PrintWriter pb = new PrintWriter(System.out);
    static long a = 1;
    static long b = 1;
    static BigInteger xi = BigInteger.ONE;
    static BigInteger sum = BigInteger.ZERO;
    static BigInteger[] xj = new BigInteger[1010];
    static int p = 1;
    static char x, y;
    static BigInteger c[][] = new BigInteger[1010][1010];
    static void pre(String s) {
            String ss = """";
            int i=1;
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            x = s.charAt(i++);
            i++;
            if(!ss.equals("""")) a=Integer.parseInt(ss);
            ss="""";
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            y=s.charAt(i++);i++;
            if(!ss.equals("""")) b=Integer.parseInt(ss);
            ss="""";
            if(s.charAt(i) != '^') n=1;
            else {
                i++;
                while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                    ss = ss+s.charAt(i);
                    i++;
                }
                n = Integer.parseInt(ss);ss="""";
            }
            i++;
            while(i< s.length() &&s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            p = Integer.parseInt(ss);
        }

    static long pow(long a,long n) {
        if(n == 0 || a == 1) return 1;
        long sum = 1;
        for(int j = 0;j < n;j++) {
            a = a % p;
            sum = sum * a % p;
        }
        return sum;
    }

    //求C(n,n-1,........)阶乘
    static BigInteger C(int n, int m) {
        if (n == m || m == 0) return BigInteger.ONE;
        if (c[n][m] != null) return c[n][m];
        BigInteger up = BigInteger.valueOf(1);
        BigInteger down = BigInteger.valueOf(1);
        for (int i = n; i > n - m; i--) up = up.multiply(BigInteger.valueOf(i));
        for (int i = m; i > 0; i--) down = down.multiply(BigInteger.valueOf(i));
        c[n][m] = up.divide(down).mod(BigInteger.valueOf(p)) ;
        c[n][n - m] = c[n][n - m];
        return c[n][m];
    }

    //n >= m,C(n,m),该方法求变量前的系数
    static void solve(long q, long e, int n, int i) {
        if (i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(q, n) % p)).mod(BigInteger.valueOf(p));
        else if (n - i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(e, i) % p)).mod(BigInteger.valueOf(p));
        else xi = (C(n, n - i).multiply(BigInteger.valueOf(pow(q, n - i) % p)).multiply(BigInteger.valueOf(pow(e, i) % p))).mod(BigInteger.valueOf(p));
    }

    public static void main(String[] args) throws ArithmeticException{
        String s = sc.nextLine();
        String eve = """";
        pre(s);
        mod = p;
        pa.print(s + "" = "");
        if (x != y) {
            eve += ""("";
            for (int i = 0; i <= n; i++) {
                solve(a, b, n, i);
                xj[i] = xi;
                if (xi.compareTo(BigInteger.ZERO) == 0) continue;
                if (xi.compareTo(BigInteger.ONE) != 0) {
                    if (n != 1) {
                        if (i == 0) eve += xi + ""*"" + x + ""^"" + n + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += xi + ""*"" + x + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""*"" + y + ""+"";
                        }
                    }
                }
                if (xi.compareTo(BigInteger.valueOf(1)) == 0) {
                    if (n != 1) {
                        if (i == 0) eve += x + ""^"" + n + ""+"";
                        else if (i == n) eve += y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += x + ""+"";
                        else if (i == n) eve += y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""*"" + y + ""+"";
                        }
                    }
                }
            }
        } else {
            eve += ""("";
            a = a + b;
            xi = BigInteger.valueOf(pow(a, n) % p);
            xj[0] = xi;
            if(xi.compareTo(BigInteger.ONE) == 0) eve += x + ""^"" + n + ""%"" + p;
            else if(xi.compareTo(BigInteger.ZERO) != 0 && xi.compareTo(BigInteger.ONE) != 0) eve += xi + ""*"" + x + ""^"" + n + ""%"" + p;
        }
        if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0&& eve.indexOf("")"") >= 0) pa.print(eve);
        else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            for(int i = 1;i < eve.length();i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") < 0 && eve.indexOf(""+"") < 0 &&eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 0;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually + ""%"" + p);
        }
        pw.flush();
        pa.flush();
        for(int i = 0;i < 1000;i++) {
            if(xj[i].compareTo(BigInteger.ZERO) != 0) {
                pa.close();
                continue;
            }else {
                pb.print(""0"");
                pb.close();
            }
        }
    }
}"
22,G,Java,61632835,2023-03-31 21:34:14,一只往上爬的蚂蚁,执行出错,"import java.io.*;
import java.math.BigInteger;
import java.util.*;
public class Main{
    static int n, m, mod = (int) 1e9 + 7, maxn = 100010;
    static long ans = 0, INF = (long) 1e18;
    static Scanner sc = new Scanner(System.in);
    static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(bf);
    static PrintWriter pw = new PrintWriter(System.out);
    static PrintWriter pa = new PrintWriter(System.out);
    static PrintWriter pb = new PrintWriter(System.out);
    static long a = 1;
    static long b = 1;
    static BigInteger xi = BigInteger.ONE;
    static BigInteger sum = BigInteger.ZERO;
    static BigInteger[] xj = new BigInteger[1010];
    static int p = 1;
    static char x, y;
    static BigInteger c[][] = new BigInteger[1010][1010];
    static void pre(String s) {
            String ss = """";
            int i=1;
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            x = s.charAt(i++);
            i++;
            if(!ss.equals("""")) a=Integer.parseInt(ss);
            ss="""";
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            y=s.charAt(i++);i++;
            if(!ss.equals("""")) b=Integer.parseInt(ss);
            ss="""";
            if(s.charAt(i) != '^') n=1;
            else {
                i++;
                while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                    ss = ss+s.charAt(i);
                    i++;
                }
                n = Integer.parseInt(ss);ss="""";
            }
            i++;
            while(i< s.length() &&s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            p = Integer.parseInt(ss);
        }

    static long pow(long a,long n) {
        if(n == 0 || a == 1) return 1;
        long sum = 1;
        for(int j = 0;j < n;j++) {
            a = a % p;
            sum = sum * a % p;
        }
        return sum;
    }

    //求C(n,n-1,........)阶乘
    static BigInteger C(int n, int m) {
        if (n == m || m == 0) return BigInteger.ONE;
        if (c[n][m] != null) return c[n][m];
        BigInteger up = BigInteger.valueOf(1);
        BigInteger down = BigInteger.valueOf(1);
        for (int i = n; i > n - m; i--) up = up.multiply(BigInteger.valueOf(i));
        for (int i = m; i > 0; i--) down = down.multiply(BigInteger.valueOf(i));
        c[n][m] = up.divide(down).mod(BigInteger.valueOf(p)) ;
        c[n][n - m] = c[n][n - m];
        return c[n][m];
    }

    //n >= m,C(n,m),该方法求变量前的系数
    static void solve(long q, long e, int n, int i) {
        if (i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(q, n) % p)).mod(BigInteger.valueOf(p));
        else if (n - i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(e, i) % p)).mod(BigInteger.valueOf(p));
        else xi = (C(n, n - i).multiply(BigInteger.valueOf(pow(q, n - i) % p)).multiply(BigInteger.valueOf(pow(e, i) % p))).mod(BigInteger.valueOf(p));
    }

    public static void main(String[] args) throws ArithmeticException{
        String s = sc.nextLine();
        String eve = """";
        pre(s);
        mod = p;
        pa.print(s + "" = "");
        if (x != y) {
            eve += ""("";
            for (int i = 0; i <= n; i++) {
                solve(a, b, n, i);
                xj[i] = xi;
                if (xi.compareTo(BigInteger.ZERO) == 0) continue;
                if (xi.compareTo(BigInteger.ONE) != 0) {
                    if (n != 1) {
                        if (i == 0) eve += xi + ""*"" + x + ""^"" + n + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += xi + ""*"" + x + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""*"" + y + ""+"";
                        }
                    }
                }
                if (xi.compareTo(BigInteger.valueOf(1)) == 0) {
                    if (n != 1) {
                        if (i == 0) eve += x + ""^"" + n + ""+"";
                        else if (i == n) eve += y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += x + ""+"";
                        else if (i == n) eve += y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""*"" + y + ""+"";
                        }
                    }
                }
            }
        } else {
            eve += ""("";
            a = a + b;
            xi = BigInteger.valueOf(pow(a, n) % p);
            xj[0] = xi;
            if(xi.compareTo(BigInteger.ONE) == 0) eve += x + ""^"" + n + ""%"" + p;
            else if(xi.compareTo(BigInteger.ZERO) != 0 && xi.compareTo(BigInteger.ONE) != 0) eve += xi + ""*"" + x + ""^"" + n + ""%"" + p;
        }
        if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0&& eve.indexOf("")"") >= 0) pa.print(eve);
        else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            for(int i = 1;i < eve.length();i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") < 0 && eve.indexOf(""+"") < 0 &&eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 0;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually + ""%"" + p);
        }
        pw.flush();
        pa.flush();
        for(int i = 0;i < n;i++) {
            if(xj[i].compareTo(BigInteger.ZERO) != 0) {
                pa.close();
                continue;
            }else {
                pb.print(""0"");
                pb.close();
            }
        }
    }
}"
23,G,Java,61632924,2023-03-31 21:40:25,一只往上爬的蚂蚁,答案错误,"import java.io.*;
import java.math.BigInteger;
import java.util.*;
public class Main{
    static int n, m, mod = (int) 1e9 + 7, maxn = 100010;
    static long ans = 0, INF = (long) 1e18;
    static Scanner sc = new Scanner(System.in);
    static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(bf);
    static PrintWriter pw = new PrintWriter(System.out);
    static PrintWriter pa = new PrintWriter(System.out);
    static PrintWriter pb = new PrintWriter(System.out);
    static long a = 1;
    static long b = 1;
    static BigInteger xi = BigInteger.ONE;
    static BigInteger sum = BigInteger.ZERO;
    static BigInteger[] xj = new BigInteger[1010];
    static int p = 1;
    static char x, y;
    static BigInteger c[][] = new BigInteger[1010][1010];
    static void pre(String s) {
            String ss = """";
            int i=1;
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            x = s.charAt(i++);
            i++;
            if(!ss.equals("""")) a=Integer.parseInt(ss);
            ss="""";
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            y=s.charAt(i++);i++;
            if(!ss.equals("""")) b=Integer.parseInt(ss);
            ss="""";
            if(s.charAt(i) != '^') n=1;
            else {
                i++;
                while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                    ss = ss+s.charAt(i);
                    i++;
                }
                n = Integer.parseInt(ss);ss="""";
            }
            i++;
            while(i< s.length() && s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            p = Integer.parseInt(ss);
        }

    static long pow(long a,long n) {
        if(n == 0 || a == 1) return 1;
        long sum = 1;
        for(int j = 0;j < n;j++) {
            a = a % p;
            sum = sum * a % p;
        }
        return sum;
    }

    //求C(n,n-1,........)阶乘
    static BigInteger C(int n, int m) {
        if (n == m || m == 0) return BigInteger.ONE;
        if (c[n][m] != null) return c[n][m];
        BigInteger up = BigInteger.valueOf(1);
        BigInteger down = BigInteger.valueOf(1);
        for (int i = n; i > n - m; i--) up = up.multiply(BigInteger.valueOf(i));
        for (int i = m; i > 0; i--) down = down.multiply(BigInteger.valueOf(i));
        c[n][m] = up.divide(down).mod(BigInteger.valueOf(p)) ;
        c[n][n - m] = c[n][n - m];
        return c[n][m];
    }

    //n >= m,C(n,m),该方法求变量前的系数
    static void solve(long q, long e, int n, int i) {
        if (i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(q, n) % p)).mod(BigInteger.valueOf(p));
        else if (n - i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(e, i) % p)).mod(BigInteger.valueOf(p));
        else xi = (C(n, n - i).multiply(BigInteger.valueOf(pow(q, n - i) % p)).multiply(BigInteger.valueOf(pow(e, i) % p))).mod(BigInteger.valueOf(p));
    }

    public static void main(String[] args) throws ArithmeticException{
        String s = sc.nextLine();
        String eve = """";
        pre(s);
        mod = p;
        pa.print(s + "" = "");
        if (x != y) {
            eve += ""("";
            for (int i = 0; i <= n; i++) {
                solve(a, b, n, i);
                xj[i] = xi;
                if (xi.compareTo(BigInteger.ZERO) == 0) continue;
                if (xi.compareTo(BigInteger.ONE) != 0) {
                    if (n != 1) {
                        if (i == 0) eve += xi + ""*"" + x + ""^"" + n + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += xi + ""*"" + x + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""*"" + y + ""+"";
                        }
                    }
                }
                if (xi.compareTo(BigInteger.valueOf(1)) == 0) {
                    if (n != 1) {
                        if (i == 0) eve += x + ""^"" + n + ""+"";
                        else if (i == n) eve += y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += x + ""+"";
                        else if (i == n) eve += y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""*"" + y + ""+"";
                        }
                    }
                }
            }
        } else {
            eve += ""("";
            a = a + b;
            xi = BigInteger.valueOf(pow(a, n) % p);
            xj[0] = xi;
            if(xi.compareTo(BigInteger.ONE) == 0) eve += x + ""^"" + n + ""%"" + p;
            else if(xi.compareTo(BigInteger.ZERO) == 0) pa.print(""0"");
            else eve += xi + ""*"" + x + ""^"" + n + ""%"" + p;
        }
        if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0&& eve.indexOf("")"") >= 0) pa.print(eve);
        else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            if(eve.length() == 1) pa.print(""0"");
            else {
                for (int i = 1; i < eve.length(); i++) eventually += eve.charAt(i);
                pa.print(eventually);
            }
        }else if(eve.indexOf(""("") < 0 && eve.indexOf(""+"") < 0 &&eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 0;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually + ""%"" + p);
        }
        pw.flush();
        pa.close();
    }
}"
24,G,Java,61633018,2023-03-31 21:45:58,一只往上爬的蚂蚁,答案错误,"import java.io.*;
import java.math.BigInteger;
import java.util.*;
public class Main{
    static int n, m, mod = (int) 1e9 + 7, maxn = 100010;
    static long ans = 0, INF = (long) 1e18;
    static Scanner sc = new Scanner(System.in);
    static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(bf);
    static PrintWriter pw = new PrintWriter(System.out);
    static PrintWriter pa = new PrintWriter(System.out);
    static PrintWriter pb = new PrintWriter(System.out);
    static long a = 1;
    static long b = 1;
    static BigInteger xi = BigInteger.ONE;
    static BigInteger sum = BigInteger.ZERO;
    static BigInteger[] xj = new BigInteger[1010];
    static int p = 1;
    static char x, y;
    static BigInteger c[][] = new BigInteger[1010][1010];
    static void pre(String s) {
            String ss = """";
            int i=1;
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            x = s.charAt(i++);
            i++;
            if(!ss.equals("""")) a=Integer.parseInt(ss);
            ss="""";
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            y=s.charAt(i++);i++;
            if(!ss.equals("""")) b=Integer.parseInt(ss);
            ss="""";
            if(s.charAt(i) != '^') n=1;
            else {
                i++;
                while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                    ss = ss+s.charAt(i);
                    i++;
                }
                n = Integer.parseInt(ss);ss="""";
            }
            i++;
            while(i< s.length() && s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            p = Integer.parseInt(ss);
        }

    static long pow(long a,long n) {
        if(n == 0 || a == 1) return 1;
        long sum = 1;
        for(int j = 0;j < n;j++) {
            a = a % p;
            sum = sum * a % p;
        }
        return sum;
    }

    //求C(n,n-1,........)阶乘
    static BigInteger C(int n, int m) {
        if (n == m || m == 0) return BigInteger.ONE;
        if (c[n][m] != null) return c[n][m];
        BigInteger up = BigInteger.valueOf(1);
        BigInteger down = BigInteger.valueOf(1);
        for (int i = n; i > n - m; i--) up = up.multiply(BigInteger.valueOf(i));
        for (int i = m; i > 0; i--) down = down.multiply(BigInteger.valueOf(i));
        c[n][m] = up.divide(down).mod(BigInteger.valueOf(p)) ;
        c[n][n - m] = c[n][n - m];
        return c[n][m];
    }

    //n >= m,C(n,m),该方法求变量前的系数
    static void solve(long q, long e, int n, int i) {
        if (i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(q, n) % p)).mod(BigInteger.valueOf(p));
        else if (n - i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(e, i) % p)).mod(BigInteger.valueOf(p));
        else xi = (C(n, n - i).multiply(BigInteger.valueOf(pow(q, n - i) % p)).multiply(BigInteger.valueOf(pow(e, i) % p))).mod(BigInteger.valueOf(p));
    }

    public static void main(String[] args) throws ArithmeticException{
        String s = sc.nextLine();
        String eve = """";
        pre(s);
        mod = p;
        pa.print(s + "" = "");
        if (x != y) {
            eve += ""("";
            for (int i = 0; i <= n; i++) {
                solve(a, b, n, i);
                xj[i] = xi;
                if (xi.compareTo(BigInteger.ZERO) == 0) continue;
                if (xi.compareTo(BigInteger.ONE) != 0) {
                    if (n != 1) {
                        if (i == 0) eve += xi + ""*"" + x + ""^"" + n + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += xi + ""*"" + x + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""*"" + y + ""+"";
                        }
                    }
                }
                if (xi.compareTo(BigInteger.valueOf(1)) == 0) {
                    if (n != 1) {
                        if (i == 0) eve += x + ""^"" + n + ""+"";
                        else if (i == n) eve += y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += x + ""+"";
                        else if (i == n) eve += y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""*"" + y + ""+"";
                        }
                    }
                }
            }
        } else {
            eve += ""("";
            a = a + b;
            xi = BigInteger.valueOf(pow(a, n) % p);
            xj[0] = xi;
            if(xi.compareTo(BigInteger.ONE) == 0) eve += x + ""^"" + n + ""%"" + p;
            else if (xi.compareTo(BigInteger.ZERO) != 0 && xi.compareTo(BigInteger.ONE) != 0)eve += xi + ""*"" + x + ""^"" + n + ""%"" + p;
        }
        if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0&& eve.indexOf("")"") >= 0) pa.print(eve);
        else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            if(eve.indexOf(""("") == 0) pa.print(""0"");
            else {
                for (int i = 1; i < eve.length(); i++) eventually += eve.charAt(i);
                pa.print(eventually);
            }
        }else if(eve.indexOf(""("") < 0 && eve.indexOf(""+"") < 0 &&eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 0;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually + ""%"" + p);
        }
        pw.flush();
        pa.close();
    }
}"
25,G,Java,61633105,2023-03-31 21:48:25,一只往上爬的蚂蚁,答案错误,"import java.io.*;
import java.math.BigInteger;
import java.util.*;
public class Main{
    static int n, m, mod = (int) 1e9 + 7, maxn = 100010;
    static long ans = 0, INF = (long) 1e18;
    static Scanner sc = new Scanner(System.in);
    static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(bf);
    static PrintWriter pw = new PrintWriter(System.out);
    static PrintWriter pa = new PrintWriter(System.out);
    static PrintWriter pb = new PrintWriter(System.out);
    static long a = 1;
    static long b = 1;
    static BigInteger xi = BigInteger.ONE;
    static BigInteger sum = BigInteger.ZERO;
    static BigInteger[] xj = new BigInteger[1010];
    static int p = 1;
    static char x, y;
    static BigInteger c[][] = new BigInteger[1010][1010];
    static void pre(String s) {
            String ss = """";
            int i=1;
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            x = s.charAt(i++);
            i++;
            if(!ss.equals("""")) a=Integer.parseInt(ss);
            ss="""";
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            y=s.charAt(i++);i++;
            if(!ss.equals("""")) b=Integer.parseInt(ss);
            ss="""";
            if(s.charAt(i) != '^') n=1;
            else {
                i++;
                while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                    ss = ss+s.charAt(i);
                    i++;
                }
                n = Integer.parseInt(ss);ss="""";
            }
            i++;
            while(i< s.length() && s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            p = Integer.parseInt(ss);
        }

    static long pow(long a,long n) {
        if(n == 0 || a == 1) return 1;
        long sum = 1;
        for(int j = 0;j < n;j++) {
            a = a % p;
            sum = sum * a % p;
        }
        return sum;
    }

    //求C(n,n-1,........)阶乘
    static BigInteger C(int n, int m) {
        if (n == m || m == 0) return BigInteger.ONE;
        if (c[n][m] != null) return c[n][m];
        BigInteger up = BigInteger.valueOf(1);
        BigInteger down = BigInteger.valueOf(1);
        for (int i = n; i > n - m; i--) up = up.multiply(BigInteger.valueOf(i));
        for (int i = m; i > 0; i--) down = down.multiply(BigInteger.valueOf(i));
        c[n][m] = up.divide(down).mod(BigInteger.valueOf(p)) ;
        c[n][n - m] = c[n][n - m];
        return c[n][m];
    }

    //n >= m,C(n,m),该方法求变量前的系数
    static void solve(long q, long e, int n, int i) {
        if (i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(q, n) % p)).mod(BigInteger.valueOf(p));
        else if (n - i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(e, i) % p)).mod(BigInteger.valueOf(p));
        else xi = (C(n, n - i).multiply(BigInteger.valueOf(pow(q, n - i) % p)).multiply(BigInteger.valueOf(pow(e, i) % p))).mod(BigInteger.valueOf(p));
    }

    public static void main(String[] args) throws ArithmeticException{
        String s = sc.nextLine();
        String eve = """";
        pre(s);
        mod = p;
        pa.print(s + "" = "");
        if (x != y) {
            eve += ""("";
            for (int i = 0; i <= n; i++) {
                solve(a, b, n, i);
                xj[i] = xi;
                if (xi.compareTo(BigInteger.ZERO) == 0) continue;
                if (xi.compareTo(BigInteger.ONE) != 0) {
                    if (n != 1) {
                        if (i == 0) eve += xi + ""*"" + x + ""^"" + n + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += xi + ""*"" + x + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""*"" + y + ""+"";
                        }
                    }
                }
                if (xi.compareTo(BigInteger.valueOf(1)) == 0) {
                    if (n != 1) {
                        if (i == 0) eve += x + ""^"" + n + ""+"";
                        else if (i == n) eve += y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += x + ""+"";
                        else if (i == n) eve += y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""*"" + y + ""+"";
                        }
                    }
                }
            }
        } else {
            eve += ""("";
            a = a + b;
            xi = BigInteger.valueOf(pow(a, n) % p);
            xj[0] = xi;
            if(xi.compareTo(BigInteger.ONE) == 0) eve += x + ""^"" + n + ""%"" + p;
            else if (xi.compareTo(BigInteger.ZERO) != 0 && xi.compareTo(BigInteger.ONE) != 0)eve += xi + ""*"" + x + ""^"" + n + ""%"" + p;
        }
        if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0&& eve.indexOf("")"") >= 0) pa.print(eve);
        else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            if(eve.indexOf(""("") == 0 && eve.length() == 1) pa.print(""0"");
            else {
                for (int i = 1; i < eve.length(); i++) eventually += eve.charAt(i);
                pa.print(eventually);
            }
        }else if(eve.indexOf(""("") < 0 && eve.indexOf(""+"") < 0 &&eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 0;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually + ""%"" + p);
        }
        pw.flush();
        pa.close();
    }
}"
26,G,Java,61633189,2023-03-31 21:52:34,一只往上爬的蚂蚁,答案错误,"import java.io.*;
import java.math.BigInteger;
import java.util.*;
public class Main{
    static int n, m, mod = (int) 1e9 + 7, maxn = 100010;
    static long ans = 0, INF = (long) 1e18;
    static Scanner sc = new Scanner(System.in);
    static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(bf);
    static PrintWriter pw = new PrintWriter(System.out);
    static PrintWriter pa = new PrintWriter(System.out);
    static PrintWriter pb = new PrintWriter(System.out);
    static long a = 1;
    static long b = 1;
    static BigInteger xi = BigInteger.ONE;
    static BigInteger sum = BigInteger.ZERO;
    static BigInteger[] xj = new BigInteger[1010];
    static int p = 1;
    static char x, y;
    static BigInteger c[][] = new BigInteger[1010][1010];
    static void pre(String s) {
            String ss = """";
            int i=1;
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            x = s.charAt(i++);
            i++;
            if(!ss.equals("""")) a=Integer.parseInt(ss);
            ss="""";
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            y=s.charAt(i++);i++;
            if(!ss.equals("""")) b=Integer.parseInt(ss);
            ss="""";
            if(s.charAt(i) != '^') n=1;
            else {
                i++;
                while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                    ss = ss+s.charAt(i);
                    i++;
                }
                n = Integer.parseInt(ss);ss="""";
            }
            i++;
            while(i< s.length() && s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            p = Integer.parseInt(ss);
        }

    static long pow(long a,long n) {
        if(n == 0 || a == 1) return 1;
        long sum = 1;
        for(int j = 0;j < n;j++) {
            a = a % p;
            sum = sum * a % p;
        }
        return sum;
    }

    //求C(n,n-1,........)阶乘
    static BigInteger C(int n, int m) {
        if (n == m || m == 0) return BigInteger.ONE;
        if (c[n][m] != null) return c[n][m];
        BigInteger up = BigInteger.valueOf(1);
        BigInteger down = BigInteger.valueOf(1);
        for (int i = n; i > n - m; i--) up = up.multiply(BigInteger.valueOf(i));
        for (int i = m; i > 0; i--) down = down.multiply(BigInteger.valueOf(i));
        c[n][m] = up.divide(down).mod(BigInteger.valueOf(p)) ;
        c[n][n - m] = c[n][n - m];
        return c[n][m];
    }

    //n >= m,C(n,m),该方法求变量前的系数
    static void solve(long q, long e, int n, int i) {
        if (i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(q, n) % p)).mod(BigInteger.valueOf(p));
        else if (n - i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(e, i) % p)).mod(BigInteger.valueOf(p));
        else xi = (C(n, n - i).multiply(BigInteger.valueOf(pow(q, n - i) % p)).multiply(BigInteger.valueOf(pow(e, i) % p))).mod(BigInteger.valueOf(p));
    }

    public static void main(String[] args) throws ArithmeticException{
        String s = sc.nextLine();
        String eve = """";
        pre(s);
        mod = p;
        pa.print(s + "" = "");
        if (x != y) {
            eve += ""("";
            for (int i = 0; i <= n; i++) {
                solve(a, b, n, i);
                xj[i] = xi;
                if (xi.compareTo(BigInteger.ZERO) == 0) continue;
                if (xi.compareTo(BigInteger.ONE) != 0) {
                    if (n != 1) {
                        if (i == 0) eve += xi + ""*"" + x + ""^"" + n + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += xi + ""*"" + x + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""*"" + y + ""+"";
                        }
                    }
                }
                if (xi.compareTo(BigInteger.valueOf(1)) == 0) {
                    if (n != 1) {
                        if (i == 0) eve += x + ""^"" + n + ""+"";
                        else if (i == n) eve += y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += x + ""+"";
                        else if (i == n) eve += y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""*"" + y + ""+"";
                        }
                    }
                }
            }
        } else {
            eve += ""("";
            a = a + b;
            xi = BigInteger.valueOf(pow(a, n) % p);
            xj[0] = xi;
            if (n != 1) {
                if (xi.compareTo(BigInteger.ONE) == 0) eve += x + ""^"" + n + ""%"" + p;
//            else if(xi.compareTo(BigInteger.ZERO) == 0) pa.print(""0"");
                else if (xi.compareTo(BigInteger.ZERO) != 0 && xi.compareTo(BigInteger.ONE) != 0)
                    eve += xi + ""*"" + x + ""^"" + n + ""%"" + p;
            }else {
                if (xi.compareTo(BigInteger.ONE) == 0) eve += x + ""%"" + p;
//            else if(xi.compareTo(BigInteger.ZERO) == 0) pa.print(""0"");
                else if (xi.compareTo(BigInteger.ZERO) != 0 && xi.compareTo(BigInteger.ONE) != 0)
                    eve += xi + ""*"" + x + ""%"" + p;
            }
        }
        if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0&& eve.indexOf("")"") >= 0) pa.print(eve);
        else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            if(eve.indexOf(""("") == 0 && eve.length() == 1) pa.print(""0"");
            else {
                for (int i = 1; i < eve.length(); i++) eventually += eve.charAt(i);
                pa.print(eventually);
            }
        }else if(eve.indexOf(""("") < 0 && eve.indexOf(""+"") < 0 &&eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 0;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually + ""%"" + p);
        }
        pw.flush();
        pa.close();
    }
}"
27,G,Java,61633572,2023-03-31 22:20:09,一只往上爬的蚂蚁,答案错误,"import java.io.*;
import java.math.BigInteger;
import java.util.*;
public class Main{
    static int n, m, mod = (int) 1e9 + 7, maxn = 100010;
    static long ans = 0, INF = (long) 1e18;
    static Scanner sc = new Scanner(System.in);
    static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(bf);
    static PrintWriter pw = new PrintWriter(System.out);
    static PrintWriter pa = new PrintWriter(System.out);
    static PrintWriter pb = new PrintWriter(System.out);
    static long a = 1;
    static long b = 1;
    static BigInteger xi = BigInteger.ONE;
    static BigInteger sum = BigInteger.ZERO;
    static BigInteger[] xj = new BigInteger[1010];
    static int p = 1;
    static char x, y;
    static BigInteger c[][] = new BigInteger[1010][1010];
    static void pre(String s) {
            String ss = """";
            int i=1;
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            x = s.charAt(i++);
            i++;
            if(!ss.equals("""")) a=Integer.parseInt(ss);
            ss="""";
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            y=s.charAt(i++);i++;
            if(!ss.equals("""")) b=Integer.parseInt(ss);
            ss="""";
            if(s.charAt(i) != '^') n=1;
            else {
                i++;
                while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                    ss = ss+s.charAt(i);
                    i++;
                }
                n = Integer.parseInt(ss);ss="""";
            }
            i++;
            while(i< s.length() && s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            p = Integer.parseInt(ss);
        }

    static long pow(long a,long n) {
        if(n == 0 || a == 1) return 1;
        long sum = 1;
        for(int j = 0;j < n;j++) {
            a = a % p;
            sum = sum * a % p;
        }
        return sum;
    }

    //求C(n,n-1,........)阶乘
    static BigInteger C(int n, int m) {
        if (n == m || m == 0) return BigInteger.ONE;
        if (c[n][m] != null) return c[n][m];
        BigInteger up = BigInteger.valueOf(1);
        BigInteger down = BigInteger.valueOf(1);
        for (int i = n; i > n - m; i--) up = up.multiply(BigInteger.valueOf(i));
        for (int i = m; i > 0; i--) down = down.multiply(BigInteger.valueOf(i));
        c[n][m] = up.divide(down).mod(BigInteger.valueOf(p)) ;
        c[n][n - m] = c[n][n - m];
        return c[n][m];
    }

    //n >= m,C(n,m),该方法求变量前的系数
    static void solve(long q, long e, int n, int i) {
        if (i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(q, n) % p)).mod(BigInteger.valueOf(p));
        else if (n - i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(e, i) % p)).mod(BigInteger.valueOf(p));
        else xi = (C(n, n - i).multiply(BigInteger.valueOf(pow(q, n - i) % p)).multiply(BigInteger.valueOf(pow(e, i) % p))).mod(BigInteger.valueOf(p));
    }

    public static void main(String[] args) throws ArithmeticException{
        String s = sc.nextLine();
        String eve = """";
        pre(s);
        mod = p;
        pa.print(s + "" = "");
        if (x != y) {
            eve += ""("";
            for (int i = 0; i <= n; i++) {
                solve(a, b, n, i);
                xj[i] = xi;
                if (xi.compareTo(BigInteger.ZERO) == 0) continue;
                if (xi.compareTo(BigInteger.ONE) != 0) {
                    if (n != 1) {
                        if (i == 0) eve += xi + ""*"" + x + ""^"" + n + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += xi + ""*"" + x + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""*"" + y + ""+"";
                        }
                    }
                }
                if (xi.compareTo(BigInteger.valueOf(1)) == 0) {
                    if (n != 1) {
                        if (i == 0) eve += x + ""^"" + n + ""+"";
                        else if (i == n) eve += y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += x + ""+"";
                        else if (i == n) eve += y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""*"" + y + ""+"";
                        }
                    }
                }
            }
        } else {
            eve += ""("";
            a = a + b;
            xi = BigInteger.valueOf(pow(a, n) % p);
            xj[0] = xi;
            if (n != 1) {
                if (xi.compareTo(BigInteger.ONE) == 0) eve += x + ""^"" + n + ""%"" + p;
//            else if(xi.compareTo(BigInteger.ZERO) == 0) pa.print(""0"");
                else if (xi.compareTo(BigInteger.ZERO) != 0 && xi.compareTo(BigInteger.ONE) != 0)
                    eve += xi + ""*"" + x + ""^"" + n + ""%"" + p;
            }else {
                if (xi.compareTo(BigInteger.ONE) == 0) eve += x + ""%"" + p;
//            else if(xi.compareTo(BigInteger.ZERO) == 0) pa.print(""0"");
                else if (xi.compareTo(BigInteger.ZERO) != 0 && xi.compareTo(BigInteger.ONE) != 0)
                    eve += xi + ""*"" + x + ""%"" + p;
            }
        }
        if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0&& eve.indexOf("")"") >= 0) pa.print(eve);
        else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            if(eve.indexOf(""("") == 0 && eve.length() == 1) pa.print(""0"");
            else {
                for (int i = 1; i < eve.length(); i++) eventually += eve.charAt(i);
                pa.print(eventually);
            }
        }else if(eve.indexOf(""("") < 0 && eve.indexOf(""+"") < 0 &&eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 0;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            if(eve.indexOf(""+"") < eve.length()) {
                for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
                pa.print(""("" + eventually + "")%"" + p);
            }else {
                for (int i = 1; i < eve.length() - 1; i++) eventually += eve.charAt(i);
                pa.print(eventually + ""%"" + p);
            }
        }
        pw.flush();
        pa.close();
    }
}"
28,G,Java,61633588,2023-03-31 22:21:46,一只往上爬的蚂蚁,答案错误,"import java.io.*;
import java.math.BigInteger;
import java.util.*;
public class Main{
    static int n, m, mod = (int) 1e9 + 7, maxn = 100010;
    static long ans = 0, INF = (long) 1e18;
    static Scanner sc = new Scanner(System.in);
    static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(bf);
    static PrintWriter pw = new PrintWriter(System.out);
    static PrintWriter pa = new PrintWriter(System.out);
    static PrintWriter pb = new PrintWriter(System.out);
    static long a = 1;
    static long b = 1;
    static BigInteger xi = BigInteger.ONE;
    static BigInteger sum = BigInteger.ZERO;
    static BigInteger[] xj = new BigInteger[1010];
    static int p = 1;
    static char x, y;
    static BigInteger c[][] = new BigInteger[1010][1010];
    static void pre(String s) {
            String ss = """";
            int i=1;
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            x = s.charAt(i++);
            i++;
            if(!ss.equals("""")) a=Integer.parseInt(ss);
            ss="""";
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            y=s.charAt(i++);i++;
            if(!ss.equals("""")) b=Integer.parseInt(ss);
            ss="""";
            if(s.charAt(i) != '^') n=1;
            else {
                i++;
                while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                    ss = ss+s.charAt(i);
                    i++;
                }
                n = Integer.parseInt(ss);ss="""";
            }
            i++;
            while(i< s.length() && s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            p = Integer.parseInt(ss);
        }

    static long pow(long a,long n) {
        if(n == 0 || a == 1) return 1;
        long sum = 1;
        for(int j = 0;j < n;j++) {
            a = a % p;
            sum = sum * a % p;
        }
        return sum;
    }

    //求C(n,n-1,........)阶乘
    static BigInteger C(int n, int m) {
        if (n == m || m == 0) return BigInteger.ONE;
        if (c[n][m] != null) return c[n][m];
        BigInteger up = BigInteger.valueOf(1);
        BigInteger down = BigInteger.valueOf(1);
        for (int i = n; i > n - m; i--) up = up.multiply(BigInteger.valueOf(i));
        for (int i = m; i > 0; i--) down = down.multiply(BigInteger.valueOf(i));
        c[n][m] = up.divide(down).mod(BigInteger.valueOf(p)) ;
        c[n][n - m] = c[n][n - m];
        return c[n][m];
    }

    //n >= m,C(n,m),该方法求变量前的系数
    static void solve(long q, long e, int n, int i) {
        if (i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(q, n) % p)).mod(BigInteger.valueOf(p));
        else if (n - i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(e, i) % p)).mod(BigInteger.valueOf(p));
        else xi = (C(n, n - i).multiply(BigInteger.valueOf(pow(q, n - i) % p)).multiply(BigInteger.valueOf(pow(e, i) % p))).mod(BigInteger.valueOf(p));
    }

    public static void main(String[] args) throws ArithmeticException{
        String s = sc.nextLine();
        String eve = """";
        pre(s);
        mod = p;
        pa.print(s + "" = "");
        if (x != y) {
            eve += ""("";
            for (int i = 0; i <= n; i++) {
                solve(a, b, n, i);
                xj[i] = xi;
                if (xi.compareTo(BigInteger.ZERO) == 0) continue;
                if (xi.compareTo(BigInteger.ONE) != 0) {
                    if (n != 1) {
                        if (i == 0) eve += xi + ""*"" + x + ""^"" + n + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += xi + ""*"" + x + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""*"" + y + ""+"";
                        }
                    }
                }
                if (xi.compareTo(BigInteger.valueOf(1)) == 0) {
                    if (n != 1) {
                        if (i == 0) eve += x + ""^"" + n + ""+"";
                        else if (i == n) eve += y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += x + ""+"";
                        else if (i == n) eve += y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""*"" + y + ""+"";
                        }
                    }
                }
            }
        } else {
            eve += ""("";
            a = a + b;
            xi = BigInteger.valueOf(pow(a, n) % p);
            xj[0] = xi;
            if (n != 1) {
                if (xi.compareTo(BigInteger.ONE) == 0) eve += x + ""^"" + n + ""%"" + p;
//            else if(xi.compareTo(BigInteger.ZERO) == 0) pa.print(""0"");
                else if (xi.compareTo(BigInteger.ZERO) != 0 && xi.compareTo(BigInteger.ONE) != 0)
                    eve += xi + ""*"" + x + ""^"" + n + ""%"" + p;
            }else {
                if (xi.compareTo(BigInteger.ONE) == 0) eve += x + ""%"" + p;
//            else if(xi.compareTo(BigInteger.ZERO) == 0) pa.print(""0"");
                else if (xi.compareTo(BigInteger.ZERO) != 0 && xi.compareTo(BigInteger.ONE) != 0)
                    eve += xi + ""*"" + x + ""%"" + p;
            }
        }
        if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0&& eve.indexOf("")"") >= 0) pa.print(eve);
        else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            if(eve.indexOf(""("") == 0 && eve.length() == 1) pa.print(""0"");
            else {
                for (int i = 1; i < eve.length(); i++) eventually += eve.charAt(i);
                pa.print(eventually);
            }
        }else if(eve.indexOf(""("") < 0 && eve.indexOf(""+"") < 0 &&eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 0;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            if(eve.indexOf(""+"") < eve.length() - 1) {
                for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
                pa.print(""("" + eventually + "")%"" + p);
            }else {
                for (int i = 1; i < eve.length() - 1; i++) eventually += eve.charAt(i);
                pa.print(eventually + ""%"" + p);
            }
        }
        pw.flush();
        pa.close();
    }
}"
29,G,Java,61633708,2023-03-31 22:31:49,一只往上爬的蚂蚁,答案错误,"import java.io.*;
import java.math.BigInteger;
import java.util.*;
public class Main{
    static int n, m, mod = (int) 1e9 + 7, maxn = 100010;
    static long ans = 0, INF = (long) 1e18;
    static Scanner sc = new Scanner(System.in);
    static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(bf);
    static PrintWriter pw = new PrintWriter(System.out);
    static PrintWriter pa = new PrintWriter(System.out);
    static PrintWriter pb = new PrintWriter(System.out);
    static long a = 1;
    static long b = 1;
    static BigInteger xi = BigInteger.ONE;
    static BigInteger sum = BigInteger.ZERO;
    static BigInteger[] xj = new BigInteger[1010];
    static int p = 1;
    static char x, y;
    static BigInteger c[][] = new BigInteger[1010][1010];
    static void pre(String s) {
            String ss = """";
            int i=1;
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            x = s.charAt(i++);
            i++;
            if(!ss.equals("""")) a=Integer.parseInt(ss);
            ss="""";
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            y=s.charAt(i++);i++;
            if(!ss.equals("""")) b=Integer.parseInt(ss);
            ss="""";
            if(s.charAt(i) != '^') n=1;
            else {
                i++;
                while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                    ss = ss+s.charAt(i);
                    i++;
                }
                n = Integer.parseInt(ss);ss="""";
            }
            i++;
            while(i< s.length() && s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            p = Integer.parseInt(ss);
        }

    static long pow(long a,long n) {
        if(n == 0 || a == 1) return 1;
        long sum = 1;
        for(int j = 0;j < n;j++) {
            a = a % p;
            sum = sum * a % p;
        }
        return sum;
    }

    //求C(n,n-1,........)阶乘
    static BigInteger C(int n, int m) {
        if (n == m || m == 0) return BigInteger.ONE;
        if (c[n][m] != null) return c[n][m];
        BigInteger up = BigInteger.valueOf(1);
        BigInteger down = BigInteger.valueOf(1);
        for (int i = n; i > n - m; i--) up = up.multiply(BigInteger.valueOf(i));
        for (int i = m; i > 0; i--) down = down.multiply(BigInteger.valueOf(i));
        c[n][m] = up.divide(down).mod(BigInteger.valueOf(p)) ;
        c[n][n - m] = c[n][n - m];
        return c[n][m];
    }

    //n >= m,C(n,m),该方法求变量前的系数
    static void solve(long q, long e, int n, int i) {
        if (i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(q, n) % p)).mod(BigInteger.valueOf(p));
        else if (n - i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(e, i) % p)).mod(BigInteger.valueOf(p));
        else xi = (C(n, n - i).multiply(BigInteger.valueOf(pow(q, n - i) % p)).multiply(BigInteger.valueOf(pow(e, i) % p))).mod(BigInteger.valueOf(p));
    }

    public static void main(String[] args) throws ArithmeticException{
        String s = sc.nextLine();
        String eve = """";
        pre(s);
        mod = p;
        pa.print(s + "" = "");
        if (x != y) {
            eve += ""("";
            for (int i = 0; i <= n; i++) {
                solve(a, b, n, i);
                xj[i] = xi;
                if (xi.compareTo(BigInteger.ZERO) == 0) continue;
                if (xi.compareTo(BigInteger.ONE) != 0) {
                    if (n != 1) {
                        if (i == 0) eve += xi + ""*"" + x + ""^"" + n + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += xi + ""*"" + x + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""*"" + y + ""+"";
                        }
                    }
                }
                if (xi.compareTo(BigInteger.valueOf(1)) == 0) {
                    if (n != 1) {
                        if (i == 0) eve += x + ""^"" + n + ""+"";
                        else if (i == n) eve += y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += x + ""+"";
                        else if (i == n) eve += y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""*"" + y + ""+"";
                        }
                    }
                }
            }
        } else {
            eve += ""("";
            a = a + b;
            xi = BigInteger.valueOf(pow(a, n) % p);
            xj[0] = xi;
            if (n != 1) {
                if (xi.compareTo(BigInteger.ONE) == 0) eve += x + ""^"" + n + ""%"" + p;
//            else if(xi.compareTo(BigInteger.ZERO) == 0) pa.print(""0"");
                else if (xi.compareTo(BigInteger.ZERO) != 0 && xi.compareTo(BigInteger.ONE) != 0)
                    eve += xi + ""*"" + x + ""^"" + n + ""%"" + p;
            }else {
                if (xi.compareTo(BigInteger.ONE) == 0) eve += x + ""%"" + p;
//            else if(xi.compareTo(BigInteger.ZERO) == 0) pa.print(""0"");
                else if (xi.compareTo(BigInteger.ZERO) != 0 && xi.compareTo(BigInteger.ONE) != 0)
                    eve += xi + ""*"" + x + ""%"" + p;
            }
        }
        if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0&& eve.indexOf("")"") >= 0) pa.print(eve);
        else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            if(eve.indexOf(""("") == 0 && eve.length() == 1) pa.print(""0"");
            else {
                for (int i = 1; i < eve.length(); i++) eventually += eve.charAt(i);
                pa.print(eventually);
            }
        }else if(eve.indexOf(""("") < 0 && eve.indexOf(""+"") < 0 &&eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 0;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            if(eve.indexOf(""+"") < eve.length() - 1) {
                for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
                pa.print(""("" + eventually + "")%"" + p);
            }else {
                for (int i = 1; i < eve.length() - 1; i++) eventually += eve.charAt(i);
                pa.print(eventually + ""%"" + p);
            }
        }
        pw.flush();
        pa.close();
    }
}"
30,G,Java,61633785,2023-03-31 22:39:56,一只往上爬的蚂蚁,答案错误,"import java.io.*;
import java.math.BigInteger;
import java.util.*;
public class Main{
    static int n, m, mod = (int) 1e9 + 7, maxn = 100010;
    static long ans = 0, INF = (long) 1e18;
    static Scanner sc = new Scanner(System.in);
    static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(bf);
    static PrintWriter pw = new PrintWriter(System.out);
    static PrintWriter pa = new PrintWriter(System.out);
    static PrintWriter pb = new PrintWriter(System.out);
    static long a = 1;
    static long b = 1;
    static BigInteger xi = BigInteger.ONE;
    static BigInteger sum = BigInteger.ZERO;
    static BigInteger[] xj = new BigInteger[1010];
    static int p = 1;
    static char x, y;
    static BigInteger c[][] = new BigInteger[1010][1010];
    static void pre(String s) {
            String ss = """";
            int i=1;
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            x = s.charAt(i++);
            i++;
            if(!ss.equals("""")) a=Integer.parseInt(ss);
            ss="""";
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            y=s.charAt(i++);i++;
            if(!ss.equals("""")) b=Integer.parseInt(ss);
            ss="""";
            if(s.charAt(i) != '^') n=1;
            else {
                i++;
                while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                    ss = ss+s.charAt(i);
                    i++;
                }
                n = Integer.parseInt(ss);ss="""";
            }
            i++;
            while(i< s.length() && s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            p = Integer.parseInt(ss);
        }

    static long pow(long a,long n) {
        if(n == 0 || a == 1) return 1;
        long sum = 1;
        for(int j = 0;j < n;j++) {
            a = a % p;
            sum = sum * a % p;
        }
        return sum;
    }

    //求C(n,n-1,........)阶乘
    static BigInteger C(int n, int m) {
        if (n == m || m == 0) return BigInteger.ONE;
        if (c[n][m] != null) return c[n][m];
        BigInteger up = BigInteger.valueOf(1);
        BigInteger down = BigInteger.valueOf(1);
        for (int i = n; i > n - m; i--) up = up.multiply(BigInteger.valueOf(i));
        for (int i = m; i > 0; i--) down = down.multiply(BigInteger.valueOf(i));
        c[n][m] = up.divide(down).mod(BigInteger.valueOf(p)) ;
        c[n][n - m] = c[n][n - m];
        return c[n][m];
    }

    //n >= m,C(n,m),该方法求变量前的系数
    static void solve(long q, long e, int n, int i) {
        if (i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(q, n) % p)).mod(BigInteger.valueOf(p));
        else if (n - i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(e, i) % p)).mod(BigInteger.valueOf(p));
        else xi = (C(n, n - i).multiply(BigInteger.valueOf(pow(q, n - i) % p)).multiply(BigInteger.valueOf(pow(e, i) % p))).mod(BigInteger.valueOf(p));
    }

    public static void main(String[] args) throws ArithmeticException{
        String s = sc.nextLine();
        String eve = """";
        pre(s);
        mod = p;
        pa.print(s + "" = "");
        if (x != y) {
            eve += ""("";
            for (int i = 0; i <= n; i++) {
                solve(a, b, n, i);
                xj[i] = xi;
                if (xi.compareTo(BigInteger.ZERO) == 0) continue;
                if (xi.compareTo(BigInteger.ONE) != 0) {
                    if (n != 1) {
                        if (i == 0) eve += xi + ""*"" + x + ""^"" + n + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += xi + ""*"" + x + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""*"" + y + ""+"";
                        }
                    }
                }
                if (xi.compareTo(BigInteger.valueOf(1)) == 0) {
                    if (n != 1) {
                        if (i == 0) eve += x + ""^"" + n + ""+"";
                        else if (i == n) eve += y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += x + ""+"";
                        else if (i == n) eve += y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""*"" + y + ""+"";
                        }
                    }
                }
            }
        } else {
            eve += ""("";
            a = a + b;
            xi = BigInteger.valueOf(pow(a, n) % p);
            xj[0] = xi;
            if (n != 1) {
                if (xi.compareTo(BigInteger.ONE) == 0) eve += x + ""^"" + n + ""%"" + p;
//            else if(xi.compareTo(BigInteger.ZERO) == 0) pa.print(""0"");
                else if (xi.compareTo(BigInteger.ZERO) != 0 && xi.compareTo(BigInteger.ONE) != 0)
                    eve += xi + ""*"" + x + ""^"" + n + ""%"" + p;
            }else {
                if (xi.compareTo(BigInteger.ONE) == 0) eve += x + ""%"" + p;
//            else if(xi.compareTo(BigInteger.ZERO) == 0) pa.print(""0"");
                else if (xi.compareTo(BigInteger.ZERO) != 0 && xi.compareTo(BigInteger.ONE) != 0)
                    eve += xi + ""*"" + x + ""%"" + p;
            }
        }
        if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0&& eve.indexOf("")"") >= 0) pa.print(eve);
        else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            if(eve.indexOf(""("") == 0 && eve.length() == 1) pa.print(""0"");
            else {
                for (int i = 1; i < eve.length(); i++) eventually += eve.charAt(i);
                pa.print(eventually + ""%"" + p);
            }
        }else if(eve.indexOf(""("") < 0 && eve.indexOf(""+"") < 0 &&eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 0;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            if(eve.indexOf(""+"") < eve.length() - 1) {
                for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
                pa.print(""("" + eventually + "")%"" + p);
            }else {
                for (int i = 1; i < eve.length() - 1; i++) eventually += eve.charAt(i);
                pa.print(eventually + ""%"" + p);
            }
        }
        pw.flush();
        pa.close();
    }
}"
31,G,Java,61633791,2023-03-31 22:40:41,一只往上爬的蚂蚁,答案错误,"import java.io.*;
import java.math.BigInteger;
import java.util.*;
public class Main{
    static int n, m, mod = (int) 1e9 + 7, maxn = 100010;
    static long ans = 0, INF = (long) 1e18;
    static Scanner sc = new Scanner(System.in);
    static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(bf);
    static PrintWriter pw = new PrintWriter(System.out);
    static PrintWriter pa = new PrintWriter(System.out);
    static PrintWriter pb = new PrintWriter(System.out);
    static long a = 1;
    static long b = 1;
    static BigInteger xi = BigInteger.ONE;
    static BigInteger sum = BigInteger.ZERO;
    static BigInteger[] xj = new BigInteger[1010];
    static int p = 1;
    static char x, y;
    static BigInteger c[][] = new BigInteger[1010][1010];
    static void pre(String s) {
            String ss = """";
            int i=1;
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            x = s.charAt(i++);
            i++;
            if(!ss.equals("""")) a=Integer.parseInt(ss);
            ss="""";
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            y=s.charAt(i++);i++;
            if(!ss.equals("""")) b=Integer.parseInt(ss);
            ss="""";
            if(s.charAt(i) != '^') n=1;
            else {
                i++;
                while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                    ss = ss+s.charAt(i);
                    i++;
                }
                n = Integer.parseInt(ss);ss="""";
            }
            i++;
            while(i< s.length() && s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            p = Integer.parseInt(ss);
        }

    static long pow(long a,long n) {
        if(n == 0 || a == 1) return 1;
        long sum = 1;
        for(int j = 0;j < n;j++) {
            a = a % p;
            sum = sum * a % p;
        }
        return sum;
    }

    //求C(n,n-1,........)阶乘
    static BigInteger C(int n, int m) {
        if (n == m || m == 0) return BigInteger.ONE;
        if (c[n][m] != null) return c[n][m];
        BigInteger up = BigInteger.valueOf(1);
        BigInteger down = BigInteger.valueOf(1);
        for (int i = n; i > n - m; i--) up = up.multiply(BigInteger.valueOf(i));
        for (int i = m; i > 0; i--) down = down.multiply(BigInteger.valueOf(i));
        c[n][m] = up.divide(down).mod(BigInteger.valueOf(p)) ;
        c[n][n - m] = c[n][n - m];
        return c[n][m];
    }

    //n >= m,C(n,m),该方法求变量前的系数
    static void solve(long q, long e, int n, int i) {
        if (i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(q, n) % p)).mod(BigInteger.valueOf(p));
        else if (n - i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(e, i) % p)).mod(BigInteger.valueOf(p));
        else xi = (C(n, n - i).multiply(BigInteger.valueOf(pow(q, n - i) % p)).multiply(BigInteger.valueOf(pow(e, i) % p))).mod(BigInteger.valueOf(p));
    }

    public static void main(String[] args) throws ArithmeticException{
        String s = sc.nextLine();
        String eve = """";
        pre(s);
        mod = p;
        pa.print(s + "" = "");
        if (x != y) {
            eve += ""("";
            for (int i = 0; i <= n; i++) {
                solve(a, b, n, i);
                xj[i] = xi;
                if (xi.compareTo(BigInteger.ZERO) == 0) continue;
                if (xi.compareTo(BigInteger.ONE) != 0) {
                    if (n != 1) {
                        if (i == 0) eve += xi + ""*"" + x + ""^"" + n + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += xi + ""*"" + x + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""*"" + y + ""+"";
                        }
                    }
                }
                if (xi.compareTo(BigInteger.valueOf(1)) == 0) {
                    if (n != 1) {
                        if (i == 0) eve += x + ""^"" + n + ""+"";
                        else if (i == n) eve += y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += x + ""+"";
                        else if (i == n) eve += y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""*"" + y + ""+"";
                        }
                    }
                }
            }
        } else {
            eve += ""("";
            a = a + b;
            xi = BigInteger.valueOf(pow(a, n) % p);
            xj[0] = xi;
            if (n != 1) {
                if (xi.compareTo(BigInteger.ONE) == 0) eve += x + ""^"" + n + ""%"" + p;
//            else if(xi.compareTo(BigInteger.ZERO) == 0) pa.print(""0"");
                else if (xi.compareTo(BigInteger.ZERO) != 0 && xi.compareTo(BigInteger.ONE) != 0)
                    eve += xi + ""*"" + x + ""^"" + n + ""%"" + p;
            }else {
                if (xi.compareTo(BigInteger.ONE) == 0) eve += x + ""%"" + p;
//            else if(xi.compareTo(BigInteger.ZERO) == 0) pa.print(""0"");
                else if (xi.compareTo(BigInteger.ZERO) != 0 && xi.compareTo(BigInteger.ONE) != 0)
                    eve += xi + ""*"" + x + ""%"" + p;
            }
        }
        if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0&& eve.indexOf("")"") >= 0) pa.print(eve);
        else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            if(eve.indexOf(""("") == 0 && eve.length() == 1) pa.print(""0"");
            else {
                for (int i = 1; i < eve.length(); i++) eventually += eve.charAt(i);
                pa.print(eventually);
            }
        }else if(eve.indexOf(""("") < 0 && eve.indexOf(""+"") < 0 &&eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 0;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            if(eve.indexOf(""+"") < eve.length() - 1) {
                for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
                pa.print(""("" + eventually + "")%"" + p);
            }else {
                for (int i = 1; i < eve.length() - 1; i++) eventually += eve.charAt(i);
                pa.print(eventually + ""%"" + p);
            }
        }
        pw.flush();
        pa.close();
    }
}"
32,G,Java,61633792,2023-03-31 22:40:42,一只往上爬的蚂蚁,答案错误,"import java.io.*;
import java.math.BigInteger;
import java.util.*;
public class Main{
    static int n, m, mod = (int) 1e9 + 7, maxn = 100010;
    static long ans = 0, INF = (long) 1e18;
    static Scanner sc = new Scanner(System.in);
    static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(bf);
    static PrintWriter pw = new PrintWriter(System.out);
    static PrintWriter pa = new PrintWriter(System.out);
    static PrintWriter pb = new PrintWriter(System.out);
    static long a = 1;
    static long b = 1;
    static BigInteger xi = BigInteger.ONE;
    static BigInteger sum = BigInteger.ZERO;
    static BigInteger[] xj = new BigInteger[1010];
    static int p = 1;
    static char x, y;
    static BigInteger c[][] = new BigInteger[1010][1010];
    static void pre(String s) {
            String ss = """";
            int i=1;
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            x = s.charAt(i++);
            i++;
            if(!ss.equals("""")) a=Integer.parseInt(ss);
            ss="""";
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            y=s.charAt(i++);i++;
            if(!ss.equals("""")) b=Integer.parseInt(ss);
            ss="""";
            if(s.charAt(i) != '^') n=1;
            else {
                i++;
                while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                    ss = ss+s.charAt(i);
                    i++;
                }
                n = Integer.parseInt(ss);ss="""";
            }
            i++;
            while(i< s.length() && s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            p = Integer.parseInt(ss);
        }

    static long pow(long a,long n) {
        if(n == 0 || a == 1) return 1;
        long sum = 1;
        for(int j = 0;j < n;j++) {
            a = a % p;
            sum = sum * a % p;
        }
        return sum;
    }

    //求C(n,n-1,........)阶乘
    static BigInteger C(int n, int m) {
        if (n == m || m == 0) return BigInteger.ONE;
        if (c[n][m] != null) return c[n][m];
        BigInteger up = BigInteger.valueOf(1);
        BigInteger down = BigInteger.valueOf(1);
        for (int i = n; i > n - m; i--) up = up.multiply(BigInteger.valueOf(i));
        for (int i = m; i > 0; i--) down = down.multiply(BigInteger.valueOf(i));
        c[n][m] = up.divide(down).mod(BigInteger.valueOf(p)) ;
        c[n][n - m] = c[n][n - m];
        return c[n][m];
    }

    //n >= m,C(n,m),该方法求变量前的系数
    static void solve(long q, long e, int n, int i) {
        if (i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(q, n) % p)).mod(BigInteger.valueOf(p));
        else if (n - i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(e, i) % p)).mod(BigInteger.valueOf(p));
        else xi = (C(n, n - i).multiply(BigInteger.valueOf(pow(q, n - i) % p)).multiply(BigInteger.valueOf(pow(e, i) % p))).mod(BigInteger.valueOf(p));
    }

    public static void main(String[] args) throws ArithmeticException{
        String s = sc.nextLine();
        String eve = """";
        pre(s);
        mod = p;
        pa.print(s + "" = "");
        if (x != y) {
            eve += ""("";
            for (int i = 0; i <= n; i++) {
                solve(a, b, n, i);
                xj[i] = xi;
                if (xi.compareTo(BigInteger.ZERO) == 0) continue;
                if (xi.compareTo(BigInteger.ONE) != 0) {
                    if (n != 1) {
                        if (i == 0) eve += xi + ""*"" + x + ""^"" + n + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += xi + ""*"" + x + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""*"" + y + ""+"";
                        }
                    }
                }
                if (xi.compareTo(BigInteger.valueOf(1)) == 0) {
                    if (n != 1) {
                        if (i == 0) eve += x + ""^"" + n + ""+"";
                        else if (i == n) eve += y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += x + ""+"";
                        else if (i == n) eve += y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""*"" + y + ""+"";
                        }
                    }
                }
            }
        } else {
            eve += ""("";
            a = a + b;
            xi = BigInteger.valueOf(pow(a, n) % p);
            xj[0] = xi;
            if (n != 1) {
                if (xi.compareTo(BigInteger.ONE) == 0) eve += x + ""^"" + n + ""%"" + p;
//            else if(xi.compareTo(BigInteger.ZERO) == 0) pa.print(""0"");
                else if (xi.compareTo(BigInteger.ZERO) != 0 && xi.compareTo(BigInteger.ONE) != 0)
                    eve += xi + ""*"" + x + ""^"" + n + ""%"" + p;
            }else {
                if (xi.compareTo(BigInteger.ONE) == 0) eve += x + ""%"" + p;
//            else if(xi.compareTo(BigInteger.ZERO) == 0) pa.print(""0"");
                else if (xi.compareTo(BigInteger.ZERO) != 0 && xi.compareTo(BigInteger.ONE) != 0)
                    eve += xi + ""*"" + x + ""%"" + p;
            }
        }
        if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0&& eve.indexOf("")"") >= 0) pa.print(eve);
        else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            if(eve.indexOf(""("") == 0 && eve.length() == 1) pa.print(""0"");
            else {
                for (int i = 1; i < eve.length(); i++) eventually += eve.charAt(i);
                pa.print(eventually);
            }
        }else if(eve.indexOf(""("") < 0 && eve.indexOf(""+"") < 0 &&eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 0;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            if(eve.indexOf(""+"") < eve.length() - 1) {
                for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
                pa.print(""("" + eventually + "")%"" + p);
            }else {
                for (int i = 1; i < eve.length() - 1; i++) eventually += eve.charAt(i);
                pa.print(eventually + ""%"" + p);
            }
        }
        pw.flush();
        pa.close();
    }
}"
33,G,Java,61633910,2023-03-31 22:51:31,一只往上爬的蚂蚁,答案正确,"import java.io.*;
import java.math.BigInteger;
import java.util.*;
public class Main{
    static int n, m, mod = (int) 1e9 + 7, maxn = 100010;
    static long ans = 0, INF = (long) 1e18;
    static Scanner sc = new Scanner(System.in);
    static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(bf);
    static PrintWriter pw = new PrintWriter(System.out);
    static PrintWriter pa = new PrintWriter(System.out);
    static PrintWriter pb = new PrintWriter(System.out);
    static long a = 1;
    static long b = 1;
    static BigInteger xi = BigInteger.ONE;
    static BigInteger sum = BigInteger.ZERO;
    static BigInteger[] xj = new BigInteger[1010];
    static int p = 1;
    static char x, y;
    static BigInteger c[][] = new BigInteger[1010][1010];
    static void pre(String s) {
            String ss = """";
            int i=1;
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            x = s.charAt(i++);
            i++;
            if(!ss.equals("""")) a=Integer.parseInt(ss);
            ss="""";
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            y=s.charAt(i++);i++;
            if(!ss.equals("""")) b=Integer.parseInt(ss);
            ss="""";
            if(s.charAt(i) != '^') n=1;
            else {
                i++;
                while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                    ss = ss+s.charAt(i);
                    i++;
                }
                n = Integer.parseInt(ss);ss="""";
            }
            i++;
            while(i< s.length() && s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            p = Integer.parseInt(ss);
        }

    static long pow(long a,long n) {
        if(n == 0 || a == 1) return 1;
        long sum = 1;
        for(int j = 0;j < n;j++) {
            a = a % p;
            sum = sum * a % p;
        }
        return sum;
    }

    //求C(n,n-1,........)阶乘
    static BigInteger C(int n, int m) {
        if (n == m || m == 0) return BigInteger.ONE;
        if (c[n][m] != null) return c[n][m];
        BigInteger up = BigInteger.valueOf(1);
        BigInteger down = BigInteger.valueOf(1);
        for (int i = n; i > n - m; i--) up = up.multiply(BigInteger.valueOf(i));
        for (int i = m; i > 0; i--) down = down.multiply(BigInteger.valueOf(i));
        c[n][m] = up.divide(down).mod(BigInteger.valueOf(p)) ;
        c[n][n - m] = c[n][n - m];
        return c[n][m];
    }

    //n >= m,C(n,m),该方法求变量前的系数
    static void solve(long q, long e, int n, int i) {
        if (i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(q, n) % p)).mod(BigInteger.valueOf(p));
        else if (n - i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(e, i) % p)).mod(BigInteger.valueOf(p));
        else xi = (C(n, n - i).multiply(BigInteger.valueOf(pow(q, n - i) % p)).multiply(BigInteger.valueOf(pow(e, i) % p))).mod(BigInteger.valueOf(p));
    }

    public static void main(String[] args) throws ArithmeticException{
        String s = sc.nextLine();
        String eve = """";
        pre(s);
        mod = p;
        pa.print(s + "" = "");
        if (x != y) {
            eve += ""("";
            for (int i = 0; i <= n; i++) {
                solve(a, b, n, i);
                xj[i] = xi;
                if (xi.compareTo(BigInteger.ZERO) == 0) continue;
                if (xi.compareTo(BigInteger.ONE) != 0) {
                    if (n != 1) {
                        if (i == 0) eve += xi + ""*"" + x + ""^"" + n + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += xi + ""*"" + x + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""*"" + y + ""+"";
                        }
                    }
                }
                if (xi.compareTo(BigInteger.valueOf(1)) == 0) {
                    if (n != 1) {
                        if (i == 0) eve += x + ""^"" + n + ""+"";
                        else if (i == n) eve += y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += x + ""+"";
                        else if (i == n) eve += y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""*"" + y + ""+"";
                        }
                    }
                }
            }
        } else {
            eve += ""("";
            a = a + b;
            xi = BigInteger.valueOf(pow(a, n) % p);
            xj[0] = xi;
            if (n != 1) {
                if (xi.compareTo(BigInteger.ONE) == 0) eve += x + ""^"" + n + ""%"" + p;
//            else if(xi.compareTo(BigInteger.ZERO) == 0) pa.print(""0"");
                else if (xi.compareTo(BigInteger.ZERO) != 0 && xi.compareTo(BigInteger.ONE) != 0)
                    eve += xi + ""*"" + x + ""^"" + n + ""%"" + p;
            }else {
                if (xi.compareTo(BigInteger.ONE) == 0) eve += x + ""%"" + p;
//            else if(xi.compareTo(BigInteger.ZERO) == 0) pa.print(""0"");
                else if (xi.compareTo(BigInteger.ZERO) != 0 && xi.compareTo(BigInteger.ONE) != 0)
                    eve += xi + ""*"" + x + ""%"" + p;
            }
        }
        if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0&& eve.indexOf("")"") >= 0) pa.print(eve);
        else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            if(eve.indexOf(""("") == 0 && eve.length() == 1) pa.print(""0"");
            else {
                for (int i = 1; i < eve.length(); i++) eventually += eve.charAt(i);
                pa.print(eventually);
            }
        }else if(eve.indexOf(""("") < 0 && eve.indexOf(""+"") < 0 &&eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 0;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 1;i < eve.indexOf("")"");i++) eventually += eve.charAt(i);
            pa.print(eventually + ""%"" + p);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            if(eve.indexOf(""+"") < eve.length() - 1) {
                for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
                pa.print(""("" + eventually + "")%"" + p);
            }else {
                for (int i = 1; i < eve.length() - 1; i++) eventually += eve.charAt(i);
                pa.print(eventually + ""%"" + p);
            }
        }
        pw.flush();
        pa.close();
    }
}"
34,G,Java,61637131,2023-04-01 11:13:33,一只往上爬的蚂蚁,执行出错,"import java.io.*;
import java.util.*;
public class Main{
    static int n, m, mod = (int) 1e9 + 7, maxn = 100010;
    static long ans = 0, INF = (long) 1e18;
    static Scanner sc = new Scanner(System.in);
    static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(bf);
    static PrintWriter pw = new PrintWriter(System.out);
    static PrintWriter pa = new PrintWriter(System.out);
    static PrintWriter pb = new PrintWriter(System.out);
    static long a = 1, b = 1, xi = 1,sum = 0;
    static long[] xj = new long[1000];
    static int p = 0;
    static char x, y;
    static double c[][] = new double[1000][1000];

    static void pre(String s) {
        String ss = """";
        int i = 1;
        while (s.charAt(i) > '0' && s.charAt(i) <= '9') {
            ss = ss + s.charAt(i);
            i++;
        }
        x = s.charAt(i++);
        i++;
        if (!ss.equals("""")) a = Integer.parseInt(ss);
        ss = """";
        while (s.charAt(i) > '0' && s.charAt(i) <= '9') {
            ss = ss + s.charAt(i);
            i++;
        }
        y = s.charAt(i++);
        i++;
        if (!ss.equals("""")) b = Integer.parseInt(ss);
        ss = """";
        if (s.charAt(i) != '^') n = 1;
        else {
            i++;
            while (s.charAt(i) > '0' && s.charAt(i) <= '9') {
                ss = ss + s.charAt(i);
                i++;
            }
            if (!ss.equals("""")) n = Integer.parseInt(ss);
            ss = """";
        }
        while(i< s.length() && s.charAt(i)>='0' && s.charAt(i)<='9') {
            ss = ss+s.charAt(i);
            i++;
        }
        p = Integer.parseInt(ss);
    }

    //求C(n,n-1,........)阶乘
    static double C(int n, int m) {
        if (n == m || m == 0) return 1;
        if (c[n][m] != 0.0) return c[n][m];
        int up = 1;
        int down = 1;
        for (int i = n; i > n - m; i--) up = up * i;
        for (int i = m; i > 0; i--) down = down * i;
        c[n][m] = up / down;
        c[n][n - m] = c[n][n - m];
        return c[n][m];
    }

    //n >= m,C(n,m),该方法求变量前的系数
    static void solve(long q, long e, int n, int i, int p) {
        if (i == 0) xi = (long) (Math.pow(q, n) * C(n, i) % p);
        else if (n - i == 0) xi = (long) (Math.pow(e, i) * C(n, i) % p);
        else xi = (long) (Math.pow(q, n - i) * Math.pow(e, i) * C(n, i) % p);
    }

    public static void main(String[] args) {
        String s = sc.nextLine();
        pre(s);
        mod = p;
        pw.print(s + "" = "");
        if (x != y) {
            pa.print(""("");
            for (int i = 0; i <= n; i++) {
                solve(a, b, n, i, p);
                xj[i] = xi;
                if (xi == 0) continue;
                if (xi != 1) {
                    if (n != 1) {
                        if (i == 0) pa.print(xi + ""*"" + x + ""^"" + n + ""+"");
                        else if (i == n) pa.print(xi + ""*"" + y + ""^"" + n + "")%"" + p);
                        else {
                            if (i == 1 && n - i != 1) pa.print(xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""+"");
                            else if (n - i == 1 && i != 1) pa.print(xi + ""*"" + x + ""*"" + y + ""^"" + i + ""+"");
                            else if (i == 1 && n - i == 1) pa.print(xi + ""*"" + x + ""*"" + y + ""+"");
                            else pa.print(xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"");
                        }
                    } else {
                        if (i == 0) pa.print(xi + ""*"" + x + ""+"");
                        else if (i == n) pa.print(xi + ""*"" + y + "")%"" + p);
                        else {
                            if (i == 1 && n - i != 1) pa.print(xi + ""*"" + x + ""*"" + y + ""+"");
                            else if (n - i == 1 && i != 1) pa.print(xi + ""*"" + x + ""*"" + y + ""+"");
                            else if (i == 1 && n - i == 1) pa.print(xi + ""*"" + x + ""*"" + y + ""+"");
                            else pa.print(xi + ""*"" + x + ""*"" + y + ""+"");
                        }
                    }
                }
                if (xi == 1) {
                    if (n != 1) {
                        if (i == 0) pa.print(x + ""^"" + n + ""+"");
                        else if (i == n) pa.print(y + ""^"" + n + "")%"" + p);
                        else {
                            if (i == 1 && n - i != 1) pa.print(x + ""^"" + (n - i) + ""*"" + y + ""+"");
                            else if (n - i == 1 && i != 1) pa.print(x + ""*"" + y + ""^"" + i + ""+"");
                            else if (i == 1 && n - i == 1) pa.print(x + ""*"" + y + ""+"");
                            else pa.print(x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"");
                        }
                    } else {
                        if (i == 0) pa.print(x + ""+"");
                        else if (i == n) pa.print(y + "")%"" + p);
                        else {
                            if (i == 1 && n - i != 1) pa.print(x + ""*"" + y + ""+"");
                            else if (n - i == 1 && i != 1) pa.print(x + ""*"" + y + ""+"");
                            else if (i == 1 && n - i == 1) pa.print(x + ""*"" + y + ""+"");
                            else pa.print(x + ""*"" + y + ""+"");
                        }
                    }
                }
            }
        } else {
            a = a + b;
            xi = (long) (Math.pow(a, n) % p);
            xj[0] = xi;
            pa.print(xi + ""*"" + x + ""^"" + n + ""%"" + p);
        }
        pw.flush();
        for(int i = 0;i < xj.length;i++) sum = sum + xj[i];
        if(sum == 0) {
            pb.print(""0"");
            pb.close();
        }else {
            pa.close();
        }
    }
}"
35,G,Java,61637158,2023-04-01 11:14:56,一只往上爬的蚂蚁,答案正确,"import java.io.*;
import java.math.BigInteger;
import java.util.*;
public class Main{
    static int n, m, mod = (int) 1e9 + 7, maxn = 100010;
    static long ans = 0, INF = (long) 1e18;
    static Scanner sc = new Scanner(System.in);
    static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(bf);
    static PrintWriter pw = new PrintWriter(System.out);
    static PrintWriter pa = new PrintWriter(System.out);
    static PrintWriter pb = new PrintWriter(System.out);
    static long a = 1;
    static long b = 1;
    static BigInteger xi = BigInteger.ONE;
    static BigInteger sum = BigInteger.ZERO;
    static BigInteger[] xj = new BigInteger[1010];
    static int p = 1;
    static char x, y;
    static BigInteger c[][] = new BigInteger[1010][1010];
    static void pre(String s) {
            String ss = """";
            int i=1;
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            x = s.charAt(i++);
            i++;
            if(!ss.equals("""")) a=Integer.parseInt(ss);
            ss="""";
            while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            y=s.charAt(i++);i++;
            if(!ss.equals("""")) b=Integer.parseInt(ss);
            ss="""";
            if(s.charAt(i) != '^') n=1;
            else {
                i++;
                while(s.charAt(i)>='0' && s.charAt(i)<='9') {
                    ss = ss+s.charAt(i);
                    i++;
                }
                n = Integer.parseInt(ss);ss="""";
            }
            i++;
            while(i< s.length() && s.charAt(i)>='0' && s.charAt(i)<='9') {
                ss = ss+s.charAt(i);
                i++;
            }
            p = Integer.parseInt(ss);
        }

    static long pow(long a,long n) {
        if(n == 0 || a == 1) return 1;
        long sum = 1;
        for(int j = 0;j < n;j++) {
            a = a % p;
            sum = sum * a % p;
        }
        return sum;
    }

    //求C(n,n-1,........)阶乘
    static BigInteger C(int n, int m) {
        if (n == m || m == 0) return BigInteger.ONE;
        if (c[n][m] != null) return c[n][m];
        BigInteger up = BigInteger.valueOf(1);
        BigInteger down = BigInteger.valueOf(1);
        for (int i = n; i > n - m; i--) up = up.multiply(BigInteger.valueOf(i));
        for (int i = m; i > 0; i--) down = down.multiply(BigInteger.valueOf(i));
        c[n][m] = up.divide(down).mod(BigInteger.valueOf(p)) ;
        c[n][n - m] = c[n][n - m];
        return c[n][m];
    }

    //n >= m,C(n,m),该方法求变量前的系数
    static void solve(long q, long e, int n, int i) {
        if (i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(q, n) % p)).mod(BigInteger.valueOf(p));
        else if (n - i == 0) xi = C(n, n - i).multiply(BigInteger.valueOf(pow(e, i) % p)).mod(BigInteger.valueOf(p));
        else xi = (C(n, n - i).multiply(BigInteger.valueOf(pow(q, n - i) % p)).multiply(BigInteger.valueOf(pow(e, i) % p))).mod(BigInteger.valueOf(p));
    }

    public static void main(String[] args) throws ArithmeticException{
        String s = sc.nextLine();
        String eve = """";
        pre(s);
        mod = p;
        pa.print(s + "" = "");
        if (x != y) {
            eve += ""("";
            for (int i = 0; i <= n; i++) {
                solve(a, b, n, i);
                xj[i] = xi;
                if (xi.compareTo(BigInteger.ZERO) == 0) continue;
                if (xi.compareTo(BigInteger.ONE) != 0) {
                    if (n != 1) {
                        if (i == 0) eve += xi + ""*"" + x + ""^"" + n + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += xi + ""*"" + x + ""+"";
                        else if (i == n) eve += xi + ""*"" + y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += xi + ""*"" + x + ""*"" + y + ""+"";
                            else eve += xi + ""*"" + x + ""*"" + y + ""+"";
                        }
                    }
                }
                if (xi.compareTo(BigInteger.valueOf(1)) == 0) {
                    if (n != 1) {
                        if (i == 0) eve += x + ""^"" + n + ""+"";
                        else if (i == n) eve += y + ""^"" + n + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""^"" + (n - i) + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""^"" + i + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""^"" + (n - i) + ""*"" + y + ""^"" + i + ""+"";
                        }
                    } else {
                        if (i == 0) eve += x + ""+"";
                        else if (i == n) eve += y + "")%"" + p;
                        else {
                            if (i == 1 && n - i != 1) eve += x + ""*"" + y + ""+"";
                            else if (n - i == 1 && i != 1) eve += x + ""*"" + y + ""+"";
                            else if (i == 1 && n - i == 1) eve += x + ""*"" + y + ""+"";
                            else eve += x + ""*"" + y + ""+"";
                        }
                    }
                }
            }
        } else {
            eve += ""("";
            a = a + b;
            xi = BigInteger.valueOf(pow(a, n) % p);
            xj[0] = xi;
            if (n != 1) {
                if (xi.compareTo(BigInteger.ONE) == 0) eve += x + ""^"" + n + ""%"" + p;
//            else if(xi.compareTo(BigInteger.ZERO) == 0) pa.print(""0"");
                else if (xi.compareTo(BigInteger.ZERO) != 0 && xi.compareTo(BigInteger.ONE) != 0)
                    eve += xi + ""*"" + x + ""^"" + n + ""%"" + p;
            }else {
                if (xi.compareTo(BigInteger.ONE) == 0) eve += x + ""%"" + p;
//            else if(xi.compareTo(BigInteger.ZERO) == 0) pa.print(""0"");
                else if (xi.compareTo(BigInteger.ZERO) != 0 && xi.compareTo(BigInteger.ONE) != 0)
                    eve += xi + ""*"" + x + ""%"" + p;
            }
        }
        if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0&& eve.indexOf("")"") >= 0) pa.print(eve);
        else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            if(eve.indexOf(""("") == 0 && eve.length() == 1) pa.print(""0"");
            else {
                for (int i = 1; i < eve.length(); i++) eventually += eve.charAt(i);
                pa.print(eventually);
            }
        }else if(eve.indexOf(""("") < 0 && eve.indexOf(""+"") < 0 &&eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 0;i < eve.length() - 1;i++) eventually += eve.charAt(i);
            pa.print(eventually);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") < 0 && eve.indexOf("")"") >= 0){
            String eventually = """";
            for(int i = 1;i < eve.indexOf("")"");i++) eventually += eve.charAt(i);
            pa.print(eventually + ""%"" + p);
        }else if(eve.indexOf(""("") >= 0 && eve.indexOf(""+"") >= 0 && eve.indexOf("")"") < 0){
            String eventually = """";
            if(eve.indexOf(""+"") < eve.length() - 1) {
                for(int i = 1;i < eve.length() - 1;i++) eventually += eve.charAt(i);
                pa.print(""("" + eventually + "")%"" + p);
            }else {
                for (int i = 1; i < eve.length() - 1; i++) eventually += eve.charAt(i);
                pa.print(eventually + ""%"" + p);
            }
        }
        pw.flush();
        pa.close();
    }
}"
