,index,languageName,submissionId,submitTime,userName,statusMessage,code
0,C,Java,61479120,2023-03-24 19:19:38,0xC7,答案正确,"import java.util.*;
public class Main{
    static long ret = 0;
    static void dfs(long[][] cost, boolean[] vis, long time, int t, long p, long score) {
        int n = cost.length;
        for (int i = 0; i < n; i++) {
            if (vis[i] == false && time + cost[i][3] <= t) {
                vis[i] = true;
                score += Math.max(cost[i][2], cost[i][0] - (time + cost[i][3]) * cost[i][1] - p * cost[i][4]);
                ret = Math.max(ret, score);
                dfs(cost, vis, time + cost[i][3], t, p, score);
                score -= Math.max(cost[i][2], cost[i][0] - (time + cost[i][3]) * cost[i][1] - p * cost[i][4]);
                vis[i] = false;
            }
        }
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int t = sc.nextInt();
        long p = sc.nextLong();
        long [][] cost = new long[n][5];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < 5; j++) {
                cost[i][j] = sc.nextLong();
            }
        }
        boolean[] vis = new boolean[n];
        dfs(cost, vis, 0, t, p, 0);
        System.out.println(ret);
            
    }
}"
1,C,Java,61479745,2023-03-24 19:24:13,232132323,答案错误,"import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            long t = in.nextLong();
            int p = in.nextInt();
            Problem[] problems = new Problem[n];
            for (int i = 0; i < n; i++) {
                problems[i] = new Problem();
                problems[i].a = in.nextLong();
                problems[i].b = in.nextLong();
                problems[i].c = in.nextLong();
                problems[i].x = in.nextLong();
                problems[i].y = in.nextLong();
            }
            Arrays.sort(problems, new Comparator<Problem>() {
                @Override
                public int compare(Problem o1, Problem o2) {
                    return Long.compare(o1.x,o2.x);
                }
            });
            long time = 0;
            long ans = 0;
            for (int i = 0; i < n; i++) {
                if (time + problems[i].x <= t) {
                    time += problems[i].x;
                    ans += Math.max(problems[i].score, problems[i].a - time * problems[i].b - problems[i].y * p);
                }
            }
            out.println(ans);
        }

        class Problem {
            long a, b, c, x, y;
            long score;
            double avg_score;
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        boolean hasNext() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e) {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

    }
}"
2,C,Java,61479746,2023-03-24 19:24:13,人工智能3212卢明涛,答案错误,"
import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public static long gcd(long a,long b) {
            return b==0?a:gcd(b, a%b);
        }
        static long ans = 0;
        class Person{
            String name;
            String dui;
            double fen;
        }
        public static int binarySearch(int arr[], int target){
            int left = 0;
            int right = arr.length; // 注意
            while(left<right){ // 注意
                int mid = (left+right)/2;
                if(arr[mid] >= target){// 注意
                    right = mid;
                }else{
                    left = mid+1;
                }
            }
            return left;// 注意
        }
        static long start = 0;
        static long map[] = new long[100];
        static long time[]  = new long[100];

        static long use[] = new long[100];

        static long n,t,p;

        static long max = 0;

        static long maxfen = 0;
        static long sumtime = 0;
        static long[] ai = new long[20];
        static long[] bi = new long[20];
        static long[] ci = new long[20];
        static long[] xi = new long[20];
        static long[] yi = new long[20];

        static long sum =0;
        static void dfs(int id){
            int id1 = id+1;
            for (int i=id1;i<=n;i++){
                if (use[i]==0){
                    if (sumtime+time[i]<=t){
                        sumtime = sumtime + time[i];
                        long maxsu = Math.max(ci[i],ai[i]-sumtime*bi[i]-yi[i]*p);
                        sum = sum + maxsu ;
                        use[i] = 1;
                        dfs(id1);
                        use[i] = 0;
                        sum = sum - maxsu;
                        sumtime = sumtime + time[i];
                    }
                    else {
                        maxfen = Math.max(maxfen,sum);
                    }
                }
                else {
                    maxfen = Math.max(maxfen,sum);
                }
            }
        }
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            n = in.nextLong();
            t = in.nextLong();
            p = in.nextLong();
            for (int i=1;i<=n;i++){
                ai[i] = in.nextLong();
                 bi[i] = in.nextLong();
                 ci[i] = in.nextLong();
                 xi[i] = in.nextLong();
                 yi[i] = in.nextLong();
//                long maxfen = Math.max(ci,ai-xi*bi-yi*p);
//                System.out.println(maxfen);
                time[i] = xi[i];
//                map[i] = maxfen;
            }
            dfs(0);
            System.out.println(maxfen);
            //            long[] math =new long[n];

        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
3,C,Java,61479851,2023-03-24 19:25:00,人工智能3212卢明涛,答案错误,"
import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public static long gcd(long a,long b) {
            return b==0?a:gcd(b, a%b);
        }
        static long ans = 0;
        class Person{
            String name;
            String dui;
            double fen;
        }
        public static int binarySearch(int arr[], int target){
            int left = 0;
            int right = arr.length; // 注意
            while(left<right){ // 注意
                int mid = (left+right)/2;
                if(arr[mid] >= target){// 注意
                    right = mid;
                }else{
                    left = mid+1;
                }
            }
            return left;// 注意
        }
        static long start = 0;
        static long map[] = new long[100];
        static long time[]  = new long[100];

        static long use[] = new long[100];

        static long n,t,p;

        static long max = 0;

        static long maxfen = 0;
        static long sumtime = 0;
        static long[] ai = new long[20];
        static long[] bi = new long[20];
        static long[] ci = new long[20];
        static long[] xi = new long[20];
        static long[] yi = new long[20];

        static long sum =0;
        static void dfs(int id){
            int id1 = id+1;
            for (int i=id1;i<=n;i++){
                if (use[i]==0){
                    if (sumtime+time[i]<=t){
                        sumtime = sumtime + time[i];
                        long maxsu = Math.max(ci[i],ai[i]-sumtime*bi[i]-yi[i]*p);
                        sum = sum + maxsu ;
                        use[i] = 1;
                        dfs(id1);
                        use[i] = 0;
                        sum = sum - maxsu;
                        sumtime = sumtime - time[i];
                    }
                    else {
                        maxfen = Math.max(maxfen,sum);
                    }
                }
                else {
                    maxfen = Math.max(maxfen,sum);
                }
            }
        }
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            n = in.nextLong();
            t = in.nextLong();
            p = in.nextLong();
            for (int i=1;i<=n;i++){
                ai[i] = in.nextLong();
                 bi[i] = in.nextLong();
                 ci[i] = in.nextLong();
                 xi[i] = in.nextLong();
                 yi[i] = in.nextLong();
//                long maxfen = Math.max(ci,ai-xi*bi-yi*p);
//                System.out.println(maxfen);
                time[i] = xi[i];
//                map[i] = maxfen;
            }
            dfs(0);
            System.out.println(maxfen);
            //            long[] math =new long[n];

        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
4,C,Java,61480102,2023-03-24 19:26:53,菜鸡想进大厂～,答案错误,"import java.util.*;

public class Main {
    static ti[] arr;
    static int n, t, p;
    static long ans = 0;
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt(); t = sc.nextInt();
        p = sc.nextInt();
        arr = new ti[n];
        for (int i = 0; i < n; i ++) {
            arr[i] = new ti(sc.nextInt(), sc.nextInt(), sc.nextInt()
            ,sc.nextInt(), sc.nextInt());
        }
        dfs(0, 0, 0L);
        System.out.println(ans);

    }
    private static void dfs(int cur, int idx, long score) {
        if (idx == n) {
            ans = Math.max(ans, score);
            return;
        }
        ti tt = arr[idx];
        if (cur + tt.time <= t) {
            long add = Math.max(tt.low, tt.tol -
                    (long)(cur + tt.time) * tt.t - (long)tt.wa * p);
            dfs(cur + tt.time, idx + 1, score + add);
        }
        dfs(cur, idx + 1, score);
    }
}
class ti {
    int tol;
    int t;
    int low;
    int time;
    int wa;
    public ti(int tol, int t, int low, int time, int wa) {
        this.tol = tol; this.t = t; this.low = low;
        this.time = time;
        this.wa = wa;
    }
}"
5,C,Java,61480161,2023-03-24 19:27:19,人工智能3212卢明涛,答案错误,"

import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public static long gcd(long a,long b) {
            return b==0?a:gcd(b, a%b);
        }
        static long ans = 0;
        class Person{
            String name;
            String dui;
            double fen;
        }
        public static int binarySearch(int arr[], int target){
            int left = 0;
            int right = arr.length; // 注意
            while(left<right){ // 注意
                int mid = (left+right)/2;
                if(arr[mid] >= target){// 注意
                    right = mid;
                }else{
                    left = mid+1;
                }
            }
            return left;// 注意
        }
        static long start = 0;
        static long map[] = new long[100];
        static long time[]  = new long[100];

        static long use[] = new long[100];

        static long n,t,p;

        static long max = 0;

        static long maxfen = 0;
        static long sumtime = 0;
        static long[] ai = new long[20];
        static long[] bi = new long[20];
        static long[] ci = new long[20];
        static long[] xi = new long[20];
        static long[] yi = new long[20];

        static long sum =0;
        static void dfs(int id){
            int id1 = id+1;
            for (int i=id1;i<=n;i++){
                if (use[i]==0){
                    if (sumtime+time[i]<=t){
                        sumtime = sumtime + time[i];
                        long maxsu = Math.max(ci[i],ai[i]-sumtime*bi[i]-yi[i]*p);
                        sum = sum + maxsu ;
                        use[i] = 1;
                        maxfen = Math.max(maxfen,sum);
                        dfs(id1);
                        use[i] = 0;
                        sum = sum - maxsu;
                        sumtime = sumtime - time[i];
                    }
                    else {
                        maxfen = Math.max(maxfen,sum);
                    }
                }
                else {
                    maxfen = Math.max(maxfen,sum);
                }
            }
        }
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            n = in.nextLong();
            t = in.nextLong();
            p = in.nextLong();
            for (int i=1;i<=n;i++){
                ai[i] = in.nextLong();
                 bi[i] = in.nextLong();
                 ci[i] = in.nextLong();
                 xi[i] = in.nextLong();
                 yi[i] = in.nextLong();
//                long maxfen = Math.max(ci,ai-xi*bi-yi*p);
//                System.out.println(maxfen);
                time[i] = xi[i];
//                map[i] = maxfen;
            }
            dfs(0);
            System.out.println(maxfen);
            //            long[] math =new long[n];

        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
6,C,Java,61480185,2023-03-24 19:27:30,小怂很怂,答案正确,"
import java.io.*;

/**
 * @ClassName 开题顺序
 * @Description TODO
 * @Author 小怂很怂
 * @Date 2023/3/24 19:12
 * @Version 1.0
 **/
public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(br);
    static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));
    static int []f;
    static int n,t,p;
    static int [][]arr;
    static long count=0;
    public static void main(String[] args) throws Exception {
        n=nextInt();
        t=nextInt();
        p=nextInt();
        f=new int [n];
        for (int i=0;i<n;i++) f[i]=i;
        arr=new int[n][5];
        for (int i=0;i<n;i++){
            arr[i][0]=nextInt();arr[i][1]=nextInt();arr[i][2]=nextInt();arr[i][3]=nextInt();arr[i][4]=nextInt();
        }
        dfs(0);
        pw.println(count);
        pw.flush();
    }
    public static void dfs(int step){
        if (step==n){
            check();
            return;
        }
        for (int i=step;i<arr.length;i++){
            swap(i,step);
            dfs(step+1);
            swap(i,step);
        }
    }
    public static void swap(int a,int b){
        int t=f[a];
        f[a]=f[b];
        f[b]=t;
    }
    public static void check(){
        long sum=0,k=0,y=0;
        for (int i=0;i<n;i++){
            k+=arr[f[i]][3];
            if (k<=t){
                sum+=Math.max(arr[f[i]][2],arr[f[i]][0]-arr[f[i]][1]*k- (long) arr[f[i]][4] *p);
            }
        }
        count=Math.max(count,sum);
        for (int i=n-1;i>=0;i--){
            if (i==f[i]&&i==0) return;
            else if (i!=f[i])break;
        }
    }
    public static int nextInt() throws Exception {//int型
        st.nextToken();
        return (int) st.nval;
    }

    public static long nextLong() throws Exception {//long型
        st.nextToken();
        return (long) st.nval;
    }
}
"
7,C,Java,61480284,2023-03-24 19:28:14,北-北瓜,答案正确,"import java.util.*;
import java.math.*;
import java.io.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        n= in.nextInt();
        t= in.nextInt();
        p= in.nextInt();
        for (int i = 0; i <n; i++) {
            pp[i]=new A(in.nextInt(), in.nextInt(), in.nextInt(), in.nextInt(), in.nextInt());
        }
        dfs(0,0);
        System.out.println(max);





    }
    static int n,t,p;
    static void dfs(long i,long sum){
        if (i>t)return;
        max=Math.max(max,sum);
        for (int j = 0; j <n; j++) {
            if (vt[j]==0){
                vt[j]=1;
                if (i+pp[j].x<=t){
                    dfs(i+pp[j].x,sum+Math.max(pp[j].c,pp[j].a-(i+pp[j].x)*pp[j].b-pp[j].y*p));
                }
                vt[j]=0;
            }
        }

    }
    static long max=0;
    static A[]pp=new A[9];
    static int[]vt=new int[9];
    static class A{
        long a,b,c,x,y;

        public A(long a, long b, long c, long x, long y) {
            this.a = a;
            this.b = b;
            this.c = c;
            this.x = x;
            this.y = y;
        }

    }
}"
8,C,Java,61480415,2023-03-24 19:29:08,HMETAO,答案错误,"

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.lang.reflect.Array;
import java.util.*;
import java.util.function.BiFunction;
import java.util.stream.Collectors;

public class Main {

    static StringBuilder sb = new StringBuilder();

    public static void main(String[] args) {
        Reader r = new Reader();
        int t = 1;
//        t = r.nextInt();
        while (t-- > 0) {
            solve(r);
        }
        if (sb.length() > 0) System.out.println(sb.deleteCharAt(sb.length() - 1));

    }

    static long p = 0;

    private static void solve(Reader sc) {
        int n = sc.nextInt();
        long t = sc.nextLong();
        p = sc.nextLong();
        ArrayList<long[]> list = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            long a = sc.nextLong();
            long b = sc.nextLong();
            long c = sc.nextLong();
            long x = sc.nextLong();
            long y = sc.nextLong();
            list.add(new long[]{a, b, c, x, y});
        }
        dfs(list, 0, 0, t, 0);
        println(ans);
    }

    static long ans = 0;

    private static void dfs(ArrayList<long[]> list, int index, long score, long limit, long time) {
        if (time > limit) return;
        ans = Math.max(score, ans);
        for (int i = index; i < list.size(); i++) {
            long[] item = list.get(i);
            dfs(list, i + 1, score + Math.max(item[2], item[0] - (time + item[3]) * item[1] - item[4] * p), limit, time + item[3]);
        }

    }


    static class UnionFind {
        int[] parent;

        int n;

        public UnionFind(int n) {
            this.n = n - 1;
            this.parent = new int[n];
            for (int i = 0; i < n; i++) {
                parent[i] = i;
            }
        }

        public int find(int k) {
            if (parent[k] != k) {
                parent[k] = find(parent[k]);
            }
            return parent[k];
        }

        public void union(int x, int y) {
            int xRoot = find(x);
            int yRoot = find(y);
            if (xRoot != yRoot) {
                parent[xRoot] = yRoot;
            }
        }
    }

    static class BitIndexTree {
        long[] trie;
        int n;

        public BitIndexTree(int n) {
            this.n = n;
            trie = new long[n + 1];
        }

        public static int lowBit(int x) {
            return x & (-x);
        }

        public void add(int index, int v) {
            while (index <= n) {
                trie[index] += v;
                index += lowBit(index);
            }
        }

        public long query(int index) {
            long ans = 0;
            while (index > 0) {
                ans += trie[index];
                index -= lowBit(index);
            }
            return ans;
        }
    }

    private static void swap(int[] arr, int a, int b) {
        int temp = arr[a];
        arr[a] = arr[b];
        arr[b] = temp;
    }

    public static long pow3(long a, long b) {
        long ans = 1;
        while (b > 0) {
            if ((b & 1) == 1) {
                ans *= a;
            }
            a *= a;
            b >>= 1;
        }
        return ans;
    }

    public static long pow4(long a, long b, int p) {
        long ans = 1;
        a %= p;
        while (b > 0) {
            if ((b & 1) == 1) {
                ans = ans * a % p;
            }
            a = a * a % p;
            b >>= 1;
        }
        return ans;
    }

    public static List<Integer> euler(int n) {
        boolean[] check = new boolean[n + 1];
        List<Integer> ans = new ArrayList<>();
        for (int i = 2; i <= n; i++) {
            if (!check[i]) {
                ans.add(i);
            }
            for (Integer item : ans) {
                if (item * i > n) break;
                check[(item * i)] = true;
                if (i % item == 0) break;
            }
        }
        return ans;
    }

    public static void euler_phi(int n) {
        int ans = n;
        for (int i = 2; i <= n / i; i++) {
            if (n % i == 0) {
                ans *= (1 - 1.0 / i);
                while (n % i == 0) {
                    n /= i;
                }
            }
        }
        if (n > 1) ans *= (1 - 1.0 / n);
        System.out.println(ans);
    }

    public static int[] eulers(int n) {
        boolean[] check = new boolean[n + 1];
        int[] phi = new int[n + 1];
        phi[1] = 1;
        ArrayList<Integer> primes = new ArrayList<>();
        for (int i = 2; i <= n; i++) {
            if (!check[i]) {
                primes.add(i);
                phi[i] = i - 1;
            }

            for (Integer item : primes) {
                if (item * i > n) break;
                check[item * i] = true;
                if (i % item == 0) {
                    phi[item * i] = item * phi[i];
                    break;
                }
                phi[item * i] = (item - 1) * phi[i];
            }
        }
        return phi;
    }


    static final Random random = new Random();

    static void ruffleSort(int[] a) {
        int n = a.length;//shuffle, then sort
        for (int i = 0; i < n; i++) {
            int oi = random.nextInt(n), temp = a[oi];
            a[oi] = a[i];
            a[i] = temp;
        }
        Arrays.sort(a);
    }

    static class Reader {
        BufferedReader buf;
        StringTokenizer tok;

        Reader() {
            buf = new BufferedReader(new InputStreamReader(System.in));
        }

        boolean hasNext() {
            while (tok == null || !tok.hasMoreElements()) {
                try {
                    tok = new StringTokenizer(buf.readLine());
                } catch (Exception e) {
                    return false;
                }
            }
            return true;
        }

        String nextLine() {
            try {
                return buf.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        String next() {
            if (hasNext()) return tok.nextToken();
            return null;
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        int[] nextIntArrForSizeIndexOfOne(int size) {
            int[] nums = new int[size + 1];
            for (int i = 1; i <= size; i++) {
                nums[i] = nextInt();
            }
            return nums;
        }

        int[] nextIntArrForSizeIndexOfZero(int size) {
            int[] nums = new int[size];
            for (int i = 0; i < size; i++) {
                nums[i] = nextInt();
            }
            return nums;
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }
    }

    private static void print(Object t) {
        sb.append(t);
    }

    private static void printf(Object t) {
        sb.append(t).append("" "");
    }

    private static void printf(Object... t) {
        for (Object s : t) {
            sb.append(s).append("" "");
        }
        sb.deleteCharAt(sb.length() - 1);
    }

    private static void printf(String end, Object... t) {
        for (Object s : t) {
            sb.append(s).append("" "");
        }
        sb.deleteCharAt(sb.length() - 1);
        sb.append(end);
    }

    private static void println(Object t) {
        sb.append(t).append(""\n"");
    }

    private static void println() {
        sb.append(""\n"");
    }

    private static <T> void printArr(long[] arr) {
        for (Object o : arr) {
            sb.append(o).append("" "");
        }
    }

    private static <T> void printArr(int[] arr) {
        for (Object o : arr) {
            sb.append(o).append("" "");
        }
    }

}


"
9,C,Java,61480573,2023-03-24 19:30:25,人工智能3212卢明涛,答案错误,"
import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public static long gcd(long a,long b) {
            return b==0?a:gcd(b, a%b);
        }
        static long ans = 0;
        class Person{
            String name;
            String dui;
            double fen;
        }
        public static int binarySearch(int arr[], int target){
            int left = 0;
            int right = arr.length; // 注意
            while(left<right){ // 注意
                int mid = (left+right)/2;
                if(arr[mid] >= target){// 注意
                    right = mid;
                }else{
                    left = mid+1;
                }
            }
            return left;// 注意
        }
        static long start = 0;
        static long map[] = new long[100];
        static long time[]  = new long[100];

        static long use[] = new long[100];

        static long n,t,p;

        static long max = 0;

        static long maxfen = 0;
        static long sumtime = 0;
        static long[] ai = new long[20];
        static long[] bi = new long[20];
        static long[] ci = new long[20];
        static long[] xi = new long[20];
        static long[] yi = new long[20];

        static long sum =0;
        static void dfs(int id){
            int id1 = id+1;
            for (int i=id1;i<=n;i++){
                if (use[i]==0) {
                    if (sumtime + time[i] <= t) {
                        sumtime = sumtime + time[i];
                        long maxsu = Math.max(ci[i], ai[i] - sumtime * bi[i] - yi[i] * p);
                        sum = sum + maxsu;
                        use[i] = 1;
                        maxfen = Math.max(maxfen, sum);
                        dfs(id1);
                        use[i] = 0;
                        sum = sum - maxsu;
                        sumtime = sumtime - time[i];
                    }
                }
            }
        }
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            n = in.nextLong();
            t = in.nextLong();
            p = in.nextLong();
            for (int i=1;i<=n;i++){
                ai[i] = in.nextLong();
                 bi[i] = in.nextLong();
                 ci[i] = in.nextLong();
                 xi[i] = in.nextLong();
                 yi[i] = in.nextLong();
//                long maxfen = Math.max(ci,ai-xi*bi-yi*p);
//                System.out.println(maxfen);
                time[i] = xi[i];
//                map[i] = maxfen;
            }
            dfs(0);
            System.out.println(maxfen);
            //            long[] math =new long[n];

        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
10,C,Java,61480854,2023-03-24 19:32:26,EGOIST9029,答案正确,"import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static PrintWriter out = new PrintWriter(System.out);
    public static BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
    public static boolean[] visited;
    public static long[][] topics;
    public static int n;
    public static int t;
    public static int p;
    public static long ans = 0;
    public static void main(String[] args)throws Exception {
        String[] strings = reader.readLine().split("" "");
        n = Integer.parseInt(strings[0]);
        t = Integer.parseInt(strings[1]);
        p = Integer.parseInt(strings[2]);
        visited = new boolean[n];
        topics = new long[n][5];
        for(int j = 0;j<n;j++) {
            strings = reader.readLine().split("" "");
            for (int i = 0; i < 5; i++) {
                topics[j][i] = Long.parseLong(strings[i]);
            }
        }
        dfs(0,0,0);
        System.out.println(ans);
    }

    public static void dfs(int idx,long score,long time){
        if(time>t){
            return;
        }
        ans = Math.max(ans,score);
        for(int i = 0;i<n;i++){
            if(!visited[i]) {
                visited[i] = true;
                dfs(i, score + Math.max(topics[i][2], topics[i][0] - (time + topics[i][3]) * topics[i][1] - topics[i][4] * p), time + topics[i][3]);
                visited[i] = false;
            }
        }
    }
}"
11,C,Java,61481302,2023-03-24 19:35:35,人工智能3212卢明涛,答案正确,"

import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public static long gcd(long a,long b) {
            return b==0?a:gcd(b, a%b);
        }
        static long ans = 0;
        class Person{
            String name;
            String dui;
            double fen;
        }
        public static int binarySearch(int arr[], int target){
            int left = 0;
            int right = arr.length; // 注意
            while(left<right){ // 注意
                int mid = (left+right)/2;
                if(arr[mid] >= target){// 注意
                    right = mid;
                }else{
                    left = mid+1;
                }
            }
            return left;// 注意
        }
        static long start = 0;
        static long map[] = new long[100];
        static long time[]  = new long[100];

        static long use[] = new long[100];

        static long n,t,p;

        static long max = 0;

        static long maxfen = 0;
        static long sumtime = 0;
        static long[] ai = new long[20];
        static long[] bi = new long[20];
        static long[] ci = new long[20];
        static long[] xi = new long[20];
        static long[] yi = new long[20];

        static long sum =0;
        static void dfs(int id){
            for (int i=1;i<=n;i++){
                if (use[i]==0) {
                    if (sumtime + time[i] <= t) {
                        sumtime = sumtime + time[i];
                        long maxsu = Math.max(ci[i], ai[i] - sumtime * bi[i] - yi[i] * p);
                        sum = sum + maxsu;
                        use[i] = 1;
                        maxfen = Math.max(maxfen, sum);
                        dfs(0);
                        use[i] = 0;
                        sum = sum - maxsu;
                        sumtime = sumtime - time[i];
                    }
                }
            }
        }
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            n = in.nextLong();
            t = in.nextLong();
            p = in.nextLong();
            for (int i=1;i<=n;i++){
                ai[i] = in.nextLong();
                 bi[i] = in.nextLong();
                 ci[i] = in.nextLong();
                 xi[i] = in.nextLong();
                 yi[i] = in.nextLong();
//                long maxfen = Math.max(ci,ai-xi*bi-yi*p);
//                System.out.println(maxfen);
                time[i] = xi[i];
//                map[i] = maxfen;
            }
            dfs(0);
            System.out.println(maxfen);
            //            long[] math =new long[n];

        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
12,C,Java,61481460,2023-03-24 19:36:40,Mosyi.,答案错误,"import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int t = in.nextInt();
            int p = in.nextInt();
            int[] a = new int[n];
            int[] b = new int[n];
            int[] c = new int[n];
            int[] y = new int[n];
            A[] aa = new A[n];
            for (int i = 0; i < n; i++) {
                aa[i] = new A();
                a[i] = in.nextInt();
                b[i] = in.nextInt();
                c[i] = in.nextInt();
                aa[i].time = in.nextInt();
                y[i] = in.nextInt();
            }
            Arrays.sort(aa, new Comparator<A>() {
                @Override
                public int compare(A o1, A o2) {
                    if(o1.time == o2.time){
                        return Long.compare(o2.sum,o1.sum);
                    }
                    return Integer.compare(o1.time,o2.time);
                }
            });
            long res = 0;
            int q = t;
            for (int i = 0; i < n; i++) {
                if(q - aa[i].time >= 0){
                    q -= aa[i].time;
                    res += Math.max(c[i],a[i] - (t - q) * b[i] - y[i] * p);
                }
            }
            Arrays.sort(aa, new Comparator<A>() {
                @Override
                public int compare(A o1, A o2) {
                    if(o1.sum == o2.sum){
                        return Integer.compare(o1.time,o2.time);
                    }
                    return Long.compare(o2.sum,o1.sum);
                }
            });
            long res1 = 0;
            q = t;
            for (int i = 0; i < n; i++) {
                if(q - aa[i].time >= 0){
                    q -= aa[i].time;
                    res1 += Math.max(c[i],a[i] - (t - q) * b[i] - y[i] * p);
                }
            }
            out.println(Math.max(res1,res));
        }
        static class A{
            int time;
            long sum;
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }

    }
}"
13,C,Java,61481662,2023-03-24 19:38:12,Ulrica_Ricky_Morhaime,答案错误,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        int n = sc.nextInt();
        int t = sc.nextInt();
        int p = sc.nextInt();
        
        int[] a = new int[n];
        int[] b = new int[n];
        int[] c = new int[n];
        int[] x = new int[n];
        int[] y = new int[n];
        
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
            b[i] = sc.nextInt();
            c[i] = sc.nextInt();
            x[i] = sc.nextInt();
            y[i] = sc.nextInt();
        }
        
        int sum = 0;
        int time = 0;
        
        for (int i = 0; i < n; i++) {
            time += x[i];
            if (time > t) continue;
            int score = a[i] - time * b[i] - y[i] * p;
            sum += c[i] > score ? c[i] : score;
        }
        System.out.println(sum);
        
        sc.close();
    }
}"
14,C,Java,61481706,2023-03-24 19:38:33,lllllllle,答案错误,"
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.math.BigInteger;
import java.nio.Buffer;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Queue;
import java.util.Scanner;
import java.util.Set;
import java.util.TreeMap;
import java.util.TreeSet;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;


public class Main {
	
	public static void main(String[] args) throws IOException {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		String[] s=br.readLine().split("" "");
		int n=Integer.parseInt(s[0]);
		long t=Long.parseLong(s[1]);
		long p=Long.parseLong(s[2]);
		long[][] title=new long[n][5];
		for(int i=0;i<n;i++) {
			s=br.readLine().split("" "");
			for(int j=0;j<5;j++) {
				title[i][j]=Long.parseLong(s[j]);
			}
		}
		long[] time=new long[1<<n];
		for(int i=1;i<1<<n;i++) {
			for(int j=0;j<n;j++) {
				if((i&(1<<j))==0) {
					continue;
				}
				time[i]=time[i^(1<<j)]+title[j][3];
				break;
			}
		}
		long[] dp=new long[1<<n];
		dp[0]=0;
		long ans=0;
		for(int i=1;i<1<<n;i++) {
			for(int j=0;j<n;j++) {
				if((i&(1<<j))==0) {
					continue;
				}
				if(time[i]>t) {
					continue;
				}
				long tmp=title[j][0]-time[i]*title[j][1]-title[j][4]*p;
				dp[i]=Math.max(dp[i], Math.max(title[j][2], dp[i^(1<<j)]+tmp));
			}
			ans=Math.max(ans, dp[i]);
		}
		System.out.println(ans);
		
	}

	
}
"
15,C,Java,61481730,2023-03-24 19:38:42,菜鸡想进大厂～,答案正确,"import java.util.*;

public class Main {
    static ti[] arr;
    static int n, t, p;
    static long ans = 0;
    static boolean[] st = new boolean[10]; 
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt(); t = sc.nextInt();
        p = sc.nextInt();
        arr = new ti[n];
        for (int i = 0; i < n; i ++) {
            arr[i] = new ti(sc.nextInt(), sc.nextInt(), sc.nextInt()
            ,sc.nextInt(), sc.nextInt());
        }
        dfs(0,0L);
        System.out.println(ans);

    }
    private static void dfs(int cur, long score) {
        for (int i = 0; i < n; i ++) {
            if (st[i]) continue;
            ti tt = arr[i];
            if (cur + tt.time > t) continue;
            st[i] = true; 
            long add = Math.max(tt.low, tt.tol -
                    (long)(cur + tt.time) * tt.t - (long)tt.wa * p);
            ans = Math.max(ans, score + add);
            dfs(cur + tt.time, score + add);
            st[i] = false;
        }
    }
}
class ti {
    int tol;
    int t;
    int low;
    int time;
    int wa;
    public ti(int tol, int t, int low, int time, int wa) {
        this.tol = tol; this.t = t; this.low = low;
        this.time = time;
        this.wa = wa;
    }
}"
16,C,Java,61481912,2023-03-24 19:40:15,giao1,答案错误,"import java.util.*;

public class Main{
    
    static int N = 9, n,t,p;
    static int[] path = new int[N];
    static boolean[] st = new boolean[N];
    static Node[] node;
    static long sum = 0,cnt = 0;
    public static void main(String[] args){
        Scanner cin = new Scanner(System.in);
        n = cin.nextInt();
        t = cin.nextInt();
        p = cin.nextInt();
        node = new Node[n];
        long score = 0;
       for(int i = 0;i<n;i++){
            int a = cin.nextInt();
            int b = cin.nextInt();
            int c = cin.nextInt();
            int x = cin.nextInt();
            int y = cin.nextInt();
            node[i] = new Node(a,b,c,x,y);
        }
        dfs(0);
        System.out.println(cnt);
    }
    
     public static void dfs(int u){
        if(u == n){
            sum = 0;
            for(int i = 0 ; i < n ; i ++ ){
                int a = node[i].a;
                int b = node[i].b;
                int c = node[i].x;
                //int x = node[i].x
                int y = node[i].y; 
                if(i!=0){
                    node[i].x+=node[i-1].x;
                    if(node[i].x<=t)sum+=Math.max(c,a-node[i].x*b-y*p);
                }else{
                    if(node[i].x<=t)sum+=Math.max(c,a-node[i].x*b-y*p);
                }
            }
            cnt=Math.max(sum,cnt);
            return;
        }
        for(int i = 0 ; i < n ; i ++ ){
            if(!st[i]){
                path[u] = i;
                st[i] = true;
                dfs(u + 1);
                st[i] = false;
            }
        }
    }


    
}

class Node{
    int a,b,c,x,y;
    public Node(int a,int b,int c,int x,int y){
        this.x = x;
        this.y=y;
        this.a = a;
        this.b=b;
        this.c = c;
    }
}"
17,C,Java,61482046,2023-03-24 19:41:12,lllllllle,答案错误,"
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.math.BigInteger;
import java.nio.Buffer;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Queue;
import java.util.Scanner;
import java.util.Set;
import java.util.TreeMap;
import java.util.TreeSet;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;


public class Main {
	
	public static void main(String[] args) throws IOException {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		String[] s=br.readLine().split("" "");
		int n=Integer.parseInt(s[0]);
		long t=Long.parseLong(s[1]);
		long p=Long.parseLong(s[2]);
		long[][] title=new long[n][5];
		for(int i=0;i<n;i++) {
			s=br.readLine().split("" "");
			for(int j=0;j<5;j++) {
				title[i][j]=Long.parseLong(s[j]);
			}
		}
		long[] time=new long[1<<n];
		for(int i=1;i<1<<n;i++) {
			for(int j=0;j<n;j++) {
				if((i&(1<<j))==0) {
					continue;
				}
				time[i]=time[i^(1<<j)]+title[j][3];
				break;
			}
		}
		long[] dp=new long[1<<n];
		dp[0]=0;
		long ans=0;
		for(int i=1;i<1<<n;i++) {
			for(int j=0;j<n;j++) {
				if((i&(1<<j))==0) {
					continue;
				}
				if(time[i]>t) {
					continue;
				}
				long tmp=title[j][0]-time[i]*title[j][1]-title[j][4]*p;
				dp[i]=Math.max(dp[i], Math.max(title[j][2], dp[i^(1<<j)]+tmp));
			}
			ans=Math.max(ans, dp[i]);
		}
		System.out.println(ans);
		
	}

	
}
"
18,C,Java,61482205,2023-03-24 19:42:30,HMETAO,答案正确,"
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;

public class Main {

    static StringBuilder sb = new StringBuilder();

    public static void main(String[] args) {
        Reader r = new Reader();
        int t = 1;
//        t = r.nextInt();
        while (t-- > 0) {
            solve(r);
        }
        if (sb.length() > 0) System.out.println(sb.deleteCharAt(sb.length() - 1));

    }

    static long p = 0;

    private static void solve(Reader sc) {
        int n = sc.nextInt();
        long t = sc.nextLong();
        p = sc.nextLong();
        ArrayList<long[]> list = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            long a = sc.nextLong();
            long b = sc.nextLong();
            long c = sc.nextLong();
            long x = sc.nextLong();
            long y = sc.nextLong();
            list.add(new long[]{a, b, c, x, y});
        }
        dfs(list, 0, 0, t, 0, new boolean[n]);
        println(ans);
    }

    static long ans = 0;

    private static void dfs(ArrayList<long[]> list, int index, long score, long limit, long time, boolean[] used) {
        if (time > limit) return;
        ans = Math.max(score, ans);
        for (int i = 0; i < list.size(); i++) {
            long[] item = list.get(i);
            if (!used[i]) {
                used[i] = true;
                dfs(list, i + 1, score + Math.max(item[2], item[0] - (time + item[3]) * item[1] - item[4] * p), limit, time + item[3], used);
                used[i] = false;
            }
        }

    }


    static class UnionFind {
        int[] parent;

        int n;

        public UnionFind(int n) {
            this.n = n - 1;
            this.parent = new int[n];
            for (int i = 0; i < n; i++) {
                parent[i] = i;
            }
        }

        public int find(int k) {
            if (parent[k] != k) {
                parent[k] = find(parent[k]);
            }
            return parent[k];
        }

        public void union(int x, int y) {
            int xRoot = find(x);
            int yRoot = find(y);
            if (xRoot != yRoot) {
                parent[xRoot] = yRoot;
            }
        }
    }

    static class BitIndexTree {
        long[] trie;
        int n;

        public BitIndexTree(int n) {
            this.n = n;
            trie = new long[n + 1];
        }

        public static int lowBit(int x) {
            return x & (-x);
        }

        public void add(int index, int v) {
            while (index <= n) {
                trie[index] += v;
                index += lowBit(index);
            }
        }

        public long query(int index) {
            long ans = 0;
            while (index > 0) {
                ans += trie[index];
                index -= lowBit(index);
            }
            return ans;
        }
    }

    private static void swap(int[] arr, int a, int b) {
        int temp = arr[a];
        arr[a] = arr[b];
        arr[b] = temp;
    }

    public static long pow3(long a, long b) {
        long ans = 1;
        while (b > 0) {
            if ((b & 1) == 1) {
                ans *= a;
            }
            a *= a;
            b >>= 1;
        }
        return ans;
    }

    public static long pow4(long a, long b, int p) {
        long ans = 1;
        a %= p;
        while (b > 0) {
            if ((b & 1) == 1) {
                ans = ans * a % p;
            }
            a = a * a % p;
            b >>= 1;
        }
        return ans;
    }

    public static List<Integer> euler(int n) {
        boolean[] check = new boolean[n + 1];
        List<Integer> ans = new ArrayList<>();
        for (int i = 2; i <= n; i++) {
            if (!check[i]) {
                ans.add(i);
            }
            for (Integer item : ans) {
                if (item * i > n) break;
                check[(item * i)] = true;
                if (i % item == 0) break;
            }
        }
        return ans;
    }

    public static void euler_phi(int n) {
        int ans = n;
        for (int i = 2; i <= n / i; i++) {
            if (n % i == 0) {
                ans *= (1 - 1.0 / i);
                while (n % i == 0) {
                    n /= i;
                }
            }
        }
        if (n > 1) ans *= (1 - 1.0 / n);
        System.out.println(ans);
    }

    public static int[] eulers(int n) {
        boolean[] check = new boolean[n + 1];
        int[] phi = new int[n + 1];
        phi[1] = 1;
        ArrayList<Integer> primes = new ArrayList<>();
        for (int i = 2; i <= n; i++) {
            if (!check[i]) {
                primes.add(i);
                phi[i] = i - 1;
            }

            for (Integer item : primes) {
                if (item * i > n) break;
                check[item * i] = true;
                if (i % item == 0) {
                    phi[item * i] = item * phi[i];
                    break;
                }
                phi[item * i] = (item - 1) * phi[i];
            }
        }
        return phi;
    }


    static final Random random = new Random();

    static void ruffleSort(int[] a) {
        int n = a.length;//shuffle, then sort
        for (int i = 0; i < n; i++) {
            int oi = random.nextInt(n), temp = a[oi];
            a[oi] = a[i];
            a[i] = temp;
        }
        Arrays.sort(a);
    }

    static class Reader {
        BufferedReader buf;
        StringTokenizer tok;

        Reader() {
            buf = new BufferedReader(new InputStreamReader(System.in));
        }

        boolean hasNext() {
            while (tok == null || !tok.hasMoreElements()) {
                try {
                    tok = new StringTokenizer(buf.readLine());
                } catch (Exception e) {
                    return false;
                }
            }
            return true;
        }

        String nextLine() {
            try {
                return buf.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        String next() {
            if (hasNext()) return tok.nextToken();
            return null;
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        int[] nextIntArrForSizeIndexOfOne(int size) {
            int[] nums = new int[size + 1];
            for (int i = 1; i <= size; i++) {
                nums[i] = nextInt();
            }
            return nums;
        }

        int[] nextIntArrForSizeIndexOfZero(int size) {
            int[] nums = new int[size];
            for (int i = 0; i < size; i++) {
                nums[i] = nextInt();
            }
            return nums;
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }
    }

    private static void print(Object t) {
        sb.append(t);
    }

    private static void printf(Object t) {
        sb.append(t).append("" "");
    }

    private static void printf(Object... t) {
        for (Object s : t) {
            sb.append(s).append("" "");
        }
        sb.deleteCharAt(sb.length() - 1);
    }

    private static void printf(String end, Object... t) {
        for (Object s : t) {
            sb.append(s).append("" "");
        }
        sb.deleteCharAt(sb.length() - 1);
        sb.append(end);
    }

    private static void println(Object t) {
        sb.append(t).append(""\n"");
    }

    private static void println() {
        sb.append(""\n"");
    }

    private static <T> void printArr(long[] arr) {
        for (Object o : arr) {
            sb.append(o).append("" "");
        }
    }

    private static <T> void printArr(int[] arr) {
        for (Object o : arr) {
            sb.append(o).append("" "");
        }
    }

}


"
19,C,Java,61482295,2023-03-24 19:43:07,giao1,答案错误,"import java.util.*;

public class Main{
    
    static int N = 9, n,t,p;
    static int[] path = new int[N];
    static boolean[] st = new boolean[N];
    static Node[] node;
    static long sum = 0,cnt = 0;
    public static void main(String[] args){
        Scanner cin = new Scanner(System.in);
        n = cin.nextInt();
        t = cin.nextInt();
        p = cin.nextInt();
        node = new Node[n];
        long score = 0;
       for(int i = 0;i<n;i++){
            long a = cin.nextLong();
            long b = cin.nextLong();
            long c = cin.nextLong();
            long x = cin.nextLong();
            long y = cin.nextLong();
            node[i] = new Node(a,b,c,x,y);
        }
        dfs(0);
        System.out.println(cnt);
    }
    
     public static void dfs(int u){
        if(u == n){
            sum = 0;
            for(int i = 0 ; i < n ; i ++ ){
                long a = node[i].a;
                long b = node[i].b;
                long c = node[i].x;
                //int x = node[i].x
                long y = node[i].y; 
                if(i!=0){
                    node[i].x+=node[i-1].x;
                    if(node[i].x<=t)sum+=Math.max(c,a-node[i].x*b-y*p);
                }else{
                    if(node[i].x<=t)sum+=Math.max(c,a-node[i].x*b-y*p);
                }
            }
            cnt=Math.max(sum,cnt);
            return;
        }
        for(int i = 0 ; i < n ; i ++ ){
            if(!st[i]){
                path[u] = i;
                st[i] = true;
                dfs(u + 1);
                st[i] = false;
            }
        }
    }


    
}

class Node{
    long a,b,c,x,y;
    public Node(long a,long b,long c,long x,long y){
        this.x = x;
        this.y=y;
        this.a = a;
        this.b=b;
        this.c = c;
    }
}"
20,C,Java,61482562,2023-03-24 19:45:10,牛客517457762号,答案错误,"import java.util.*;
public class Main {
    static int [][]score;
    static int n,t,p;
    static int [][] mscore;
    public static void main(String[]args){
        Scanner sc=new Scanner(System.in);
        n=sc.nextInt();t=sc.nextInt();p=sc.nextInt();
        score=new int[n][5];
        mscore=new int[n][2];
        for(int i=0;i<n;i++){
            for(int j=0;j<5;j++) score[i][j]=sc.nextInt();
        }
        Arrays.sort(score,(a,b)->a[0]/a[4]-b[0]/b[4]);
        int curt=0;
        int ans=0;
        for(int i=0;i<n;i++){
            curt+=score[i][3];
            if(curt>t)break;
            ans+=getsc(score[i],curt);
        }
        System.out.println(ans);
    }
    static int getsc(int[] s,int t){
        return Math.max(s[2],s[0]-t*s[1]-s[4]*p);
    }

}"
21,C,Java,61482841,2023-03-24 19:47:08,牛客517457762号,答案错误,"import java.util.*;
public class Main {
    static int [][]score;
    static int n,t,p;
    static int [][] mscore;
    public static void main(String[]args){
        Scanner sc=new Scanner(System.in);
        n=sc.nextInt();t=sc.nextInt();p=sc.nextInt();
        score=new int[n][5];
        mscore=new int[n][2];
        for(int i=0;i<n;i++){
            for(int j=0;j<5;j++) score[i][j]=sc.nextInt();
        }
        Arrays.sort(score,(a,b)->a[0]/a[4]-b[0]/b[4]);
        int curt=0;
        int ans=0;
        for(int i=0;i<n;i++){
            curt+=score[i][3];
            if(curt>t)break;
            ans+=getsc(score[i],curt);
        }
        System.out.println(ans);
    }
    static int getsc(int[] s,int t){
        return Math.max(s[2],s[0]-t*s[1]-s[4]*p);
    }
}"
22,C,Java,61482989,2023-03-24 19:48:18,何妨吟啸且徐行1,答案错误,"import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int t = sc.nextInt();
        int p = sc.nextInt();
        int[] a = new int[n];
        int[] b = new int[n];
        int[] c = new int[n];
        int[] x = new int[n];
        int[] y = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
            b[i] = sc.nextInt();
            c[i] = sc.nextInt();
            x[i] = sc.nextInt();
            y[i] = sc.nextInt();
        }
        int[] dp = new int[t+1];
        for (int i = 0; i < n; i++) {
            for (int j = t; j >= x[i]; j--) {
                for (int k = 0; k <= y[i] && k * p <= j - x[i]; k++) {
                    int score = Math.max(c[i], a[i] - j * b[i] + k * p);
                    dp[j] = Math.max(dp[j], dp[j-x[i]] + score);
                }
            }
        }
        System.out.println(dp[t]);
    }
}
"
23,C,Java,61483070,2023-03-24 19:48:51,谦虚的驼瑞驰胖乎乎,答案错误,"
import java.io.*;

public class Main {
    static StreamTokenizer ss=new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
    static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    public static int nextInt() throws IOException {
        ss.nextToken();
        return (int)ss.nval;
    }
    static int n,t,p;
    static boolean []st = new boolean[10];
    static int []book = new int[10] , a = new int[10],b = new int[10] , c = new int[10];
    static int []x = new int[10],y = new int[10];
    static long ans;
    static void dfs(int u,int s,long num){
        if(u == n){
            return;
        }
        for(int i = 1; i <= n; i ++){
            if(!st[i] && s + x[i] <= t){
                book[u] = i;
                st[i] = true;
                s += x[i];
                long ad = Math.max(c[i],a[i] - s * b[i]  - y[i] * p);
//                System.out.print(ad + "" "");
                ans = Math.max(ans,ad + num);
                dfs(u + 1,s, num + ad );
                st[i] = false;
            }
        }
    }
    public static void main(String[] args) throws IOException {
       n = nextInt(); t  = nextInt(); p = nextInt();
       for(int i = 1; i <= n; i ++){
            a[i] = nextInt();b[i] = nextInt();c[i] = nextInt();x[i] = nextInt();y[i] = nextInt();
       }
        dfs(0,0,0);
        System.out.println(ans);
    }
}
"
24,C,Java,61483117,2023-03-24 19:49:17,wkkwmm,答案错误,"import javax.swing.plaf.IconUIResource;
import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        long max=0,t=0,p=0;
        int n=0;
        A a[]=new A[n];
       void find(int index,int nn,long mm,long tt){
            for (int i = index+1; i <nn ; i++) {
                if(tt+a[i].xx>t){
                    break;
                }
                long mm2=Math.max(a[i].cc,a[i].aa-(tt+a[i].xx)*a[i].bb-a[i].yy*p);
                max=Math.max(max,mm2+mm);
                find(i,nn,mm+mm2,tt+a[i].xx);
            }
        }
        public void solve(int testNumber, InputReader in, PrintWriter out) {
           n=in.nextInt();
           t=in.nextLong();
           p=in.nextLong();
           a=new A[n];
            for (int i = 0; i <n ; i++) {
                a[i]=new A();
                a[i].aa=in.nextLong();
                a[i].bb=in.nextLong();
                a[i].cc=in.nextLong();
                a[i].xx=in.nextLong();
                a[i].yy=in.nextLong();
            }
            find(-1,n,0,0);
            out.println(max);
        }
        class A{
            long aa=0,bb=0,cc=0,xx=0,yy=0;
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }

    }
}"
25,C,Java,61483282,2023-03-24 19:50:36,giao1,答案错误,"import java.util.*;

public class Main{
    
    static int N = 9, n,t,p;
    static int[] path = new int[N];
    static boolean[] st = new boolean[N];
    static Node[] node;
    static long sum = 0,cnt = 0;
    static long[] copy = new long[N];
    public static void main(String[] args){
        Scanner cin = new Scanner(System.in);
        n = cin.nextInt();
        t = cin.nextInt();
        p = cin.nextInt();
        node = new Node[n];
        long score = 0;
       for(int i = 0;i<n;i++){
            long a = cin.nextLong();
            long b = cin.nextLong();
            long c = cin.nextLong();
            long x = cin.nextLong();
            long y = cin.nextLong();
            node[i] = new Node(a,b,c,x,y);
           copy[i] = node[i].x;
        }
        dfs(0);
        System.out.println(cnt);
    }
    
     public static void dfs(int u){
        if(u == n){
            sum = 0;
            for(int i = 0;i<n;i++)node[i].x=copy[i];
            for(int i = 0 ; i < n ; i ++ ){
                long a = node[i].a;
                long b = node[i].b;
                long c = node[i].x;
                //int x = node[i].x
                long y = node[i].y; 
                if(i!=0){
                    node[i].x+=node[i-1].x;
                    if(node[i].x<=t)sum+=Math.max(c,a-node[i].x*b-y*p);
                }else{
                    if(node[i].x<=t)sum+=Math.max(c,a-node[i].x*b-y*p);
                }
            }
            cnt=Math.max(sum,cnt);
            return;
        }
        for(int i = 0 ; i < n ; i ++ ){
            if(!st[i]){
                path[u] = i;
                st[i] = true;
                dfs(u + 1);
                st[i] = false;
            }
        }
    }


    
}

class Node{
    long a,b,c,x,y;
    public Node(long a,long b,long c,long x,long y){
        this.x = x;
        this.y=y;
        this.a = a;
        this.b=b;
        this.c = c;
    }
}"
26,C,Java,61483443,2023-03-24 19:51:50,凯撒Katharsis,答案错误,"import java.util.*;
import java.io.*;

public class Main {
    private static Scanner sc = new Scanner(System.in);
    private static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    private static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
    private static int a[] = new int[11], cnt[] = new int[100010], ans = 0, n;
    private static int b[] = new int[11], c[] = new int[11], x[] = new int[11], y[] = new int[11];
    private static int t, p;
    private static List<Integer> ne = new ArrayList<>();


    private static void dfs(int u, int now, int spend, List g) {
        if(u == n) return ;


        if(now > ans) {
            ans = now;
            ne = g;
        }

        dfs(u + 1, now, spend, g);
        List<Integer> hg = new ArrayList<>();
        hg.addAll(g);
        hg.add(u);
        if(spend + x[u] <= t) dfs(u + 1, now + Math.max(c[u], a[u] - (x[u] + spend) * b[u] - y[u] * p), spend + x[u], hg);
    }

    public static void main(String[] args) throws Exception {
        String str[] = br.readLine().split("" "");

        n = Integer.parseInt(str[0]);
        t = Integer.parseInt(str[1]);
        p = Integer.parseInt(str[2]);


        for(int i = 0; i < n; i ++ ) {
            str = br.readLine().split("" "");
            a[i] = Integer.parseInt(str[0]);
            b[i] = Integer.parseInt(str[1]);
            c[i] = Integer.parseInt(str[2]);
            x[i] = Integer.parseInt(str[3]);
            y[i] = Integer.parseInt(str[4]);
        }

        dfs(0, 0, 0, new ArrayList<Integer>());

        bw.write(ans + ""\n"");

        // for(int i = 0; i < ne.size(); i ++ ) {
        //     bw.write(ne.get(i) + "" "");
        // }
        bw.flush();
    }
}"
27,C,Java,61483517,2023-03-24 19:52:21,giao1,答案错误,"import java.util.*;

public class Main{
    
    static int N = 9, n,t,p;
    static int[] path = new int[N];
    static boolean[] st = new boolean[N];
    static Node[] node;
    static long sum = 0,cnt = 0;
    static long[] copy = new long[N];
    public static void main(String[] args){
        Scanner cin = new Scanner(System.in);
        n = cin.nextInt();
        t = cin.nextInt();
        p = cin.nextInt();
        node = new Node[n];
        long score = 0;
       for(int i = 0;i<n;i++){
            long a = cin.nextLong();
            long b = cin.nextLong();
            long c = cin.nextLong();
            long x = cin.nextLong();
            long y = cin.nextLong();
            node[i] = new Node(a,b,c,x,y);
            copy[i] = node[i].x;
        }
        dfs(0);
        System.out.println(cnt);
    }
    
     public static void dfs(int u){
        if(u == n){
            sum = 0;
            for(int i = 0;i<n;i++)node[i].x=copy[i];
            for(int i = 0 ; i < n ; i ++ ){
                long a = node[i].a;
                long b = node[i].b;
                long c = node[i].x;
                //int x = node[i].x
                long y = node[i].y; 
                if(i!=0){
                    node[i].x+=node[i-1].x;
                    if(node[i].x<=t)sum+=Math.max(c,a-node[i].x*b-y*p);
                    else break;
                }else{
                    if(node[i].x<=t)sum+=Math.max(c,a-node[i].x*b-y*p);
                    else break;
                }
            }
            cnt=Math.max(sum,cnt);
            return;
        }
        for(int i = 0 ; i < n ; i ++ ){
            if(!st[i]){
                path[u] = i;
                st[i] = true;
                dfs(u + 1);
                st[i] = false;
            }
        }
    }


    
}

class Node{
    long a,b,c,x,y;
    public Node(long a,long b,long c,long x,long y){
        this.x = x;
        this.y=y;
        this.a = a;
        this.b=b;
        this.c = c;
    }
}"
28,C,Java,61483592,2023-03-24 19:52:53,可爱抱抱呀😥,答案正确,"//Java快读快写模板，不定时更新优化内容
//@可爱抱抱呀
import java.util.*;
import java.io.*;
import java.math.*;
import java.text.*;
public class Main{
    static long p;
    static long arr[][];
    static int n;
    static long t;
    static long ans=0;
    static boolean has[]=new boolean[19];
    public static void main(String args[]) throws IOException{
        Read sc=new Read();
        n=sc.nextInt();
        t=sc.nextLong();
        p=sc.nextLong();
        arr=new long[n][5];
        for(int i=0;i<n;i++){
            for(int j=0;j<5;j++){
                arr[i][j]=sc.nextLong();
            }
        }
        find(0,0,0);
        sc.println(ans);
        //sc.print(0);
        sc.bw.flush();
        sc.bw.close();
    }
    static void find(int count,long now,long t1){
        if(count==n){
            ans=Math.max(ans,now);
        }
        else{
            for(int i=0;i<n;i++){
                if(!has[i]){
                    has[i]=true;
                    long pp=now;
                    long t2=t1+arr[i][3];
                    if(t2<=t){
                        pp+=Math.max(arr[i][2],arr[i][0]-t2*arr[i][1]-p*arr[i][4]);
                    }
                    find(count+1,pp,t2);
                    has[i]=false;
                }
            }
        }
    }
}
//记住看数字范围，需要开long吗，需要用BigInteger吗，需要手动处理字符串吗，复杂度数量级控制在1e7或者以下了吗
//开数组的数据范围最高不能超过1e7，数据范围再大就要用哈希表离散化了
//基本数据类型不能自定义sort排序，二维数组就可以了，顺序排序的时候是小减大，注意返回值应该是int
class Read{
    BufferedReader bf;
    StringTokenizer st;
    BufferedWriter bw;
    public Read(){
        bf=new BufferedReader(new InputStreamReader(System.in));
        st=new StringTokenizer("""");
        bw=new BufferedWriter(new OutputStreamWriter(System.out));
        //什么时候才能持续稳定ak力扣、AcWing呢？
        //什么时候才能ak cf的div2，div1呢？才能打div2不计rating呢？
        //什么时候才能ak  abc  不计rating呢？
        //什么时候才能ak 牛客练习赛不计rating呢?
    }
    public String nextLine() throws IOException{
        return bf.readLine();
    }
    public String next() throws IOException{
        while(!st.hasMoreTokens()){
            st=new StringTokenizer(bf.readLine());
        }
        return st.nextToken();
    }
    public char nextChar() throws IOException{
        //确定下一个token只有一个字符的时候再用
        return next().charAt(0);
    }
    public int nextInt() throws IOException{
        return Integer.parseInt(next());
    }
    public long nextLong() throws IOException{
        return Long.parseLong(next());
    }
    public double nextDouble() throws IOException{
        return Double.parseDouble(next());
    }
    public float nextFloat() throws IOException{
        return Float.parseFloat(next());
    }
    public byte nextByte() throws IOException{
        return Byte.parseByte(next());
    }
    public short nextShort() throws IOException{
        return Short.parseShort(next());
    }
    public BigInteger nextBigInteger() throws IOException{
        return new BigInteger(next());
    }
    public void println(int a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(int a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(String a) throws IOException{
        bw.write(a);
        bw.newLine();
        return;
    }
    public void print(String a) throws IOException{
        bw.write(a);
        return;
    }
    public void println(long a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(long a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(double a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(double a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void print(BigInteger a) throws IOException{
        bw.write(a.toString());
        return;
    }
    public void print(char a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(char a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
}"
29,C,Java,61483823,2023-03-24 19:54:34,wkkwmm,答案错误,"import javax.swing.plaf.IconUIResource;
import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        long max=0,t=0,p=0;
        int n=0;
        A a[]=new A[n];
       void find(int index,int nn,long mm,long tt){
            for (int i = index+1; i <nn ; i++) {
                if(tt+a[i].xx<=t){
                    long mm2=Math.max(a[i].cc,a[i].aa-(tt+a[i].xx)*a[i].bb-a[i].yy*p);
                    max=Math.max(max,mm2+mm);
                    find(i,nn,mm+mm2,tt+a[i].xx);
                }
            }
        }
        public void solve(int testNumber, InputReader in, PrintWriter out) {
           n=in.nextInt();
           t=in.nextLong();
           p=in.nextLong();
           a=new A[n];
            for (int i = 0; i <n ; i++) {
                a[i]=new A();
                a[i].aa=in.nextLong();
                a[i].bb=in.nextLong();
                a[i].cc=in.nextLong();
                a[i].xx=in.nextLong();
                a[i].yy=in.nextLong();
            }
            find(-1,n,0,0);
            out.println(max);
        }
        class A{
            long aa=0,bb=0,cc=0,xx=0,yy=0;
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }

    }
}"
30,C,Java,61483958,2023-03-24 19:55:42,凯撒Katharsis,答案错误,"import java.util.*;
import java.io.*;

public class Main {
    private static Scanner sc = new Scanner(System.in);
    private static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    private static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
    private static long a[] = new long[11], ans = 0, n;
    private static long b[] = new long[11], c[] = new long[11], x[] = new long[11], y[] = new long[11];
    private static long t, p;


    private static void dfs(int u, long now, long spend) {
        if(u == n) return ;


        ans = Math.max(ans, now);

        dfs(u + 1, now, spend);
        if(spend + x[u] <= t) dfs(u + 1, now + Math.max(c[u], a[u] - (x[u] + spend) * b[u] - y[u] * p), spend + x[u]);
    }

    public static void main(String[] args) throws Exception {
        String str[] = br.readLine().split("" "");

        n = Integer.parseInt(str[0]);
        t = Integer.parseInt(str[1]);
        p = Integer.parseInt(str[2]);


        for(int i = 0; i < n; i ++ ) {
            str = br.readLine().split("" "");
            a[i] = Integer.parseInt(str[0]);
            b[i] = Integer.parseInt(str[1]);
            c[i] = Integer.parseInt(str[2]);
            x[i] = Integer.parseInt(str[3]);
            y[i] = Integer.parseInt(str[4]);
        }

        dfs(0, 0, 0);

        bw.write(ans + ""\n"");
        bw.flush();
    }
}"
31,C,Java,61484090,2023-03-24 19:56:40,自由oVo,答案错误,"import java.util.Scanner;

public class Main {
	static int n;
	static long res;
	static int p;
	static long max;
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		n = sc.nextInt(); int t = sc.nextInt(); p = sc.nextInt();
		boolean[] bool = new boolean[n];
		int[][] a = new int[n][5];
		for(int i = 0; i < n; i++) {
			a[i][0] = sc.nextInt();
			a[i][1] = sc.nextInt();
			a[i][2] = sc.nextInt();
			a[i][3] = sc.nextInt();
			a[i][4] = sc.nextInt();
		}
		dfs(bool, a, t, t);
		System.out.println(max);
	}
	public static void dfs(boolean[] bool, int[][] a, int t, int sum) {
		if(t < 0)return;
		for(int i = 0; i < n; i++) {
			if(bool[i])continue;
			if(t < a[i][3])continue;
			bool[i] = true;
			int mint = sum - t + a[i][3];
			int z = Math.max(a[i][0] - mint * a[i][1] - p * a[i][4], a[i][2]);
			res += z;
			max = Math.max(res, max);
			dfs(bool, a, t - a[i][3], t);
			res -= z;
			bool[i] = false;
		}
	}
}"
32,C,Java,61484151,2023-03-24 19:57:10,人工智能3221王子龙,答案错误,"
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner in=new Scanner(System.in);
        int n=in.nextInt();
        int t=in.nextInt();
        int p=in.nextInt();
        int []a=new int[n];
        int []b=new int[n];
        int []c=new int[n];
        int []x=new int[n];
        int []y=new int[n];
        for (int i = 0; i < n; i++) {
            a[i]=in.nextInt();
            b[i]=in.nextInt();
            c[i]=in.nextInt();
            x[i]=in.nextInt();
            y[i]=in.nextInt();
        }
        long sum=0;
        long summax=0;
        long time=0;
        for (int i = 0; i < n; i++) {
            time+=x[i];
            if(time<=t){
                sum+=Math.max(c[i],a[i]-time*b[i]-y[i]*p);
            }
            else {
                time=0;
            }
            if(sum>summax){
                summax=sum;
            }
        }
        System.out.println(summax);
    }
}"
33,C,Java,61484289,2023-03-24 19:58:11,凯撒Katharsis,答案错误,"import java.util.*;
import java.io.*;

public class Main {
    private static Scanner sc = new Scanner(System.in);
    private static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    private static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
    private static long a[] = new long[11], ans = 0, n;
    private static long b[] = new long[11], c[] = new long[11], x[] = new long[11], y[] = new long[11];
    private static long t, p;


    private static void dfs(int u, long now, long spend) {
        if(u == n) return ;
        
        ans = Math.max(ans, now);

        dfs(u + 1, now, spend);
        if(spend + x[u] <= t) dfs(u + 1, now + Math.max(c[u], a[u] - (x[u] + spend) * b[u] - y[u] * p), spend + x[u]);
    }

    public static void main(String[] args) throws Exception {
        String str[] = br.readLine().split("" "");

        n = Long.parseLong(str[0]);
        t = Long.parseLong(str[1]);
        p = Long.parseLong(str[2]);


        for(int i = 0; i < n; i ++ ) {
            str = br.readLine().split("" "");
            a[i] = Long.parseLong(str[0]);
            b[i] = Long.parseLong(str[1]);
            c[i] = Long.parseLong(str[2]);
            x[i] = Long.parseLong(str[3]);
            y[i] = Long.parseLong(str[4]);
        }

        dfs(0, 0, 0);

        bw.write(ans + ""\n"");
        bw.flush();
    }
}"
34,C,Java,61484329,2023-03-24 19:58:33,牛客360818823号,答案错误,"
import java.math.BigInteger;
import java.util.Arrays;
import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
         Scanner sc = new Scanner(System.in);
         int n = sc.nextInt();
         int t = sc.nextInt();
         int p = sc.nextInt();
         int a[] = new int[n];
         int b[] = new int[n];
         int c[] = new int[n];
         int x[] = new int[n];
         int y[] = new int[n];
         long max[] = new long[n];
         for(int i=0;i<n;i++) {
        	 a[i] = sc.nextInt();
        	 b[i] = sc.nextInt();
        	 c[i] = sc.nextInt();
        	 x[i] = sc.nextInt();
        	 y[i] = sc.nextInt();
         }
       int count = 0;
       while(count<n) {
    	   int time =0;
    	   for(int i=0;i<n;i++) {
    		   if(count==i) {
    			   continue;
    		   }
    		   time = time+x[i];
    		   if(time<=t) {
    			   int max1 = Math.max(c[i], a[i]-time*b[i]-y[i]*p);
    			   max[count] = max[count]+max1;
    		   }
    		  
    	   }
    	   count++;
       }
       Arrays.sort(max);
       System.out.println(max[n-1]);
        /*String s = sc.next();
        String s1 = sc.next();
        BigInteger bg = new BigInteger(s);
        BigInteger bg1 = new BigInteger(s);
        BigInteger bg2  = bg.divide(bg1);
        bg1 = bg.mod(bg1);
        if(bg1.compareTo(bg2)>0) {
        	System.out.println(""niuniu eats more than others"");
        } else if(bg1.compareTo(bg2)==0) {
        	System.out.println(""same"");
        } else {
        	System.out.println(""niuniu eats less than others"");
        }*/
	}
}
"
35,C,Java,61484330,2023-03-24 19:58:33,人工智能3221王子龙,答案错误,"
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner in=new Scanner(System.in);
        int n=in.nextInt();
        long t=in.nextLong();
        long p=in.nextLong();
        long []a=new long[n];
        long []b=new long[n];
        long []c=new long[n];
        long []x=new long[n];
        long []y=new long[n];
        for (int i = 0; i < n; i++) {
            a[i]=in.nextLong();
            b[i]=in.nextLong();
            c[i]=in.nextLong();
            x[i]=in.nextLong();
            y[i]=in.nextLong();
        }
        long sum=0;
        long summax=0;
        long time=0;
        for (int i = 0; i < n; i++) {
            time+=x[i];
            if(time<=t){
                sum+=Math.max(c[i],a[i]-time*b[i]-y[i]*p);
            }
            else {
                time=0;
            }
            if(sum>summax){
                summax=sum;
            }
        }
        System.out.println(summax);
    }
}"
36,C,Java,61484405,2023-03-24 19:59:22,智破云霄,答案错误,"
import java.util.*;
import java.io.*;
public class Main {
	static long res = 0;
	static void dfs(long l,int t,int n,int w,long m,int[] a,int[] b,int[] c,int[] x,int[] y,int p)
	{
		if(l <= t)
		{
			res = Math.max(res, m);
		}
		else return;
		for(int i = w; i < n;i ++)
		{
			long mm = a[i]-(l+x[i])*b[i]-y[i]*p;
			dfs(l+x[i],t,n,w+1,m+Math.max(c[i],mm),a,b,c,x,y,p);
			l -= x[i];
			m -= Math.max(c[i],mm);
		}
	}
public static void main(String[] args) {
	
 InputReader in = new InputReader(System.in);
PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	
	int n = in.nextInt();
	int t = in.nextInt();
	int p = in.nextInt();
	int[] a = new int[n];
	int[] b = new int[n];
	int[] c = new int[n];
	int[] x = new int[n];
	int[] y = new int[n];
	for(int i = 0;i < n;i ++)
	{
		 a[i] = in.nextInt();
		 b[i] = in.nextInt();
		 c[i] = in.nextInt();
		 x[i] = in.nextInt();
		 y[i] = in.nextInt();
		
	}
	dfs(0,t,n,0,0,a,b,c,x,y,p);
	out.println(res);
	
	
	

out.flush();

	
}
	
	
	
	
	



	
}





class InputReader {
    private final BufferedReader buf;
    private StringTokenizer tkl;

    public InputReader(InputStream is) {
        buf = new BufferedReader(new InputStreamReader(is));
    }

    public boolean hasNext() {
        try {
            while (tkl == null || !tkl.hasMoreElements()) tkl = new StringTokenizer(buf.readLine());
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public String next() {
        return hasNext() ? tkl.nextToken() : null;
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }
}
"
37,C,Java,61484504,2023-03-24 20:00:12,凯撒Katharsis,答案错误,"import java.util.*;
import java.io.*;

public class Main {
    private static Scanner sc = new Scanner(System.in);
    private static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    private static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
    private static long a[] = new long[11], ans = 0, n;
    private static long b[] = new long[11], c[] = new long[11], x[] = new long[11], y[] = new long[11];
    private static long t, p;


    private static void dfs(int u, long now, long spend) {
        if(u == n) return ;
        
        ans = Math.max(ans, now);

        dfs(u + 1, now, spend);
        if(spend <= t - x[u]) dfs(u + 1, now + Math.max(c[u], a[u] - (x[u] + spend) * b[u] - y[u] * p), spend + x[u]);
    }

    public static void main(String[] args) throws Exception {
        String str[] = br.readLine().split("" "");

        n = Long.parseLong(str[0]);
        t = Long.parseLong(str[1]);
        p = Long.parseLong(str[2]);


        for(int i = 0; i < n; i ++ ) {
            str = br.readLine().split("" "");
            a[i] = Long.parseLong(str[0]);
            b[i] = Long.parseLong(str[1]);
            c[i] = Long.parseLong(str[2]);
            x[i] = Long.parseLong(str[3]);
            y[i] = Long.parseLong(str[4]);
        }

        dfs(0, 0, 0);

        bw.write(ans + ""\n"");
        bw.flush();
    }
}"
38,C,Java,61484646,2023-03-24 20:01:16,wkkwmm,答案正确,"import javax.swing.plaf.IconUIResource;
import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        long max=0,t=0,p=0;
        int n=0;
        A a[]=new A[n];
        int vis[]=new int[n];
       void find(long mm,long tt){
            for (int i = 0; i <n ; i++) {
                if(tt+a[i].xx<=t&&vis[i]==0){
                    vis[i]=1;
                    long mm2=Math.max(a[i].cc,a[i].aa-(tt+a[i].xx)*a[i].bb-a[i].yy*p);
                    max=Math.max(max,mm2+mm);
                    find(mm+mm2,tt+a[i].xx);
                    vis[i]=0;
                }
            }
        }
        public void solve(int testNumber, InputReader in, PrintWriter out) {
           n=in.nextInt();
           t=in.nextLong();
           p=in.nextLong();
           a=new A[n];
           vis=new int[n];
            for (int i = 0; i <n ; i++) {
                a[i]=new A();
                a[i].aa=in.nextLong();
                a[i].bb=in.nextLong();
                a[i].cc=in.nextLong();
                a[i].xx=in.nextLong();
                a[i].yy=in.nextLong();
            }
            for (int i = 0; i < n; i++) {
                find(0,0);
            }
            out.println(max);
        }
        class A{
            long aa=0,bb=0,cc=0,xx=0,yy=0;
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }

    }
}"
39,C,Java,61484695,2023-03-24 20:01:36,all-in秋招的小蜗牛很犯困,答案错误,"import java.util.*;

// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class  Main{

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int t = in.nextInt();
        int p = in.nextInt();
        int [][] nums = new int [n][5];
        for (int i = 0; i < n; i++) {
            nums[i][0] = in.nextInt();
            nums[i][1] = in.nextInt();
            nums[i][2] = in.nextInt();
            nums[i][3] =in.nextInt();
            nums[i][4] = in.nextInt();
        }
        long max =0;
        long[] dp = new long[t+1];
        for (int i = 0; i < n; i++) {
            for (int j = t;j >=nums[i][3]; j--) {

                    dp[j] = Math.max(dp[j], dp[j - nums[i][3]] + Math.max(nums[i][2], nums[i][0] - j * nums[i][1] - nums[i][4] * p));
                    max= Math.max(dp[j],max);
            }
        }
        System.out.println(max);
    }

}"
40,C,Java,61484701,2023-03-24 20:01:38,giao1,答案错误,"import java.util.*;

public class Main{
    
    static int N = 10,n,t,p,ans;
    static int[] a = new int[10],b = new int[10],c = new int[10],x = new int[10],y = new int[10];
    static boolean s[] = new boolean[10];
    static int q[] = new int[10], m[]=new int[10], path[] = new int[10];
    public static void main(String[] args){
        Scanner cin = new Scanner(System.in);
        n = cin.nextInt();
        t = cin.nextInt();
        p = cin.nextInt();
       for(int i = 1;i<=n;i++){
            a[i] = cin.nextInt();
           b[i] = cin.nextInt();
            c[i] = cin.nextInt();
            x[i] = cin.nextInt();
            y[i] = cin.nextInt();
           m[i] = x[i];
        }
        dfs(1);
        System.out.println(ans);
    }
    
     public static void dfs(int u)
{
    if (u == n + 1)
    {
        int ans1 = 0, time = t, times = 0;
        for (int i = 1; i <= n; i ++ )
        {
            if ((time -= m[path[i]]) >= 0)
            {
                times += m[path[i]];
                ans1 += Math.max(c[path[i]], a[path[i]] - times * b[path[i]] - y[path[i]] * p);
            }
        }
//         cout << ans1 << ""\n"";
        ans = Math.max(ans, ans1);
        return;
    }
    for (int i = 1; i <= n; i ++ )
    {
        if (!s[i])
        {
            path[u] = i;
            s[i] = true;
            dfs(u + 1);
            s[i] = false;
        }
    }
}


    
}

class Node{
    long a,b,c,x,y;
    public Node(long a,long b,long c,long x,long y){
        this.x = x;
        this.y=y;
        this.a = a;
        this.b=b;
        this.c = c;
    }
}"
41,C,Java,61484743,2023-03-24 20:01:54,Mosyi.,答案错误,"import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int t = in.nextInt();
            int p = in.nextInt();
            int[] a = new int[n];
            int[] c = new int[n];
            int[] y = new int[n];
            A[] aa = new A[n];
            for (int i = 0; i < n; i++) {
                aa[i] = new A();
                a[i] = in.nextInt();
                aa[i].bb = in.nextInt();
                c[i] = in.nextInt();
                aa[i].time = in.nextInt();
                y[i] = in.nextInt();
            }
            Arrays.sort(aa, new Comparator<A>() {
                @Override
                public int compare(A o1, A o2) {
                    if(o1.bb == o2.bb){
                        return Long.compare(o2.sum,o1.sum);
                    }
                    return Integer.compare(o1.bb,o2.bb);
                }
            });
            long res = 0;
            int q = t;
            for (int i = 0; i < n; i++) {
                if(q - aa[i].time >= 0){
                    q -= aa[i].time;
                    res += Math.max(c[i],a[i] - (t - q) * aa[i].bb - y[i] * p);
                }
            }
            Arrays.sort(aa, new Comparator<A>() {
                @Override
                public int compare(A o1, A o2) {
                    if(o1.sum == o2.sum){
                        return Integer.compare(o1.bb,o2.bb);
                    }
                    return Long.compare(o2.sum,o1.sum);
                }
            });
            long res1 = 0;
            q = t;
            for (int i = 0; i < n; i++) {
                if(q - aa[i].time >= 0){
                    q -= aa[i].time;
                    res1 += Math.max(c[i],a[i] - (t - q) * aa[i].bb - y[i] * p);
                }
            }
            out.println(Math.max(res1,res));
        }
        static class A{
            int bb;
            int time;
            long sum;
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }

    }
}"
42,C,Java,61484838,2023-03-24 20:02:42,giao1,答案正确,"import java.util.*;

public class Main{
    
    static int N = 10,n,t,p;
    static long ans;
    static int[] a = new int[10],b = new int[10],c = new int[10],x = new int[10],y = new int[10];
    static boolean s[] = new boolean[10];
    static int q[] = new int[10], m[]=new int[10], path[] = new int[10];
    public static void main(String[] args){
        Scanner cin = new Scanner(System.in);
        n = cin.nextInt();
        t = cin.nextInt();
        p = cin.nextInt();
       for(int i = 1;i<=n;i++){
            a[i] = cin.nextInt();
           b[i] = cin.nextInt();
            c[i] = cin.nextInt();
            x[i] = cin.nextInt();
            y[i] = cin.nextInt();
           m[i] = x[i];
        }
        dfs(1);
        System.out.println(ans);
    }
    
     public static void dfs(int u){
    if (u == n + 1)
    {
        long ans1 = 0, time = t, times = 0;
        for (int i = 1; i <= n; i ++ )
        {
            if ((time -= m[path[i]]) >= 0)
            {
                times += m[path[i]];
                ans1 += Math.max(c[path[i]], a[path[i]] - times * b[path[i]] - y[path[i]] * p);
            }
        }
//         cout << ans1 << ""\n"";
        ans = Math.max(ans, ans1);
        return;
    }
    for (int i = 1; i <= n; i ++ )
    {
        if (!s[i])
        {
            path[u] = i;
            s[i] = true;
            dfs(u + 1);
            s[i] = false;
        }
    }
}


    
}

class Node{
    long a,b,c,x,y;
    public Node(long a,long b,long c,long x,long y){
        this.x = x;
        this.y=y;
        this.a = a;
        this.b=b;
        this.c = c;
    }
}"
43,C,Java,61485037,2023-03-24 20:04:17,自由oVo,答案错误,"import java.util.Scanner;

public class Main {
	static int n;
	static long res;
	static int p;
	static long max;
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		n = sc.nextInt(); int t = sc.nextInt(); p = sc.nextInt();
		boolean[] bool = new boolean[n];
		int[][] a = new int[n][5];
		for(int i = 0; i < n; i++) {
			a[i][0] = sc.nextInt();
			a[i][1] = sc.nextInt();
			a[i][2] = sc.nextInt();
			a[i][3] = sc.nextInt();
			a[i][4] = sc.nextInt();
		}
		dfs(bool, a, t, t);
		System.out.println(max);
	}
	public static void dfs(boolean[] bool, int[][] a, int t, int sum) {
		if(t <= 0)return;
		for(int i = 0; i < n; i++) {
			if(bool[i])continue;
			if(t < a[i][3])continue;
			bool[i] = true;
			int mint = sum - t + a[i][3];
			long z = Math.max(a[i][0] - mint * a[i][1] - p * a[i][4], a[i][2]);
			res += z;
			max = Math.max(res, max);
			dfs(bool, a, t - a[i][3], t);
			res -= z;
			bool[i] = false;
		}
	}
}"
44,C,Java,61485060,2023-03-24 20:04:27,LinCun,答案错误,"import java.util.*;
public class Main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int t = sc.nextInt();
        int p = sc.nextInt();
        int[] b = new int[9];
        int[] c = new int[9];
        int[] x = new int[9];
        int[] y = new int[9];
        int[] a = new int[9];
        for(int i = 1;i < n;i ++ ){
            a[i] = sc.nextInt();
            a[i] = sc.nextInt();
        }
    }
}"
45,C,Java,61485244,2023-03-24 20:05:44,牛客360818823号,答案错误,"

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
         Scanner sc = new Scanner(System.in);
         int n = sc.nextInt();
         int t = sc.nextInt();
         int p = sc.nextInt();
         int a[] = new int[n];
         int b[] = new int[n];
         int c[] = new int[n];
         int x[] = new int[n];
         int y[] = new int[n];
         long max[] = new long[n];
         for(int i=0;i<n;i++) {
        	 a[i] = sc.nextInt();
        	 b[i] = sc.nextInt();
        	 c[i] = sc.nextInt();
        	 x[i] = sc.nextInt();
        	 y[i] = sc.nextInt();
         }
       int count = 0;
       while(count<n) {
    	   int time =0;
    	   max[count] = Math.max(c[count], a[count]-x[count]*b[count]-y[count]*p);
    	   time = x[count];
    	   for(int i=0;i<n;i++) {
    		   if(count==i) {
    			   continue;
    		   }
    		   //System.out.println(""i:""+i);
    		   time = time+x[i];
    		   if(time<=t) {
    			   int max1 = Math.max(c[i], a[i]-time*b[i]-y[i]*p);
    			   max[count] = max[count]+max1;
    		   }
    		  
    	   }
    	  // System.out.println(max[count]);
    	   count++;
       }
       Arrays.sort(max);
       System.out.println(max[n-1]);
        /*String s = sc.next();
        String s1 = sc.next();
        BigInteger bg = new BigInteger(s);
        BigInteger bg1 = new BigInteger(s);
        BigInteger bg2  = bg.divide(bg1);
        bg1 = bg.mod(bg1);
        if(bg1.compareTo(bg2)>0) {
        	System.out.println(""niuniu eats more than others"");
        } else if(bg1.compareTo(bg2)==0) {
        	System.out.println(""same"");
        } else {
        	System.out.println(""niuniu eats less than others"");
        }*/
	}
}
"
46,C,Java,61485383,2023-03-24 20:06:54,牛客360818823号,答案错误,"

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
         Scanner sc = new Scanner(System.in);
         int n = sc.nextInt();
         int t = sc.nextInt();
         int p = sc.nextInt();
         int a[] = new int[n];
         int b[] = new int[n];
         int c[] = new int[n];
         int x[] = new int[n];
         int y[] = new int[n];
         long max[] = new long[n];
         for(int i=0;i<n;i++) {
        	 a[i] = sc.nextInt();
        	 b[i] = sc.nextInt();
        	 c[i] = sc.nextInt();
        	 x[i] = sc.nextInt();
        	 y[i] = sc.nextInt();
         }
       int count = 0;
       while(count<n) {
    	   int time =0;
    	   time = x[count];
    	   if(time<=t) max[count] = Math.max(c[count], a[count]-x[count]*b[count]-y[count]*p);
    	   for(int i=0;i<n;i++) {
    		   if(count==i) {
    			   continue;
    		   }
    		   //System.out.println(""i:""+i);
    		   time = time+x[i];
    		   if(time<=t) {
    			   int max1 = Math.max(c[i], a[i]-time*b[i]-y[i]*p);
    			   max[count] = max[count]+max1;
    		   }
    		  
    	   }
    	  // System.out.println(max[count]);
    	   count++;
       }
       Arrays.sort(max);
       System.out.println(max[n-1]);
        /*String s = sc.next();
        String s1 = sc.next();
        BigInteger bg = new BigInteger(s);
        BigInteger bg1 = new BigInteger(s);
        BigInteger bg2  = bg.divide(bg1);
        bg1 = bg.mod(bg1);
        if(bg1.compareTo(bg2)>0) {
        	System.out.println(""niuniu eats more than others"");
        } else if(bg1.compareTo(bg2)==0) {
        	System.out.println(""same"");
        } else {
        	System.out.println(""niuniu eats less than others"");
        }*/
	}
}
"
47,C,Java,61485446,2023-03-24 20:07:20,智破云霄,答案错误,"
import java.util.*;
import java.io.*;
public class Main {
	static long res = 0;
	static void dfs(long l,int t,int n,int w,long m,int[] a,int[] b,int[] c,int[] x,int[] y,int p)
	{
		if(l <= t)
		{
			res = Math.max(res, m);
		}
		else return;
		for(int i = w; i < n;i ++)
		{
			long mm = a[i]-(l+x[i])*b[i]-y[i]*p;
			dfs(l+x[i],t,n,w+1,m+Math.max(c[i],mm),a,b,c,x,y,p);
			l -= x[i];
			m -= Math.max(c[i],mm);
            dfs(l,t,n,w+1,m,a,b,c,x,y,p);
		}
	}
public static void main(String[] args) {
	
 InputReader in = new InputReader(System.in);
PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	
	int n = in.nextInt();
	int t = in.nextInt();
	int p = in.nextInt();
	int[] a = new int[n];
	int[] b = new int[n];
	int[] c = new int[n];
	int[] x = new int[n];
	int[] y = new int[n];
	for(int i = 0;i < n;i ++)
	{
		 a[i] = in.nextInt();
		 b[i] = in.nextInt();
		 c[i] = in.nextInt();
		 x[i] = in.nextInt();
		 y[i] = in.nextInt();
		
	}
	dfs(0,t,n,0,0,a,b,c,x,y,p);
	out.println(res);
	
	
	

out.flush();

	
}
	
	
	
	
	



	
}





class InputReader {
    private final BufferedReader buf;
    private StringTokenizer tkl;

    public InputReader(InputStream is) {
        buf = new BufferedReader(new InputStreamReader(is));
    }

    public boolean hasNext() {
        try {
            while (tkl == null || !tkl.hasMoreElements()) tkl = new StringTokenizer(buf.readLine());
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public String next() {
        return hasNext() ? tkl.nextToken() : null;
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }
}
"
48,C,Java,61485629,2023-03-24 20:08:50,凯撒Katharsis,答案错误,"import java.util.*;
import java.io.*;

public class Main {
    private static Scanner sc = new Scanner(System.in);
    private static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    private static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
    private static long a[] = new long[11], ans = 0, n;
    private static long b[] = new long[11], c[] = new long[11], x[] = new long[11], y[] = new long[11];
    private static long t, p;


    private static void dfs(int u, long now, long spend) {
        if(u == n) return ;
        
        if(spend <= t) ans = Math.max(ans, now);
        else return ;
        
        dfs(u + 1, now, spend);
        dfs(u + 1, now + Math.max(c[u], a[u] - (x[u] + spend) * b[u] - y[u] * p), spend + x[u]);
    }

    public static void main(String[] args) throws Exception {
        String str[] = br.readLine().split("" "");

        n = Long.parseLong(str[0]);
        t = Long.parseLong(str[1]);
        p = Long.parseLong(str[2]);


        for(int i = 0; i < n; i ++ ) {
            str = br.readLine().split("" "");
            a[i] = Long.parseLong(str[0]);
            b[i] = Long.parseLong(str[1]);
            c[i] = Long.parseLong(str[2]);
            x[i] = Long.parseLong(str[3]);
            y[i] = Long.parseLong(str[4]);
        }

        dfs(0, 0, 0);

        bw.write(ans + ""\n"");
        bw.flush();
    }
}"
49,C,Java,61485900,2023-03-24 20:11:06,lllllllle,答案错误,"
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.math.BigInteger;
import java.nio.Buffer;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Queue;
import java.util.Scanner;
import java.util.Set;
import java.util.TreeMap;
import java.util.TreeSet;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;


public class Main {
	
	public static void main(String[] args) throws IOException {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		String[] s=br.readLine().split("" "");
		int n=Integer.parseInt(s[0]);
		long t=Long.parseLong(s[1]);
		long p=Long.parseLong(s[2]);
		long[][] title=new long[n][5];
		for(int i=0;i<n;i++) {
			s=br.readLine().split("" "");
			for(int j=0;j<5;j++) {
				title[i][j]=Long.parseLong(s[j]);
			}
		}
		long[] time=new long[1<<n];
		for(int i=1;i<1<<n;i++) {
			for(int j=0;j<n;j++) {
				if((i&(1<<j))==0) {
					continue;
				}
				time[i]=time[i^(1<<j)]+title[j][3];
				break;
			}
		}
		long[] dp=new long[1<<n];
		dp[0]=0;
		long ans=0;
		for(int i=1;i<1<<n;i++) {
			for(int j=0;j<n;j++) {
				if((i&(1<<j))==0) {
					continue;
				}
				if(time[i]>t) {
					break;
				}
				long tmp=title[j][0]-(long)time[i]*title[j][1]-(long)title[j][4]*p;
				dp[i]=Math.max(dp[i], Math.max(title[j][2], dp[i^(1<<j)]+tmp));
			}
			ans=Math.max(ans, dp[i]);
		}
		System.out.println(ans);
		
	}

	
}
"
50,C,Java,61485913,2023-03-24 20:11:12,all-in秋招的小蜗牛很犯困,答案错误,"import java.util.*;

// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class  Main{

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int t = in.nextInt();
        int p = in.nextInt();
        int [][] nums = new int [n][5];
        for (int i = 0; i < n; i++) {
            nums[i][0] = in.nextInt();
            nums[i][1] = in.nextInt();
            nums[i][2] = in.nextInt();
            nums[i][3] =in.nextInt();
            nums[i][4] = in.nextInt();
        }
        long max =0;
        long[] dp = new long[t+1];
        for (int i = 0; i < n; i++) {
            for (int j = t;j >=nums[i][3]; j--) {
                    dp[j] = Math.max(dp[j], dp[j - nums[i][3]] + Math.max(nums[i][2], nums[i][0] - j * nums[i][1] - nums[i][4] * p));
                    max= Math.max(dp[j],max);
            }
        }
        System.out.println(max);
    }

}"
51,C,Java,61486025,2023-03-24 20:12:06,自由oVo,答案错误,"import java.util.Scanner;

public class Main {
	static int n;
	static long res;
	static int p;
	static long max;
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		n = sc.nextInt(); int t = sc.nextInt(); p = sc.nextInt();
		boolean[] bool = new boolean[n];
		int[][] a = new int[n][5];
		for(int i = 0; i < n; i++) {
			a[i][0] = sc.nextInt();
			a[i][1] = sc.nextInt();
			a[i][2] = sc.nextInt();
			a[i][3] = sc.nextInt();
			a[i][4] = sc.nextInt();
		}
		dfs(bool, a, t, t);
		System.out.println(max);
	}
	public static void dfs(boolean[] bool, int[][] a, int t, int sum) {
		if(t <= 0)return;
		for(int i = 0; i < n; i++) {
			if(bool[i])continue;
			if(t < a[i][3])continue;
			bool[i] = true;
			int mint = sum - t + a[i][3];
			long z = Math.max(a[i][0] - (long)mint * a[i][1] - (long)p * a[i][4], a[i][2]);
			res += z;
			max = Math.max(res, max);
			dfs(bool, a, t - a[i][3], t);
			res -= z;
			bool[i] = false;
		}
	}
}"
52,C,Java,61486167,2023-03-24 20:13:19,凯撒Katharsis,答案错误,"import java.util.*;
import java.io.*;

public class Main {
    private static Scanner sc = new Scanner(System.in);
    private static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    private static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
    private static long a[] = new long[11], ans = 0, n;
    private static long b[] = new long[11], c[] = new long[11], x[] = new long[11], y[] = new long[11];
    private static long t, p;
    private static boolean st[] = new boolean[11];


    private static void dfs(int u, long now, long spend) {
        if(u == n) return ;
        
        ans = Math.max(ans, now);

        dfs(u + 1, now, spend);

        for(int i = 0; i < n; i ++ ) {
            if(!st[i]) {
                if(spend <= t - x[u]) {
                    st[i] = true;
                    dfs(u + 1, now + Math.max(c[u], a[u] - (x[u] + spend) * b[u] - y[u] * p), spend + x[u]);
                    st[i] = false;
                }
            }
        }
        
    }

    public static void main(String[] args) throws Exception {
        String str[] = br.readLine().split("" "");

        n = Long.parseLong(str[0]);
        t = Long.parseLong(str[1]);
        p = Long.parseLong(str[2]);


        for(int i = 0; i < n; i ++ ) {
            str = br.readLine().split("" "");
            a[i] = Long.parseLong(str[0]);
            b[i] = Long.parseLong(str[1]);
            c[i] = Long.parseLong(str[2]);
            x[i] = Long.parseLong(str[3]);
            y[i] = Long.parseLong(str[4]);
        }

        dfs(0, 0, 0);

        bw.write(ans + ""\n"");
        bw.flush();
    }
}"
53,C,Java,61486291,2023-03-24 20:14:21,谦虚的驼瑞驰胖乎乎,答案正确,"
import java.io.*;

public class Main {
    static StreamTokenizer ss=new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
    static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    public static int nextInt() throws IOException {
        ss.nextToken();
        return (int)ss.nval;
    }
    static int n,t,p;
    static boolean []st = new boolean[10];
    static int []book = new int[18] ,a = new int[10],b = new int[10] , c = new int[10];
    static int []x = new int[10],y = new int[10];
    static long ans;
    static void dfs(int u){
        if(u == n + 1){
            long s = 0;
            int tt = 0;
            for(int i = 1; i <= n; i ++){
                int j = book[i];
                tt += x[j];
                if(tt >= t) break;
                long ad = a[j] - tt * b[j] - y[j] * p;
                s += Math.max(c[j],ad);

           }
            ans = Math.max(ans,s);
        }
        else{
            for(int i = 1; i <= n; i ++){
                if(!st[i]){
                    book[u] = i;
                    st[i] = true;
                    dfs(u + 1);
                    st[i] = false;
                }
            }
        }
    }
    public static void main(String[] args) throws IOException {
        n = nextInt(); t  = nextInt(); p = nextInt();
        for(int i = 1; i <= n; i ++){
            a[i] = nextInt();b[i] = nextInt();c[i] = nextInt();x[i] = nextInt();y[i] = nextInt();
        }
        dfs(1);
        System.out.println(ans);
    }
}
"
54,C,Java,61486298,2023-03-24 20:14:26,凯撒Katharsis,答案正确,"import java.util.*;
import java.io.*;

public class Main {
    private static Scanner sc = new Scanner(System.in);
    private static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    private static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
    private static long a[] = new long[11], ans = 0, n;
    private static long b[] = new long[11], c[] = new long[11], x[] = new long[11], y[] = new long[11];
    private static long t, p;
    private static boolean st[] = new boolean[11];


    private static void dfs(int u, long now, long spend) {
        ans = Math.max(ans, now);
        if(u == n) return ;
        
        

        for(int i = 0; i < n; i ++ ) {
            if(!st[i]) {
                if(spend <= t - x[i]) {
                    st[i] = true;
                    dfs(u + 1, now + Math.max(c[i], a[i] - (x[i] + spend) * b[i] - y[i] * p), spend + x[i]);
                    st[i] = false;
                }
            }
        }
        
    }

    public static void main(String[] args) throws Exception {
        String str[] = br.readLine().split("" "");

        n = Long.parseLong(str[0]);
        t = Long.parseLong(str[1]);
        p = Long.parseLong(str[2]);


        for(int i = 0; i < n; i ++ ) {
            str = br.readLine().split("" "");
            a[i] = Long.parseLong(str[0]);
            b[i] = Long.parseLong(str[1]);
            c[i] = Long.parseLong(str[2]);
            x[i] = Long.parseLong(str[3]);
            y[i] = Long.parseLong(str[4]);
        }

        dfs(0, 0, 0);

        bw.write(ans + ""\n"");
        bw.flush();
    }
}"
55,C,Java,61486434,2023-03-24 20:15:26,huvz,答案错误,"import java.io.*;
import java.util.*;

public class Main {
    static Read in = new Read();

    //static AWriter out = new AWriter();
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    //static Scanner in = new Scanner(System.in);
    public static void solve() throws IOException {
        int n = in.nextInt();
        int t= in.nextInt();
        int p = in.nextInt();
        //int a = in.nextInt();
        //int b = in.nextInt();
        int[] a = new int[n+1];
        int[] b = new int[n+1];
        int[] c = new int[n+1];
        int[] x = new int[n+1];
        int[] y = new int[n+1];
        int[][] dp = new int[t+1][n+2];
        for (int i = 1; i <= n; i++)
        {
            a[i]=in.nextInt();b[i]=in.nextInt();
            c[i]= in.nextInt();x[i]=in.nextInt();
            y[i]=in.nextInt();
        }
        int max1 = -1;
        for(int i =1;i<=n;i++)
        {
            for(int j=t;j>=x[i];j--){
                    int q = a[i]-(j*b[i]+y[i]*p);
                    int maxn =  Math.max(c[i],q);
                    dp[j][i] = Math.max(dp[j-x[i]][i-1]+maxn,dp[j-1][i]);
                dp[j][i] =Math.max(dp[j][i],dp[j][i-1]);
                max1 =Math.max(dp[j][i],max1);
            }
        }
        System.out.println(max1);
    }
    public static void main(String[] arg) throws Exception {
        int t=1;

        //Scanner in = new Scanner(System.in);
        //t = in.nextInt();
        while(t-->0)
        {
            solve();
        }

    }

    static class Read{
        static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        static StreamTokenizer st = new StreamTokenizer(br);
        static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));
        public int nextInt() throws IOException {
            st.nextToken();
            return (int) st.nval;
        }
        public Long nextLong() throws IOException {
            st.nextToken();
            return (long) st.nval;
        }
        public String next() throws IOException{
            st.nextToken();
            return st.sval;
        }
        // 若需要nextDouble等方法，请自行调用Double.parseDouble包装
    }
    static class AWriter implements Closeable {
        private BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(System.out));
        public void print(Object object) throws IOException {
            writer.write(object.toString());
        }
        public void println(Object object) throws IOException {
            writer.write(object.toString());
            writer.write(System.lineSeparator());
        }
        @Override
        public void close() throws IOException {
            writer.close();
        }
    }

}"
56,C,Java,61486650,2023-03-24 20:17:11,huvz,答案错误,"import java.io.*;
import java.util.*;

public class Main {
    static Read in = new Read();

    //static AWriter out = new AWriter();
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    //static Scanner in = new Scanner(System.in);
    public static void solve() throws IOException {
        int n = in.nextInt();
        int t= in.nextInt();
        int p = in.nextInt();
        //int a = in.nextInt();
        //int b = in.nextInt();
        int[] a = new int[n+1];
        int[] b = new int[n+1];
        int[] c = new int[n+1];
        int[] x = new int[n+1];
        int[] y = new int[n+1];
        int[][] dp = new int[t+1][n+2];
        for (int i = 1; i <= n; i++)
        {
            a[i]=in.nextInt();b[i]=in.nextInt();
            c[i]= in.nextInt();x[i]=in.nextInt();
            y[i]=in.nextInt();
        }
        int max1 = -1;
        for(int i =1;i<=n;i++)
        {
            for(int j=t;j>=x[i];j--){
                    int q = a[i]-(j*b[i]+y[i]*p);
                    int maxn =  Math.max(c[i],q);
                    dp[j][i] = Math.max(dp[j-x[i]][i-1]+maxn,dp[j-1][i]);
                    max1 =Math.max(dp[j][i],max1);
            }
        }
        System.out.println(max1);
    }
    public static void main(String[] arg) throws Exception {
        int t=1;

        //Scanner in = new Scanner(System.in);
        //t = in.nextInt();
        while(t-->0)
        {
            solve();
        }

    }

    static class Read{
        static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        static StreamTokenizer st = new StreamTokenizer(br);
        static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));
        public int nextInt() throws IOException {
            st.nextToken();
            return (int) st.nval;
        }
        public Long nextLong() throws IOException {
            st.nextToken();
            return (long) st.nval;
        }
        public String next() throws IOException{
            st.nextToken();
            return st.sval;
        }
        // 若需要nextDouble等方法，请自行调用Double.parseDouble包装
    }
    static class AWriter implements Closeable {
        private BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(System.out));
        public void print(Object object) throws IOException {
            writer.write(object.toString());
        }
        public void println(Object object) throws IOException {
            writer.write(object.toString());
            writer.write(System.lineSeparator());
        }
        @Override
        public void close() throws IOException {
            writer.close();
        }
    }

}"
57,C,Java,61486825,2023-03-24 20:18:52,人工智能3221叶维煜,答案错误,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int t = sc.nextInt();
        int p = sc.nextInt();long sum = 0;
        int [] a = new int[n];int [] b = new int[n];
        int [] c = new int[n];int [] x = new int[n];
        int [] y = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
            b[i] = sc.nextInt();
            c[i] = sc.nextInt();
            x[i] = sc.nextInt();
            y[i] = sc.nextInt();
        }
        int time = 0;
        for (int i = 0; i < n;i++) {
            if(time + x[i] <= t){
                sum += Math.max(c[i],a[i] - (x[i]+time) * b[i] - +y[i]* p);
                time += x[i];
            }else {
                break;
            }
        }
        System.out.println(sum);

    }
}
"
58,C,Java,61486980,2023-03-24 20:20:11,黄明勇,答案错误,"import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.StreamTokenizer;
import java.util.ArrayList;
public class Main{
	static int n;
	static boolean[] st;
	static int[] a, b, c, x, y;
	static ArrayList<Integer> list = new ArrayList<>();
	static int t, p;
	static long max = 0;
	public static void main(String[] args) throws Exception{
		Reader sc = new Reader();
//		Scanner sc = new Scanner(System.in);
//		PrintWriter pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
		n = sc.nextInt();
		t = sc.nextInt();
		p = sc.nextInt();
//		PriorityQueue<Node> q = new PriorityQueue<>();
		st = new boolean[n];
		a = new int[n];
		b = new int[n];
		c = new int[n];
		x = new int[n];
		y = new int[n];
		for(int i = 0; i < n; i++) {
			a[i] = sc.nextInt();
			b[i] = sc.nextInt();
			c[i] = sc.nextInt();
			x[i] = sc.nextInt();
			y[i] = sc.nextInt();
		}
		dfs(0);
		System.out.println(max);
	}
	public static void dfs(int pos) {
		if(pos >= n) {
			int temp = t;
			long sum = 0;
			int time = 0;
			for(int i = 0; i < list.size(); i++) {
				int idx = list.get(i);
				if(temp >= x[i]) {
					temp -= x[i];
					time += x[i];
					sum += Math.max(c[i], 1L * a[i] - 1L * time * b[i] - 1L * y[i] * p);
				}else {
//					sum += Math.max(c[i], a[i] - 1L * temp * b[i] - 1L * y[i] * p);
					break;
				}
			}
			max = Math.max(max, sum);
			return;
		}
		for(int i = 0; i < n; i++) {
			if(!st[i])	{
				st[i] = true;
				list.add(i);
				dfs(pos + 1);
				list.remove(new Integer(i));
				st[i] = false;
			}
			dfs(pos + 1);
		}
	}
}
class Node {
	int t;
	long w;
	public Node(int t, long w) {
		super();
		this.t = t;
		this.w = w;
	}
}
class Reader{
	StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
	public int nextInt () throws Exception {
		st.nextToken();
		return (int)st.nval;
	}
	public String next() throws Exception {
		st.nextToken();
		return st.sval;
	}
}
"
59,C,Java,61487143,2023-03-24 20:21:28,黄明勇,答案错误,"import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.StreamTokenizer;
import java.util.ArrayList;
public class Main{
	static int n;
	static boolean[] st;
	static int[] a, b, c, x, y;
	static ArrayList<Integer> list = new ArrayList<>();
	static int t, p;
	static long max = 0;
	public static void main(String[] args) throws Exception{
		Reader sc = new Reader();
//		Scanner sc = new Scanner(System.in);
//		PrintWriter pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
		n = sc.nextInt();
		t = sc.nextInt();
		p = sc.nextInt();
//		PriorityQueue<Node> q = new PriorityQueue<>();
		st = new boolean[n];
		a = new int[n];
		b = new int[n];
		c = new int[n];
		x = new int[n];
		y = new int[n];
		for(int i = 0; i < n; i++) {
			a[i] = sc.nextInt();
			b[i] = sc.nextInt();
			c[i] = sc.nextInt();
			x[i] = sc.nextInt();
			y[i] = sc.nextInt();
		}
		dfs(0);
		System.out.println(max);
	}
	public static void dfs(int pos) {
		if(pos >= n) {
			long temp = t;
			long sum = 0;
			long time = 0;
			for(int i = 0; i < list.size(); i++) {
				int idx = list.get(i);
				if(temp >= x[i]) {
					temp -= x[i];
					time += x[i];
					sum += Math.max(c[i], 1L * a[i] - 1L * time * b[i] - 1L * y[i] * p);
				}else {
					break;
				}
			}
			max = Math.max(max, sum);
			return;
		}
		for(int i = 0; i < n; i++) {
			if(!st[i])	{
				st[i] = true;
				list.add(i);
				dfs(pos + 1);
				list.remove(new Integer(i));
				st[i] = false;
			}
			dfs(pos + 1);
		}
	}
}
class Node {
	int t;
	long w;
	public Node(int t, long w) {
		super();
		this.t = t;
		this.w = w;
	}
}
class Reader{
	StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
	public int nextInt () throws Exception {
		st.nextToken();
		return (int)st.nval;
	}
	public String next() throws Exception {
		st.nextToken();
		return st.sval;
	}
}
"
60,C,Java,61487149,2023-03-24 20:21:33,自由oVo,答案错误,"import java.util.Scanner;

public class Main {
	static int n;
	static long res;
	static long p;
	static long max;
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		n = sc.nextInt(); long t = sc.nextLong(); p = sc.nextLong();
		boolean[] bool = new boolean[ n];
		long[][] a = new long[n][5];
		for(int i = 0; i < n; i++) {
			a[i][0] = sc.nextLong();
			a[i][1] = sc.nextLong();
			a[i][2] = sc.nextLong();
			a[i][3] = sc.nextLong();
			a[i][4] = sc.nextLong();
		}
		dfs(bool, a, t, t);
		System.out.println(max);
	}
	public static void dfs(boolean[] bool, long[][] a, long t, long sum) {
		if(t <= 0)return;
		for(int i = 0; i < n; i++) {
			if(bool[i])continue;
			if(t < a[i][3])continue;
			bool[i] = true;
			long mint = sum - t + a[i][3];
			long z = Math.max(a[i][0] - mint * a[i][1] - p * a[i][4], a[i][2]);
			res += z;
			max = Math.max(res, max);
			dfs(bool, a, t - a[i][3], t);
			res -= z;
			bool[i] = false;
		}
	}
}"
61,C,Java,61487432,2023-03-24 20:23:48,牛客517457762号,答案错误,"import java.util.*;
public class Main {
    static int [][]score;
    static int n,t,p;
    static int [][] mscore;
    public static void main(String[]args){
        Scanner sc=new Scanner(System.in);
        n=sc.nextInt();t=sc.nextInt();p=sc.nextInt();
        score=new int[n][5];
        mscore=new int[n][2];
        for(int i=0;i<n;i++){
            for(int j=0;j<5;j++) score[i][j]=sc.nextInt();
        }
        Arrays.sort(score,(a,b)->b[0]/b[3]-a[0]/a[3]);
//         Arrays.sort(score,(a,b)->a[0]/(a[3]*a[1])-b[0]/(b[3]*b[1]));
        int curt=0;
        int ans=0;
        for(int i=0;i<n;i++){
            curt+=score[i][3];
            if(curt>t)break;
            ans+=getsc(score[i],curt);
        }
        System.out.println(ans);
    }
    static int getsc(int[] s,int t){
        return Math.max(s[2],s[0]-t*s[1]-s[4]*p);
    }
}"
62,C,Java,61487580,2023-03-24 20:24:58,牛客517457762号,答案错误,"import java.util.*;
public class Main {
    static int [][]score;
    static int n,t,p;
    static int [][] mscore;
    public static void main(String[]args){
        Scanner sc=new Scanner(System.in);
        n=sc.nextInt();t=sc.nextInt();p=sc.nextInt();
        score=new int[n][5];
        mscore=new int[n][2];
        for(int i=0;i<n;i++){
            for(int j=0;j<5;j++) score[i][j]=sc.nextInt();
        }
        Arrays.sort(score,(a,b)->b[0]/(b[3]*b[1])-a[0]/(a[3]*a[1]));
        int curt=0;
        int ans=0;
        for(int i=0;i<n;i++){
            curt+=score[i][3];
            if(curt>t)break;
            ans+=getsc(score[i],curt);
        }
        System.out.println(ans);
    }
    static int getsc(int[] s,int t){
        return Math.max(s[2],s[0]-t*s[1]-s[4]*p);
    }
}"
63,C,Java,61488006,2023-03-24 20:28:23,智破云霄,答案错误,"
import java.util.*;
import java.io.*;
public class Main {
	static boolean[] used = new boolean[10];
	static long res = 0;
	static void dfs(long l,int t,int n,int w,long m,int[] a,int[] b,int[] c,int[] x,int[] y,int p)
	{
		if(n == w)
			return;
		if(l <= t )
		{
			res = Math.max(res, m);
		}
		else return;
		for(int i = w; i < n;i ++)
		{
			long mm = a[i]-(l+x[i])*b[i]-(long)y[i]*p;
			dfs(l+x[i],t,n,w+1,m+Math.max(c[i],mm),a,b,c,x,y,p);
			l -= x[i];
			m -= Math.max(c[i],mm);
			dfs(l,t,n,w+1,m,a,b,c,x,y,p);
		}
	}
public static void main(String[] args) {
	
 InputReader in = new InputReader(System.in);
PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	
	int n = in.nextInt();
	int t = in.nextInt();
	int p = in.nextInt();
	int[] a = new int[n];
	int[] b = new int[n];
	int[] c = new int[n];
	int[] x = new int[n];
	int[] y = new int[n];
	for(int i = 0;i < n;i ++)
	{
		 a[i] = in.nextInt();
		 b[i] = in.nextInt();
		 c[i] = in.nextInt();
		 x[i] = in.nextInt();
		 y[i] = in.nextInt();
		
	}
	dfs(0,t,n,0,0,a,b,c,x,y,p);
	out.println(res);
	
	
	

out.flush();

	
}
	
	
	
	
	



	
}





class InputReader {
    private final BufferedReader buf;
    private StringTokenizer tkl;

    public InputReader(InputStream is) {
        buf = new BufferedReader(new InputStreamReader(is));
    }

    public boolean hasNext() {
        try {
            while (tkl == null || !tkl.hasMoreElements()) tkl = new StringTokenizer(buf.readLine());
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public String next() {
        return hasNext() ? tkl.nextToken() : null;
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }
}
"
64,C,Java,61488067,2023-03-24 20:28:44,kk129,答案错误,"import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        int n,t,p;
        class S{
            int a,b,c,x,y;
        }
        S[] s;
        boolean[] visit;
        long max = 0;
        long dfs(int start,int step,int time,long sum){
            max = Math.max(max,sum);
            for (int i = 0; i < n; i++) {
                if(!visit[i]){
                    if((s[i].x+time)<t&&(i+1)<n){
                        int temp = Math.max(s[i].c,s[i].a-(s[i].x+time)*s[i].b-s[i].y*p);
//                        System.out.println(temp);
                        visit[i] = true;
                        dfs(i+1,step+1,time+s[i].x,sum+temp);
                        visit[i] = false;
                    }
                }
            }
            return max;
        }
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            n = in.nextInt();
            t = in.nextInt();
            p = in.nextInt();
            s = new S[n];
            for (int i = 0; i < n; i++) {
                s[i] = new S();
                s[i].a = in.nextInt();
                s[i].b = in.nextInt();
                s[i].c = in.nextInt();
                s[i].x = in.nextInt();
                s[i].y = in.nextInt();
            }
            visit = new boolean[n];
            for (int i = 0; i < n; i++) {
                visit[i] = true;
                int temp = Math.max(s[i].c,s[i].a-s[i].x*s[i].b-s[i].y*p);
                dfs(i,1,s[i].x,temp);
                visit[i] = false;
            }
            out.println(max);
        }
    }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;
        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}
"
65,C,Java,61488223,2023-03-24 20:29:48,LinCun,答案错误,"import java.util.*;
public class Main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int t = sc.nextInt();
        int p = sc.nextInt();
        int[] b = new int[9];
        int[] c = new int[9];
        int[] x = new int[9];
        int[] y = new int[9];
        int[] a = new int[9];
        int[] s = new int[9];
        boolean[] f = new boolean[9];
        for(int i = 1;i < n;i ++ ){
            a[i] = sc.nextInt();
            b[i] = sc.nextInt();
            c[i] = sc.nextInt();
            x[i] = sc.nextInt();
            y[i] = sc.nextInt();
        }
        int time = 0;
        int ans = 0;
        int nows = 0;
        int cnt = 0;
        int poi = 0;
        do{
            ans += nows;
            if(cnt >= 9) break;
            cnt ++;
            double max = -1;
            for(int i = 0;i < 9;i ++){
                if(f[i] != true) {
                    int temptime = time + x[i];
                    int score = Math.max(c[i],a[i] - temptime * b[i] - y[i] * p);
                    double w = score / (double)x[i];
                    if(w > max && temptime <=t) {max = w;poi = i;nows = score;}
                }
            }
            if(f[poi] == false){
                f[poi] = true;
                time += x[poi];
            }
            else break;
            
        }while(time < t);
        System.out.println(ans);
    }
}
"
66,C,Java,61488349,2023-03-24 20:30:48,许愿面试顺利的小师弟很讲义气,答案错误,"import java.util.Scanner;

public class Main {
    static int max = 0;
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int t = in.nextInt();
        int p = in.nextInt();
        int[] a=new int[n];
        int[] b=new int[n];
        int[] c=new int[n];
        int[] x=new int[n];
        int[] y=new int[n];
        boolean[] q = new boolean[n];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
            b[i] = in.nextInt();
            c[i] = in.nextInt();
            x[i] = in.nextInt();
            y[i] = in.nextInt();
        }
        dfs(n,0,t,0,p,q,a,b,c,x,y);
        System.out.println(max);
    }
    public static void dfs(int n,int time,int t,int sum,int p,boolean[] q,int[] a,int[] b,int[] c,int[] x,int[] y){
        if (time>t) {
            return;
        }
        max = Math.max(max,sum);
        for (int i = 0; i < n; i++) {
            if (q[i]) continue;
            q[i] = true;
            dfs(n,time+x[i],t,sum + Math.max(c[i],a[i]-(time+x[i])*b[i]-y[i]*p),p,q,a,b,c,x,y);
            q[i] = false;
        }
    }

}"
67,C,Java,61488503,2023-03-24 20:32:02,all-in秋招的小蜗牛很犯困,答案错误,"import java.util.*;

// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class  Main{

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        long t = Long.parseLong(in.next());
        int p = in.nextInt();
        int [][] nums = new int [n][5];
        int length_sum =0;
        for (int i = 0; i < n; i++) {
            nums[i][0] = in.nextInt();
            nums[i][1] = in.nextInt();
            nums[i][2] = in.nextInt();
            nums[i][3] =in.nextInt();
            nums[i][4] = in.nextInt();
            length_sum+=nums[i][3];
        }
        int length =0;
        if (t>length_sum)
            length=length_sum;
        else
            length=(int)t;
        long max =0;

        long[] dp = new long[length+1];
        for (int i = 0; i < n; i++) {
            for (int j = length;j >=nums[i][3]; j--) {

                    dp[j] = Math.max(dp[j], dp[j - nums[i][3]] + Math.max(nums[i][2], nums[i][0] - j * nums[i][1] - nums[i][4] * p));
                    max= Math.max(dp[j],max);
            }
        }
        System.out.println(max);
    }

}"
68,C,Java,61488626,2023-03-24 20:33:16,牛客360818823号,答案错误,"
import java.math.BigInteger;
import java.util.Arrays;
import java.util.Comparator;
import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
         Scanner sc = new Scanner(System.in);
         int n = sc.nextInt();
         int t = sc.nextInt();
         int p = sc.nextInt();
         int a[] = new int[n];
         int b[] = new int[n];
         int c[] = new int[n];
         int x[] = new int[n];
         int y[] = new int[n];
         long max[] = new long[n];
         for(int i=0;i<n;i++) {
        	 a[i] = sc.nextInt();
        	 b[i] = sc.nextInt();
        	 c[i] = sc.nextInt();
        	 x[i] = sc.nextInt();
        	 y[i] = sc.nextInt();
         }
       int count = 0;
       while(count<n) {
    	   int time =0;
    	   time = x[count];
    	   if(time<=t) max[count] = Math.max(c[count], a[count]-x[count]*b[count]-y[count]*p);
    	  //System.out.println(max[count]);
    	   int max1 =0;
    	   boolean bu = true;
    	   for(int i=0;i<n;i++) {
    		   if(count==i) {
    			   continue;
    		   }
    		   time = time+x[i];
    		   if(time<=t&&bu) {
    			    int max2 = Math.max(c[i], a[i]-time*b[i]-y[i]*p);
    			    max1 =  max1 +max2;
    			  // System.out.println(""max1:""+max1);
    		   }else if(time<=t){
    			   max1 = Math.max(max1,Math.max(c[i], a[i]-time*b[i]-y[i]*p));
    		   } else {
    			   time = time -x[i];
    		   }
    	   }
    	   max[count] = max[count] +max1;
    	   System.out.println(max[count]);
    	   count++;
       }
       Arrays.sort(max);
       System.out.println(max[n-1]);
        /*String s = sc.next();
        String s1 = sc.next();
        BigInteger bg = new BigInteger(s);
        BigInteger bg1 = new BigInteger(s);
        BigInteger bg2  = bg.divide(bg1);
        bg1 = bg.mod(bg1);
        if(bg1.compareTo(bg2)>0) {
        	System.out.println(""niuniu eats more than others"");
        } else if(bg1.compareTo(bg2)==0) {
        	System.out.println(""same"");
        } else {
        	System.out.println(""niuniu eats less than others"");
        }*/
	}
}
"
69,C,Java,61488735,2023-03-24 20:34:22,kk129,答案错误,"import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        int n,t,p;
        class S{
            int a,b,c,x,y;
        }
        S[] s;
        boolean[] visit;
        long max = 0;
        long dfs(int start,int step,int time,long sum){
            max = Math.max(max,sum);
            for (int i = 0; i < n; i++) {
                if(!visit[i]){
                    if((s[i].x+time)<t&&(i+1)<n){
                        long temp = Math.max(s[i].c,s[i].a-(s[i].x+time)*s[i].b-s[i].y*p);
//                        System.out.println(temp);
                        visit[i] = true;
                        dfs(i+1,step+1,time+s[i].x,sum+temp);
                        visit[i] = false;
                    }
                }
            }
            return max;
        }
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            n = in.nextInt();
            t = in.nextInt();
            p = in.nextInt();
            s = new S[n];
            for (int i = 0; i < n; i++) {
                s[i] = new S();
                s[i].a = in.nextInt();
                s[i].b = in.nextInt();
                s[i].c = in.nextInt();
                s[i].x = in.nextInt();
                s[i].y = in.nextInt();
            }
            visit = new boolean[n];
            for (int i = 0; i < n; i++) {
                visit[i] = true;
                long temp = Math.max(s[i].c,s[i].a-s[i].x*s[i].b-s[i].y*p);
                dfs(i,1,s[i].x,temp);
                visit[i] = false;
            }
            out.println(max);
        }
    }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;
        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}
"
70,C,Java,61488808,2023-03-24 20:35:07,LinCun,答案错误,"import java.util.*;
public class Main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int t = sc.nextInt();
        int p = sc.nextInt();
        int[] b = new int[9];
        int[] c = new int[9];
        int[] x = new int[9];
        int[] y = new int[9];
        int[] a = new int[9];
        int[] s = new int[9];
        boolean[] f = new boolean[9];
        for(int i = 1;i < n;i ++ ){
            a[i] = sc.nextInt();
            b[i] = sc.nextInt();
            c[i] = sc.nextInt();
            x[i] = sc.nextInt();
            y[i] = sc.nextInt();
        }
        int time = 0;
        int ans = 0;
        int nows = 0;
        int cnt = 0;
        int poi = 0;
        do{
            ans += nows;
//             if(cnt >= 9) break;
            cnt ++;
            double max = -1;
            for(int i = 0;i < 9;i ++){
                if(f[i] != true) {
                    int temptime = time + x[i];
                    int score = Math.max(c[i],a[i] - temptime * b[i] - y[i] * p);
                    double w = score / (double)x[i];
                    if(w > max && temptime <=t) {max = w;poi = i;nows = score;}
                }
            }
            if(f[poi] == false){
                f[poi] = true;
                time += x[poi];
            }
            else break;
            
        }while(time < t);
        System.out.println(ans);
    }
}
"
71,C,Java,61488884,2023-03-24 20:35:42,LinCun,答案错误,"import java.util.*;
public class Main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int t = sc.nextInt();
        int p = sc.nextInt();
        int[] b = new int[9];
        int[] c = new int[9];
        int[] x = new int[9];
        int[] y = new int[9];
        int[] a = new int[9];
        int[] s = new int[9];
        boolean[] f = new boolean[9];
        for(int i = 1;i < n;i ++ ){
            a[i] = sc.nextInt();
            b[i] = sc.nextInt();
            c[i] = sc.nextInt();
            x[i] = sc.nextInt();
            y[i] = sc.nextInt();
        }
        int time = 0;
        int ans = 0;
        int nows = 0;
        int cnt = 0;
        int poi = 0;
        do{
            ans += nows;
            if(cnt > 9) break;
            cnt ++;
            double max = -1;
            for(int i = 0;i < 9;i ++){
                if(f[i] != true) {
                    int temptime = time + x[i];
                    int score = Math.max(c[i],a[i] - temptime * b[i] - y[i] * p);
                    double w = score / (double)x[i];
                    if(w > max && temptime <=t) {max = w;poi = i;nows = score;}
                }
            }
            if(f[poi] == false){
                f[poi] = true;
                time += x[poi];
            }
            else break;
            
        }while(time < t);
        System.out.println(ans);
    }
}
"
72,C,Java,61489039,2023-03-24 20:36:55,自由oVo,答案正确,"import java.util.Scanner;

public class Main {
	static int n;
	static long res;
	static long p;
	static long max;
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		n = sc.nextInt(); long t = sc.nextLong(); p = sc.nextLong();
		boolean[] bool = new boolean[ n];
		long[][] a = new long[n][5];
		for(int i = 0; i < n; i++) {
			a[i][0] = sc.nextLong();
			a[i][1] = sc.nextLong();
			a[i][2] = sc.nextLong();
			a[i][3] = sc.nextLong();
			a[i][4] = sc.nextLong();
		}
		dfs(bool, a, t, t);
		System.out.println(max);
	}
	public static void dfs(boolean[] bool, long[][] a, long t, long sum) {
		if(t <= 0)return;
		for(int i = 0; i < n; i++) {
			if(bool[i])continue;
			if(t < a[i][3])continue;
			bool[i] = true;
			long mint = sum - t + a[i][3];
			long z = Math.max(a[i][0] - mint * a[i][1] - p * a[i][4], a[i][2]);
			res += z;
			max = Math.max(res, max);
			dfs(bool, a, t - a[i][3], sum);
			res -= z;
			bool[i] = false;
		}
	}
}"
73,C,Java,61489248,2023-03-24 20:38:36,kk129,答案错误,"import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        int n,t,p;
        class S{
            int a,b,c,x,y;
        }
        S[] s;
        boolean[] visit;
        long max = 0;
        long dfs(int start,int step,int time,long sum){
            max = Math.max(max,sum);
            for (int i = 0; i < n; i++) {
                if(!visit[i]){
                    if((s[i].x+time)<=t&&(i+1)<n){
                        long temp = Math.max(s[i].c,s[i].a-(s[i].x+time)*s[i].b-s[i].y*p);
//                        System.out.println(temp);
                        visit[i] = true;
                        dfs(i+1,step+1,time+s[i].x,sum+temp);
                        visit[i] = false;
                    }
                }
            }
            return max;
        }
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            n = in.nextInt();
            t = in.nextInt();
            p = in.nextInt();
            s = new S[n];
            for (int i = 0; i < n; i++) {
                s[i] = new S();
                s[i].a = in.nextInt();
                s[i].b = in.nextInt();
                s[i].c = in.nextInt();
                s[i].x = in.nextInt();
                s[i].y = in.nextInt();
            }
            visit = new boolean[n];
            for (int i = 0; i < n; i++) {
                visit[i] = true;
                if(s[i].x<=t) {
                    long temp = Math.max(s[i].c, s[i].a - s[i].x * s[i].b - s[i].y * p);
                    dfs(i, 1, s[i].x, temp);
                }
                visit[i] = false;
            }
            out.println(max);
        }
    }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;
        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}
"
74,C,Java,61489253,2023-03-24 20:38:38,智破云霄,答案错误,"
import java.util.*;
import java.io.*;
public class Main {
	static boolean[] used = new boolean[10];
	static long res = 0;
	static void dfs(long l,int t,int n,int w,long m,int[] a,int[] b,int[] c,int[] x,int[] y,int p)
	{
		if(n == w || m < 0)
			return;
		if(l <= t )
		{
			res = Math.max(res, m);
			//System.out.println(m);
		}
		else return;
		for(int i = 0; i < n;i ++)
		{
			if(!used[i])
			{
				long mm = a[i]-(l+x[i])*(long)b[i]-(long)y[i]*p;
				used[i] = true;
				dfs(l+x[i],t,n,w+1,m+Math.max(c[i],mm),a,b,c,x,y,p);
				l -= x[i];
				m -= Math.max(c[i],mm);
				used[i] = false;
				
			}
			dfs(l,t,n,w+1,m,a,b,c,x,y,p);
		}
	}
public static void main(String[] args) {
	
 InputReader in = new InputReader(System.in);
PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	
	int n = in.nextInt();
	int t = in.nextInt();
	int p = in.nextInt();
	int[] a = new int[n];
	int[] b = new int[n];
	int[] c = new int[n];
	int[] x = new int[n];
	int[] y = new int[n];
	for(int i = 0;i < n;i ++)
	{
		 a[i] = in.nextInt();
		 b[i] = in.nextInt();
		 c[i] = in.nextInt();
		 x[i] = in.nextInt();
		 y[i] = in.nextInt();
		
	}
	dfs(0,t,n,0,0,a,b,c,x,y,p);
	out.println(res);
	
	
	

out.flush();

	
}
	
	
	
	
	



	
}





class InputReader {
    private final BufferedReader buf;
    private StringTokenizer tkl;

    public InputReader(InputStream is) {
        buf = new BufferedReader(new InputStreamReader(is));
    }

    public boolean hasNext() {
        try {
            while (tkl == null || !tkl.hasMoreElements()) tkl = new StringTokenizer(buf.readLine());
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public String next() {
        return hasNext() ? tkl.nextToken() : null;
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }
}
"
75,C,Java,61489458,2023-03-24 20:40:28,智破云霄,答案错误,"
import java.util.*;
import java.io.*;
public class Main {
	static boolean[] used = new boolean[10];
	static long res = 0;
	static void dfs(long l,int t,int n,int w,long m,int[] a,int[] b,int[] c,int[] x,int[] y,int p)
	{
		if(n == w || m < 0)
			return;
		if(l <= t )
		{
			res = Math.max(res, m);
			//System.out.println(m);
		}
		else return;
		for(int i = 0; i < n;i ++)
		{
			if(!used[i])
			{
				long mm = a[i]-(l+x[i])*(long)b[i]-(long)y[i]*p;
				used[i] = true;
				dfs(l+x[i],t,n,w+1,m+Math.max(c[i],mm),a,b,c,x,y,p);
				l -= x[i];
				m -= Math.max(c[i],mm);
				used[i] = false;
				
			}
			//dfs(l,t,n,w+1,m,a,b,c,x,y,p);
		}
	}
public static void main(String[] args) {
	
 InputReader in = new InputReader(System.in);
PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	
	int n = in.nextInt();
	int t = in.nextInt();
	int p = in.nextInt();
	int[] a = new int[n];
	int[] b = new int[n];
	int[] c = new int[n];
	int[] x = new int[n];
	int[] y = new int[n];
	for(int i = 0;i < n;i ++)
	{
		 a[i] = in.nextInt();
		 b[i] = in.nextInt();
		 c[i] = in.nextInt();
		 x[i] = in.nextInt();
		 y[i] = in.nextInt();
		
	}
	dfs(0,t,n,0,0,a,b,c,x,y,p);
	out.println(res);
	
	
	

out.flush();

	
}
	
	
	
	
	



	
}





class InputReader {
    private final BufferedReader buf;
    private StringTokenizer tkl;

    public InputReader(InputStream is) {
        buf = new BufferedReader(new InputStreamReader(is));
    }

    public boolean hasNext() {
        try {
            while (tkl == null || !tkl.hasMoreElements()) tkl = new StringTokenizer(buf.readLine());
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public String next() {
        return hasNext() ? tkl.nextToken() : null;
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }
}
"
76,C,Java,61489704,2023-03-24 20:42:44,许愿面试顺利的小师弟很讲义气,答案错误,"import java.util.Scanner;

public class Main {
    static int max = 0;
    static int[] a;
    static int[] b;
    static int[] c;
    static int[] x;
    static int[] y;
    static boolean[] q;
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int t = in.nextInt();
        int p = in.nextInt();
        a =new int[n];
        b =new int[n];
        c =new int[n];
        x =new int[n];
        y =new int[n];
        q = new boolean[n];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
            b[i] = in.nextInt();
            c[i] = in.nextInt();
            x[i] = in.nextInt();
            y[i] = in.nextInt();
        }
        dfs(n,0,t,0,p);
        System.out.println(max);
    }
    public static void dfs(int n,int time,int t,int sum,int p){
        if (time>t) {
            return;
        }
        max = Math.max(max,sum);
        for (int i = 0; i < n; i++) {
            if (q[i]) continue;
            q[i] = true;
            dfs(n,time+x[i],t,sum + Math.max(c[i],a[i]-(time+x[i])*b[i]-y[i]*p),p);
            q[i] = false;
        }
    }
}"
77,C,Java,61489753,2023-03-24 20:43:08,LinCun,答案错误,"import java.util.*;
public class Main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int t = sc.nextInt();
        int p = sc.nextInt();
        int[] b = new int[9];
        int[] c = new int[9];
        int[] x = new int[9];
        int[] y = new int[9];
        int[] a = new int[9];
        int[] s = new int[9];
        boolean[] f = new boolean[9];
        for(int i = 1;i < n;i ++ ){
            a[i] = sc.nextInt();
            b[i] = sc.nextInt();
            c[i] = sc.nextInt();
            x[i] = sc.nextInt();
            y[i] = sc.nextInt();
        }
        int time = 0;
        long ans = 0;
        int nows = 0;
        int cnt = 0;
        int poi = 0;
        do{
            ans += nows;
//             System.out.println(""time"" + time);
            if(cnt > 9) break;
            cnt ++;
            double max = -1;
            for(int i = 0;i < 9;i ++){
                if(f[i] != true) {
                    int temptime = time + x[i];
                    int score = Math.max(c[i],a[i] - temptime * b[i] - y[i] * p);
                    double w = score / (double)x[i];
                    if(w > max && temptime <=t) {max = w;poi = i;nows = score;}
                }
            }
            if(f[poi] == false){
                f[poi] = true;
                time += x[poi];
            }
            else break;
            
        }while(time < t);
        System.out.println(ans);
    }
}
"
78,C,Java,61489802,2023-03-24 20:43:33,kk129,答案错误,"import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        int n,t,p;
        class S{
            long a,b,c,x,y;
        }
        S[] s;
        boolean[] visit;
        long max = 0;
        long dfs(long start,long step,long time,long sum){
            max = Math.max(max,sum);
            for (int i = 0; i < n; i++) {
                if(!visit[i]){
                    if((s[i].x+time)<=t&&(i+1)<n){
                        long temp = Math.max(s[i].c,s[i].a-(s[i].x+time)*s[i].b-s[i].y*p);
//                        System.out.println(temp);
                        visit[i] = true;
                        dfs(i+1,step+1,time+s[i].x,sum+temp);
                        visit[i] = false;
                    }
                }
            }
            return max;
        }
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            n = in.nextInt();
            t = in.nextInt();
            p = in.nextInt();
            s = new S[n];
            for (int i = 0; i < n; i++) {
                s[i] = new S();
                s[i].a = in.nextLong();
                s[i].b = in.nextLong();
                s[i].c = in.nextLong();
                s[i].x = in.nextLong();
                s[i].y = in.nextLong();
            }
            visit = new boolean[n];
            for (int i = 0; i < n; i++) {
                visit[i] = true;
                if(s[i].x<=t) {
                    long temp = Math.max(s[i].c, s[i].a - s[i].x * s[i].b - s[i].y * p);
                    dfs(i, 1, s[i].x, temp);
                }
                visit[i] = false;
            }
            out.println(max);
        }
    }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;
        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}
"
79,C,Java,61490066,2023-03-24 20:45:49,黄明勇,运行超时,"import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.StreamTokenizer;
import java.util.ArrayList;
public class Main{
	static int n;
	static boolean[] st;
	static int[] a, b, c, x, y;
	static ArrayList<Integer> list = new ArrayList<>();
	static int t, p;
	static long max = 0;
	public static void main(String[] args) throws Exception{
		Reader sc = new Reader();
//		Scanner sc = new Scanner(System.in);
//		PrintWriter pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
		n = sc.nextInt();
		t = sc.nextInt();
		p = sc.nextInt();
//		PriorityQueue<Node> q = new PriorityQueue<>();
		st = new boolean[n];
		a = new int[n];
		b = new int[n];
		c = new int[n];
		x = new int[n];
		y = new int[n];
		for(int i = 0; i < n; i++) {
			a[i] = sc.nextInt();
			b[i] = sc.nextInt();
			c[i] = sc.nextInt();
			x[i] = sc.nextInt();
			y[i] = sc.nextInt();
		}
		dfs(0);
		System.out.println(max);
	}
	public static void dfs(int pos) {
		if(pos >= n) {
			long temp = t;
			long sum = 0;
			long time = 0;
			for(int i = 0; i < list.size(); i++) {
				int idx = list.get(i);
				if(temp >= x[idx]) {
					temp -= x[idx];
					time += x[idx];
					sum += Math.max(c[idx], 1L * a[idx] - 1L * time * b[idx] - 1L * y[idx] * p);
				}else {
					break;
				}
			}
			max = Math.max(max, sum);
			return;
		}
		for(int i = 0; i < n; i++) {
			if(!st[i])	{
				st[i] = true;
				list.add(i);
				dfs(pos + 1);
				list.remove(new Integer(i));
				st[i] = false;
			}
			dfs(pos + 1);
		}
	}
}
class Reader{
	StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
	public int nextInt () throws Exception {
		st.nextToken();
		return (int)st.nval;
	}
	public String next() throws Exception {
		st.nextToken();
		return st.sval;
	}
}
"
80,C,Java,61490265,2023-03-24 20:47:31,LinCun,答案错误,"import java.util.*;
public class Main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int t = sc.nextInt();
        int p = sc.nextInt();
        int[] b = new int[9];
        int[] c = new int[9];
        int[] x = new int[9];
        int[] y = new int[9];
        int[] a = new int[9];
        int[] s = new int[9];
        boolean[] f = new boolean[9];
        for(int i = 1;i < n;i ++ ){
            a[i] = sc.nextInt();
            b[i] = sc.nextInt();
            c[i] = sc.nextInt();
            x[i] = sc.nextInt();
            y[i] = sc.nextInt();
        }
        int time = 0;
        long ans = 0;
        int nows = 0;
        int cnt = 0;
        int poi = 0;
        do{
            ans += nows;
            System.out.println(""time"" + time);
            if(cnt > 9) break;
            cnt ++;
            double max = -1;
            for(int i = 0;i < 9;i ++){
                if(f[i] != true) {
                    int temptime = time + x[i];
                    int score = Math.max(c[i],a[i] - temptime * b[i] - y[i] * p);
                    double w = score / (double)x[i];
                    if(w > max && temptime <=t) {System.out.println(""i"" + i);max = w;poi = i;nows = score;}
                    
                }
            }
            if(f[poi] == false){
                f[poi] = true;
                time += x[poi];
            }
            else break;
            
        }while(time < t);
        System.out.println(ans);
    }
}
"
81,C,Java,61490313,2023-03-24 20:47:51,李雯钦,答案错误,"import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.*;

public class Main{
    static int get(int u,int time){
        return Math.max(c[u],a[u]-time*b[u]-y[u]*p);
    }
    static int n,t,p,N = 12,res,time;
    static int[] a = new int[N];
    static int[] b = new int[N];
    static int[] c = new int[N];
    static int[] x = new int[N];
    static int[] y = new int[N];
    static int[] q = new int[N];
    static boolean[] st = new boolean[N];

    static int bfs(int u){
        int hh = 0, tt = -1;
        if(x[u]<=t){
            q[++tt] = u;
            time=x[u];
            res=get(u,time);
        }
        while(hh<=tt){
            int d = q[hh++];
            st[d] = true;
            for(int i =1;i<=n;i++){
                if(st[i]) continue;
                if(time+x[i]>t) continue;
                time+=x[i];
                res += get(i,time);
                q[++tt] = i;
            }
        }
        return res;
    }
    public static void main(String[] args){
        QuickInput in = new  QuickInput();
        PrintWriter out = new PrintWriter(System.out);
        n = in.nextInt(); t = in.nextInt(); p = in.nextInt();

        for(int i =1;i<=n;i++){
            a[i] = in.nextInt();
            b[i] = in.nextInt();
            c[i] = in.nextInt();
            x[i] = in.nextInt();
            y[i] = in.nextInt();
        }

        int ans = 0;
        for(int i =1;i<=n;i++){
            ans = Math.max(ans,bfs(i));
        }


        out.println(ans);

        //in.nextInt().....
        //out.println().....

        out.close();//不关闭，就会有些数据留在缓冲区
    }
}


class  QuickInput
{
    BufferedReader buf;
    StringTokenizer tok;
    QuickInput(){
        buf = new BufferedReader(new InputStreamReader(System.in));
    }
    boolean hasNext(){
        while(tok == null || !tok.hasMoreElements()){
            try{
                tok = new StringTokenizer(buf.readLine());
            }catch(Exception e){
                return false;
            }
        }
        return true;
    }
    String next(){
        if(hasNext()) return tok.nextToken();
        return null;
    }
    int nextInt(){
        return Integer.parseInt(next());
    }
    long nextLong(){
        return Long.parseLong(next());
    }
    double nextDouble(){
        return Double.parseDouble(next());
    }
    BigInteger nextBigInteger(){
        return new BigInteger(next());
    }
    BigDecimal nextBigDecimal(){
        return new BigDecimal(next());
    }
}"
82,C,Java,61490380,2023-03-24 20:48:27,TcJJJJJJ,答案错误,"
import java.util.*;
import java.io.*;
public class Main {
	static boolean[] used = new boolean[10];
	static long res = 0;
	static void dfs(long l,int t,int n,int w,long m,int[] a,int[] b,int[] c,int[] x,int[] y,int p)
	{
		if(n == w || m < 0)
			return;
		if(l <= t )
		{
			res = Math.max(res, m);
			//System.out.println(m);
		}
		else return;
		for(int i = 0; i < n;i ++)
		{
			if(!used[i] && l+x[i]<=t)
			{
				long mm = a[i]-(l+x[i])*(long)b[i]-(long)y[i]*p;
				used[i] = true;
				dfs(l+x[i],t,n,w+1,m+Math.max(c[i],mm),a,b,c,x,y,p);
				l -= x[i];
				m -= Math.max(c[i],mm);
				used[i] = false;
				
			}
		}
	}
public static void main(String[] args) {
	
 InputReader in = new InputReader(System.in);
PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	
	int n = in.nextInt();
	int t = in.nextInt();
	int p = in.nextInt();
	int[] a = new int[n];
	int[] b = new int[n];
	int[] c = new int[n];
	int[] x = new int[n];
	int[] y = new int[n];
	for(int i = 0;i < n;i ++)
	{
		 a[i] = in.nextInt();
		 b[i] = in.nextInt();
		 c[i] = in.nextInt();
		 x[i] = in.nextInt();
		 y[i] = in.nextInt();
		
	}
	dfs(0,t,n,0,0,a,b,c,x,y,p);
	out.println(res);
	
	
	

out.flush();

	
}
	
	
	
	
	



	
}





class InputReader {
    private final BufferedReader buf;
    private StringTokenizer tkl;

    public InputReader(InputStream is) {
        buf = new BufferedReader(new InputStreamReader(is));
    }

    public boolean hasNext() {
        try {
            while (tkl == null || !tkl.hasMoreElements()) tkl = new StringTokenizer(buf.readLine());
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public String next() {
        return hasNext() ? tkl.nextToken() : null;
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }
}
"
83,C,Java,61490391,2023-03-24 20:48:33,lllllllle,答案错误,"
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.math.BigInteger;
import java.nio.Buffer;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Queue;
import java.util.Scanner;
import java.util.Set;
import java.util.TreeMap;
import java.util.TreeSet;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;


public class Main {
	
	public static void main(String[] args) throws IOException {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		String[] s=br.readLine().split("" "");
		int n=Integer.parseInt(s[0]);
		long t=Long.parseLong(s[1]);
		long p=Long.parseLong(s[2]);
		long[][] title=new long[n][5];
		for(int i=0;i<n;i++) {
			s=br.readLine().split("" "");
			for(int j=0;j<5;j++) {
				title[i][j]=Long.parseLong(s[j]);
			}
		}
		long[] time=new long[1<<n];
		for(int i=1;i<1<<n;i++) {
			for(int j=0;j<n;j++) {
				if((i&(1<<j))==0) {
					continue;
				}
				time[i]=time[i^(1<<j)]+title[j][3];
				break;
			}
		}
		long[] dp=new long[1<<n];
		dp[0]=0;
		long ans=0;
		for(int i=1;i<1<<n;i++) {
			for(int j=0;j<n;j++) {
				if((i&(1<<j))==0) {
					continue;
				}
				if(time[i]>t) {
					break;
				}
				long tmp=title[j][0]-time[i]*title[j][1]-title[j][4]*p;
				dp[i]=Math.max(dp[i], Math.max(title[j][2], dp[i^(1<<j)]+tmp));
			}
			ans=Math.max(ans, dp[i]);
		}
		System.out.println(ans);
		
	}

	
}
"
84,C,Java,61490522,2023-03-24 20:49:43,黄明勇,答案正确,"import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.StreamTokenizer;
import java.util.ArrayList;
public class Main{
	static int n;
	static boolean[] st;
	static int[] a, b, c, x, y;
	static ArrayList<Integer> list = new ArrayList<>();
	static int t, p;
	static long max = 0;
	public static void main(String[] args) throws Exception{
		Reader sc = new Reader();
//		Scanner sc = new Scanner(System.in);
//		PrintWriter pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
		n = sc.nextInt();
		t = sc.nextInt();
		p = sc.nextInt();
		//		PriorityQueue<Node> q = new PriorityQueue<>();
		st = new boolean[n];
		a = new int[n];
		b = new int[n];
		c = new int[n];
		x = new int[n];
		y = new int[n];
		for(int i = 0; i < n; i++) {
			a[i] = sc.nextInt();
			b[i] = sc.nextInt();
			c[i] = sc.nextInt();
			x[i] = sc.nextInt();
			y[i] = sc.nextInt();
		}
		dfs(0);
		System.out.println(max);
	}
	public static void dfs(int pos) {
		if(pos >= n) {
			long temp = t;
			long sum = 0;
			long time = 0;
			for(int i = 0; i < list.size(); i++) {
				int idx = list.get(i);
				if(temp >= x[idx]) {
					temp -= x[idx];
					time += x[idx];
					sum += Math.max(c[idx], 1L * a[idx] - 1L * time * b[idx] - 1L * y[idx] * p);
				}else {
					break;
				}
			}
			max = Math.max(max, sum);
			return;
		}
		for(int i = 0; i < n; i++) {
			if(!st[i])	{
				st[i] = true;
				list.add(i);
				dfs(pos + 1);
				list.remove(new Integer(i));
				st[i] = false;
			}
		}
	}
}
class Reader{
	StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
	public int nextInt () throws Exception {
		st.nextToken();
		return (int)st.nval;
	}
	public String next() throws Exception {
		st.nextToken();
		return st.sval;
	}
}
"
85,C,Java,61490528,2023-03-24 20:49:46,LinCun,答案错误,"import java.util.*;
public class Main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int t = sc.nextInt();
        int p = sc.nextInt();
        int[] b = new int[9];
        int[] c = new int[9];
        int[] x = new int[9];
        int[] y = new int[9];
        int[] a = new int[9];
        int[] s = new int[9];
        boolean[] f = new boolean[9];
        for(int i = 0;i < n;i ++ ){
            a[i] = sc.nextInt();
            b[i] = sc.nextInt();
            c[i] = sc.nextInt();
            x[i] = sc.nextInt();
            y[i] = sc.nextInt();
        }
        int time = 0;
        long ans = 0;
        int nows = 0;
        int cnt = 0;
        int poi = 0;
        do{
            ans += nows;
            if(cnt > 9) break;
            cnt ++;
            double max = -1;
            for(int i = 0;i < 9;i ++){
                if(f[i] != true) {
                    int temptime = time + x[i];
                    int score = Math.max(c[i],a[i] - temptime * b[i] - y[i] * p);
                    double w = score / (double)x[i];
                    if(w > max && temptime <=t) {max = w;poi = i;nows = score;}
                    
                }
            }
            if(f[poi] == false){
                f[poi] = true;
                time += x[poi];
            }
            else break;
            
        }while(time < t);
        System.out.println(ans);
    }
}
"
86,C,Java,61490537,2023-03-24 20:49:50,LinCun,答案错误,"import java.util.*;
public class Main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int t = sc.nextInt();
        int p = sc.nextInt();
        int[] b = new int[9];
        int[] c = new int[9];
        int[] x = new int[9];
        int[] y = new int[9];
        int[] a = new int[9];
        int[] s = new int[9];
        boolean[] f = new boolean[9];
        for(int i = 0;i < n;i ++ ){
            a[i] = sc.nextInt();
            b[i] = sc.nextInt();
            c[i] = sc.nextInt();
            x[i] = sc.nextInt();
            y[i] = sc.nextInt();
        }
        int time = 0;
        long ans = 0;
        int nows = 0;
        int cnt = 0;
        int poi = 0;
        do{
            ans += nows;
            if(cnt > 9) break;
            cnt ++;
            double max = -1;
            for(int i = 0;i < 9;i ++){
                if(f[i] != true) {
                    int temptime = time + x[i];
                    int score = Math.max(c[i],a[i] - temptime * b[i] - y[i] * p);
                    double w = score / (double)x[i];
                    if(w > max && temptime <=t) {max = w;poi = i;nows = score;}
                    
                }
            }
            if(f[poi] == false){
                f[poi] = true;
                time += x[poi];
            }
            else break;
            
        }while(time < t);
        System.out.println(ans);
    }
}
"
87,C,Java,61490565,2023-03-24 20:50:03,232132323,答案正确,"import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        int n;
        long t;
        int p;
        Problem[] problems;
        long max = 0;
        long dfs(int [] a,long time,long score){
            max = Math.max(max,score);
            for (int i = 0; i < n; i++) {
                if (a[i] == 0 && time + problems[i].x <= t) {
                    a[i] = 1;
                    dfs(a, time + problems[i].x, score + Math.max(problems[i].c, problems[i].a - (time + problems[i].x) * problems[i].b - problems[i].y * p));
                    a[i] = 0;
                }
            }
            return max;
        }
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            n = in.nextInt();
            t = in.nextLong();
            p = in.nextInt();
            problems = new Problem[n];
            for (int i = 0; i < n; i++) {
                problems[i] = new Problem();
                problems[i].a = in.nextLong();
                problems[i].b = in.nextLong();
                problems[i].c = in.nextLong();
                problems[i].x = in.nextLong();
                problems[i].y = in.nextLong();
            }
            int [] a = new int[n];
            dfs(a,0,0);
            out.println(max);

        }

        class Problem {
            long a, b, c, x, y;
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        boolean hasNext() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e) {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

    }
}"
88,C,Java,61490674,2023-03-24 20:51:03,LinCun,答案错误,"import java.util.*;
public class Main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int t = sc.nextInt();
        int p = sc.nextInt();
        int[] b = new int[9];
        int[] c = new int[9];
        int[] x = new int[9];
        int[] y = new int[9];
        int[] a = new int[9];
        int[] s = new int[9];
        boolean[] f = new boolean[9];
        for(int i = 0;i < n;i ++ ){
            a[i] = sc.nextInt();
            b[i] = sc.nextInt();
            c[i] = sc.nextInt();
            x[i] = sc.nextInt();
            y[i] = sc.nextInt();
        }
        int time = 0;
        long ans = 0;
        int nows = 0;
        int cnt = 0;
        int poi = 0;
        do{
            ans += nows;
            if(cnt > n) break;
            cnt ++;
            double max = -1;
            for(int i = 0;i < n;i ++){
                if(f[i] != true) {
                    int temptime = time + x[i];
                    int score = Math.max(c[i],a[i] - temptime * b[i] - y[i] * p);
                    double w = score / (double)x[i];
                    if(w > max && temptime <=t) {max = w;poi = i;nows = score;}
                    
                }
            }
            if(f[poi] == false){
                f[poi] = true;
                time += x[poi];
            }
            else break;
            
        }while(time < t);
        System.out.println(ans);
    }
}
"
89,C,Java,61490696,2023-03-24 20:51:14,李雯钦,答案错误,"import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.*;

public class Main{
    static long get(int u,int time){
        return Math.max(c[u],a[u]-(long)time*b[u]-(long)y[u]*p);
    }
    static int n,t,p,N = 12,time;
    static long res;
    static int[] a = new int[N];
    static int[] b = new int[N];
    static int[] c = new int[N];
    static int[] x = new int[N];
    static int[] y = new int[N];
    static int[] q = new int[N];
    static boolean[] st = new boolean[N];

    static long bfs(int u){
        int hh = 0, tt = -1;
        if(x[u]<=t){
            q[++tt] = u;
            time=x[u];
            res=get(u,time);
        }
        while(hh<=tt){
            int d = q[hh++];
            st[d] = true;
            for(int i =1;i<=n;i++){
                if(st[i]) continue;
                if(time+x[i]>t) continue;
                time+=x[i];
                res += get(i,time);
                q[++tt] = i;
            }
        }
        return res;
    }
    public static void main(String[] args){
        QuickInput in = new  QuickInput();
        PrintWriter out = new PrintWriter(System.out);
        n = in.nextInt(); t = in.nextInt(); p = in.nextInt();

        for(int i =1;i<=n;i++){
            a[i] = in.nextInt();
            b[i] = in.nextInt();
            c[i] = in.nextInt();
            x[i] = in.nextInt();
            y[i] = in.nextInt();
        }

        long ans = 0;
        for(int i =1;i<=n;i++){
            ans = Math.max(ans,bfs(i));
        }


        out.println(ans);

        //in.nextInt().....
        //out.println().....

        out.close();//不关闭，就会有些数据留在缓冲区
    }
}


class  QuickInput
{
    BufferedReader buf;
    StringTokenizer tok;
    QuickInput(){
        buf = new BufferedReader(new InputStreamReader(System.in));
    }
    boolean hasNext(){
        while(tok == null || !tok.hasMoreElements()){
            try{
                tok = new StringTokenizer(buf.readLine());
            }catch(Exception e){
                return false;
            }
        }
        return true;
    }
    String next(){
        if(hasNext()) return tok.nextToken();
        return null;
    }
    int nextInt(){
        return Integer.parseInt(next());
    }
    long nextLong(){
        return Long.parseLong(next());
    }
    double nextDouble(){
        return Double.parseDouble(next());
    }
    BigInteger nextBigInteger(){
        return new BigInteger(next());
    }
    BigDecimal nextBigDecimal(){
        return new BigDecimal(next());
    }
}"
90,C,Java,61490935,2023-03-24 20:53:18,232132323,答案正确,"import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        int n;
        long t;
        int p;
        Problem[] problems;
        long max = 0;
        void dfs(int [] a,long time,long score){
            max = Math.max(max,score);
            for (int i = 0; i < n; i++) {
                if (a[i] == 0 && time + problems[i].x <= t) {
                    a[i] = 1;
                    dfs(a, time + problems[i].x, score + Math.max(problems[i].c, problems[i].a - (time + problems[i].x) * problems[i].b - problems[i].y * p));
                    a[i] = 0;
                }
            }
        }
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            n = in.nextInt();
            t = in.nextLong();
            p = in.nextInt();
            problems = new Problem[n];
            for (int i = 0; i < n; i++) {
                problems[i] = new Problem();
                problems[i].a = in.nextLong();
                problems[i].b = in.nextLong();
                problems[i].c = in.nextLong();
                problems[i].x = in.nextLong();
                problems[i].y = in.nextLong();
            }
            int [] a = new int[n];
            dfs(a,0,0);
            out.println(max);

        }

        class Problem {
            long a, b, c, x, y;
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        boolean hasNext() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e) {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

    }
}"
91,C,Java,61490970,2023-03-24 20:53:37,牛客517457762号,答案错误,"import java.util.*;
public class Main {
    static int [][]score;
    static int n,t,p;
    static int [][] mscore;
    static    int ans=0;
    static List<int[]> list=new ArrayList<>();
    public static void main(String[]args){
        Scanner sc=new Scanner(System.in);
        n=sc.nextInt();t=sc.nextInt();p=sc.nextInt();
        score=new int[n][5];
        mscore=new int[n][2];
        for(int i=0;i<n;i++){
            int [] curn=new int[5];
            for(int j=0;j<5;j++) curn[j]=sc.nextInt();
            list.add(curn);
        }
        Collections.sort(list,(a,b)->a[3]-b[3]);
        dfs(0,0,0);
        System.out.println(ans);
    }
    static void dfs(int idx,int time,int soce){
        ans=Math.max(soce,ans);
        for(int i=idx;i<n;i++){
            int[] cu=list.get(i);
            if(time+cu[3]>t) return;
            int s=getsc(cu,time+cu[3]);
            dfs(i+1,time+cu[3],s+soce);
        }



    }
    static int getsc(int[] s,int t){
        return Math.max(s[2],s[0]-t*s[1]-s[4]*p);
    }
}"
92,C,Java,61491028,2023-03-24 20:54:07,LinCun,答案错误,"import java.util.*;
public class Main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int t = sc.nextInt();
        int p = sc.nextInt();
        int[] b = new int[9];
        int[] c = new int[9];
        int[] x = new int[9];
        int[] y = new int[9];
        int[] a = new int[9];
        int[] s = new int[9];
        boolean[] f = new boolean[9];
        for(int i = 0;i < n;i ++ ){
            a[i] = sc.nextInt();
            b[i] = sc.nextInt();
            c[i] = sc.nextInt();
            x[i] = sc.nextInt();
            y[i] = sc.nextInt();
        }
        int time = 0;
        long ans = 0;
        int nows = 0;
        int cnt = 0;
        int poi = 0;
        do{
            ans += nows;
//             if(cnt > n) break;
//             cnt ++;
            double max = -1;
            for(int i = 0;i < n;i ++){
                if(f[i] != true) {
                    int temptime = time + x[i];
                    int score = Math.max(c[i],a[i] - temptime * b[i] - y[i] * p);
                    double w = score / (double)x[i];
                    if(w > max && temptime <=t) {max = w;poi = i;nows = score;}
                    
                }
            }
            if(f[poi] == false){
                f[poi] = true;
                time += x[poi];
            }
            else break;
            
        }while(time < t);
        System.out.println(ans);
    }
}
"
93,C,Java,61491224,2023-03-24 20:55:43,LinCun,答案错误,"import java.util.*;
public class Main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int t = sc.nextInt();
        int p = sc.nextInt();
        int[] b = new int[9];
        int[] c = new int[9];
        int[] x = new int[9];
        int[] y = new int[9];
        int[] a = new int[9];
        int[] s = new int[9];
        boolean[] f = new boolean[9];
        for(int i = 0;i < n;i ++ ){
            a[i] = sc.nextInt();
            b[i] = sc.nextInt();
            c[i] = sc.nextInt();
            x[i] = sc.nextInt();
            y[i] = sc.nextInt();
        }
        long time = 0;
        long ans = 0;
        long nows = 0;
        long cnt = 0;
        int poi = 0;
        do{
            ans += nows;
            if(cnt > n) break;
            cnt ++;
            double max = -1;
            for(int i = 0;i < n;i ++){
                if(f[i] != true) {
                    long temptime = time + x[i];
                    long score = Math.max(c[i],a[i] - temptime * b[i] - y[i] * p);
                    double w = score / (double)x[i];
                    if(w > max && temptime <=t) {max = w;poi = i;nows = score;}
                    
                }
            }
            if(f[poi] == false){
                f[poi] = true;
                time += x[poi];
            }
            else break;
            
        }while(time < t);
        System.out.println(ans);
    }
}
"
94,C,Java,61491344,2023-03-24 20:56:47,LinCun,答案错误,"import java.util.*;
public class Main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int t = sc.nextInt();
        int p = sc.nextInt();
        long[] b = new long[9];
        long[] c = new long[9];
        long[] x = new long[9];
        long[] y = new long[9];
        long[] a = new long[9];
        long[] s = new long[9];
        boolean[] f = new boolean[9];
        for(int i = 0;i < n;i ++ ){
            a[i] = sc.nextLong();
            b[i] = sc.nextLong();
            c[i] = sc.nextLong();
            x[i] = sc.nextLong();
            y[i] = sc.nextLong();
        }
        long time = 0;
        long ans = 0;
        long nows = 0;
        long cnt = 0;
        int poi = 0;
        do{
            ans += nows;
            if(cnt > n) break;
            cnt ++;
            double max = -1;
            for(int i = 0;i < n;i ++){
                if(f[i] != true) {
                    long temptime = time + x[i];
                    long score = Math.max(c[i],a[i] - temptime * b[i] - y[i] * p);
                    double w = score / (double)x[i];
                    if(w > max && temptime <=t) {max = w;poi = i;nows = score;}
                    
                }
            }
            if(f[poi] == false){
                f[poi] = true;
                time += x[poi];
            }
            else break;
            
        }while(time < t);
        System.out.println(ans);
    }
}
"
95,C,Java,61491414,2023-03-24 20:57:22,牛客517457762号,答案错误,"import java.util.*;
public class Main {
    static int [][]score;
    static int n,t,p;
    static int [][] mscore;
    static int ans=0;
    static Set<Integer> set=new HashSet<>();
    static int []curnum=new int[10];
    static List<int[]> list=new ArrayList<>();
    public static void main(String[]args){
        Scanner sc=new Scanner(System.in);
        n=sc.nextInt();t=sc.nextInt();p=sc.nextInt();
        score=new int[n][5];
        mscore=new int[n][2];
        for(int i=0;i<n;i++){
            int [] curn=new int[5];
            for(int j=0;j<5;j++) curn[j]=sc.nextInt();
            list.add(curn);
        }
        Collections.sort(list,(a,b)->a[3]-b[3]);
        dfs(0,0,0);
        System.out.println(ans);
    }
    static void dfs(int time,int soce,int leve){
        if(leve>10) return;
        ans=Math.max(soce,ans);
        for(int i=0;i<n;i++){
            if (set.contains(i)) continue;
            int[] cu=list.get(i);
            set.add(i);
            if(time+cu[3]>t) return;
            int s=getsc(cu,time+cu[3]);
            dfs(time+cu[3],s+soce,leve+1);
            set.remove(i);
        }



    }
    static int getsc(int[] s,int t){
        return Math.max(s[2],s[0]-t*s[1]-s[4]*p);
    }
}"
96,C,Java,61491447,2023-03-24 20:57:37,LinCun,答案错误,"import java.util.*;
public class Main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int t = sc.nextInt();
        int p = sc.nextInt();
        int[] b = new int[9];
        int[] c = new int[9];
        int[] x = new int[9];
        int[] y = new int[9];
        int[] a = new int[9];
        int[] s = new int[9];
        boolean[] f = new boolean[9];
        for(int i = 0;i < n;i ++ ){
            a[i] = sc.nextInt();
            b[i] = sc.nextInt();
            c[i] = sc.nextInt();
            x[i] = sc.nextInt();
            y[i] = sc.nextInt();
        }
        int time = 0;
        long ans = 0;
        int nows = 0;
        int cnt = 0;
        int poi = 0;
        do{
            ans += nows;
            if(cnt > n) break;
            cnt ++;
            double max = -1;
            for(int i = 0;i < n;i ++){
                if(f[i] != true) {
                    int temptime = time + x[i];
                    int score = Math.max(c[i],a[i] - temptime * b[i] - y[i] * p);
                    double w = score / (double)x[i];
                    if(w >= max && temptime <=t) {max = w;poi = i;nows = score;}
                    
                }
            }
            if(f[poi] == false){
                f[poi] = true;
                time += x[poi];
            }
            else break;
            
        }while(time < t);
        System.out.println(ans);
    }
}
"
97,C,Java,61491557,2023-03-24 20:58:31,LinCun,答案错误,"import java.util.*;
public class Main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int t = sc.nextInt();
        int p = sc.nextInt();
        int[] b = new int[9];
        int[] c = new int[9];
        int[] x = new int[9];
        int[] y = new int[9];
        int[] a = new int[9];
        int[] s = new int[9];
        boolean[] f = new boolean[9];
        for(int i = 0;i < n;i ++ ){
            a[i] = sc.nextInt();
            b[i] = sc.nextInt();
            c[i] = sc.nextInt();
            x[i] = sc.nextInt();
            y[i] = sc.nextInt();
        }
        int time = 0;
        long ans = 0;
        int nows = 0;
        int cnt = 0;
        int poi = 0;
        do{
            ans += nows;
            if(cnt > n) break;
            cnt ++;
            double max = -1;
            for(int i = 0;i < n;i ++){
                if(f[i] != true) {
                    int temptime = time + x[i];
                    int score = Math.max(c[i],a[i] - temptime * b[i] - y[i] * p);
                    double w = score / (double)x[i];
                    if(w >= max && temptime <=t) {max = w;poi = i;nows = score;}
                    
                }
            }
            if(f[poi] == false){
                f[poi] = true;
                time += x[poi];
            }
            else break;
            
        }while(time < t);
        System.out.println(ans);
    }
}
"
98,C,Java,61491622,2023-03-24 20:58:53,LinCun,答案错误,"import java.util.*;
public class Main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int t = sc.nextInt();
        int p = sc.nextInt();
        int[] b = new int[9];
        int[] c = new int[9];
        int[] x = new int[9];
        int[] y = new int[9];
        int[] a = new int[9];
        int[] s = new int[9];
        boolean[] f = new boolean[9];
        for(int i = 0;i < n;i ++ ){
            a[i] = sc.nextInt();
            b[i] = sc.nextInt();
            c[i] = sc.nextInt();
            x[i] = sc.nextInt();
            y[i] = sc.nextInt();
        }
        int time = 0;
        long ans = 0;
        int nows = 0;
        int cnt = 0;
        int poi = 0;
        do{
            ans += nows;
            if(cnt > n) break;
            cnt ++;
            double max = -1;
            for(int i = 0;i < n;i ++){
                if(f[i] != true) {
                    int temptime = time + x[i];
                    int score = Math.max(c[i],a[i] - temptime * b[i] - y[i] * p);
                    double w = (double)score / (double)x[i];
                    if(w >= max && temptime <=t) {max = w;poi = i;nows = score;}
                    
                }
            }
            if(f[poi] == false){
                f[poi] = true;
                time += x[poi];
            }
            else break;
            
        }while(time < t);
        System.out.println(ans);
    }
}
"
99,C,Java,61491661,2023-03-24 20:59:11,LinCun,答案错误,"import java.util.*;
public class Main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int t = sc.nextInt();
        int p = sc.nextInt();
        int[] b = new int[9];
        int[] c = new int[9];
        int[] x = new int[9];
        int[] y = new int[9];
        int[] a = new int[9];
        int[] s = new int[9];
        boolean[] f = new boolean[9];
        for(int i = 0;i < n;i ++ ){
            a[i] = sc.nextInt();
            b[i] = sc.nextInt();
            c[i] = sc.nextInt();
            x[i] = sc.nextInt();
            y[i] = sc.nextInt();
        }
        int time = 0;
        long ans = 0;
        int nows = 0;
        int cnt = 0;
        int poi = 0;
        do{
            ans += nows;
            if(cnt > n) break;
            cnt ++;
            double max = -1;
            for(int i = 0;i < n;i ++){
                if(f[i] != true) {
                    int temptime = time + x[i];
                    int score = Math.max(c[i],a[i] - temptime * b[i] - y[i] * p);
                    double w = (double)score / (double)x[i];
                    if(w >= max && temptime <=t) {max = w;poi = i;nows = score;}
                    
                }
            }
            if(f[poi] == false){
                f[poi] = true;
                time += x[poi];
            }
            else break;
            
        }while(time <= t);
        System.out.println(ans);
    }
}
"
100,C,Java,61491672,2023-03-24 20:59:14,Mosyi.,答案正确,"import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        class A {
            long a, b, c, x, y;
        }
        int n;
        long t;
        int p;
        A[] aaa;
        long res = 0;
        void dd(int [] a,long time,long score){
            res = Math.max(res,score);
            for (int i = 0; i < n; i++) {
                if (a[i] == 0 && time + aaa[i].x <= t) {
                    a[i] = 1;
                    dd(a, time + aaa[i].x, score + Math.max(aaa[i].c, aaa[i].a - (time + aaa[i].x) * aaa[i].b - aaa[i].y * p));
                    a[i] = 0;
                }
            }
        }
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            n = in.nextInt();
            t = in.nextLong();
            p = in.nextInt();
            aaa = new A[n];
            for (int i = 0; i < n; i++) {
                aaa[i] = new A();
                aaa[i].a = in.nextLong();
                aaa[i].b = in.nextLong();
                aaa[i].c = in.nextLong();
                aaa[i].x = in.nextLong();
                aaa[i].y = in.nextLong();
            }
            int [] a = new int[n];
            dd(a,0,0);
            out.println(res);
        }

    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }

    }
}"
101,C,Java,61491707,2023-03-24 20:59:28,LinCun,答案错误,"import java.util.*;
public class Main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int t = sc.nextInt();
        int p = sc.nextInt();
        int[] b = new int[9];
        int[] c = new int[9];
        int[] x = new int[9];
        int[] y = new int[9];
        int[] a = new int[9];
        int[] s = new int[9];
        boolean[] f = new boolean[9];
        for(int i = 0;i < n;i ++ ){
            a[i] = sc.nextInt();
            b[i] = sc.nextInt();
            c[i] = sc.nextInt();
            x[i] = sc.nextInt();
            y[i] = sc.nextInt();
        }
        int time = 0;
        long ans = 0;
        int nows = 0;
        int cnt = 0;
        int poi = 0;
        do{
            ans += nows;
            if(cnt >= n) break;
            cnt ++;
            double max = -1;
            for(int i = 0;i < n;i ++){
                if(f[i] != true) {
                    int temptime = time + x[i];
                    int score = Math.max(c[i],a[i] - temptime * b[i] - y[i] * p);
                    double w = (double)score / (double)x[i];
                    if(w >= max && temptime <=t) {max = w;poi = i;nows = score;}
                    
                }
            }
            if(f[poi] == false){
                f[poi] = true;
                time += x[poi];
            }
            else break;
            
        }while(time <= t);
        System.out.println(ans);
    }
}
"
102,C,Java,61491760,2023-03-24 20:59:43,kk129,答案正确,"import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        int n,t,p;
        class S{
            long a,b,c,x,y;
        }
        S[] s;
        boolean[] visit;
        long max = 0;
        long dfs(long start,long step,long time,long sum){
            max = Math.max(max,sum);
            for (int i = 0; i < n; i++) {
                if(!visit[i]){
                    if((s[i].x+time)<=t){
                        long temp = Math.max(s[i].c,s[i].a-(s[i].x+time)*s[i].b-s[i].y*p);
//                        System.out.println(temp);
                        visit[i] = true;
                        dfs(i+1,step+1,time+s[i].x,sum+temp);
                        visit[i] = false;
                    }
                }
            }
            return max;
        }
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            n = in.nextInt();
            t = in.nextInt();
            p = in.nextInt();
            s = new S[n];
            for (int i = 0; i < n; i++) {
                s[i] = new S();
                s[i].a = in.nextLong();
                s[i].b = in.nextLong();
                s[i].c = in.nextLong();
                s[i].x = in.nextLong();
                s[i].y = in.nextLong();
            }
            visit = new boolean[n];
            for (int i = 0; i < n; i++) {
                visit[i] = true;
                if(s[i].x<=t) {
                    long temp = Math.max(s[i].c, s[i].a - s[i].x * s[i].b - s[i].y * p);
                    dfs(i, 1, s[i].x, temp);
                }
                visit[i] = false;
            }
            out.println(max);
        }
    }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;
        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}
"
103,C,Java,61491774,2023-03-24 20:59:47,kk129,答案正确,"import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        int n,t,p;
        class S{
            long a,b,c,x,y;
        }
        S[] s;
        boolean[] visit;
        long max = 0;
        long dfs(long start,long step,long time,long sum){
            max = Math.max(max,sum);
            for (int i = 0; i < n; i++) {
                if(!visit[i]){
                    if((s[i].x+time)<=t){
                        long temp = Math.max(s[i].c,s[i].a-(s[i].x+time)*s[i].b-s[i].y*p);
//                        System.out.println(temp);
                        visit[i] = true;
                        dfs(i+1,step+1,time+s[i].x,sum+temp);
                        visit[i] = false;
                    }
                }
            }
            return max;
        }
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            n = in.nextInt();
            t = in.nextInt();
            p = in.nextInt();
            s = new S[n];
            for (int i = 0; i < n; i++) {
                s[i] = new S();
                s[i].a = in.nextLong();
                s[i].b = in.nextLong();
                s[i].c = in.nextLong();
                s[i].x = in.nextLong();
                s[i].y = in.nextLong();
            }
            visit = new boolean[n];
            for (int i = 0; i < n; i++) {
                visit[i] = true;
                if(s[i].x<=t) {
                    long temp = Math.max(s[i].c, s[i].a - s[i].x * s[i].b - s[i].y * p);
                    dfs(i, 1, s[i].x, temp);
                }
                visit[i] = false;
            }
            out.println(max);
        }
    }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;
        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}
"
104,C,Java,61491871,2023-03-24 21:00:15,huvz,答案错误,"import java.io.*;
import java.util.*;

public class Main {
    static Read in = new Read();

    //static AWriter out = new AWriter();
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    //static Scanner in = new Scanner(System.in);
    public static void solve() throws IOException {
        int n = in.nextInt();
        int t= in.nextInt();
        int p = in.nextInt();
        //int a = in.nextInt();
        //int b = in.nextInt();
        int[] a = new int[n+1];
        int[] b = new int[n+1];
        int[] c = new int[n+1];
        int[] x = new int[n+1];
        int[] y = new int[n+1];
        int[][] dp = new int[t+1][n+2];
        for (int i = 1; i <= n; i++)
        {
            a[i]=in.nextInt();b[i]=in.nextInt();
            c[i]= in.nextInt();x[i]=in.nextInt();
            y[i]=in.nextInt();
        }
        int max1 = -1;
        for(int i =1;i<=n;i++)
        {
            for(int j=t;j>=x[i];j--){
                int q = a[i]-(j*b[i]+y[i]*p);
                int maxn =  Math.max(c[i],q);
                dp[j][i] = Math.max(dp[j-x[i]][i-1]+maxn,dp[j-1][i]);
                max1 =Math.max(dp[j][i],max1);
            }
        }
        System.out.println(max1);
    }
    public static void main(String[] arg) throws Exception {
        int t=1;

        //Scanner in = new Scanner(System.in);
        //t = in.nextInt();
        while(t-->0)
        {
            solve();
        }

    }

    static class Read{
        static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        static StreamTokenizer st = new StreamTokenizer(br);
        static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));
        public int nextInt() throws IOException {
            st.nextToken();
            return (int) st.nval;
        }
        public Long nextLong() throws IOException {
            st.nextToken();
            return (long) st.nval;
        }
        public String next() throws IOException{
            st.nextToken();
            return st.sval;
        }
        // 若需要nextDouble等方法，请自行调用Double.parseDouble包装
    }
    static class AWriter implements Closeable {
        private BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(System.out));
        public void print(Object object) throws IOException {
            writer.write(object.toString());
        }
        public void println(Object object) throws IOException {
            writer.write(object.toString());
            writer.write(System.lineSeparator());
        }
        @Override
        public void close() throws IOException {
            writer.close();
        }
    }

}"
105,C,Java,61491893,2023-03-24 21:00:25,LinCun,答案错误,"import java.util.*;
public class Main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int t = sc.nextInt();
        int p = sc.nextInt();
        int[] b = new int[9];
        int[] c = new int[9];
        int[] x = new int[9];
        int[] y = new int[9];
        int[] a = new int[9];
        int[] s = new int[9];
        boolean[] f = new boolean[9];
        for(int i = 0;i < n;i ++ ){
            a[i] = sc.nextInt();
            b[i] = sc.nextInt();
            c[i] = sc.nextInt();
            x[i] = sc.nextInt();
            y[i] = sc.nextInt();
        }
        int time = 0;
        long ans = 0;
        int nows = 0;
        int cnt = 0;
        int poi = 0;
        do{
            ans += nows;
            if(cnt >= n) break;
            cnt ++;
            double max = -1;
            for(int i = 0;i < n;i ++){
                if(f[i] != true) {
                    int temptime = time + x[i];
                    int score = Math.max(c[i],a[i] - temptime * b[i] - y[i] * p);
                    double w = (double)score / (double)x[i];
                    if(w >= max && temptime <=t) {max = w;poi = i;nows = score;}
                    
                }
            }
            if(f[poi] == false){
                f[poi] = true;
                time += x[poi];
            }
            else break;
            
        }while(time <= t);
        System.out.println(ans);
    }
}
"
106,C,Java,61491928,2023-03-24 21:00:46,智破云霄,运行超时,"
import java.util.*;
import java.io.*;
public class Main {
	static boolean[] used = new boolean[10];
	static long res = 0;
	static void dfs(long l,int t,int n,int w,long m,int[] a,int[] b,int[] c,int[] x,int[] y,int p)
	{
		if(n == w || m < 0)
			return;
		if(l <= t )
		{
			res = Math.max(res, m);
			//System.out.println(m);
		}
		else return;
		for(int i = 0; i < n;i ++)
		{
			if(!used[i] && l+x[i]<=t)
			{
				long mm = a[i]-(l+x[i])*(long)b[i]-(long)y[i]*p;
				used[i] = true;
				dfs(l+x[i],t,n,w+1,m+Math.max(c[i],mm),a,b,c,x,y,p);
				used[i] = false;
				
			}
			dfs(l,t,n,w+1,m,a,b,c,x,y,p);
		}
	}
public static void main(String[] args) {
	
 InputReader in = new InputReader(System.in);
PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	
	int n = in.nextInt();
	int t = in.nextInt();
	int p = in.nextInt();
	int[] a = new int[n];
	int[] b = new int[n];
	int[] c = new int[n];
	int[] x = new int[n];
	int[] y = new int[n];
	for(int i = 0;i < n;i ++)
	{
		 a[i] = in.nextInt();
		 b[i] = in.nextInt();
		 c[i] = in.nextInt();
		 x[i] = in.nextInt();
		 y[i] = in.nextInt();
		
	}
	dfs(0,t,n,0,0,a,b,c,x,y,p);
	out.println(res);
	
	
	

out.flush();

	
}
	
	
	
	
	



	
}





class InputReader {
    private final BufferedReader buf;
    private StringTokenizer tkl;

    public InputReader(InputStream is) {
        buf = new BufferedReader(new InputStreamReader(is));
    }

    public boolean hasNext() {
        try {
            while (tkl == null || !tkl.hasMoreElements()) tkl = new StringTokenizer(buf.readLine());
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public String next() {
        return hasNext() ? tkl.nextToken() : null;
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }
}
"
107,C,Java,61492015,2023-03-24 21:01:37,lllllllle,答案错误,"
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.math.BigInteger;
import java.nio.Buffer;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Queue;
import java.util.Scanner;
import java.util.Set;
import java.util.TreeMap;
import java.util.TreeSet;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;


public class Main {
	
	public static void main(String[] args) throws IOException {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		String[] s=br.readLine().split("" "");
		int n=Integer.parseInt(s[0]);
		long t=Long.parseLong(s[1]);
		long p=Long.parseLong(s[2]);
		long[][] title=new long[n][5];
		for(int i=0;i<n;i++) {
			s=br.readLine().split("" "");
			for(int j=0;j<5;j++) {
				title[i][j]=Long.parseLong(s[j]);
			}
		}
		long[] time=new long[1<<n];
		for(int i=1;i<1<<n;i++) {
			for(int j=0;j<n;j++) {
				if((i&(1<<j))==0) {
					continue;
				}
				time[i]=time[i^(1<<j)]+title[j][3];
				break;
			}
		}
		long[] dp=new long[1<<n];
		dp[0]=0;
		long ans=0;
		for(int i=1;i<1<<n;i++) {
			for(int j=0;j<n;j++) {
				if((i&(1<<j))==0) {
					continue;
				}
				if(time[i]>t) {
					break;
				}
				long tmp=title[j][0]-time[i]*title[j][1]-title[j][4]*p;
				dp[i]=Math.max(dp[i], Math.max(title[j][2], dp[i^(1<<j)]+tmp));
			}
			ans=Math.max(ans, dp[i]);
		}
		System.out.println(ans);
		
	}

	
}
"
108,C,Java,61492024,2023-03-24 21:01:44,智破云霄,运行超时,"
import java.util.*;
import java.io.*;
public class Main {
	static boolean[] used = new boolean[10];
	static long res = 0;
	static void dfs(long l,int t,int n,int w,long m,int[] a,int[] b,int[] c,int[] x,int[] y,int p)
	{
		if(n == w || m < 0)
			return;
		if(l <= t )
		{
			res = Math.max(res, m);
			//System.out.println(m);
		}
		else return;
		for(int i = 0; i < n;i ++)
		{
			if(!used[i] && l+x[i]<=t)
			{
				long mm = a[i]-(l+x[i])*(long)b[i]-(long)y[i]*p;
				used[i] = true;
				dfs(l+x[i],t,n,w+1,m+Math.max(c[i],mm),a,b,c,x,y,p);
				used[i] = false;
				
			}
			dfs(l,t,n,w+1,m,a,b,c,x,y,p);
		}
	}
public static void main(String[] args) {
	
 InputReader in = new InputReader(System.in);
PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	
	int n = in.nextInt();
	int t = in.nextInt();
	int p = in.nextInt();
	int[] a = new int[n];
	int[] b = new int[n];
	int[] c = new int[n];
	int[] x = new int[n];
	int[] y = new int[n];
	for(int i = 0;i < n;i ++)
	{
		 a[i] = in.nextInt();
		 b[i] = in.nextInt();
		 c[i] = in.nextInt();
		 x[i] = in.nextInt();
		 y[i] = in.nextInt();
		
	}
	dfs(0,t,n,0,0,a,b,c,x,y,p);
	out.println(res);
	
	
	

out.flush();

	
}
	
	
	
	
	



	
}





class InputReader {
    private final BufferedReader buf;
    private StringTokenizer tkl;

    public InputReader(InputStream is) {
        buf = new BufferedReader(new InputStreamReader(is));
    }

    public boolean hasNext() {
        try {
            while (tkl == null || !tkl.hasMoreElements()) tkl = new StringTokenizer(buf.readLine());
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public String next() {
        return hasNext() ? tkl.nextToken() : null;
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }
}
"
109,C,Java,61492034,2023-03-24 21:01:47,李雯钦,答案错误,"import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.*;

public class Main{
    static long get(int u,int time){
        return Math.max(c[u],a[u]-(long)time*b[u]-(long)y[u]*p);
    }
    static int n,t,p,N = 12,time;
    static long res;
    static int[] a = new int[N];
    static int[] b = new int[N];
    static int[] c = new int[N];
    static int[] x = new int[N];
    static int[] y = new int[N];
    static int[] q = new int[N];
    static boolean[] st = new boolean[N];

    static long bfs(int u){
        int hh = 0, tt = -1;
        if(x[u]<=t){
            q[++tt] = u;
            time=x[u];
            res=get(u,time);
        }
        while(hh<=tt){
            int d = q[hh++];
            st[d] = true;
            for(int i =1;i<=n;i++){
                if(st[i]) continue;
                if(time+x[i]>t) continue;
                time+=x[i];
                res += get(i,time);
                q[++tt] = i;
            }
        }
        return res;
    }
    public static void main(String[] args){
        QuickInput in = new  QuickInput();
        PrintWriter out = new PrintWriter(System.out);
        n = in.nextInt(); t = in.nextInt(); p = in.nextInt();

        for(int i =1;i<=n;i++){
            a[i] = in.nextInt();
            b[i] = in.nextInt();
            c[i] = in.nextInt();
            x[i] = in.nextInt();
            y[i] = in.nextInt();
        }

        long ans = 0;
        for(int i =1;i<=n;i++){
            ans = Math.max(ans,bfs(i));
        }


        out.println(ans);

        //in.nextInt().....
        //out.println().....

        out.close();//不关闭，就会有些数据留在缓冲区
    }
}


class  QuickInput
{
    BufferedReader buf;
    StringTokenizer tok;
    QuickInput(){
        buf = new BufferedReader(new InputStreamReader(System.in));
    }
    boolean hasNext(){
        while(tok == null || !tok.hasMoreElements()){
            try{
                tok = new StringTokenizer(buf.readLine());
            }catch(Exception e){
                return false;
            }
        }
        return true;
    }
    String next(){
        if(hasNext()) return tok.nextToken();
        return null;
    }
    int nextInt(){
        return Integer.parseInt(next());
    }
    long nextLong(){
        return Long.parseLong(next());
    }
    double nextDouble(){
        return Double.parseDouble(next());
    }
    BigInteger nextBigInteger(){
        return new BigInteger(next());
    }
    BigDecimal nextBigDecimal(){
        return new BigDecimal(next());
    }
}"
110,C,Java,61492121,2023-03-24 21:02:46,LinCun,答案错误,"import java.util.*;
public class Main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int t = sc.nextInt();
        int p = sc.nextInt();
        int[] b = new int[9];
        int[] c = new int[9];
        int[] x = new int[9];
        int[] y = new int[9];
        int[] a = new int[9];
        int[] s = new int[9];
        boolean[] f = new boolean[9];
        for(int i = 0;i < n;i ++ ){
            a[i] = sc.nextInt();
            b[i] = sc.nextInt();
            c[i] = sc.nextInt();
            x[i] = sc.nextInt();
            y[i] = sc.nextInt();
        }
        int time = 0;
        long ans = 0;
        int nows = 0;
        int cnt = 0;
        int poi = 0;
        do{
            ans += nows;
            if(cnt >= n) break;
            cnt ++;
            double max = -1;
            for(int i = 0;i < n;i ++){
                if(f[i] != true) {
                    int temptime = time + x[i];
                    int score = Math.max(c[i],a[i] - temptime * b[i] - y[i] * p);
                    double w = (double)score / (double)x[i]*x[i];
                    if(w >= max && temptime <=t) {max = w;poi = i;nows = score;}
                    
                }
            }
            if(f[poi] == false){
                f[poi] = true;
                time += x[poi];
            }
            else break;
            
        }while(time <= t);
        System.out.println(ans);
    }
}
"
111,C,Java,61492148,2023-03-24 21:03:00,LinCun,答案错误,"import java.util.*;
public class Main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int t = sc.nextInt();
        int p = sc.nextInt();
        int[] b = new int[9];
        int[] c = new int[9];
        int[] x = new int[9];
        int[] y = new int[9];
        int[] a = new int[9];
        int[] s = new int[9];
        boolean[] f = new boolean[9];
        for(int i = 0;i < n;i ++ ){
            a[i] = sc.nextInt();
            b[i] = sc.nextInt();
            c[i] = sc.nextInt();
            x[i] = sc.nextInt();
            y[i] = sc.nextInt();
        }
        int time = 0;
        long ans = 0;
        int nows = 0;
        int cnt = 0;
        int poi = 0;
        do{
            ans += nows;
            if(cnt >= n) break;
            cnt ++;
            double max = -1;
            for(int i = 0;i < n;i ++){
                if(f[i] != true) {
                    int temptime = time + x[i];
                    int score = Math.max(c[i],a[i] - temptime * b[i] - y[i] * p);
                    double w = (double)score*score / (double)x[i];
                    if(w >= max && temptime <=t) {max = w;poi = i;nows = score;}
                    
                }
            }
            if(f[poi] == false){
                f[poi] = true;
                time += x[poi];
            }
            else break;
            
        }while(time <= t);
        System.out.println(ans);
    }
}
"
112,C,Java,61492347,2023-03-24 21:05:21,Eunoiay,答案正确,"import static java.lang.Math.*;
import java.util.*;
import java.io.*;

public class Main {
    private static FastReader sc = new FastReader();
    private static PrintWriter pw = new PrintWriter(System.out);
    
    static final int N = 15;
    static Info[] all = new Info[N];
    static boolean[] st = new boolean[N];
    static int n, p, t;
    static long ans = Long.MIN_VALUE, time;
    
    public static void main(String[] args) throws IOException {
        solve();
        pw.close();
    }
    
    public static void solve() {
        n = sc.nextInt();
        t = sc.nextInt();
        p = sc.nextInt();
        
        for (int i = 0; i < n; i++) {
            int a = sc.nextInt();
            int b = sc.nextInt();
            int c = sc.nextInt();
            int x = sc.nextInt();
            int y = sc.nextInt();
            all[i] = new Info(a, b, c, x, y);
        }
        
        dfs(0, 0);
        pw.println(ans);
    }
    
    public static void dfs(int u, long score) {
        if (u == n) {
            ans = max(ans, score);
            return;
        }
        
        for (int i = 0; i < n; i++) {
            if (st[i]) continue;
            
            int a = all[i].a, b = all[i].b, c = all[i].c;
            int x = all[i].x, y = all[i].y;
            
            st[i] = true;
            
            long sum = 0;
            boolean flag = false;
            if (time + x <= t) {
                time += x;
                sum = max(c, a - time * b - (long)y * p);
                flag = true;
            } 
            
            // pw.println(i + "" "" + sum);
            dfs(u + 1, score + sum);
            
            st[i] = false;
            if (flag) time -= x;
        }
    }
    
    public static class Info {
        // 满分, 时间系数,  保底分
        int a, b, c;
        // 第x分钟通过, 提交y次
        int x, y;
        Info (int a, int b, int c, int x, int y) {
            this.a = a;
            this.b = b;
            this.c = c;
            this.x = x;
            this.y = y;
        }
    }
    
    private static class FastReader {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st;
        
        String next() {
            while (st == null || !st.hasMoreElements()) {
                try { 
                    st = new StringTokenizer(br.readLine()); 
                    
                } catch (IOException e) {
                    e.printStackTrace(); 
                }
            }
            return st.nextToken();
        }
        
        int nextInt() {
            return Integer.parseInt(next());
        }
        
        long nextLong() {
            return Long.parseLong(next());
        }
        
        double nextDouble() {
            return Double.parseDouble(next());
        }
        
        String nextLine() {
            String line = null;
            try {
                line = br.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            
            return line;
        }
        
        boolean hasNext() {
            if (st == null || !st.hasMoreElements()) {
                try {
                    String in = br.readLine();
                    if (in == null) return false;
                    st = new StringTokenizer(in);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            return true;
        }
    }
}"
113,C,Java,61492409,2023-03-24 21:06:25,智破云霄,答案正确,"
import java.util.*;
import java.io.*;
public class Main {
	static boolean[] used = new boolean[10];
	static long res = 0;
	static void dfs(long l,int t,int n,int w,long m,int[] a,int[] b,int[] c,int[] x,int[] y,int p)
	{
		if(n == w || m < 0)
			return;
		if(l <= t )
		{
			res = Math.max(res, m);
			//System.out.println(m);
		}
		else return;
		for(int i = 0; i < n;i ++)
		{
			if(!used[i] && l+x[i]<=t)
			{
				long mm = a[i]-(l+x[i])*(long)b[i]-(long)y[i]*p;
				used[i] = true;
				dfs(l+x[i],t,n,w+1,m+Math.max(c[i],mm),a,b,c,x,y,p);
				used[i] = false;
				
			}
			
		}
	}
public static void main(String[] args) {
	
 InputReader in = new InputReader(System.in);
PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	
	int n = in.nextInt();
	int t = in.nextInt();
	int p = in.nextInt();
	int[] a = new int[n];
	int[] b = new int[n];
	int[] c = new int[n];
	int[] x = new int[n];
	int[] y = new int[n];
	for(int i = 0;i < n;i ++)
	{
		 a[i] = in.nextInt();
		 b[i] = in.nextInt();
		 c[i] = in.nextInt();
		 x[i] = in.nextInt();
		 y[i] = in.nextInt();
		
	}
	dfs(0,t,n,0,0,a,b,c,x,y,p);
	out.println(res);
	
	
	

out.flush();

	
}
	
	
	
	
	



	
}





class InputReader {
    private final BufferedReader buf;
    private StringTokenizer tkl;

    public InputReader(InputStream is) {
        buf = new BufferedReader(new InputStreamReader(is));
    }

    public boolean hasNext() {
        try {
            while (tkl == null || !tkl.hasMoreElements()) tkl = new StringTokenizer(buf.readLine());
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public String next() {
        return hasNext() ? tkl.nextToken() : null;
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }
}
"
114,C,Java,61493011,2023-03-24 21:15:31,李雯钦,答案错误,"import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.*;

public class Main{
    static long get(int u,int time){
        return Math.max(c[u],a[u]-(long)time*b[u]-(long)y[u]*p);
    }
    static int n,t,p,N = 12,time;
    static long res;
    static int[] a = new int[N];
    static int[] b = new int[N];
    static int[] c = new int[N];
    static int[] x = new int[N];
    static int[] y = new int[N];
    static int[] q = new int[N];
    static boolean[] st = new boolean[N];

    static long bfs(int u){
        int hh = 0, tt = -1;
        if(x[u]<=t){
            q[++tt] = u;
            time=x[u];
            res=get(u,time);
        }
        while(hh<=tt){
            int d = q[hh++];
            st[d] = true;
            for(int i =1;i<=n;i++){
                if(st[i]) continue;
                if(time+x[i]>t) continue;
                time+=x[i];
                res += get(i,time);
                q[++tt] = i;
            }
        }
        return res;
    }
    public static void main(String[] args){
        QuickInput in = new  QuickInput();
        PrintWriter out = new PrintWriter(System.out);
        n = in.nextInt(); t = in.nextInt(); p = in.nextInt();

        for(int i =1;i<=n;i++){
            a[i] = in.nextInt();
            b[i] = in.nextInt();
            c[i] = in.nextInt();
            x[i] = in.nextInt();
            y[i] = in.nextInt();
        }

        long ans = 0;
        for(int i =1;i<=n;i++){
            time = 0;
            res = 0;
            Arrays.fill(st, false);
            ans = Math.max(ans,bfs(i));
        }


        out.println(ans);

        //in.nextInt().....
        //out.println().....

        out.close();//不关闭，就会有些数据留在缓冲区
    }
}


class  QuickInput
{
    BufferedReader buf;
    StringTokenizer tok;
    QuickInput(){
        buf = new BufferedReader(new InputStreamReader(System.in));
    }
    boolean hasNext(){
        while(tok == null || !tok.hasMoreElements()){
            try{
                tok = new StringTokenizer(buf.readLine());
            }catch(Exception e){
                return false;
            }
        }
        return true;
    }
    String next(){
        if(hasNext()) return tok.nextToken();
        return null;
    }
    int nextInt(){
        return Integer.parseInt(next());
    }
    long nextLong(){
        return Long.parseLong(next());
    }
    double nextDouble(){
        return Double.parseDouble(next());
    }
    BigInteger nextBigInteger(){
        return new BigInteger(next());
    }
    BigDecimal nextBigDecimal(){
        return new BigDecimal(next());
    }
}"
115,C,Java,61493047,2023-03-24 21:16:01,李雯钦,答案错误,"import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.*;

public class Main{
    static long get(int u,int time){
        return Math.max(c[u],a[u]-(long)time*b[u]-(long)y[u]*p);
    }
    static int n,t,p,N = 12,time;
    static long res;
    static int[] a = new int[N];
    static int[] b = new int[N];
    static int[] c = new int[N];
    static int[] x = new int[N];
    static int[] y = new int[N];
    static int[] q = new int[N];
    static boolean[] st = new boolean[N];

    static long bfs(int u){
        int hh = 0, tt = -1;
        if(x[u]<=t){
            q[++tt] = u;
            time=x[u];
            res=get(u,time);
        }
        while(hh<=tt){
            int d = q[hh++];
            st[d] = true;
            for(int i =1;i<=n;i++){
                if(st[i]) continue;
                if(time+x[i]>t) continue;
                time+=x[i];
                res += get(i,time);
                q[++tt] = i;
            }
        }
        return res;
    }
    public static void main(String[] args){
        QuickInput in = new  QuickInput();
        PrintWriter out = new PrintWriter(System.out);
        n = in.nextInt(); t = in.nextInt(); p = in.nextInt();

        for(int i =1;i<=n;i++){
            a[i] = in.nextInt();
            b[i] = in.nextInt();
            c[i] = in.nextInt();
            x[i] = in.nextInt();
            y[i] = in.nextInt();
        }

        long ans = 0;
        for(int i =1;i<=n;i++){
            time = 0;
            res = 0;
            Arrays.fill(st, false);
            Arrays.fill(q, 0);
            ans = Math.max(ans,bfs(i));
        }


        out.println(ans);

        //in.nextInt().....
        //out.println().....

        out.close();//不关闭，就会有些数据留在缓冲区
    }
}


class  QuickInput
{
    BufferedReader buf;
    StringTokenizer tok;
    QuickInput(){
        buf = new BufferedReader(new InputStreamReader(System.in));
    }
    boolean hasNext(){
        while(tok == null || !tok.hasMoreElements()){
            try{
                tok = new StringTokenizer(buf.readLine());
            }catch(Exception e){
                return false;
            }
        }
        return true;
    }
    String next(){
        if(hasNext()) return tok.nextToken();
        return null;
    }
    int nextInt(){
        return Integer.parseInt(next());
    }
    long nextLong(){
        return Long.parseLong(next());
    }
    double nextDouble(){
        return Double.parseDouble(next());
    }
    BigInteger nextBigInteger(){
        return new BigInteger(next());
    }
    BigDecimal nextBigDecimal(){
        return new BigDecimal(next());
    }
}"
116,C,Java,61493222,2023-03-24 21:18:59,lllllllle,答案错误,"
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.math.BigInteger;
import java.nio.Buffer;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Queue;
import java.util.Scanner;
import java.util.Set;
import java.util.TreeMap;
import java.util.TreeSet;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;


public class Main {
	
	public static void main(String[] args) throws IOException {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		String[] s=br.readLine().split("" "");
		int n=Integer.parseInt(s[0]);
		long t=Long.parseLong(s[1]);
		long p=Long.parseLong(s[2]);
		long[][] title=new long[n][5];
		for(int i=0;i<n;i++) {
			s=br.readLine().split("" "");
			for(int j=0;j<5;j++) {
				title[i][j]=Long.parseLong(s[j]);
			}
		}
		long[] time=new long[1<<n];
		for(int i=1;i<1<<n;i++) {
			for(int j=0;j<n;j++) {
				if((i&(1<<j))==0) {
					continue;
				}
				time[i]=time[i^(1<<j)]+title[j][3];
				break;
			}
		}
		long[] dp=new long[1<<n];
		dp[0]=0;
		long ans=0;
		for(int i=0;i<1<<n;i++) {
			for(int j=0;j<n;j++) {
				if((i&(1<<j))==0) {
					continue;
				}
				if(time[i]>t) {
					break;
				}
				long tmp=title[j][0]-time[i]*title[j][1]-title[j][4]*p;
				dp[i]=Math.max(dp[i], Math.max(title[j][2], dp[i^(1<<j)]+tmp));
			}
			ans=Math.max(ans, dp[i]);
		}
		System.out.println(ans);
		
	}

	
}
"
117,C,Java,61493446,2023-03-24 21:22:25,lllllllle,答案正确,"
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.math.BigInteger;
import java.nio.Buffer;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Queue;
import java.util.Scanner;
import java.util.Set;
import java.util.TreeMap;
import java.util.TreeSet;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;


public class Main {
	
	public static void main(String[] args) throws IOException {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		String[] s=br.readLine().split("" "");
		int n=Integer.parseInt(s[0]);
		long t=Long.parseLong(s[1]);
		long p=Long.parseLong(s[2]);
		long[][] title=new long[n][5];
		for(int i=0;i<n;i++) {
			s=br.readLine().split("" "");
			for(int j=0;j<5;j++) {
				title[i][j]=Long.parseLong(s[j]);
			}
		}
		long[] time=new long[1<<n];
		for(int i=1;i<1<<n;i++) {
			for(int j=0;j<n;j++) {
				if((i&(1<<j))==0) {
					continue;
				}
				time[i]=time[i^(1<<j)]+title[j][3];
				break;
			}
		}
		long[] dp=new long[1<<n];
		dp[0]=0;
		long ans=0;
		for(int i=0;i<1<<n;i++) {
			for(int j=0;j<n;j++) {
				if((i&(1<<j))==0) {
					continue;
				}
				if(time[i]>t) {
					break;
				}
				long tmp=title[j][0]-time[i]*title[j][1]-title[j][4]*p;
				dp[i]=Math.max(dp[i], dp[i^(1<<j)]+Math.max(title[j][2], tmp));
			}
			ans=Math.max(ans, dp[i]);
		}
		System.out.println(ans);
		
	}

	
}
"
118,C,Java,61493588,2023-03-24 21:25:03,huvz,答案正确,"import java.io.*;
import java.util.*;

public class Main{
    static Read in = new Read();

    //static AWriter out = new AWriter();
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    //static Scanner in = new Scanner(System.in);
    static int t;
    static int n;
    static  long max1 = 0;

    static int p=0;
    static boolean[] time1;
    public static long[][] f;
    public static void solve() throws IOException {
        n = in.nextInt();
        t= in.nextInt();
        p = in.nextInt();
        //int a = in.nextInt();
        //int b = in.nextInt();
        f=new long[n][5];
        time1 = new boolean[n+1];
        for (int i = 0; i < n; i++)
        {
            f[i][0]=in.nextLong();f[i][1]=in.nextLong();
            f[i][2]= in.nextLong();f[i][3]=in.nextLong();
            f[i][4]=in.nextLong();
        }
        dfs(0,0,0);
        System.out.println(max1);
    }
    public static void dfs(int index,long sorce,long time){
        if(time>t){
            return ;
        }
        max1 = Math.max(max1,sorce);
        for(int i=0;i<n;i++){
            if(!time1[i])
            {
                time1[i]=true;
                dfs(i,sorce+Math.max(f[i][2],f[i][0]-((time+f[i][3])*f[i][1]+p*f[i][4])),time+f[i][3]);
                time1[i]=false;
            }
        }
    }
    public static void main(String[] arg) throws Exception {
        int t=1;

        //Scanner in = new Scanner(System.in);
        //t = in.nextInt();
        while(t-->0)
        {
            solve();
        }

    }

    static class Read{
        static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        static StreamTokenizer st = new StreamTokenizer(br);
        static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));
        public int nextInt() throws IOException {
            st.nextToken();
            return (int) st.nval;
        }
        public Long nextLong() throws IOException {
            st.nextToken();
            return (long) st.nval;
        }
        public String next() throws IOException{
            st.nextToken();
            return st.sval;
        }
        // 若需要nextDouble等方法，请自行调用Double.parseDouble包装
    }
    static class AWriter implements Closeable {
        private BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(System.out));
        public void print(Object object) throws IOException {
            writer.write(object.toString());
        }
        public void println(Object object) throws IOException {
            writer.write(object.toString());
            writer.write(System.lineSeparator());
        }
        @Override
        public void close() throws IOException {
            writer.close();
        }
    }

}"
119,C,Java,61494176,2023-03-24 21:36:56,小小小巨人,答案正确,"import java.io.*;
import java.math.*;
import java.util.*;
import java.util.Map.*;
/**
 * 
 * @author TCchen
 */
public class Main {
	public static void main(String[]args) throws IOException {
		new Main().run();
	}
//	File input=new File("".\\input.txt"");
//	File output=new File("".\\output.txt"");
	void run() throws IOException{
//		new Solve().setIO(input, output).run();
		new Solve().setIO(System.in,System.out).run();
	}
	class Solve extends ioTask{
		int n,q,m,k,i,j,len,l,r;
		int []a,b,c,x,y;
		int t,p;
		int[]id;
		boolean[]book;
		long ans;
		void cal() {
			long v=0;
			long now=0;
			for(int i:id) {
				now+=x[i];
				if(now>t)break;
				v+=Math.max(c[i], a[i]-now*b[i]-1l*y[i]*p);
			}
			ans=Math.max(ans, v);
		}
		void dfs(int i) {
			if(i==n) {
				cal();
				return;
			}
			for(int j=0;j<n;j++) {
				if(!book[j]) {
					book[j]=true;
					id[i]=j;
					dfs(i+1);
					book[j]=false;
				}
			}
		}
		void solve() throws IOException{
			n=in.in();
			t=in.in();
			p=in.in();
			a=new int[n];
			b=new int[n];
			c=new int[n];
			x=new int[n];
			y=new int[n];
			id=new int[n];
			book=new boolean[n];
			for(i=0;i<n;i++) {
				a[i]=in.in();
				b[i]=in.in();
				c[i]=in.in();
				x[i]=in.in();
				y[i]=in.in();
			}
			ans=0;
			dfs(0);
			out.println(ans);
		}
		int te=1;
		void run()throws IOException{
//			init();
			int t=1;
//			t=in.in();
			for(te=1;te<=t;te++) {
				solve();
				out.flush();
			}
			out.close();
		}
//		long timeMillis;
//		void st() {
//			timeMillis=System.currentTimeMillis();
//		}
//		void ed() {
//			System.out.println((System.currentTimeMillis()-timeMillis)+""ms"");
//		}
	}
	class QIn{
		StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
		int in() throws IOException {
			st.nextToken();
			return (int)st.nval;
		}
		long inl() throws IOException {
			st.nextToken();
			return (long)st.nval;
		}
		double ind()throws IOException  {
			st.nextToken();
			return st.nval;
		}
		String ins() throws IOException {
			st.nextToken();
			return st.sval;
		}
	}
	class In{
		private StringTokenizer in=new StringTokenizer("""");
		private InputStream is;
		private BufferedReader br;
		public In(File file) throws IOException {
			is=new FileInputStream(file);
			init();
		}
		public In(InputStream is) throws IOException{
			this.is=is;
			init();
		}
		private void init() throws IOException {
			br=new BufferedReader(new InputStreamReader(is));
		}
		/**
		 * File and OJ only
		 */
		boolean hasNext() throws IOException {
			return in.hasMoreTokens()||br.ready();
		}
		String ins() throws IOException {
			while(!in.hasMoreTokens()) {
				in=new StringTokenizer(br.readLine());
			}
			return in.nextToken();
		}
		int in() throws IOException {
			return Integer.parseInt(ins());
		}
		long inl() throws IOException {
			return Long.parseLong(ins());
		}
		double ind() throws IOException {
			return Double.parseDouble(ins());
		}
		String line() throws IOException {
			return br.readLine();
		}
	}
	class Out{
		PrintWriter out;
		private OutputStream os;
		private void init() {
			out=new PrintWriter(new BufferedWriter(new OutputStreamWriter(os)));
		}
		public Out(File file) throws IOException {
			os=new FileOutputStream(file);
			init();
		}
		public Out(OutputStream os) throws IOException{
			this.os=os;
			init();
		}
	}
	abstract class ioTask{
		In in;
		PrintWriter out;
		public ioTask setIO(File in,File out) throws IOException{
			this.in=new In(in);
			this.out=new Out(out).out;
			return this;
		}
		public ioTask setIO(File in,OutputStream out) throws IOException{
			this.in=new In(in);
			this.out=new Out(out).out;
			return this;
		}
		public ioTask setIO(InputStream in,OutputStream out) throws IOException{
			this.in=new In(in);
			this.out=new Out(out).out;
			return this;
		}
		public ioTask setIO(InputStream in,File out) throws IOException{
			this.in=new In(in);
			this.out=new Out(out).out;
			return this;
		}
		void run()throws IOException{}
	}
}"
120,C,Java,61494450,2023-03-24 21:42:43,牛客360818823号,答案错误,"
import java.math.BigInteger;
import java.util.Arrays;
import java.util.Comparator;
import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
         Scanner sc = new Scanner(System.in);
         int n = sc.nextInt();
         int t = sc.nextInt();
         int p = sc.nextInt();
         int a[] = new int[n];
         int b[] = new int[n];
         int c[] = new int[n];
         int x[] = new int[n];
         int y[] = new int[n];
         long max[] = new long[n];
         for(int i=0;i<n;i++) {
        	 a[i] = sc.nextInt();
        	 b[i] = sc.nextInt();
        	 c[i] = sc.nextInt();
        	 x[i] = sc.nextInt();
        	 y[i] = sc.nextInt();
         }
       int count = 0;
       while(count<n) {
    	   int time =0;
    	   time = x[count];
    	   if(time<=t) max[count] = Math.max(c[count], a[count]-x[count]*b[count]-y[count]*p);
    	  //System.out.println(max[count]);
    	   int max1 =0;
    	   boolean bu = true;
    	   for(int i=0;i<n;i++) {
    		   if(count==i) {
    			   continue;
    		   }
    		   time = time+x[i];
    		   if(time<=t&&bu) {
    			    int max2 = Math.max(c[i], a[i]-time*b[i]-y[i]*p);
    			    max1 =  max1 +max2;
    			  // System.out.println(""max1:""+max1);
    		   }else if(time<=t){
    			   max1 = Math.max(max1,Math.max(c[i], a[i]-time*b[i]-y[i]*p));
    		   } else {
    			   time = time -x[i];
    		   }
    	   }
    	   max[count] = max[count] +max1;
    	   System.out.println(max[count]);
    	   count++;
       }
       Arrays.sort(max);
       System.out.println(max[n-1]);
        /*String s = sc.next();
        String s1 = sc.next();
        BigInteger bg = new BigInteger(s);
        BigInteger bg1 = new BigInteger(s);
        BigInteger bg2  = bg.divide(bg1);
        bg1 = bg.mod(bg1);
        if(bg1.compareTo(bg2)>0) {
        	System.out.println(""niuniu eats more than others"");
        } else if(bg1.compareTo(bg2)==0) {
        	System.out.println(""same"");
        } else {
        	System.out.println(""niuniu eats less than others"");
        }*/
	}
}
"
121,C,Java,61494466,2023-03-24 21:43:09,牛客360818823号,答案错误,"
import java.math.BigInteger;
import java.util.Arrays;
import java.util.Comparator;
import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
         Scanner sc = new Scanner(System.in);
         int n = sc.nextInt();
         int t = sc.nextInt();
         int p = sc.nextInt();
         int a[] = new int[n];
         int b[] = new int[n];
         int c[] = new int[n];
         int x[] = new int[n];
         int y[] = new int[n];
         long max[] = new long[n];
         for(int i=0;i<n;i++) {
        	 a[i] = sc.nextInt();
        	 b[i] = sc.nextInt();
        	 c[i] = sc.nextInt();
        	 x[i] = sc.nextInt();
        	 y[i] = sc.nextInt();
         }
       int count = 0;
       while(count<n) {
    	   int time =0;
    	   time = x[count];
    	   if(time<=t) max[count] = Math.max(c[count], a[count]-x[count]*b[count]-y[count]*p);
    	  //System.out.println(max[count]);
    	   int max1 =0;
    	   boolean bu = true;
    	   for(int i=0;i<n;i++) {
    		   if(count==i) {
    			   continue;
    		   }
    		   time = time+x[i];
    		   if(time<=t&&bu) {
    			    int max2 = Math.max(c[i], a[i]-time*b[i]-y[i]*p);
    			    max1 =  max1 +max2;
    			  // System.out.println(""max1:""+max1);
    		   }else if(time<=t){
    			   max1 = Math.max(max1,Math.max(c[i], a[i]-time*b[i]-y[i]*p));
    		   } else {
    			   time = time -x[i];
    		   }
    	   }
    	   max[count] = max[count] +max1;
    	   //System.out.println(max[count]);
    	   count++;
       }
       Arrays.sort(max);
       System.out.println(max[n-1]);
        /*String s = sc.next();
        String s1 = sc.next();
        BigInteger bg = new BigInteger(s);
        BigInteger bg1 = new BigInteger(s);
        BigInteger bg2  = bg.divide(bg1);
        bg1 = bg.mod(bg1);
        if(bg1.compareTo(bg2)>0) {
        	System.out.println(""niuniu eats more than others"");
        } else if(bg1.compareTo(bg2)==0) {
        	System.out.println(""same"");
        } else {
        	System.out.println(""niuniu eats less than others"");
        }*/
	}
}
"
122,C,Java,61494762,2023-03-24 21:51:56,牛客517457762号,答案错误,"import java.util.*;
public class Main {
    static int [][]score;
    static int n,t,p;
    static int [][] mscore;
    static int ans=0;
    static Set<Integer> set=new HashSet<>();
    static int []curnum=new int[10];
    static List<int[]> list=new ArrayList<>();
    public static void main(String[]args){
        Scanner sc=new Scanner(System.in);
        n=sc.nextInt();t=sc.nextInt();p=sc.nextInt();
        score=new int[n][5];
        mscore=new int[n][2];
        for(int i=0;i<n;i++){
            int [] curn=new int[5];
            for(int j=0;j<5;j++) curn[j]=sc.nextInt();
            list.add(curn);
        }
        Collections.sort(list,(a,b)->a[3]-b[3]);
        dfs(0,0,0);
        System.out.println(ans);
    }
    static void dfs(int time,int soce,int leve){
        if(leve>10) return;
        ans=Math.max(soce,ans);
        for(int i=0;i<n;i++){
            if (set.contains(i)) continue;
            int[] cu=list.get(i);
            set.add(i);
            if(time+cu[3]>t) return;
            int s=getsc(cu,time+cu[3]);
            dfs(time+cu[3],s+soce,leve+1);
            set.remove(i);
        }



    }
    static int getsc(int[] s,int t){
        return Math.max(s[2],s[0]-t*s[1]-s[4]*p);
    }
}"
123,C,Java,61495615,2023-03-24 22:18:20,牛客360818823号,答案错误,"

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Comparator;
import java.util.Scanner;

public class Main {
	static long num=0;
	public static void main(String[] args) {
         Scanner sc = new Scanner(System.in);
         int n = sc.nextInt();
         int t = sc.nextInt();
         int p = sc.nextInt();
         long m[][] = new long[n][5];
         for(int i=0;i<n;i++) {
        	 for(int j=0;j<5;j++) {
        		 m[i][j] = sc.nextInt();
        	 }
         }
         boolean[] bl = new boolean[n];
      dfs(t,0,m,bl,p,0);
      System.out.println(num);
	}

	private static void dfs(int t, long l, long[][] m, boolean[] bl, int p,int score) {
		// TODO Auto-generated method stub
		int n = m.length;
		for(int i=0;i<n;i++) {
			if(bl[i]==false&&(l+m[i][3])<=t) {
				bl[i] = true;
				score+=Math.max(m[i][2],m[i][0]-(m[i][3]+l)*m[i][1]-m[i][4]*p);
				num = Math.max(num, score);
				dfs(t,m[i][3]+l,m,bl,p,score);
				score-=Math.max(m[i][2],m[i][0]-(m[i][3]+l)*m[i][1]-m[i][4]*p);
				bl[i] = false;
			}
		}
		
	}
}
"
124,C,Java,61495641,2023-03-24 22:19:27,牛客360818823号,答案正确,"

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Comparator;
import java.util.Scanner;

public class Main {
	static long num=0;
	public static void main(String[] args) {
         Scanner sc = new Scanner(System.in);
         int n = sc.nextInt();
         int t = sc.nextInt();
         int p = sc.nextInt();
         long m[][] = new long[n][5];
         for(int i=0;i<n;i++) {
        	 for(int j=0;j<5;j++) {
        		 m[i][j] = sc.nextLong();
        	 }
         }
         boolean[] bl = new boolean[n];
      dfs(t,0,m,bl,p,0);
      System.out.println(num);
	}

	private static void dfs(int t, long l, long[][] m, boolean[] bl, int p,long score) {
		// TODO Auto-generated method stub
		int n = m.length;
		for(int i=0;i<n;i++) {
			if(bl[i]==false&&(l+m[i][3])<=t) {
				bl[i] = true;
				score+=Math.max(m[i][2],m[i][0]-(m[i][3]+l)*m[i][1]-m[i][4]*p);
				num = Math.max(num, score);
				dfs(t,m[i][3]+l,m,bl,p,score);
				score-=Math.max(m[i][2],m[i][0]-(m[i][3]+l)*m[i][1]-m[i][4]*p);
				bl[i] = false;
			}
		}
		
	}
}
"
125,C,Java,61496653,2023-03-24 23:01:33,牛客517457762号,答案错误,"import java.util.*;
public class Main {
    static long [][]score;
    static int n;
    static long t,p;
    static long [][] mscore;
    static long ans=0;
    static Set<Integer> set=new HashSet<>();
    static long []curnum=new long[10];
    static List<int[]> list=new ArrayList<>();
    public static void main(String[]args){
        Scanner sc=new Scanner(System.in);
        n=sc.nextInt();t=sc.nextInt();p=sc.nextLong();
        score=new long[n][5];
        mscore=new long[n][2];
        for(int i=0;i<n;i++){
            int [] curn=new int[5];
            for(int j=0;j<5;j++) curn[j]=sc.nextInt();
            list.add(curn);
        }
        Collections.sort(list,(a,b)->a[3]-b[3]);
        dfs(0,0,0);
        System.out.println(ans);
    }
    static void dfs(long time,long soce,int leve){
        if(leve>10) return;
        ans=Math.max(soce,ans);
        for(int i=0;i<n;i++){
            if (set.contains(i)) continue;
            int[] cu=list.get(i);
            set.add(i);
            if(time+cu[3]>t) return;
            long s=getsc(cu,time+cu[3]);
            dfs(time+cu[3],s+soce,leve+1);
            set.remove(i);
        }



    }
    static long getsc(int[] s,long t){
        return Math.max(s[2],s[0]-t*s[1]-s[4]*p);
    }
}"
126,C,Java,61497519,2023-03-24 23:46:59,Jiarui.X,答案正确,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.StreamTokenizer;
import  java.util.*;

public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static final int N = 10;
    static int[] a = new int[N], b = new int[N], c = new int[N], x = new int[N], y = new int[N];
    static int n, t, p;
    static long ans;
    static boolean[] vis = new boolean[N];
    public static void dfs(int u, long d, long time) {
        if(u > n) return ;
        if(time > t) return ;
        ans = Math.max(ans, d);
        for (int i = 1; i <= n; i ++) {
            if(!vis[i]) {
                vis[i] = true;
                long ds = Math.max(c[i], a[i] - (x[i] + time) * b[i] - p * y[i]);
                dfs(u + 1, d + ds, time + x[i]);
                vis[i] = false;
            }
        }
    }
    public static void Solve() throws IOException {
        String[] S1 = br.readLine().split("" "");
        n = Integer.parseInt(S1[0]);
        t = Integer.parseInt(S1[1]);
        p = Integer.parseInt(S1[2]);
        for (int i = 1; i <= n; i ++) {
            S1 = br.readLine().split("" "");
            a[i] = Integer.parseInt(S1[0]);
            b[i] = Integer.parseInt(S1[1]);
            c[i] = Integer.parseInt(S1[2]);
            x[i] = Integer.parseInt(S1[3]);
            y[i] = Integer.parseInt(S1[4]);
        }
        dfs(1, 0, 0);
        System.out.println(ans);
    }
    public static void main(String[] args) throws IOException {
        int T = 1;
        for (; T > 0; T --) Solve();
    }
}"
127,C,Java,61497689,2023-03-25 00:03:16,祸灵梦,答案正确,"import java.util.Scanner;

class Pro{
    long a,b,c,x,y;

    public Pro(long a, long b, long c, long x, long y) {
        this.a = a;
        this.b = b;
        this.c = c;
        this.x = x;
        this.y = y;
    }
}

public class Main {
    static int n,t,p;
    static Scanner in = new Scanner(System.in);
    static Pro[] problem = new Pro[20];
    static boolean[] st = new boolean[20];
    static long ans;

    static void dfs(int idx, long times, long scor){   // 从第几题开始做，时间过了多少了,现在有多少分
        if(times <= t){
            ans = Math.max(scor, ans);
        }else{
            return;
        }


        for(int i = 1; i <= n; i++){
            if(!st[i]){
                st[i] = true;
                dfs(i, times + problem[i].x, scor + Math.max(problem[i].c, problem[i].a - (problem[i].x + times) * problem[i].b - problem[i].y * p));
                st[i] = false;
            }
        }
    }

    public static void main(String[] args) {
        n = in.nextInt(); t = in.nextInt(); p = in.nextInt();

        for(int i = 1; i <= n; i++){
            long a, b, c, x, y;  // 满分a，时间系数b，保底分c，在x分钟，错误y次后通过
            a = in.nextLong();
            b = in.nextLong();
            c = in.nextLong();
            x = in.nextLong();
            y = in.nextLong();

            problem[i] = new Pro(a,b,c,x,y);
        }

        dfs(0, 0, 0);

        System.out.println(ans);
    }
}"
128,C,Java,61498652,2023-03-25 09:04:07,何妨吟啸且徐行1,答案正确,"import java.io.*;
import java.util.*;
import java.math.*;
import java.nio.channels.Channels;

public class Main {
	
		public static StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in), 32768));
	    public static PrintWriter out =new PrintWriter(new OutputStreamWriter(System.out));
	    public static BufferedReader bin = new BufferedReader(new InputStreamReader(System.in));
	    public static double nextDouble() throws IOException { in.nextToken(); return in.nval;}
	    public static float nextFloat() throws IOException { in.nextToken(); return (float)in.nval;}
	    public static int nextInt() throws IOException { in.nextToken(); return (int)in.nval;}
	    public static long nextLong() throws Exception { in.nextToken(); return (long)in.nval;}
	    public static String next() throws IOException { return bin.readLine(); }

	    static int n,t,p;
	    static CF[] cf=new CF[10];
	    static boolean[] flag=new boolean[10];
	    static long ans;
	    
	public static void main(String[] args) throws Exception {
		//共有n道题，120分钟，每次罚时50分
		n=nextInt(); t=nextInt(); p=nextInt();
		for(int i=1;i<=n;i++) {
			cf[i]=new CF(nextLong(), nextLong(), nextLong(), nextLong(), nextLong());
		}
		// 从第几题开始做，时间过了多少了,现在有多少分
		dfs(0, 0, 0);
		out.print(ans);
		out.close();
	}
	
	static void dfs(int index,long time,long score) {
		if(time<=t) ans=Math.max(ans, score);
		else return;
		
		for(int i=1;i<=n;i++) {
			//是否被标记过
			if(!flag[i]) {
				flag[i]=true;
				dfs(i,time+cf[i].x,score+
						Math.max(cf[i].c, 
								cf[i].a-(cf[i].x+time)*cf[i].b-(cf[i].y*p)));
				flag[i]=false;
			}
		}
	}
}
class CF{
	// 满分a，时间系数b，保底分c，在x分钟，错误y次后通过
	long a,b,c,x,y;

	public CF(long a, long b, long c, long x, long y) {
		super();
		this.a = a;
		this.b = b;
		this.c = c;
		this.x = x;
		this.y = y;
	}
	
}

"
129,C,Java,61498660,2023-03-25 09:05:21,何妨吟啸且徐行1,答案正确,"import java.io.*;
import java.util.*;
import java.math.*;
import java.nio.channels.Channels;

public class Main {
	
		public static StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in), 32768));
	    public static PrintWriter out =new PrintWriter(new OutputStreamWriter(System.out));
	    public static BufferedReader bin = new BufferedReader(new InputStreamReader(System.in));
	    public static double nextDouble() throws IOException { in.nextToken(); return in.nval;}
	    public static float nextFloat() throws IOException { in.nextToken(); return (float)in.nval;}
	    public static int nextInt() throws IOException { in.nextToken(); return (int)in.nval;}
	    public static long nextLong() throws Exception { in.nextToken(); return (long)in.nval;}
	    public static String next() throws IOException { return bin.readLine(); }

	    static int n,t,p;
	    static CF[] cf=new CF[10];
	    static boolean[] flag=new boolean[10];
	    static long ans;
	    
	public static void main(String[] args) throws Exception {
		//共有n道题，120分钟，每次罚时50分
		n=nextInt(); t=nextInt(); p=nextInt();
		for(int i=1;i<=n;i++) {
			cf[i]=new CF(nextLong(), nextLong(), nextLong(), nextLong(), nextLong());
		}
		// 从第几题开始做，时间过了多少了,现在有多少分
		dfs( 0, 0);
		out.print(ans);
		out.close();
	}
	
	static void dfs(long time,long score) {
		if(time<=t) ans=Math.max(ans, score);
		else return;
		
		for(int i=1;i<=n;i++) {
			//是否被标记过
			if(!flag[i]) {
				flag[i]=true;
				dfs(time+cf[i].x,score+
						Math.max(cf[i].c, 
								cf[i].a-(cf[i].x+time)*cf[i].b-(cf[i].y*p)));
				flag[i]=false;
			}
		}
	}
}
class CF{
	// 满分a，时间系数b，保底分c，在x分钟，错误y次后通过
	long a,b,c,x,y;

	public CF(long a, long b, long c, long x, long y) {
		super();
		this.a = a;
		this.b = b;
		this.c = c;
		this.x = x;
		this.y = y;
	}
	
}

"
130,C,Java,61499817,2023-03-25 10:41:24,森姐,答案正确,"import java.util.*;
public class Main {
    static int N = 10;
    static int[] a = new int[N], b = new int[N], c = new int[N], x = new int[N], y = new int[N];
    static int[] path = new int[N];
    static boolean[] st = new boolean[N];
    static long res = 0;
    static int n, t, p;
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt();
        t = sc.nextInt();
        p = sc.nextInt();
        for (int i = 1; i <= n; i++) {
            a[i] = sc.nextInt();
            b[i] = sc.nextInt();
            c[i] = sc.nextInt();
            x[i] = sc.nextInt();
            y[i] = sc.nextInt();
        }
        
        dfs(1);
        System.out.println(res);
    }
    static void dfs(int u) {
        if (u == n + 1) {
            long ans = 0, time = 0;
            for (int i = 1; i <= n; i++) {
                if (time + x[path[i]] <= t) {
                    time += x[path[i]];
                    ans += Math.max(c[path[i]],a[path[i]] - time * b[path[i]] - y[path[i]] * p);
                }
            }
//             for (int i = 1; i <= n; i++) System.out.print(path[i] + "" "");
//             System.out.println();
            res = Math.max(res,ans);
            return;
        }
        for (int i = 1; i <= n; i++) {
            if (!st[i]) {
                path[u] = i;
                st[i] = true;
                dfs(u + 1);
                st[i] = false;
            }
        }
    }
}"
131,C,Java,61499957,2023-03-25 10:49:34,今天一定早点睡,答案正确,"import java.io.*;
import java.util.*;

public class Main {
    static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    static int N = 11, n, t, p;
    static long[] a = new long[N], b = new long[N], c = new long[N], x = new long[N], y = new long[N];
    static boolean[] st = new boolean[N];
    static long ans;

    static void dfs(int u, long score, long time) {
        if (u > n) return;
        if (time > t) return;
        ans = Math.max(ans, score);

        for (int i = 1; i <= n; i ++) {
            if (!st[i]) {
                st[i] = true;
                long d = Math.max(c[i], a[i] - (x[i] + time) * b[i] - y[i] * p);
                dfs(u + 1, score + d, time + x[i]);
                st[i] = false;
            }
        }
    }

    public static void main(String[] args) throws Exception {
        String[] s1 = in.readLine().split("" "");
        n = Integer.parseInt(s1[0]); t = Integer.parseInt(s1[1]); p = Integer.parseInt(s1[2]);
        for (int i = 1; i <= n; i ++) {
            String[] s2 = in.readLine().split("" "");
            a[i] = Integer.parseInt(s2[0]); b[i] = Integer.parseInt(s2[1]); c[i] = Integer.parseInt(s2[2]);
            x[i] = Integer.parseInt(s2[3]); y[i] = Integer.parseInt(s2[4]);
        }
        dfs(1, 0, 0);
        out.println(ans);
        out.flush();
    }
}
"
132,C,Java,61512141,2023-03-25 13:58:23,迷你滨,答案正确,"import java.util.*;
import java.io.*;


public class Main {
	static int n,m,mod=(int)1e9+7,maxn=500002;
	static long ans=0,INF=(long)1e18;
	static Scanner sc = new Scanner (System.in);
	static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
	static StreamTokenizer st = new StreamTokenizer(bf);
	static PrintWriter pw = new PrintWriter(System.out);
	
	public static void main(String[]args) throws IOException{
		int T = 1;
		//T = I();
		while(T-->0) solve();
		pw.flush();
	}
	
	static int I() throws IOException{
		st.nextToken();
		return (int)st.nval;
	}
	
	static String S() throws IOException{
		String s = bf.readLine();
		while(s.equals("""")) s = bf.readLine();
		return s;
	}
	
	static void dfs(int []q,int len,boolean f[]) {
		if(len==n) {
			ans = Math.max(ans, check(q));
			return;
		}
		for(int i=1;i<=n;i++) {
			if(!f[i]) {
				f[i]=true;q[len]=i;
				dfs(q,len+1,f);
				f[i]=false;
			}
		}
	}
	
	static long check(int q[]) {
		long res=0;
		int time=0;
		for(int i = 0;i<n;i++) {
			int id = q[i];
			time+=x[id];
			if(time>t)break;
			res += Math.max(c[id], a[id] - time*b[id] - y[id]*p);
		}
		return res;
	}
	
	static int t=0,p=0;
	static long []a = new long[10];
	static long []b = new long[10];
	static long []c = new long[10];
	static long []x = new long[10];
	static long []y = new long[10];
	
	static void solve() throws IOException{
		n = I();t=I();p=I();
		for(int i=1;i<=n;i++) {
			a[i]=I();b[i]=I();c[i]=I();x[i]=I();y[i]=I();
		}
		dfs(new int [n],0,new boolean [n+1]);
		pw.println(ans);
	}
	
}
"
133,C,Java,61520235,2023-03-25 14:53:54,giao1,答案错误,"import java.util.*;

public class Main{
    
    static int N = 9, n,t,p;
    static int[] path = new int[N];
    static boolean[] st = new boolean[N];
    static Node[] node;
    static long sum = 0,cnt = 0;
    static long[] copy = new long[N];
    public static void main(String[] args){
        Scanner cin = new Scanner(System.in);
        n = cin.nextInt();
        t = cin.nextInt();
        p = cin.nextInt();
        node = new Node[n];
        long score = 0;
       for(int i = 0;i<n;i++){
            long a = cin.nextLong();
            long b = cin.nextLong();
            long c = cin.nextLong();
            long x = cin.nextLong();
            long y = cin.nextLong();
            node[i] = new Node(a,b,c,x,y);
            copy[i] = node[i].x;
        }
        dfs(0);
        System.out.println(cnt);
    }
    
     public static void dfs(int u){
        if(u == n){
            sum = 0;
            for(int i = 0;i<n;i++)node[i].x=copy[i];
            for(int i = 0 ; i < n ; i ++ ){
                long a = node[i].a;
                long b = node[i].b;
                long c = node[i].x;
                //int x = node[i].x
                long y = node[i].y; 
                if(i!=0){
                    node[i].x+=node[i-1].x;
                    if(node[i].x<=t)sum+=Math.max(c,a-node[i].x*b-y*p);
                    else break;
                }else{
                    if(node[i].x<=t)sum+=Math.max(c,a-node[i].x*b-y*p);
                    else break;
                }
            }
            cnt=Math.max(sum,cnt);
            return;
        }
        for(int i = 0 ; i < n ; i ++ ){
            if(!st[i]){
                path[u] = i;
                st[i] = true;
                dfs(u + 1);
                st[i] = false;
            }
        }
    }


    
}

class Node{
    long a,b,c,x,y;
    public Node(long a,long b,long c,long x,long y){
        this.x = x;
        this.y=y;
        this.a = a;
        this.b=b;
        this.c = c;
    }
}"
134,C,Java,61537177,2023-03-25 18:51:58,小孙不吃辣,答案错误,"import java.util.*;
public class Main{
    static int n,t,p;
    static long res = 0;
    static int[] a = new int[11],b = new int[11],c = new int[11],x = new int[11],y = new int[11];
    static void dfs(int i,int time,long s){
         if(i == n)return;
         if(time + x[i] > t)return;
         int score = Math.max(c[i],a[i] - (x[i] + time) * b[i] - y[i] * p);
         s += score;
         res = Math.max(res,s);
         dfs(i + 1,time + x[i],s);
         dfs(i + 1,time,s -= score);
    }
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt();
        t = sc.nextInt();
        p = sc.nextInt();
        for(int i = 0;i < n;i++){
            a[i] = sc.nextInt();
            b[i] = sc.nextInt();
            c[i] = sc.nextInt();
            x[i] = sc.nextInt();
            y[i] = sc.nextInt();
        }
        dfs(0,0,0);
        System.out.println(res);
    }
}"
135,C,Java,61537190,2023-03-25 18:52:36,小孙不吃辣,答案错误,"import java.util.*;
public class Main{
    static int n,t,p;
    static long res = 0;
    static int[] a = new int[11],b = new int[11],c = new int[11],x = new int[11],y = new int[11];
    static void dfs(int i,int time,long s){
         if(i == n)return;
         if(time + x[i] > t)return;
         int score = Math.max(c[i],a[i] - (x[i] + time) * b[i] - y[i] * p);
         s += score;
         res = Math.max(res,s);
         dfs(i + 1,time + x[i],s);
         dfs(i + 1,time,s -= score);
    }
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt();
        t = sc.nextInt();
        p = sc.nextInt();
        for(int i = 0;i < n;i++){
            a[i] = sc.nextInt();
            b[i] = sc.nextInt();
            c[i] = sc.nextInt();
            x[i] = sc.nextInt();
            y[i] = sc.nextInt();
        }
        dfs(0,0,0);
        System.out.println(res);
    }
}"
136,C,Java,61537234,2023-03-25 18:55:36,小孙不吃辣,答案错误,"import java.util.*;
public class Main{
    static int n,t,p;
    static long res = 0;
    static int[] a = new int[11],b = new int[11],c = new int[11],x = new int[11],y = new int[11];
    static void dfs(int i,int time,long s){
         if(i == n)return;
         
         int score = Math.max(c[i],a[i] - (x[i] + time) * b[i] - y[i] * p);
         if(time + x[i] < t){
             s += score;res = Math.max(res,s);  dfs(i + 1,time + x[i],s);
         }
         dfs(i + 1,time,s -= score);
    }
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt();
        t = sc.nextInt();
        p = sc.nextInt();
        for(int i = 0;i < n;i++){
            a[i] = sc.nextInt();
            b[i] = sc.nextInt();
            c[i] = sc.nextInt();
            x[i] = sc.nextInt();
            y[i] = sc.nextInt();
        }
        dfs(0,0,0);
        System.out.println(res);
    }
}"
137,C,Java,61537250,2023-03-25 18:56:53,小孙不吃辣,答案错误,"import java.util.*;
public class Main{
    static int n,t,p;
    static long res = 0;
    static int[] a = new int[11],b = new int[11],c = new int[11],x = new int[11],y = new int[11];
    static void dfs(int i,int time,long s){
         if(i == n)return;
         int score = Math.max(c[i],a[i] - (x[i] + time) * b[i] - y[i] * p);
         if(time + x[i] < t){
             s += score;res = Math.max(res,s);  dfs(i + 1,time + x[i],s);
             dfs(i + 1,time + x[i],s - score);
         }
         else dfs(i + 1,time,s);
    }
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt();
        t = sc.nextInt();
        p = sc.nextInt();
        for(int i = 0;i < n;i++){
            a[i] = sc.nextInt();
            b[i] = sc.nextInt();
            c[i] = sc.nextInt();
            x[i] = sc.nextInt();
            y[i] = sc.nextInt();
        }
        dfs(0,0,0);
        System.out.println(res);
    }
}"
138,C,Java,61537293,2023-03-25 18:59:03,小孙不吃辣,答案错误,"import java.util.*;
public class Main{
    static int n,t,p;
    static long res = 0;
    static int[] a = new int[11],b = new int[11],c = new int[11],x = new int[11],y = new int[11];
    static void dfs(int i,int time,long s){
        res = Math.max(res,s);
         if(i == n)return;
         int score = Math.max(c[i],a[i] - (x[i] + time) * b[i] - y[i] * p);
         if(time + x[i] < t){
             dfs(i + 1,time + x[i],s + score);
         }
         dfs(i + 1,time,s);
    }
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt();
        t = sc.nextInt();
        p = sc.nextInt();
        for(int i = 0;i < n;i++){
            a[i] = sc.nextInt();
            b[i] = sc.nextInt();
            c[i] = sc.nextInt();
            x[i] = sc.nextInt();
            y[i] = sc.nextInt();
        }
        dfs(0,0,0);
        System.out.println(res);
    }
}"
139,C,Java,61538290,2023-03-25 19:56:26,小孙不吃辣,答案错误,"import java.util.*;
public class Main{
    static int n,t,p;
    static long res = 0;
    static int[] a = new int[11],b = new int[11],c = new int[11],x = new int[11],y = new int[11];
    static void dfs(int i,int time,long s){
         res = Math.max(res,s);
         if(i == n)return;
         int score = Math.max(c[i],a[i] - (x[i] + time) * b[i] - y[i] * p);
         if(time + x[i] < t){
             dfs(i + 1,time + x[i],s + score);
         }
         dfs(i + 1,time,s);
    }
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt();
        t = sc.nextInt();
        p = sc.nextInt();
        for(int i = 0;i < n;i++){
            a[i] = sc.nextInt();
            b[i] = sc.nextInt();
            c[i] = sc.nextInt();
            x[i] = sc.nextInt();
            y[i] = sc.nextInt();
        }
        dfs(0,0,0);
        System.out.println(res);
    }
}"
140,C,Java,61538532,2023-03-25 20:11:56,小孙不吃辣,答案错误,"import java.util.*;
public class Main{
    static int res = 0;
    static int N = 11;
    static int n,t,p;
    static int[] a = new int[N],b = new int[N],c = new int[N],y = new int[N],x = new int[N],st = new int[N];
    public static void dfs(int time,int s){
        if(time > t)return;
        res = Math.max(res,s);
        for(int i = 0;i < n;i++){
            if(st[i] == 0){
                st[i] = 1;
                int score = Math.max(c[i],a[i] - (x[i] + time) * b[i] - y[i] * p);
                dfs(time + x[i],s + score);
                st[i] = 0;
            }
        }
    }
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt();t = sc.nextInt();p = sc.nextInt();
        for(int i = 0;i < n;i++){
            a[i] = sc.nextInt();
            b[i] = sc.nextInt();
            c[i] = sc.nextInt();
            x[i] = sc.nextInt();
            y[i] = sc.nextInt();
        }
        dfs(0,0);
        System.out.println(res);
    }
}"
141,C,Java,61538565,2023-03-25 20:13:45,小孙不吃辣,答案错误,"import java.util.*;
public class Main{
    static int res = 0;
    static int N = 11;
    static int n,t,p;
    static int[] a = new int[N],b = new int[N],c = new int[N],y = new int[N],x = new int[N],vis = new int[N];
    public static void dfs(int sco,int tm){
              if(tm>t)return;
              res=Math.max(res,sco);
             for(int i=0;i<=1;i++){
                 if(vis[i] == 0){
                    vis[i]=1;
                     dfs(sco+Math.max(c[i],a[i]-(tm+x[i])*b[i]-y[i]*p),tm+x[i]);
                     vis[i]=0;
                    }
                 }
        }
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt();t = sc.nextInt();p = sc.nextInt();
        for(int i = 0;i < n;i++){
            a[i] = sc.nextInt();
            b[i] = sc.nextInt();
            c[i] = sc.nextInt();
            x[i] = sc.nextInt();
            y[i] = sc.nextInt();
        }
        dfs(0,0);
        System.out.println(res);
    }
}"
142,C,Java,61538570,2023-03-25 20:13:59,小孙不吃辣,答案错误,"import java.util.*;
public class Main{
    static int res = 0;
    static int N = 11;
    static int n,t,p;
    static int[] a = new int[N],b = new int[N],c = new int[N],y = new int[N],x = new int[N],vis = new int[N];
    public static void dfs(int sco,int tm){
              if(tm>t)return;
              res=Math.max(res,sco);
             for(int i=0;i<=1;i++){
                 if(vis[i] == 0){
                    vis[i]=1;
                     dfs(sco+Math.max(c[i],a[i]-(tm+x[i])*b[i]-y[i]*p),tm+x[i]);
                     vis[i]=0;
                    }
                 }
        }
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt();t = sc.nextInt();p = sc.nextInt();
        for(int i = 0;i < n;i++){
            a[i] = sc.nextInt();
            b[i] = sc.nextInt();
            c[i] = sc.nextInt();
            x[i] = sc.nextInt();
            y[i] = sc.nextInt();
        }
        dfs(0,0);
        System.out.println(res);
    }
}"
143,C,Java,61538578,2023-03-25 20:14:19,小孙不吃辣,答案错误,"import java.util.*;
public class Main{
    static int res = 0;
    static int N = 11;
    static int n,t,p;
    static int[] a = new int[N],b = new int[N],c = new int[N],y = new int[N],x = new int[N],st = new int[N];
    public static void dfs(int time,int s){
        if(time > t)return;
        res = Math.max(res,s);
        for(int i = 0;i < n;i++){
            if(st[i] == 0){
                st[i] = 1;
                int score = Math.max(c[i],a[i] - (x[i] + time) * b[i] - y[i] * p);
                dfs(time + x[i],s + score);
                st[i] = 0;
            }
        }
    }
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt();t = sc.nextInt();p = sc.nextInt();
        for(int i = 0;i < n;i++){
            a[i] = sc.nextInt();
            b[i] = sc.nextInt();
            c[i] = sc.nextInt();
            x[i] = sc.nextInt();
            y[i] = sc.nextInt();
        }
        dfs(0,0);
        System.out.println(res);
    }
}"
144,C,Java,61538599,2023-03-25 20:15:19,小孙不吃辣,答案正确,"import java.util.*;
public class Main{
    static long res = 0;
    static int N = 11;
    static int n,t,p;
    static int[] a = new int[N],b = new int[N],c = new int[N],y = new int[N],x = new int[N],st = new int[N];
    public static void dfs(int time,long s){
        if(time > t)return;
        res = Math.max(res,s);
        for(int i = 0;i < n;i++){
            if(st[i] == 0){
                st[i] = 1;
                int score = Math.max(c[i],a[i] - (x[i] + time) * b[i] - y[i] * p);
                dfs(time + x[i],s + score);
                st[i] = 0;
            }
        }
    }
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt();t = sc.nextInt();p = sc.nextInt();
        for(int i = 0;i < n;i++){
            a[i] = sc.nextInt();
            b[i] = sc.nextInt();
            c[i] = sc.nextInt();
            x[i] = sc.nextInt();
            y[i] = sc.nextInt();
        }
        dfs(0,0);
        System.out.println(res);
    }
}"
145,C,Java,61545922,2023-03-26 11:53:58,李雯钦,答案正确,"import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.*;


public class Main{
    static long get(int u,int time){
        return Math.max(c[u],a[u]-(long)time*b[u]-(long)y[u]*p);
    }
    static int n,t,p,N = 12;
    static long res;
    static int[] a = new int[N];
    static int[] b = new int[N];
    static int[] c = new int[N];
    static int[] x = new int[N];
    static int[] y = new int[N];
    static int[] q = new int[N];
    static boolean[] st = new boolean[N];

    static long dfs(int u, int time, long l){
    	if(time>t) return 0;
    	if(u==1+n) return l;
    	
    	long res = l;
    	for(int i =1;i<=n;i++) {
    		if(!st[i]) {
    			time += x[i];
    			st[i]= true; 
    			res=Math.max(res, dfs(u+1, time,l+get(i, time)));
    			st[i]= false;
    			time-=x[i];
    		}
    	}
    	
		return res;
        
    }
    public static void main(String[] args){
        QuickInput in = new  QuickInput();
        PrintWriter out = new PrintWriter(System.out);
        n = in.nextInt(); t = in.nextInt(); p = in.nextInt();

        for(int i =1;i<=n;i++){
            a[i] = in.nextInt();
            b[i] = in.nextInt();
            c[i] = in.nextInt();
            x[i] = in.nextInt();
            y[i] = in.nextInt();
        }

        
        out.println(dfs(1,0,0));

        //in.nextInt().....
        //out.println().....

        out.close();//不关闭，就会有些数据留在缓冲区
    }
}


class  QuickInput
{
    BufferedReader buf;
    StringTokenizer tok;
     QuickInput(){
        buf = new BufferedReader(new InputStreamReader(System.in));
    }
    boolean hasNext(){
        while(tok == null || !tok.hasMoreElements()){
            try{
                tok = new StringTokenizer(buf.readLine());
            }catch(Exception e){
                return false;
            }
        }
        return true;
    }
    String next(){
        if(hasNext()) return tok.nextToken();
        return null;
    }
    int nextInt(){
        return Integer.parseInt(next());
    }
    long nextLong(){
        return Long.parseLong(next());
    }
    double nextDouble(){
        return Double.parseDouble(next());
    }
    BigInteger nextBigInteger(){
        return new BigInteger(next());
    }
    BigDecimal nextBigDecimal(){
        return new BigDecimal(next());
    }
}
"
146,C,Java,61554701,2023-03-26 15:22:44,山东协和学院_张福旭,答案正确,"import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
    static Read sc=new Read(System.in);
    static PrintWriter out=new PrintWriter(new OutputStreamWriter(System.out));
    static int n,m,p;
    static Node[] a=new Node[15];
    static boolean[] bool=new boolean[15];
    static long ans=0;
    public static void main(String[] args) {
        n=sc.nextInt();
        m=sc.nextInt();
        p=sc.nextInt();
        for (int i=1;i<=n;i++){
            int val=sc.nextInt(),T=sc.nextInt(),cnt=sc.nextInt(),time=sc.nextInt(),cuo=sc.nextInt();
            a[i]=new Node(val,T,cnt,time,cuo);
        }
        dfs(0,0);
        out.println(ans);
        out.flush();
    }
    public static void dfs(long T,long cnt){
        ans=Math.max(ans,cnt);
        for (int i=1;i<=n;i++){
            if(!bool[i]&&a[i].time+T<=m){
                bool[i]=true;
                long x=Math.max(a[i].cnt,a[i].val-((a[i].time+T)*a[i].T)-(a[i].cuo*p));
                dfs(T+a[i].time,x+cnt);
                bool[i]=false;
            }
        }
    }
    static class Node{
        int val;
        int T;
        int cnt;
        int time;
        int cuo;
        public Node(int val,int T,int cnt,int time,int cuo){
            this.val=val;
            this.T=T;
            this.cnt=cnt;
            this.cuo=cuo;
            this.time=time;
        }
    }
    static class Read {
        BufferedReader br;
        StringTokenizer st;

        public Read(InputStream in) {
            br = new BufferedReader(new InputStreamReader(in), 16384);
            eat("""");
        }

        public void eat(String s) {
            st = new StringTokenizer(s);
        }

        public String nextLine() {
            try {
                return br.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        public boolean hasNext() {
            while (!st.hasMoreTokens()) {
                String s = nextLine();
                if (s == null)
                    return false;
                eat(s);
            }
            return true;
        }

        public String next() {
            hasNext();
            return st.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }
    }
}"
147,C,Java,61571088,2023-03-26 20:36:27,牛客169937911号,答案错误,"
// 开题顺序
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		Map<Integer,long[]> map = new HashMap<>();
		int[] time = new int[n];
		int t = sc.nextInt();
		int p = sc.nextInt();
		for(int i = 0 ; i < n; i++) {
			int a = sc.nextInt();
			int b = sc.nextInt();
			int c = sc.nextInt();
			int x = sc.nextInt();
			int y = sc.nextInt();
			time[i] = x;
			map.put(x, new long[] {c,a,b,y,p});
		}
		Arrays.sort(time);
		int index = 0;
		long[] sum = new long[n];
		long[] tmp = map.get(time[0]);
		sum[0] = Math.max(tmp[0],tmp[1] - time[0] * tmp[2] - tmp[3] * tmp[4] );
		for(int i = 1; i < n; i++) {
			long[] tmp2 = map.get(time[i]);
			time[i] += time[i - 1];
			sum[i] = sum[i - 1] + Math.max(tmp2[0],tmp2[1] - time[i] * tmp2[2] - tmp2[3] * tmp2[4] );
			if(time[i] <= t) index = i;
		}
		Arrays.sort(sum,0, index);
		System.out.println(sum[index]);
		sc.close();
		
	}
}
"
148,C,Java,61571224,2023-03-26 20:39:15,牛客169937911号,答案错误,"
// 开题顺序
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		Map<Integer,long[]> map = new HashMap<>();
		int[] time = new int[n];
		int t = sc.nextInt();
		int p = sc.nextInt();
		for(int i = 0 ; i < n; i++) {
			int a = sc.nextInt();
			int b = sc.nextInt();
			int c = sc.nextInt();
			int x = sc.nextInt();
			int y = sc.nextInt();
			time[i] = x;
			map.put(x, new long[] {c,a,b,y,p});
		}
		Arrays.sort(time);
		int index = 0;
		long[] sum = new long[n];
		long[] tmp = map.get(time[0]);
		sum[0] = (long)Math.max(tmp[0],tmp[1] - time[0] * tmp[2] - tmp[3] * tmp[4] );
		for(int i = 1; i < n; i++) {
			long[] tmp2 = map.get(time[i]);
			time[i] += time[i - 1];
			sum[i] = sum[i - 1] + (long)Math.max(tmp2[0],tmp2[1] - time[i] * tmp2[2] - tmp2[3] * tmp2[4] );
			if(time[i] <= t) index = i;
		}
		Arrays.sort(sum,0, index);
		System.out.println(sum[index]);
		sc.close();
		
	}
}
"
149,C,Java,61573135,2023-03-26 21:38:05,牛客169937911号,答案错误,"
// 开题顺序
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		Map<Integer,long[]> map = new HashMap<>();
		int[] time = new int[n];
		int t = sc.nextInt();
		int p = sc.nextInt();
		for(int i = 0 ; i < n; i++) {
			int a = sc.nextInt();
			int b = sc.nextInt();
			int c = sc.nextInt();
			int x = sc.nextInt();
			int y = sc.nextInt();
			time[i] = x;
			map.put(x, new long[] {c,a,b,y,p});
		}
		Arrays.sort(time);
		int index = 0;
		long[] sum = new long[n];
		long[] tmp = map.get(time[0]);
		sum[0] = (long)Math.max(tmp[0],tmp[1] - time[0] * tmp[2] - tmp[3] * tmp[4] );
		for(int i = 1; i < n; i++) {
			long[] tmp2 = map.get(time[i]);
			time[i] += time[i - 1];
			sum[i] = sum[i - 1] + (long)Math.max(tmp2[0],tmp2[1] - time[i] * tmp2[2] - tmp2[3] * tmp2[4] );
			if(time[i] <= t) index = i;
		}
		Arrays.sort(sum,0, index);
		System.out.println(sum[index]);
		sc.close();
		
	}
}
"
150,C,Java,61573335,2023-03-26 21:47:39,牛客169937911号,答案错误,"
// 开题顺序
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		Map<Integer,long[]> map = new HashMap<>();
		int[] time = new int[n];
		int t = sc.nextInt();
		int p = sc.nextInt();
		for(int i = 0 ; i < n; i++) {
			int a = sc.nextInt();
			int b = sc.nextInt();
			int c = sc.nextInt();
			int x = sc.nextInt();
			int y = sc.nextInt();
			time[i] = x;
			map.put(x, new long[] {c,a,b,y,p});
		}
		Arrays.sort(time);
		int index = 0;
		long[] sum = new long[n];
		long[] tmp = map.get(time[0]);
		sum[0] = (long)Math.max(tmp[0],tmp[1] - time[0] * tmp[2] - tmp[3] * tmp[4] );
		for(int i = 1; i < n; i++) {
			long[] tmp2 = map.get(time[i]);
			time[i] += time[i - 1];
			sum[i] = sum[i - 1] + (long)Math.max(tmp2[0],tmp2[1] - time[i] * tmp2[2] - tmp2[3] * tmp2[4] );
			if(time[i] <= t) index = i;
			if(i + 1 < n) {
				if(time[i] + time[i + 1] > t && time[i + 1] <= t) {
					index = i + 1;
					long[] tmp3 = map.get(time[i + 1]);
					sum[i + 1] = (long)Math.max(tmp3[0],tmp3[1] - time[i + 1] * tmp3[2] - tmp3[3] * tmp3[4] );
					i++;
				}
			}
		}
		Arrays.sort(sum,0, index + 1);
		System.out.println(sum[index]);
		sc.close();
		
	}
}
"
151,C,Java,61573956,2023-03-26 22:24:43,牛客169937911号,答案正确,"
import java.util.Scanner;

// 开题顺序

public class Main {

	private static final int N = 10;
	private static int n;
	private static int t;
	private static int p;
	private static Node[] d = new Node[N];
	private static boolean[] st = new boolean[N];
	private static long max;
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		n = sc.nextInt();
		t = sc.nextInt();
		p = sc.nextInt();
		for(int i = 0; i < n; i++) {
			int a = sc.nextInt();
			int b = sc.nextInt();
			int c = sc.nextInt();
			int x = sc.nextInt();
			int y = sc.nextInt();
			d[i] = new Node(a,b,c,x,y);
		}
		dfs(0,0);
		System.out.println(max);
		sc.close();
	}
	public static void dfs(int tb, long s) {
		if(tb > t) return;
		max = Math.max(s, max);
		for(int i = 0; i < n; i++) {
			if(!st[i]) {
				st[i] = true;
				if(d[i].x <= t) {
					long z = (long)Math.max(d[i].c, d[i].a - (d[i].x + tb) * d[i].b - d[i].y * p);
					dfs(tb + d[i].x,s + z);
					st[i] = false;
				}
			}
		}
	}
}
class Node{
	int a,b,c,x,y;
	public Node(int a, int b, int c, int x, int y) {
		this.a = a;
		this.b = b;
		this.c = c;
		this.x = x;
		this.y = y;
	}
}"
152,C,Java,61576854,2023-03-27 13:22:45,陈力明,答案正确,"import java.util.*;
public class Main{
    static long max=0;
    static long p;
    public static void main(String [] args)
    {
        Scanner s=new Scanner(System.in);
        int n=s.nextInt();
        long t=s.nextInt();
          p=s.nextInt();
        long [][]f=new long [n][5];
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<5;j++)
                f[i][j]=s.nextInt();
        }
        int [] v=new int [n];
        
        dfs(t,0,f,v,0);
        System.out.println(max);
    }
    public static void dfs(long  t,long a,long [][]f,int []v,long sum)
    {
        max=Math.max(sum,max);
        for(int i=0;i<f.length;i++)
        {
            if(v[i]==1)continue;
            if(f[i][3]+a>t)continue;
            sum+=Math.max(f[i][2],f[i][0]-(f[i][3]+a)*f[i][1]-f[i][4]*p);
            v[i]=1;
            dfs(t,a+f[i][3],f,v,sum);
            v[i]=0;
            sum-=Math.max(f[i][2],f[i][0]-(f[i][3]+a)*f[i][1]-f[i][4]*p);
        }
    }
}"
153,C,Java,61577811,2023-03-27 15:22:13,人工智能3212卢明涛,答案正确,"

import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public static long gcd(long a,long b) {
            return b==0?a:gcd(b, a%b);
        }
        static long ans = 0;
        class Person{
            String name;
            String dui;
            double fen;
        }
        public static int binarySearch(int arr[], int target){
            int left = 0;
            int right = arr.length; // 注意
            while(left<right){ // 注意
                int mid = (left+right)/2;
                if(arr[mid] >= target){// 注意
                    right = mid;
                }else{
                    left = mid+1;
                }
            }
            return left;// 注意
        }
        static long start = 0;
        static long map[] = new long[100];
        static long time[]  = new long[100];

        static long use[] = new long[100];

        static long n,t,p;

        static long max = 0;

        static long maxfen = 0;
        static long sumtime = 0;
        static long[] ai = new long[20];
        static long[] bi = new long[20];
        static long[] ci = new long[20];
        static long[] xi = new long[20];
        static long[] yi = new long[20];

        static long sum =0;
        static void dfs(int id){
            for (int i=1;i<=n;i++){
                if (use[i]==0) {
                    if (sumtime + time[i] <= t) {
                        sumtime = sumtime + time[i];
                        long maxsu = Math.max(ci[i], ai[i] - sumtime * bi[i] - yi[i] * p);
                        sum = sum + maxsu;
                        use[i] = 1;
                        maxfen = Math.max(maxfen, sum);
                        dfs(0);
                        use[i] = 0;
                        sum = sum - maxsu;
                        sumtime = sumtime - time[i];
                    }
                }
            }
        }
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            n = in.nextLong();
            t = in.nextLong();
            p = in.nextLong();
            for (int i=1;i<=n;i++){
                ai[i] = in.nextLong();
                 bi[i] = in.nextLong();
                 ci[i] = in.nextLong();
                 xi[i] = in.nextLong();
                 yi[i] = in.nextLong();
//                long maxfen = Math.max(ci,ai-xi*bi-yi*p);
//                System.out.println(maxfen);
                time[i] = xi[i];
//                map[i] = maxfen;
            }
            dfs(0);
            System.out.println(maxfen);
            //            long[] math =new long[n];

        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
154,C,Java,61579989,2023-03-27 18:29:56,山东第一深情丶,答案错误,"import java.util.*;

public class Main {
    static int n,t,p,ans,max;
    static int num[][];
    public static void main(String[] arg) {
        Scanner input = new Scanner(System.in);
        n = input.nextInt();
        t = input.nextInt();
        p = input.nextInt();
        ans=0;
        num = new int[n][5];
        for (int i = 0; i < n; i++)
        {
            num[i][0] = input.nextInt();//a
            num[i][1] = input.nextInt();//b
            num[i][2] = input.nextInt();//c
            num[i][3] = input.nextInt();//x
            num[i][4] = input.nextInt();//y
        }
        dfs(0,t,0);
        System.out.println(max);
    }
    public static void dfs(int k,int T,int w)
    {
        max = Math.max(max,w);
        if(k<n)
        {
            int a=num[k][0],b=num[k][1],c=num[k][2],x=num[k][3],y=num[k][4];
            if(x<=T)
            {
                w+=Math.max(c,a-(t-T+x)*b-y*p);
                dfs(k+1,T-x,w);
            }
            else
                dfs(n+1,T,w);
            max = Math.max(max,w);
        }

    }
}
"
155,C,Java,61580019,2023-03-27 18:31:46,山东第一深情丶,答案错误,"import java.util.*;

public class Main {
    static int n,p;
    static long t,max=0;
    static int num[][];
    public static void main(String[] arg) {
        Scanner input = new Scanner(System.in);
        n = input.nextInt();
        t = input.nextLong();
        p = input.nextInt();
        num = new int[n][5];
        for (int i = 0; i < n; i++)
        {
            num[i][0] = input.nextInt();//a
            num[i][1] = input.nextInt();//b
            num[i][2] = input.nextInt();//c
            num[i][3] = input.nextInt();//x
            num[i][4] = input.nextInt();//y
        }
        dfs(0,t,0);
        System.out.println(max);
    }
    public static void dfs(int k,long T,long w)
    {
        max = Math.max(max,w);
        if(k<n)
        {
            int a=num[k][0],b=num[k][1],c=num[k][2],x=num[k][3],y=num[k][4];
            if(x<=T)
            {
                w+=Math.max(c,a-(t-T+x)*b-y*p);
                dfs(k+1,T-x,w);
            }
            else
                dfs(n+1,T,w);
            max = Math.max(max,w);
        }

    }
}
"
156,C,Java,61580310,2023-03-27 18:51:11,山东第一深情丶,答案错误,"import java.util.*;

public class Main {
    static int n,p;
    static long t,max=0;
    static int[][] num;
    public static void main(String[] arg) {
        Scanner input = new Scanner(System.in);
        n = input.nextInt();
        t = input.nextLong();
        p = input.nextInt();
        num = new int[n][5];
        for (int i = 0; i < n; i++)
        {
            num[i][0] = input.nextInt();//a
            num[i][1] = input.nextInt();//b
            num[i][2] = input.nextInt();//c
            num[i][3] = input.nextInt();//x
            num[i][4] = input.nextInt();//y
        }
        dfs(0,t,0);
        System.out.println(max);
    }
    public static void dfs(int k,long T,long w)
    {
        max = Math.max(max,w);
        if(k<n)
        {
            int a=num[k][0],b=num[k][1],c=num[k][2],x=num[k][3],y=num[k][4];
            if(x<=T)
            {
                dfs(k+1,T-x,w+Math.max(c,a-(t-T+x)*b-y*p));
            }
            dfs(k+1,T,w);
            max = Math.max(max,w);
        }

    }
}
"
157,C,Java,61580328,2023-03-27 18:52:02,山东第一深情丶,答案错误,"import java.util.*;

public class Main {
    static int n;
    static long p,t,max=0;
    static long[][] num;
    public static void main(String[] arg) {
        Scanner input = new Scanner(System.in);
        n = input.nextInt();
        t = input.nextLong();
        p = input.nextLong();
        num = new long[n][5];
        for (int i = 0; i < n; i++)
        {
            num[i][0] = input.nextInt();//a
            num[i][1] = input.nextInt();//b
            num[i][2] = input.nextInt();//c
            num[i][3] = input.nextInt();//x
            num[i][4] = input.nextInt();//y
        }
        dfs(0,t,0);
        System.out.println(max);
    }
    public static void dfs(int k,long T,long w)
    {
        max = Math.max(max,w);
        if(k<n)
        {
            long a=num[k][0],b=num[k][1],c=num[k][2],x=num[k][3],y=num[k][4];
            if(x<=T)
            {
                dfs(k+1,T-x,w+Math.max(c,a-(t-T+x)*b-y*p));
            }
            dfs(k+1,T,w);
            max = Math.max(max,w);
        }

    }
}
"
158,C,Java,61580368,2023-03-27 18:54:38,山东第一深情丶,答案错误,"import java.util.*;

public class Main {
    static int n=0;
    static long p=0,t=0,max=0;
    static long[][] num;
    public static void main(String[] arg) {
        Scanner input = new Scanner(System.in);
        n = input.nextInt();
        t = input.nextLong();
        p = input.nextLong();
        num = new long[n][5];
        for (int i = 0; i < n; i++)
        {
            num[i][0] = input.nextLong();//a
            num[i][1] = input.nextLong();//b
            num[i][2] = input.nextLong();//c
            num[i][3] = input.nextLong();//x
            num[i][4] = input.nextLong();//y
        }
        dfs(0,t,0);
        System.out.println(max);
    }
    public static void dfs(int k,long T,long w)
    {
        max = Math.max(max,w);
        if(k<n)
        {
            long a=num[k][0],b=num[k][1],c=num[k][2],x=num[k][3],y=num[k][4];
            if(x<=T)
            {
                dfs(k+1,T-x,w+Math.max(c,a-(t-T+x)*b-y*p));
            }
            dfs(k+1,T,w);
            max = Math.max(max,w);
        }

    }
}
"
159,C,Java,61580692,2023-03-27 19:08:20,山东第一深情丶,答案正确,"import java.util.*;

public class Main {
    static int n=0;
    static long p=0,t=0,max=0;
    static long[][] num;
    static boolean visit[];
    public static void main(String[] arg) {
        Scanner input = new Scanner(System.in);
        n = input.nextInt();
        t = input.nextLong();
        p = input.nextLong();
        num = new long[n][5];
        visit = new boolean[n];
        for (int i = 0; i < n; i++)
        {
            num[i][0] = input.nextLong();//a
            num[i][1] = input.nextLong();//b
            num[i][2] = input.nextLong();//c
            num[i][3] = input.nextLong();//x
            num[i][4] = input.nextLong();//y
        }

        for(int i=0;i<n;i++)
        {
            long a=num[i][0],b=num[i][1],c=num[i][2],x=num[i][3],y=num[i][4];
            visit[i] = true;
            if(x<=t)
                dfs(i,t-x,Math.max(c,a-x*b-y*p));
            else
                dfs(i,t,0);
            visit[i] = false;
        }
        System.out.println(max);
    }
    public static void dfs(int k,long T,long w)
    {
        max = Math.max(max,w);
        if(k<n)
        {
            for(int i=0;i<n;i++)
            {
                long a=num[i][0],b=num[i][1],c=num[i][2],x=num[i][3],y=num[i][4];
                if(!visit[i])
                {
                    if(x<=T)
                    {
                        visit[i] = true;
                        dfs(i,T-x,w+Math.max(c,a-(t-T+x)*b-y*p));
                        visit[i] = false;
                    }
                    else
                    {
                        visit[i] = true;
                        dfs(i,T,w);
                        visit[i] = false;
                    }

                }
            }
            max = Math.max(max,w);
        }

    }
}
"
160,C,Java,61585005,2023-03-27 21:37:29,牛客421415850号,答案错误,"import java.util.*;

public class Main {
    public static long sum;
    public static int n,p,t;
    public static void main(String[] args) {

        Scanner sc=new Scanner(System.in);
        n=sc.nextInt();
        t=sc.nextInt();
        p=sc.nextInt();
        int[][] a=new int[n][6];
        for(int i=0;i<n;i++){
            for(int j=0;j<5;j++){
                a[i][j]=sc.nextInt();
            }
        }
        dfs(0l,0,a,1);
        System.out.println(sum);
    }
    static void dfs(long fs,int sj,int[][] a,int step){
        if(step==n+1){
            if(fs>sum)
                sum=fs;
            return;
        }
        for(int i=0;i<n;i++){
            if(a[i][5]==0&&(sj+a[i][3])<=t){
                a[i][5]=1;
                sj+=a[i][3];
                fs=fs+Math.max(a[i][2],a[i][0]-sj*a[i][1]-a[i][4]*p);
                dfs(fs,sj,a,step+1);
                sj-=a[i][3];
                fs-=Math.max(a[i][2],a[i][0]-sj*a[i][1]-a[i][4]*p);
                a[i][5]=0;
            }
            if((sj+a[i][3])>t){
                dfs(fs,sj,a,step+1);
            }
        }
    }
}
"
161,C,Java,61585085,2023-03-27 21:42:11,牛客421415850号,答案错误,"import java.util.*;

public class Main {
    public static long sum;
    public static int n,p,t;
    public static void main(String[] args) {

        Scanner sc=new Scanner(System.in);
        n=sc.nextInt();
        t=sc.nextInt();
        p=sc.nextInt();
        int[][] a=new int[n][6];
        for(int i=0;i<n;i++){
            for(int j=0;j<5;j++){
                a[i][j]=sc.nextInt();
            }
        }
        dfs(0l,0,a);
        System.out.println(sum);
    }
    static void dfs(long fs,int sj,int[][] a){
        sum=Math.max(fs,sum);
        for(int i=0;i<n;i++){
            if(a[i][5]==0&&(sj+a[i][3])<=t){
                a[i][5]=1;
                sj+=a[i][3];
                fs=fs+Math.max(a[i][2],a[i][0]-sj*a[i][1]-a[i][4]*p);
                dfs(fs,sj,a);
                sj-=a[i][3];
                fs-=Math.max(a[i][2],a[i][0]-sj*a[i][1]-a[i][4]*p);
                a[i][5]=0;
            }
        }
    }
}
"
162,C,Java,61585086,2023-03-27 21:42:19,牛客421415850号,答案错误,"import java.util.*;

public class Main {
    public static long sum;
    public static int n,p,t;
    public static void main(String[] args) {

        Scanner sc=new Scanner(System.in);
        n=sc.nextInt();
        t=sc.nextInt();
        p=sc.nextInt();
        int[][] a=new int[n][6];
        for(int i=0;i<n;i++){
            for(int j=0;j<5;j++){
                a[i][j]=sc.nextInt();
            }
        }
        dfs(0l,0,a);
        System.out.println(sum);
    }
    static void dfs(long fs,int sj,int[][] a){
        sum=Math.max(fs,sum);
        for(int i=0;i<n;i++){
            if(a[i][5]==0&&(sj+a[i][3])<=t){
                a[i][5]=1;
                sj+=a[i][3];
                fs=fs+Math.max(a[i][2],a[i][0]-sj*a[i][1]-a[i][4]*p);
                dfs(fs,sj,a);
                sj-=a[i][3];
                fs-=Math.max(a[i][2],a[i][0]-sj*a[i][1]-a[i][4]*p);
                a[i][5]=0;
            }
        }
    }
}
"
163,C,Java,61585150,2023-03-27 21:45:41,牛客421415850号,答案错误,"import java.util.*;

public class Main {
    public static long sum;
    public static int n,p,t;
    public static void main(String[] args) {

        Scanner sc=new Scanner(System.in);
        n=sc.nextInt();
        t=sc.nextInt();
        p=sc.nextInt();
        int[][] a=new int[n][6];
        for(int i=0;i<n;i++){
            for(int j=0;j<5;j++){
                a[i][j]=sc.nextInt();
            }
        }
        dfs(0l,0,a);
        System.out.println(sum);
    }
    static void dfs(long fs,int sj,int[][] a){
        sum=Math.max(fs,sum);
        for(int i=0;i<n;i++){
            if(a[i][5]==0&&(sj+a[i][3])<=t){
                a[i][5]=1;
                fs=fs+Math.max(a[i][2],a[i][0]-sj*a[i][1]-a[i][4]*p);
                dfs(fs,sj+a[i][3],a);
                fs-=Math.max(a[i][2],a[i][0]-sj*a[i][1]-a[i][4]*p);
                a[i][5]=0;
            }
        }
    }
}
"
164,C,Java,61585152,2023-03-27 21:45:46,牛客421415850号,答案错误,"import java.util.*;

public class Main {
    public static long sum;
    public static int n,p,t;
    public static void main(String[] args) {

        Scanner sc=new Scanner(System.in);
        n=sc.nextInt();
        t=sc.nextInt();
        p=sc.nextInt();
        int[][] a=new int[n][6];
        for(int i=0;i<n;i++){
            for(int j=0;j<5;j++){
                a[i][j]=sc.nextInt();
            }
        }
        dfs(0l,0,a);
        System.out.println(sum);
    }
    static void dfs(long fs,int sj,int[][] a){
        sum=Math.max(fs,sum);
        for(int i=0;i<n;i++){
            if(a[i][5]==0&&(sj+a[i][3])<=t){
                a[i][5]=1;
                fs=fs+Math.max(a[i][2],a[i][0]-sj*a[i][1]-a[i][4]*p);
                dfs(fs,sj+a[i][3],a);
                fs-=Math.max(a[i][2],a[i][0]-sj*a[i][1]-a[i][4]*p);
                a[i][5]=0;
            }
        }
    }
}
"
165,C,Java,61585237,2023-03-27 21:50:07,牛客421415850号,答案错误,"import java.util.*;

public class Main {
    public static long sum;
    public static int n,p,t;
    public static void main(String[] args) {

        Scanner sc=new Scanner(System.in);
        n=sc.nextInt();
        t=sc.nextInt();
        p=sc.nextInt();
        int[][] a=new int[n][6];
        for(int i=0;i<n;i++){
            for(int j=0;j<5;j++){
                a[i][j]=sc.nextInt();
            }
        }
        dfs(0l,0,a);
        System.out.println(sum);
    }
    static void dfs(long fs,int sj,int[][] a){
        sum=Math.max(fs,sum);
        for(int i=0;i<n;i++){
            if(a[i][5]==0&&(sj+a[i][3])<=t){
                a[i][5]=1;
                sj+=a[i][3];
                fs=fs+Math.max(a[i][2],a[i][0]-sj*a[i][1]-a[i][4]*p);
                dfs(fs,sj+a[i][3],a);
                fs-=Math.max(a[i][2],a[i][0]-sj*a[i][1]-a[i][4]*p);
                a[i][5]=0;
                sj-=a[i][3];
            }
        }
    }
}
"
166,C,Java,61585257,2023-03-27 21:51:00,牛客421415850号,答案正确,"import java.util.*;

public class Main {
    public static long sum;
    public static int n,p,t;
    public static void main(String[] args) {

        Scanner sc=new Scanner(System.in);
        n=sc.nextInt();
        t=sc.nextInt();
        p=sc.nextInt();
        int[][] a=new int[n][6];
        for(int i=0;i<n;i++){
            for(int j=0;j<5;j++){
                a[i][j]=sc.nextInt();
            }
        }
        dfs(0l,0,a);
        System.out.println(sum);
    }
    static void dfs(long fs,int sj,int[][] a){
        sum=Math.max(fs,sum);
        for(int i=0;i<n;i++){
            if(a[i][5]==0&&(sj+a[i][3])<=t){
                a[i][5]=1;
                sj+=a[i][3];
                fs=fs+Math.max(a[i][2],a[i][0]-sj*a[i][1]-a[i][4]*p);
                dfs(fs,sj,a);
                fs-=Math.max(a[i][2],a[i][0]-sj*a[i][1]-a[i][4]*p);
                a[i][5]=0;
                sj-=a[i][3];
            }
        }
    }
}
"
167,C,Java,61587851,2023-03-28 10:07:49,人工智能3211江海洋,答案正确,"import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.flush();
        out.close();
    }

    static class TaskA {
        class Node{
            long a,b,c,x,y;
            public Node(){};
            public Node(long a, long b, long c, long x, long y) {
                this.a = a;
                this.b = b;
                this.c = c;
                this.x = x;
                this.y = y;
            }
        }
        int[] vis = new int[10];
        int n;
        long t,p,ans;
        Node[] nn;
        void dfs(long sum,long time,int cnt){
//            System.out.println(sum+"" ""+time+"" ""+cnt);
            ans = Math.max(ans,sum);
            for (int i = 0; i < n; i++) {
                if(vis[i]==0&&time+nn[i].x<=t){
                    vis[i]=1;
                    long tmp = Math.max(nn[i].c,nn[i].a-(time+nn[i].x)*nn[i].b-nn[i].y*p);
                    dfs(sum+tmp,time+nn[i].x,cnt+1);
                    vis[i]=0;
                }
            }
        }
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            n = in.nextInt();
            t = in.nextLong();
            p = in.nextLong();

            nn = new Node[n];
            ans = 0;
            for (int i = 0; i < n; i++) {
                long a = in.nextLong();
                long b = in.nextLong();
                long c = in.nextLong();
                long x = in.nextLong();
                long y = in.nextLong();
                nn[i] = new Node(a,b,c,x,y);
            }
            for (int i = 0; i < n; i++) {
                for (int j = 0; j < 10; j++) {
                    vis[j]=0;
                }
                long t = Math.max(nn[i].c,nn[i].a-nn[i].x*nn[i].b-nn[i].y*p);
                vis[i]=1;
                dfs(t,nn[i].x,1);
            }
            System.out.println(ans);


        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        boolean hasNext() {
            while (tokenizer == null || !tokenizer.hasMoreElements()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e) {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }

    }
}
"
168,C,Java,61588499,2023-03-28 11:31:33,一只往上爬的蚂蚁,答案正确,"import java.util.*;
public class Main{
    static int n,t,p;
    static long ans = 0;
    static Item[] items = new Item[15];
    static boolean[] booleans = new boolean[15];
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        n = in.nextInt();
        t = in.nextInt();
        p = in.nextInt();
        for(int i = 0;i < n;i++) {
            int val = in.nextInt();
            int timex = in.nextInt();
            int score = in.nextInt();
            int time = in.nextInt();
            int times = in.nextInt();
            items[i] = new Item(val,timex,score,time,times);
        }
        dfs(0,0);
        System.out.println(ans);
    }
    static class Item {
        int val;
        int timex;
        int score;
        int time;
        int times;

        public Item(int val, int timex, int score, int time, int times) {
            this.val = val;
            this.timex = timex;
            this.score = score;
            this.time = time;
            this.times = times;
        }
    }
    public static void dfs(long time, long score) {
        ans = Math.max(ans,score);
        for(int i = 0;i < n;i++) {
            if(!booleans[i] && items[i].time+time <= t) {
                booleans[i] = true;
                long x = Math.max(items[i].score,items[i].val-((items[i].time+time)*items[i].timex)-(items[i].times*p));
                dfs(time+items[i].time,x+score);
                booleans[i] = false;
            }
        }
    }
}"
169,C,Java,61588595,2023-03-28 11:48:59,一只往上爬的蚂蚁,编译错误,"{""SPECIAL_TM_FH_MEMO_JSON_TAG"":""SPECIAL_TM_FH_MEMO_JSON_TAG"",""stderr"":""Main.java:7: error: cannot find symbol\n    public static void main(String[] args) throws IOException {\n                                                  ^\n  symbol:   class IOException\n  location: class Main\nMain.java:8: error: cannot find symbol\n        StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));\n        ^\n  symbol:   class StreamTokenizer\n  location: class Main\nMain.java:8: error: cannot find symbol\n        StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));\n                                 ^\n  symbol:   class StreamTokenizer\n  location: class Main\nMain.java:8: error: cannot find symbol\n        StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));\n                                                     ^\n  symbol:   class BufferedReader\n  location: class Main\nMain.java:8: error: cannot find symbol\n        StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));\n                                                                        ^\n  symbol:   class InputStreamReader\n  location: class Main\n5 errors""}

import java.util.*;
public class Main{
    static int n,t,p;
    static long ans = 0;
    static Item[] items = new Item[15];
    static boolean[] booleans = new boolean[15];
    public static void main(String[] args) throws IOException {
        StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
        in.nextToken();
        n = (int) in.nval;
        in.nextToken();
        t = (int) in.nval;
        in.nextToken();
        p = (int) in.nval;
        for(int i = 0;i < n;i++) {
            in.nextToken();
            int val = (int) in.nval;
            in.nextToken();
            int timex = (int) in.nval;
            in.nextToken();
            int score = (int) in.nval;
            in.nextToken();
            int time = (int) in.nval;
            in.nextToken();
            int times = (int) in.nval;
            items[i] = new Item(val,timex,score,time,times);
        }
        dfs(0,0);
        System.out.println(ans);
    }
    static class Item {
        int val;
        int timex;
        int score;
        int time;
        int times;

        public Item(int val, int timex, int score, int time, int times) {
            this.val = val;
            this.timex = timex;
            this.score = score;
            this.time = time;
            this.times = times;
        }
    }
    public static void dfs(long time, long score) {
        ans = Math.max(ans,score);
        for(int i = 0;i < n;i++) {
            if(!booleans[i] && items[i].time+time <= t) {
                booleans[i] = true;
                long x = Math.max(items[i].score,items[i].val-((items[i].time+time)*items[i].timex)-(items[i].times*p));
                dfs(time+items[i].time,x+score);
                booleans[i] = false;
            }
        }
    }
}"
170,C,Java,61588610,2023-03-28 11:52:05,一只往上爬的蚂蚁,答案正确,"import java.io.*;
public class Main {
    static int n,t,p;
    static long ans = 0;
    static Item[] items = new Item[15];
    static boolean[] booleans = new boolean[15];
    public static void main(String[] args) throws IOException {
        StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
        in.nextToken();
        n = (int) in.nval;
        in.nextToken();
        t = (int) in.nval;
        in.nextToken();
        p = (int) in.nval;
        for(int i = 0;i < n;i++) {
            in.nextToken();
            int val = (int) in.nval;
            in.nextToken();
            int timex = (int) in.nval;
            in.nextToken();
            int score = (int) in.nval;
            in.nextToken();
            int time = (int) in.nval;
            in.nextToken();
            int times = (int) in.nval;
            items[i] = new Item(val,timex,score,time,times);
        }
        dfs(0,0);
        System.out.println(ans);
    }
    static class Item {
        int val;
        int timex;
        int score;
        int time;
        int times;

        public Item(int val, int timex, int score, int time, int times) {
            this.val = val;
            this.timex = timex;
            this.score = score;
            this.time = time;
            this.times = times;
        }
    }
    public static void dfs(long time, long score) {
        ans = Math.max(ans,score);
        for(int i = 0;i < n;i++) {
            if(!booleans[i] && items[i].time+time <= t) {
                booleans[i] = true;
                long x = Math.max(items[i].score,items[i].val-((items[i].time+time)*items[i].timex)-(items[i].times*p));
                dfs(time+items[i].time,x+score);
                booleans[i] = false;
            }
        }
    }
}"
171,C,Java,61609916,2023-03-29 20:06:07,一个男人_,答案正确,"import java.io.*;
import java.util.*;

public class Main {
    static StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    static BufferedReader bin = new BufferedReader(new InputStreamReader(System.in));
    static final int N = 10;
    static int n, t, p;
    static long res = 0;
    static edge[] edges = new edge[N];
    static boolean[] st = new boolean[N];
    
    static int cin() throws IOException {
        in.nextToken();
        return (int) in.nval;
    }
    
    static void dfs(long time, long score) {
        res = Math.max(res, score);
        for (int i = 0; i < n; i ++ ) {
            if (!st[i] && (time + edges[i].x <= t)) {
                st[i] = true;
                long tmp = Math.max(edges[i].c, edges[i].a - ((edges[i].x + time) * edges[i].b) - ((long) edges[i].y * p));
                dfs (time + edges[i].x, tmp + score);
                st[i] = false;
            }
        }
    }
    
    public static void main(String[] args) throws IOException {
        n = cin(); t = cin(); p = cin();
        for (int i = 0; i < n; i ++ ) {
            int a, b, c, x, y;
            a = cin(); b = cin(); c = cin(); x = cin(); y = cin();
//            res += Math.max(c, a - (x * b) - (y * p));
            edges[i] = new edge(a, b, c, x, y);
        }
        dfs(0, 0);
        out.println(res);
        out.close();
    }
}
class edge{
    int a, b, c, x, y;

    public edge(int a, int b, int c, int x, int y) {
        this.a = a;
        this.b = b;
        this.c = c;
        this.x = x;
        this.y = y;
    }
}"
172,C,Java,61617632,2023-03-30 15:38:56,arT_hang,答案错误,"import java.io.*;

public class Main {

    public static StreamTokenizer in =
            new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in), 32768));
    public static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));

    static int n, t, p;
    static int[] a, b, c, x, y;

    public static void main(String[] args) throws IOException {
        in.nextToken();
        n = (int) in.nval;
        in.nextToken();
        t = (int) in.nval;
        in.nextToken();
        p = (int) in.nval;

        a = new int[n];
        b = new int[n];
        c = new int[n];
        x = new int[n];
        y = new int[n];

        int[] temp = new int[5];
        for (int i = 0; i < n; i++){
            in.nextToken();
            a[i] = (int) in.nval;
            in.nextToken();
            b[i] = (int) in.nval;
            in.nextToken();
            c[i] = (int) in.nval;
            in.nextToken();
            x[i] = (int) in.nval;
            in.nextToken();
            y[i] = (int) in.nval;
        }
        out.print(dfs(0, 0, new boolean[n]));
        out.flush();
    }
    static int dfs(int f, int time, boolean[] used){
        if (f == n){
            return 0;
        }

        int max = 0;
        for (int i = 0; i < n; i++){
            if (!used[i] && time + x[i] <= t){
                boolean[] bool = used.clone();
                bool[i] = true;
                int s = Math.max(c[i], a[i] - (time + x[i]) * b[i] - y[i] * p);
                max = Math.max(max, dfs(f + 1, time + x[i], bool) + s);
            }
        }

        return max;
    }

}"
173,C,Java,61617751,2023-03-30 15:51:04,arT_hang,答案错误,"import java.io.*;

public class Main {

    public static StreamTokenizer in =
            new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in), 32768));
    public static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));

    static int n, t, p;
    static int[] a, b, c, x, y;

    public static void main(String[] args) throws IOException {
        in.nextToken();
        n = (int) in.nval;
        in.nextToken();
        t = (int) in.nval;
        in.nextToken();
        p = (int) in.nval;

        a = new int[n];
        b = new int[n];
        c = new int[n];
        x = new int[n];
        y = new int[n];

        int[] temp = new int[5];
        for (int i = 0; i < n; i++){
            in.nextToken();
            a[i] = (int) in.nval;
            in.nextToken();
            b[i] = (int) in.nval;
            in.nextToken();
            c[i] = (int) in.nval;
            in.nextToken();
            x[i] = (int) in.nval;
            in.nextToken();
            y[i] = (int) in.nval;
        }
        out.print(dfs(0, 0, new boolean[n]));
        out.flush();
    }
    static int dfs(int f, int time, boolean[] used){
        if (f == n){
            return 0;
        }
        int max = 0;
        for (int i = 0; i < n; i++){
            if (!used[i] && time + x[i] <= t){
                used[i] = true;
                int s = Math.max(c[i], a[i] - (time + x[i]) * b[i] - y[i] * p);
                max = Math.max(max, dfs(f + 1, time + x[i], used) + s);
            }
        }
        return max;
    }
}"
174,C,Java,61617785,2023-03-30 15:55:30,arT_hang,答案正确,"import java.io.*;

public class Main {

    public static StreamTokenizer in =
            new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in), 32768));
    public static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));

    static int n, t, p;
    static int[] a, b, c, x, y;

    public static void main(String[] args) throws IOException {
        in.nextToken();
        n = (int) in.nval;
        in.nextToken();
        t = (int) in.nval;
        in.nextToken();
        p = (int) in.nval;

        a = new int[n];
        b = new int[n];
        c = new int[n];
        x = new int[n];
        y = new int[n];

        int[] temp = new int[5];
        for (int i = 0; i < n; i++){
            in.nextToken();
            a[i] = (int) in.nval;
            in.nextToken();
            b[i] = (int) in.nval;
            in.nextToken();
            c[i] = (int) in.nval;
            in.nextToken();
            x[i] = (int) in.nval;
            in.nextToken();
            y[i] = (int) in.nval;
        }
        out.print(dfs(0, 0, new boolean[n]));
        out.flush();
    }
    static long dfs(int f, int time, boolean[] used){
        if (f == n){
            return 0;
        }
        long max = 0;
        for (int i = 0; i < n; i++){
            if (!used[i] && time + x[i] <= t){
                boolean[] bool = used.clone();
                bool[i] = true;
                int s = Math.max(c[i], a[i] - (time + x[i]) * b[i] - y[i] * p);
                max = Math.max(max, dfs(f + 1, time + x[i], bool) + s);
            }
        }
        return max;
    }
}"
175,C,Java,61625312,2023-03-31 10:20:12,慢热的追梦人在加班,答案错误,"import java.util.Scanner;
public class Main {
    static int res = 0;
    static int totalTime;
    static int punish;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        totalTime = scanner.nextInt();
        punish = scanner.nextInt();
        int[][] title = new int[n][5];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < 5; j++) {
                title[i][j] = scanner.nextInt();
            }
        }
        dfs(title, 0, 0, 0);
        System.out.println(res);
    }

    private static void dfs(int[][] title, int start, int score, int time) {
        if (start == title.length) {
            res = Math.max(res, score);
            return;
        }
        res = Math.max(res, score);
        for (int i = start; i < title.length; i++) {
            if (time + title[start][3] > totalTime) continue;
            time = time + title[start][3];
            int curScore = title[start][0] - time * title[start][1] - title[start][4] * punish;
            if (curScore < title[start][2]) curScore = title[start][2];
            dfs(title, start + 1, score + curScore, time);
            time = time - title[start][3];
        }
    }
}"
176,C,Java,61625339,2023-03-31 10:25:59,慢热的追梦人在加班,答案错误,"import java.util.Scanner;
public class Main {
    static int res = 0;
    static int totalTime;
    static int punish;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        totalTime = scanner.nextInt();
        punish = scanner.nextInt();
        int[][] title = new int[n][5];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < 5; j++) {
                title[i][j] = scanner.nextInt();
            }
        }
        dfs(title, 0, 0, 0);
        System.out.println(res);
    }

    private static void dfs(int[][] title, int start, int score, int time) {
        if (start == title.length) {
            res = Math.max(res, score);
            return;
        }
        res = Math.max(res, score);
        for (int i = start; i < title.length; i++) {
            if (time + title[i][3] > totalTime) continue;
            time = time + title[i][3];
            int curScore = title[i][0] - time * title[i][1] - title[i][4] * punish;
            if (curScore < title[i][2]) curScore = title[i][2];
            dfs(title, i + 1, score + curScore, time);
            time = time - title[i][3];
        }
    }
}"
177,C,Java,61625350,2023-03-31 10:27:52,慢热的追梦人在加班,答案错误,"import java.util.Scanner;
public class Main {
    static int res = 0;
    static int totalTime;
    static int punish;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        totalTime = scanner.nextInt();
        punish = scanner.nextInt();
        int[][] title = new int[n][5];
        boolean[] visited = new boolean[n];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < 5; j++) {
                title[i][j] = scanner.nextInt();
            }
        }
        dfs(title, visited, 0, 0);
        System.out.println(res);
    }

    private static void dfs(int[][] title, boolean[] visited, int score, int time) {
        res = Math.max(res, score);
        for (int i = 0; i < title.length; i++) {
            if (time + title[i][3] > totalTime || visited[i]) continue;
            time = time + title[i][3];
            visited[i] = true;
            int curScore = title[i][0] - time * title[i][1] - title[i][4] * punish;
            if (curScore < title[i][2]) curScore = title[i][2];
            dfs(title, visited, score + curScore, time);
            time = time - title[i][3];
            visited[i] = false;
        }
    }
}"
178,C,Java,61625380,2023-03-31 10:32:57,慢热的追梦人在加班,答案错误,"import java.util.Scanner;
public class Main {
    static int res = 0;
    static int totalTime;
    static int punish;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        totalTime = scanner.nextInt();
        punish = scanner.nextInt();
        int[][] title = new int[n][5];
        boolean[] visited = new boolean[n];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < 5; j++) {
                title[i][j] = scanner.nextInt();
            }
        }
        dfs(title, visited, 0, 0);
        System.out.println(res);
    }

    private static void dfs(int[][] title, boolean[] visited, int score, int time) {
        if (time > totalTime) return;
        res = Math.max(res, score);
        for (int i = 0; i < title.length; i++) {
            if (visited[i]) continue;
            time = time + title[i][3];
            visited[i] = true;
            int curScore = title[i][0] - time * title[i][1] - title[i][4] * punish;
            if (curScore < title[i][2]) curScore = title[i][2];
            dfs(title, visited, score + curScore, time);
            time = time - title[i][3];
            visited[i] = false;
        }
    }
}"
179,C,Java,61625402,2023-03-31 10:35:10,慢热的追梦人在加班,答案错误,"import java.util.Scanner;
import java.util.Arrays;
public class Main {
    static int res = 0;
    static int totalTime;
    static int punish;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        totalTime = scanner.nextInt();
        punish = scanner.nextInt();
        int[][] title = new int[n][5];
        boolean[] visited = new boolean[n];
        Arrays.fill(visited, false);
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < 5; j++) {
                title[i][j] = scanner.nextInt();
            }
        }
        dfs(title, visited, 0, 0);
        System.out.println(res);
    }

    private static void dfs(int[][] title, boolean[] visited, int score, int time) {
        if (time > totalTime) return;
        res = Math.max(res, score);
        for (int i = 0; i < title.length; i++) {
            if (visited[i]) continue;
            time = time + title[i][3];
            visited[i] = true;
            int curScore = title[i][0] - time * title[i][1] - title[i][4] * punish;
            if (curScore < title[i][2]) curScore = title[i][2];
            dfs(title, visited, score + curScore, time);
            time = time - title[i][3];
            visited[i] = false;
        }
    }
}"
180,C,Java,61625452,2023-03-31 10:41:33,慢热的追梦人在加班,答案错误,"import java.util.Scanner;
import java.util.Arrays;
public class Main {
    static int res = 0;
    static int totalTime;
    static int punish;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        totalTime = scanner.nextInt();
        punish = scanner.nextInt();
        int[][] title = new int[n][5];
        boolean[] visited = new boolean[n];
        Arrays.fill(visited, false);
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < 5; j++) {
                title[i][j] = scanner.nextInt();
            }
        }
        dfs(title, visited, 0, 0);
        System.out.println(res);
    }

    private static void dfs(int[][] title, boolean[] visited, int score, int time) {
        if (time > totalTime) return;
        if (score > res) {
            res = score;
        }
        for (int i = 0; i < title.length; i++) {
            if (visited[i]) continue;
            time = time + title[i][3];
            visited[i] = true;
            int curScore = title[i][0] - time * title[i][1] - title[i][4] * punish;
            if (curScore < title[i][2]) curScore = title[i][2];
            dfs(title, visited, score + curScore, time);
            time = time - title[i][3];
            visited[i] = false;
        }
    }
}"
181,C,Java,61625465,2023-03-31 10:43:48,慢热的追梦人在加班,答案正确,"import java.util.Scanner;
import java.util.Arrays;
public class Main {
   static long res = 0;
    static long totalTime;
    static long punish;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        totalTime = scanner.nextInt();
        punish = scanner.nextInt();
        int[][] title = new int[n][5];
        boolean[] visited = new boolean[n];
        Arrays.fill(visited, false);
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < 5; j++) {
                title[i][j] = scanner.nextInt();
            }
        }
        dfs(title, visited, 0, 0);
        System.out.println(res);
    }

    private static void dfs(int[][] title, boolean[] visited, long score, long time) {
        if (time > totalTime) return;
        if (score > res) {
            res = score;
        }
        for (int i = 0; i < title.length; i++) {
            if (visited[i]) continue;
            time = time + title[i][3];
            visited[i] = true;
            long curScore = title[i][0] - time * title[i][1] - title[i][4] * punish;
            if (curScore < title[i][2]) curScore = title[i][2];
            dfs(title, visited, score + curScore, time);
            time = time - title[i][3];
            visited[i] = false;
        }
    }
}"
182,C,Java,61634681,2023-04-01 02:10:37,不想去设计院,答案错误,"import java.util.*;

public class Main{
    static int n;
    static int t;
    static int p;
    static int[][] questions;
    static int result;
    static boolean[] visited;

    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt();
        t = sc.nextInt();
        p = sc.nextInt();
        
        questions = new int[n][5];
        for (int i = 0; i < n; i++){
            for (int j = 0; j < 5; j++){
                questions[i][j] = sc.nextInt();
            }
        }
        result = 0;
        int curSum = 0;
        visited = new boolean[n];
        backrtace(curSum, 0);
        System.out.println(result);
    }

    public static void backrtace(int curSum, int curTime){
        if (curTime > t) return;
        if (curSum > result) result = curSum;
        
        for (int i = 0; i < n; i++){
            if (visited[i]) continue;
            visited[i] = true;
            
            int[] question = questions[i];
            int sum1 = question[2];
            int sum2 = question[0] - question[1] * (curTime + question[3]) - p * question[4];
            int sum = Math.max(sum1, sum2);
            backrtace(curSum + sum, curTime + question[3]);
            visited[i] = false;
        }
    }
}"
183,C,Java,61634682,2023-04-01 02:11:48,不想去设计院,答案错误,"import java.util.*;

public class Main{
    static int n;
    static int t;
    static int p;
    static int[][] questions;
    static long result;
    static boolean[] visited;

    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt();
        t = sc.nextInt();
        p = sc.nextInt();
        
        questions = new int[n][5];
        for (int i = 0; i < n; i++){
            for (int j = 0; j < 5; j++){
                questions[i][j] = sc.nextInt();
            }
        }
        result = 0;
        int curSum = 0;
        visited = new boolean[n];
        backrtace(curSum, 0);
        System.out.println(result);
    }

    public static void backrtace(int curSum, int curTime){
        if (curTime > t) return;
        if (curSum > result) result = curSum;
        
        for (int i = 0; i < n; i++){
            if (visited[i]) continue;
            visited[i] = true;
            
            int[] question = questions[i];
            int sum1 = question[2];
            int sum2 = question[0] - question[1] * (curTime + question[3]) - p * question[4];
            int sum = Math.max(sum1, sum2);
            backrtace(curSum + sum, curTime + question[3]);
            visited[i] = false;
        }
    }
}"
184,C,Java,61634686,2023-04-01 02:15:15,不想去设计院,答案正确,"import java.util.*;

public class Main{
    static int n;
    static long t;
    static long p;
    static long[][] questions;
    static long result;
    static boolean[] visited;

    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt();
        t = sc.nextInt();
        p = sc.nextInt();
        
        questions = new long[n][5];
        for (int i = 0; i < n; i++){
            for (int j = 0; j < 5; j++){
                questions[i][j] = sc.nextInt();
            }
        }
        result = 0;
        int curSum = 0;
        visited = new boolean[n];
        backrtace(curSum, 0);
        System.out.println(result);
    }

    public static void backrtace(long curSum, long curTime){
        if (curTime > t) return;
        if (curSum > result) result = curSum;
        
        for (int i = 0; i < n; i++){
            if (visited[i]) continue;
            visited[i] = true;
            
            long[] question = questions[i];
            long sum1 = question[2];
            long sum2 = question[0] - question[1] * (curTime + question[3]) - p * question[4];
            long sum = Math.max(sum1, sum2);
            backrtace(curSum + sum, curTime + question[3]);
            visited[i] = false;
        }
    }
}"
185,C,Java,61720455,2023-04-02 15:55:59,范宗林,答案错误,"import java.io.*;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.List;

public class Main {
    public static BufferedReader ins = new BufferedReader(new InputStreamReader(System.in));
    public static StreamTokenizer in = new StreamTokenizer(ins);
    public static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    public static int MAX = Integer.MAX_VALUE;

    public static void main(String[] args) throws IOException {
        in.nextToken();
        int n = (int) in.nval;
        in.nextToken();
        int t = (int) in.nval;
        in.nextToken();
        int p = (int) in.nval;
        List<Ti> list = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            in.nextToken();
            int a = (int) in.nval;
            in.nextToken();
            int b = (int) in.nval;
            in.nextToken();
            int c = (int) in.nval;
            in.nextToken();
            int x = (int) in.nval;
            in.nextToken();
            int y = (int) in.nval;
            int defen = Math.max(c, a - x * b - y * p);
            Double avg = defen * 1.0 / x;
            list.add(new Ti(a,b,c,x,y,defen,avg));
        }
        list.sort((o1, o2) -> o2.avg.compareTo(o1.avg));
        int sum = 0;
        for (int i = 0; i < list.size(); i++) {
            Ti ti = list.get(i);
            if (t == 0) {
                break;
            } else if (t - ti.x >= 0) {
                sum += ti.defen;
                t -= ti.x;
            }
        }
        out.println(sum);
        out.flush();
        out.close();
    }
    public static class Ti{
        private int a;
        private int b;
        private int c;
        private int x;
        private int y;
        private int defen;
        private Double avg;


        public Double getAvg() {
            return avg;
        }

        public void setAvg(Double avg) {
            this.avg = avg;
        }

        public int getA() {
            return a;
        }

        public void setA(int a) {
            this.a = a;
        }

        public int getB() {
            return b;
        }

        public void setB(int b) {
            this.b = b;
        }

        public int getC() {
            return c;
        }

        public void setC(int c) {
            this.c = c;
        }

        public int getX() {
            return x;
        }

        public void setX(int x) {
            this.x = x;
        }

        public int getY() {
            return y;
        }

        public void setY(int y) {
            this.y = y;
        }

        public int getDefen() {
            return defen;
        }

        public void setDefen(int defen) {
            this.defen = defen;
        }


        public Ti(int a, int b, int c, int x, int y, int defen, Double avg) {
            this.a = a;
            this.b = b;
            this.c = c;
            this.x = x;
            this.y = y;
            this.defen = defen;
            this.avg = avg;
        }

        public Ti() {
        }
    }
}
"
186,C,Java,61720580,2023-04-02 15:59:33,范宗林,答案错误,"import java.io.*;
import java.util.ArrayList;
import java.util.List;

public class Main {
    public static BufferedReader ins = new BufferedReader(new InputStreamReader(System.in));
    public static StreamTokenizer in = new StreamTokenizer(ins);
    public static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    public static int MAX = Integer.MAX_VALUE;

    public static void main(String[] args) throws IOException {
        in.nextToken();
        int n = (int) in.nval;
        in.nextToken();
        int t = (int) in.nval;
        in.nextToken();
        int p = (int) in.nval;
        List<Ti> list = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            in.nextToken();
            int a = (int) in.nval;
            in.nextToken();
            int b = (int) in.nval;
            in.nextToken();
            int c = (int) in.nval;
            in.nextToken();
            int x = (int) in.nval;
            in.nextToken();
            int y = (int) in.nval;
            int defen = Math.max(c, a - x * b - y * p);
            Double avg = defen * 1.0 / x;
            list.add(new Ti(a,b,c,x,y,defen,avg));
        }
        list.sort((o1, o2) -> o2.avg.compareTo(o1.avg));
        int sum = 0;
        int now = 0;
        for (int i = 0; i < list.size(); i++) {
            Ti ti = list.get(i);
            if (t == 0) {
                break;
            } else if (t - ti.x >= 0) {
                t -= ti.x;
                now += ti.x;
                int defen = Math.max(ti.c, ti.a - now * ti.b - ti.y * p);
                sum += defen;
            }
        }
        out.println(sum);
        out.flush();
        out.close();
    }
    public static class Ti{
        private int a;
        private int b;
        private int c;
        private int x;
        private int y;
        private int defen;
        private Double avg;


        public Double getAvg() {
            return avg;
        }

        public void setAvg(Double avg) {
            this.avg = avg;
        }

        public int getA() {
            return a;
        }

        public void setA(int a) {
            this.a = a;
        }

        public int getB() {
            return b;
        }

        public void setB(int b) {
            this.b = b;
        }

        public int getC() {
            return c;
        }

        public void setC(int c) {
            this.c = c;
        }

        public int getX() {
            return x;
        }

        public void setX(int x) {
            this.x = x;
        }

        public int getY() {
            return y;
        }

        public void setY(int y) {
            this.y = y;
        }

        public int getDefen() {
            return defen;
        }

        public void setDefen(int defen) {
            this.defen = defen;
        }


        public Ti(int a, int b, int c, int x, int y, int defen, Double avg) {
            this.a = a;
            this.b = b;
            this.c = c;
            this.x = x;
            this.y = y;
            this.defen = defen;
            this.avg = avg;
        }

        public Ti() {
        }
    }
}
"
187,C,Java,61720673,2023-04-02 16:03:04,范宗林,答案错误,"import java.io.*;
import java.util.ArrayList;
import java.util.List;

public class Main {
    public static BufferedReader ins = new BufferedReader(new InputStreamReader(System.in));
    public static StreamTokenizer in = new StreamTokenizer(ins);
    public static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    public static int MAX = Integer.MAX_VALUE;

    public static void main(String[] args) throws IOException {
        in.nextToken();
        int n = (int) in.nval;
        in.nextToken();
        int t = (int) in.nval;
        in.nextToken();
        int p = (int) in.nval;
        List<Ti> list = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            in.nextToken();
            int a = (int) in.nval;
            in.nextToken();
            int b = (int) in.nval;
            in.nextToken();
            int c = (int) in.nval;
            in.nextToken();
            int x = (int) in.nval;
            in.nextToken();
            int y = (int) in.nval;
            int defen = Math.max(c, a - x * b - y * p);
            list.add(new Ti(a,b,c,x,y,defen));
        }
        list.sort((o1, o2) -> o2.a - o1.a);
        int sum = 0;
        int now = 0;
        for (int i = 0; i < list.size(); i++) {
            Ti ti = list.get(i);
            if (t == 0) {
                break;
            } else if (t - ti.x >= 0) {
                t -= ti.x;
                now += ti.x;
                int defen = Math.max(ti.c, ti.a - now * ti.b - ti.y * p);
                sum += defen;
            }
        }
        out.println(sum);
        out.flush();
        out.close();
    }
    public static class Ti{
        private int a;
        private int b;
        private int c;
        private int x;
        private int y;
        private int defen;

        public int getA() {
            return a;
        }

        public void setA(int a) {
            this.a = a;
        }

        public int getB() {
            return b;
        }

        public void setB(int b) {
            this.b = b;
        }

        public int getC() {
            return c;
        }

        public void setC(int c) {
            this.c = c;
        }

        public int getX() {
            return x;
        }

        public void setX(int x) {
            this.x = x;
        }

        public int getY() {
            return y;
        }

        public void setY(int y) {
            this.y = y;
        }

        public int getDefen() {
            return defen;
        }

        public void setDefen(int defen) {
            this.defen = defen;
        }


        public Ti(int a, int b, int c, int x, int y, int defen) {
            this.a = a;
            this.b = b;
            this.c = c;
            this.x = x;
            this.y = y;
            this.defen = defen;
        }

        public Ti() {
        }
    }
}
"
188,C,Java,61720739,2023-04-02 16:04:36,范宗林,答案错误,"import java.io.*;
import java.util.ArrayList;
import java.util.List;

public class Main {
    public static BufferedReader ins = new BufferedReader(new InputStreamReader(System.in));
    public static StreamTokenizer in = new StreamTokenizer(ins);
    public static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    public static int MAX = Integer.MAX_VALUE;

    public static void main(String[] args) throws IOException {
        in.nextToken();
        int n = (int) in.nval;
        in.nextToken();
        int t = (int) in.nval;
        in.nextToken();
        int p = (int) in.nval;
        List<Ti> list = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            in.nextToken();
            int a = (int) in.nval;
            in.nextToken();
            int b = (int) in.nval;
            in.nextToken();
            int c = (int) in.nval;
            in.nextToken();
            int x = (int) in.nval;
            in.nextToken();
            int y = (int) in.nval;
            int defen = Math.max(c, a - x * b - y * p);
            list.add(new Ti(a,b,c,x,y,defen));
        }
        list.sort((o1, o2) -> o2.defen - o1.defen);
        int sum = 0;
        int now = 0;
        for (int i = 0; i < list.size(); i++) {
            Ti ti = list.get(i);
            if (t == 0) {
                break;
            } else if (t - ti.x >= 0) {
                t -= ti.x;
                now += ti.x;
                int defen = Math.max(ti.c, ti.a - now * ti.b - ti.y * p);
                sum += defen;
            }
        }
        out.println(sum);
        out.flush();
        out.close();
    }
    public static class Ti{
        private int a;
        private int b;
        private int c;
        private int x;
        private int y;
        private int defen;

        public int getA() {
            return a;
        }

        public void setA(int a) {
            this.a = a;
        }

        public int getB() {
            return b;
        }

        public void setB(int b) {
            this.b = b;
        }

        public int getC() {
            return c;
        }

        public void setC(int c) {
            this.c = c;
        }

        public int getX() {
            return x;
        }

        public void setX(int x) {
            this.x = x;
        }

        public int getY() {
            return y;
        }

        public void setY(int y) {
            this.y = y;
        }

        public int getDefen() {
            return defen;
        }

        public void setDefen(int defen) {
            this.defen = defen;
        }


        public Ti(int a, int b, int c, int x, int y, int defen) {
            this.a = a;
            this.b = b;
            this.c = c;
            this.x = x;
            this.y = y;
            this.defen = defen;
        }

        public Ti() {
        }
    }
}
"
189,C,Java,61722066,2023-04-02 16:47:39,范宗林,答案错误,"import java.io.*;
import java.util.Arrays;

public class Main {
    public static BufferedReader ins = new BufferedReader(new InputStreamReader(System.in));
    public static StreamTokenizer in = new StreamTokenizer(ins);
    public static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    public static int MAX = Integer.MAX_VALUE;
    public static long maxScore = 0;

    public static void main(String[] args) throws IOException {
        in.nextToken();
        int n = (int) in.nval;
        in.nextToken();
        int t = (int) in.nval;
        in.nextToken();
        int p = (int) in.nval;
        int[] a = new int[n];
        int[] b = new int[n];
        int[] c = new int[n];
        int[] x = new int[n];
        int[] y = new int[n];
        for (int i = 0; i < n; i++) {
            in.nextToken();
            a[i] = (int) in.nval;
            in.nextToken();
            b[i] = (int) in.nval;
            in.nextToken();
            c[i] = (int) in.nval;
            in.nextToken();
            x[i] = (int) in.nval;
            in.nextToken();
            y[i] = (int) in.nval;
        }
        boolean[] book = new boolean[n];
        for (int i = 0; i < n; i++) {
            Arrays.fill(book,false);
            if (t >= x[i]) {
                dfs(a,b,c,x,y,book,0,n,t,p,0);
            }
        }
        out.println(maxScore);
        out.flush();
        out.close();
    }
    public static void dfs(int[] a, int[] b, int[] c, int[] x, int[] y, boolean[] book, long nowScore, int n, int t, int p,int time){
        if (nowScore > maxScore) {
            maxScore = nowScore;
            return;
        }
        for (int i = 0; i < n; i++) {
            if (!book[i] && time + x[i] <= t) {
                int score = Math.max(c[i], a[i] - time * b[i] - y[i] * p);
                book[i] = true;
                time += x[i];
                nowScore += score;
                dfs(a,b,c,x,y,book,nowScore,n,t,p,time);
                nowScore -= score;
                time -= x[i];
                book[i] = false;
            }
        }
    }
}
"
190,C,Java,61722093,2023-04-02 16:48:25,范宗林,答案正确,"import java.io.*;
import java.util.Arrays;

public class Main {
    public static BufferedReader ins = new BufferedReader(new InputStreamReader(System.in));
    public static StreamTokenizer in = new StreamTokenizer(ins);
    public static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    public static int MAX = Integer.MAX_VALUE;
    public static long maxScore = 0;

    public static void main(String[] args) throws IOException {
        in.nextToken();
        int n = (int) in.nval;
        in.nextToken();
        int t = (int) in.nval;
        in.nextToken();
        int p = (int) in.nval;
        int[] a = new int[n];
        int[] b = new int[n];
        int[] c = new int[n];
        int[] x = new int[n];
        int[] y = new int[n];
        for (int i = 0; i < n; i++) {
            in.nextToken();
            a[i] = (int) in.nval;
            in.nextToken();
            b[i] = (int) in.nval;
            in.nextToken();
            c[i] = (int) in.nval;
            in.nextToken();
            x[i] = (int) in.nval;
            in.nextToken();
            y[i] = (int) in.nval;
        }
        boolean[] book = new boolean[n];
        for (int i = 0; i < n; i++) {
            Arrays.fill(book,false);
            if (t >= x[i]) {
                dfs(a,b,c,x,y,book,0,n,t,p,0);
            }
        }
        out.println(maxScore);
        out.flush();
        out.close();
    }
    public static void dfs(int[] a, int[] b, int[] c, int[] x, int[] y, boolean[] book, long nowScore, int n, int t, int p,int time){
        if (nowScore > maxScore) {
            maxScore = nowScore;
            return;
        }
        for (int i = 0; i < n; i++) {
            if (!book[i] && time + x[i] <= t) {
                book[i] = true;
                time += x[i];
                int score = Math.max(c[i], a[i] - time * b[i] - y[i] * p);
                nowScore += score;
                dfs(a,b,c,x,y,book,nowScore,n,t,p,time);
                nowScore -= score;
                time -= x[i];
                book[i] = false;
            }
        }
    }
}
"
191,C,Java,61732075,2023-04-03 13:21:28,给个AC吧,答案错误,"
import java.io.*;
import java.math.BigInteger;
import java.util.*;

public class Main {
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    static int n, t, p;
    static Node[] a;

    public static void main(String[] args) throws IOException {
        Input sc = new Input(System.in);
        n = sc.nextInt();
        t = sc.nextInt();
        p = sc.nextInt();
        a = new Node[n + 1];
        for (int i = 1; i <= n; i++) {
            a[i] = new Node(sc.nextInt(), sc.nextInt(), sc.nextInt(), sc.nextInt(), sc.nextInt());
        }
        dfs(0, 1, 0, 0);
        out.println(ans);
        out.flush();
        out.close();
    }

    static long ans = 0;

    static void dfs(long sum, int sta, int xx, int count) {
        if (xx > t) {
            return;
        }
        if (sum > ans) {
            ans = sum;
        }
        for (int i = sta; i <= n; i++) {
            int c = a[i].c;
            int aa = a[i].a;
            int x = a[i].x;
            int b = a[i].b;
            int y = a[i].y;
            long max = Math.max(c, (long) aa - (x + count) * b - (y * p));
            dfs(max + sum, i + 1, xx + x, count + x);
        }
    }

    static class Node {
        int a, b, c, x, y;

        public Node(int a, int b, int c, int x, int y) {
            this.a = a;
            this.b = b;
            this.c = c;
            this.x = x;
            this.y = y;
        }
    }

    static class Input {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public Input(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                // TODO 自动生成的 catch 块
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }
    }
}"
192,C,Java,61732078,2023-04-03 13:22:09,给个AC吧,答案错误,"
import java.io.*;
import java.math.BigInteger;
import java.util.*;

public class Main {
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    static int n, t, p;
    static Node[] a;

    public static void main(String[] args) throws IOException {
        Input sc = new Input(System.in);
        n = sc.nextInt();
        t = sc.nextInt();
        p = sc.nextInt();
        a = new Node[n + 1];
        for (int i = 1; i <= n; i++) {
            a[i] = new Node(sc.nextInt(), sc.nextInt(), sc.nextInt(), sc.nextInt(), sc.nextInt());
        }
        dfs(0, 1, 0, 0);
        out.println(ans);
        out.flush();
        out.close();
    }

    static long ans = 0;

    static void dfs(long sum, int sta, long xx, long count) {
        if (xx > t) {
            return;
        }
        if (sum > ans) {
            ans = sum;
        }
        for (int i = sta; i <= n; i++) {
            long c = a[i].c;
            long aa = a[i].a;
            long x = a[i].x;
            long b = a[i].b;
            long y = a[i].y;
            long max = Math.max(c, (long) aa - (x + count) * b - (y * p));
            dfs(max + sum, i + 1, xx + x, count + x);
        }
    }

    static class Node {
        int a, b, c, x, y;

        public Node(int a, int b, int c, int x, int y) {
            this.a = a;
            this.b = b;
            this.c = c;
            this.x = x;
            this.y = y;
        }
    }

    static class Input {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public Input(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                // TODO 自动生成的 catch 块
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }
    }
}"
193,C,Java,61732098,2023-04-03 13:27:15,给个AC吧,答案错误,"
import java.io.*;
import java.math.BigInteger;
import java.util.*;

public class Main {
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    static int n, t, p;
    static Node[] a;

    public static void main(String[] args) throws IOException {
        Input sc = new Input(System.in);
        n = sc.nextInt();
        t = sc.nextInt();
        p = sc.nextInt();
        a = new Node[n + 1];
        for (int i = 1; i <= n; i++) {
            a[i] = new Node(sc.nextInt(), sc.nextInt(), sc.nextInt(), sc.nextInt(), sc.nextInt());
        }
        dfs(0, 1, 0);
        out.println(ans);
        out.flush();
        out.close();
    }

    static long ans = -1;

    static void dfs(long sum, int sta, long xx) {
        if (xx > t) {
            return;
        }
        if (sum > ans) {
            ans = sum;
        }
        for (int i = sta; i <= n; i++) {
            long c = a[i].c;
            long aa = a[i].a;
            long x = a[i].x;
            long b = a[i].b;
            long y = a[i].y;
            long max = Math.max(c, aa - (x + xx) * b - (y * p));
            dfs(max + sum, i + 1, xx + x);
        }
    }

    static class Node {
        int a, b, c, x, y;

        public Node(int a, int b, int c, int x, int y) {
            this.a = a;
            this.b = b;
            this.c = c;
            this.x = x;
            this.y = y;
        }
    }

    static class Input {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public Input(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                // TODO 自动生成的 catch 块
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }
    }
}"
194,C,Java,61732140,2023-04-03 13:38:11,给个AC吧,答案错误,"
import java.io.*;
import java.math.BigInteger;
import java.util.*;

public class Main {
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    static int n, t, p;
    static Node[] a;

    public static void main(String[] args) throws IOException {
        Input sc = new Input(System.in);
        n = sc.nextInt();
        t = sc.nextInt();
        p = sc.nextInt();
        a = new Node[n + 1];
        for (int i = 1; i <= n; i++) {
            a[i] = new Node(sc.nextInt(), sc.nextInt(), sc.nextInt(), sc.nextInt(), sc.nextInt());
        }
        dfs(0, 1, 0);
        out.println(ans);
        out.flush();
        out.close();
    }

    static long ans = -1;

    static void dfs(long sum, int sta, long xx) {
        if (xx > t) {
            return;
        }
        if (sum > ans) {
            ans = sum;
        }
        for (int i = sta; i <= n; i++) {
            long c = a[i].c;
            long aa = a[i].a;
            long x = a[i].x;
            long b = a[i].b;
            long y = a[i].y;
            long max = Math.max(c, aa - (x + xx) * b - (y * p));
            dfs(max + sum, i + 1, xx + x);
        }
    }

    static class Node {
        long a, b, c, x, y;

        public Node(long a, long b, long c, long x, long y) {
            this.a = a;
            this.b = b;
            this.c = c;
            this.x = x;
            this.y = y;
        }
    }

    static class Input {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public Input(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                // TODO 自动生成的 catch 块
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }
    }
}"
195,C,Java,61732152,2023-04-03 13:40:09,给个AC吧,答案错误,"
import java.io.*;
import java.math.BigInteger;
import java.util.*;

public class Main {
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    static int n, t, p;
    static Node[] a;
    static boolean[] f;

    public static void main(String[] args) throws IOException {
        Input sc = new Input(System.in);
        n = sc.nextInt();
        t = sc.nextInt();
        p = sc.nextInt();
        a = new Node[n + 1];
        f = new boolean[n + 1];
        for (int i = 1; i <= n; i++) {
            a[i] = new Node(sc.nextInt(), sc.nextInt(), sc.nextInt(), sc.nextInt(), sc.nextInt());
        }
        dfs(0, 1, 0);
        out.println(ans);
        out.flush();
        out.close();
    }

    static long ans = -1;

    static void dfs(long sum, int sta, long xx) {
        if (xx > t) {
            return;
        }
        if (sum > ans) {
            ans = sum;
        }
        for (int i = sta; i <= n; i++) {
            if (f[i]) continue;
            long c = a[i].c;
            long aa = a[i].a;
            long x = a[i].x;
            long b = a[i].b;
            long y = a[i].y;
            long max = Math.max(c, aa - (x + xx) * b - (y * p));
            f[i] = true;
            dfs(max + sum, i + 1, xx + x);
            f[i] = false;
        }
    }

    static class Node {
        long a, b, c, x, y;

        public Node(long a, long b, long c, long x, long y) {
            this.a = a;
            this.b = b;
            this.c = c;
            this.x = x;
            this.y = y;
        }
    }

    static class Input {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public Input(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                // TODO 自动生成的 catch 块
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }
    }
}"
196,C,Java,61732153,2023-04-03 13:40:12,给个AC吧,答案错误,"
import java.io.*;
import java.math.BigInteger;
import java.util.*;

public class Main {
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    static int n, t, p;
    static Node[] a;
    static boolean[] f;

    public static void main(String[] args) throws IOException {
        Input sc = new Input(System.in);
        n = sc.nextInt();
        t = sc.nextInt();
        p = sc.nextInt();
        a = new Node[n + 1];
        f = new boolean[n + 1];
        for (int i = 1; i <= n; i++) {
            a[i] = new Node(sc.nextInt(), sc.nextInt(), sc.nextInt(), sc.nextInt(), sc.nextInt());
        }
        dfs(0, 1, 0);
        out.println(ans);
        out.flush();
        out.close();
    }

    static long ans = -1;

    static void dfs(long sum, int sta, long xx) {
        if (xx > t) {
            return;
        }
        if (sum > ans) {
            ans = sum;
        }
        for (int i = sta; i <= n; i++) {
            if (f[i]) continue;
            long c = a[i].c;
            long aa = a[i].a;
            long x = a[i].x;
            long b = a[i].b;
            long y = a[i].y;
            long max = Math.max(c, aa - (x + xx) * b - (y * p));
            f[i] = true;
            dfs(max + sum, i + 1, xx + x);
            f[i] = false;
        }
    }

    static class Node {
        long a, b, c, x, y;

        public Node(long a, long b, long c, long x, long y) {
            this.a = a;
            this.b = b;
            this.c = c;
            this.x = x;
            this.y = y;
        }
    }

    static class Input {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public Input(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                // TODO 自动生成的 catch 块
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }
    }
}"
197,C,Java,61732157,2023-04-03 13:40:44,给个AC吧,答案正确,"
import java.io.*;
import java.math.BigInteger;
import java.util.*;

public class Main {
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    static int n, t, p;
    static Node[] a;
    static boolean[] f;

    public static void main(String[] args) throws IOException {
        Input sc = new Input(System.in);
        n = sc.nextInt();
        t = sc.nextInt();
        p = sc.nextInt();
        a = new Node[n + 1];
        f = new boolean[n + 1];
        for (int i = 1; i <= n; i++) {
            a[i] = new Node(sc.nextInt(), sc.nextInt(), sc.nextInt(), sc.nextInt(), sc.nextInt());
        }
        dfs(0,  0);
        out.println(ans);
        out.flush();
        out.close();
    }

    static long ans = -1;

    static void dfs(long sum, long xx) {
        if (xx > t) {
            return;
        }
        if (sum > ans) {
            ans = sum;
        }
        for (int i = 1; i <= n; i++) {
            if (f[i]) continue;
            long c = a[i].c;
            long aa = a[i].a;
            long x = a[i].x;
            long b = a[i].b;
            long y = a[i].y;
            long max = Math.max(c, aa - (x + xx) * b - (y * p));
            f[i] = true;
            dfs(max + sum, xx + x);
            f[i] = false;
        }
    }

    static class Node {
        long a, b, c, x, y;

        public Node(long a, long b, long c, long x, long y) {
            this.a = a;
            this.b = b;
            this.c = c;
            this.x = x;
            this.y = y;
        }
    }

    static class Input {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public Input(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                // TODO 自动生成的 catch 块
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }
    }
}"
198,C,Java,61733355,2023-04-03 16:12:27,SongL7,答案正确,"
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;

public class Main{
    static FastReader in = new FastReader();
    static int p ,n ,t;
    static long ans;
    static problem[]arr;
    static boolean []st;
    @SuppressWarnings({""all""})
    static void solve() {
        n = in.nextInt(); t = in.nextInt(); p = in.nextInt();
        st = new boolean[n];
        arr = new problem[n];
        for(int i = 0; i < n; ++i) {
            int a = in.nextInt(), b = in.nextInt(),c= in.nextInt(),x= in.nextInt(),y= in.nextInt();
            arr[i] = new problem(a,b,c,x,y);
        }
        dfs(0 ,0);
        System.out.println(ans);
    }

    static void dfs(long now , int time) {
        if(time > t) return ;
        if(now > ans) ans = now;
        for (int i = 0; i < n; i++) {
            if(st[i] == true) continue;
            long mx = max(arr[i].c, arr[i].a - arr[i].b * (time+arr[i].x) - arr[i].y * p);
            st[i] = true;
            dfs(now + mx , time + arr[i].x);
            st[i] = false;
        }
    }



    static class problem{
        int a , b , c,x, y;
        public int num;

        public problem(int a, int b, int c, int x, int y) {
            this.a = a;
            this.b = b;
            this.c = c;
            this.x = x;
            this.y = y;
            num = max(c,a - x * b - y * p);
        }

    }


    public static void main(String[] args)  {
        int t = 1;
        while( t --> 0) {
            solve();
        }
    }

    static <T extends Comparable<T>>T max(T a, T b) {
        return a.compareTo(b) > 0 ? a : b;
    }

    static <T extends Comparable<T>>T min(T a, T b) {
        return a.compareTo(b) < 0 ? a : b;
    }

    static <T> void swap(T[] arr, int i , int j) {
        T temp = arr[i];arr[i] = arr[j];arr[j] = temp;
    }


    @SuppressWarnings({""all""})
    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        public FastReader() {
            br = new BufferedReader(new InputStreamReader(System.in));
        }

        String next() {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }

        String nextLine() {
            String str = """";
            try {
                str = br.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }

}
"
199,C,Java,61738165,2023-04-03 20:39:37,wahaha~,答案正确,"import java.util.Scanner;

//注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
 static Long ans = 0L;
 static Long[] a = new Long[10];
 static Long[] b = new Long[10];
 static Long[] c = new Long[10];
 static Long[] x = new Long[10];
 static Long[] y = new Long[10];
 static boolean[] v = new boolean[10];
 static int p, n;
 static int t;
 public static void main(String[] args) {
     Scanner in = new Scanner(System.in);
     
     n = in.nextInt();
     t = in.nextInt();
     p = in.nextInt();
     for(int i = 0; i < n; i++) {
         a[i] = in.nextLong();
         b[i] = in.nextLong();
         c[i] = in.nextLong();
         x[i] = in.nextLong();
         y[i] = in.nextLong();
     }
     
     dfs(0,0L,0);
     System.out.println(ans);
 }
 public static void dfs(int i,Long sum,int tt) {
     if(i >= n) {
         ans = Math.max(ans, sum);
         return;
     }
     for(int j = 0; j < n; j++) {
         if(!v[j]){
             if(t - x[j] >= 0) {
            	 tt += x[j];
                 v[j] = true;
                 t -= x[j];
                 Long s = Math.max(c[j],a[j] - tt * b[j] - y[j] * p);
                 sum += s;
                 dfs(j + 1,sum,tt);
                 t += x[j];
                 sum -= s;
                 tt -= x[j];
                 v[j] = false;
             } else {
                 v[j] = true;
                 dfs(j + 1, sum,tt);
                 v[j] = false;
                 
             }
             
         }
         
     }   
 }
}"
