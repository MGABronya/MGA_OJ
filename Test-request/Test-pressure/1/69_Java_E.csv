,index,languageName,submissionId,submitTime,userName,statusMessage,code
0,E,Java,61478442,2023-03-24 19:15:24,谦虚的驼瑞驰胖乎乎,答案错误,"
import java.io.*;

public class Main {
    static StreamTokenizer st=new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
    static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    public static int nextInt() throws IOException {
        st.nextToken();
        return (int)st.nval;
    }
    static double ls(int []x,int []y){
        int a = Math.abs(x[0] - y[0]);
        int b = Math.abs(x[1] - y[1]);
        double s = a * a + b * b;
        return Math.sqrt(s);
    }
    public static void main(String[] args) throws IOException {
        int n = nextInt();
        int [][]p = new int[n][2];
        for(int i = 0; i < n; i ++){
            int x = nextInt();
            int y = nextInt();
            p[i][0] = x;p[i][1] = y;
        }
        int ans = 0;
        for(int i = 0; i < n; i ++){
            for(int j = i + 1; j < n; j ++){
                for(int k = j + 1;k < n; k ++){
                    double a = ls(p[i],p[j]);
                    double b = ls(p[i],p[k]);
                    double c = ls(p[j],p[k]);
                    if(a == b || a == c || b == c && a != 0 && b!= 0 && c!= 0){
                        ans ++;
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
"
1,E,Java,61479104,2023-03-24 19:19:33,谦虚的驼瑞驰胖乎乎,答案错误,"
import java.io.*;

public class Main {
    static StreamTokenizer st=new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
    static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    public static int nextInt() throws IOException {
        st.nextToken();
        return (int)st.nval;
    }
    static double ls(int []x,int []y){
        int a = Math.abs(x[0] - y[0]);
        int b = Math.abs(x[1] - y[1]);
        double s = a * a + b * b;
        return Math.sqrt(s);
    }
    static double lk(int []x,int []y){
        double a = Math.abs(x[0] - y[0]);
        double b = Math.abs(x[1] - y[1]);
        double s = b / a; 
        return s;
    }
    public static void main(String[] args) throws IOException {
        int n = nextInt();
        int [][]p = new int[n][2];
        for(int i = 0; i < n; i ++){
            int x = nextInt();
            int y = nextInt();
            p[i][0] = x;p[i][1] = y;
        }
        int ans = 0;
        for(int i = 0; i < n; i ++){
            for(int j = i + 1; j < n; j ++){
                for(int k = j + 1;k < n; k ++){
                    double a = ls(p[i],p[j]);
                    double b = ls(p[i],p[k]);
                    double c = ls(p[j],p[k]);
                    double k1 = lk(p[i],p[j]);
                    double k2 = lk(p[i],p[k]);
                    if(k1 == k2) continue;
                    if(a == b || a == c || b == c && a != 0 && b!= 0 && c!= 0){
                        ans ++;
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
"
2,E,Java,61479459,2023-03-24 19:22:08,谦虚的驼瑞驰胖乎乎,答案错误,"
import java.io.*;

public class Main {
    static StreamTokenizer st=new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
    static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    public static int nextInt() throws IOException {
        st.nextToken();
        return (int)st.nval;
    }
    static double ls(int []x,int []y){
        int a = Math.abs(x[0] - y[0]);
        int b = Math.abs(x[1] - y[1]);
        double s = a * a + b * b;
        return Math.sqrt(s);
    }
    static double lk(int []x,int []y){
        double a = x[0] - y[0];
        double b = x[1] - y[1];
        double s = b / a;
        return s;
    }
    public static void main(String[] args) throws IOException {
        int n = nextInt();
        int [][]p = new int[n][2];
        for(int i = 0; i < n; i ++){
            int x = nextInt();
            int y = nextInt();
            p[i][0] = x;p[i][1] = y;
        }
        int ans = 0;
        for(int i = 0; i < n; i ++){
            for(int j = i + 1; j < n; j ++){
                for(int k = j + 1;k < n; k ++){
                    double a = ls(p[i],p[j]);
                    double b = ls(p[i],p[k]);
                    double c = ls(p[j],p[k]);
                    double k1 = lk(p[i],p[j]);
                    double k2 = lk(p[i],p[k]);
                    if(k1 == k2) continue;
                    if(a == b || a == c || b == c && a != 0 && b!= 0 && c!= 0){
                        ans ++;
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
"
3,E,Java,61480843,2023-03-24 19:32:24,0xC7,答案正确,"import java.util.*;
public class Main{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] xy = new int[n][2];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < 2; j++) {
                xy[i][j] = sc.nextInt();
             }
        }
        int ret = 0;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                for (int k = j + 1; k < n; k++) {
                    if ((xy[i][0] - xy[j][0]) * (xy[i][1] - xy[k][1]) - (xy[i][1] - xy[j][1]) * (xy[i][0] - xy[k][0]) == 0) {
                        continue;
                    }
                    int len1 = pow(xy[i][0] - xy[j][0]) + pow(xy[i][1] - xy[j][1]);
                    int len2 = pow(xy[i][0] - xy[k][0]) + pow(xy[i][1] - xy[k][1]);
                    int len3 = pow(xy[k][0] - xy[j][0]) + pow(xy[k][1] - xy[j][1]);
                    if (len1 == len2 || len1 == len3 || len2 == len3) {
                        ret++;
                    }
                }
            }
        }
        System.out.println(ret);
    }
    public static int pow(int num) {
        return num * num;
    }
}"
4,E,Java,61481272,2023-03-24 19:35:21,智破云霄,答案错误,"import java.util.*;
import java.io.*;
public class Main {
public static void main(String[] args) {
 InputReader in = new InputReader(System.in);
PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        int n = in.nextInt();
        int[][] arr = new int[n][2];
        for(int i = 0;i <n;i ++)
        {
        	arr[i][0] = in.nextInt();
        	arr[i][1] = in.nextInt();
        }
        int res = 0;
        for(int i = 0;i < n;i ++)
        	for(int j = i+1;j < n;j ++)
        		for(int k = j+1;k < n;k ++)
        		{
        			long l1 = (long)(arr[i][0]-arr[j][0])*(arr[i][0]-arr[j][0])+(long)(arr[i][1]-arr[j][1])*(arr[i][1]-arr[j][1]);
        			long l2 = (long)(arr[i][0]-arr[k][0])*(arr[i][0]-arr[k][0])+(long)(arr[i][1]-arr[k][1])*(arr[i][1]-arr[k][1]);
        			long l3 = (long)(arr[k][0]-arr[j][0])*(arr[k][0]-arr[j][0])+(long)(arr[k][1]-arr[j][1])*(arr[k][1]-arr[j][1]);
        			if(l1==l2 || l1==l3 || l2==l3)
        				res ++;
        			
        			
        			
        		}
	out.println(res);
	out.flush();
}
}


class InputReader {
    private final BufferedReader buf;
    private StringTokenizer tkl;

    public InputReader(InputStream is) {
        buf = new BufferedReader(new InputStreamReader(is));
    }

    public boolean hasNext() {
        try {
            while (tkl == null || !tkl.hasMoreElements()) tkl = new StringTokenizer(buf.readLine());
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public String next() {
        return hasNext() (?) tkl.nextToken() : null;
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }
}
"
5,E,Java,61481367,2023-03-24 19:36:01,智破云霄,答案错误,"import java.util.*;
import java.io.*;
public class Main {
public static void main(String[] args) {
 InputReader in = new InputReader(System.in);
PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        int n = in.nextInt();
        int[][] arr = new int[n][2];
        for(int i = 0;i <n;i ++)
        {
        	arr[i][0] = in.nextInt();
        	arr[i][1] = in.nextInt();
        }
        long res = 0;
        for(int i = 0;i < n;i ++)
        	for(int j = i+1;j < n;j ++)
        		for(int k = j+1;k < n;k ++)
        		{
        			long l1 = (long)(arr[i][0]-arr[j][0])*(arr[i][0]-arr[j][0])+(long)(arr[i][1]-arr[j][1])*(arr[i][1]-arr[j][1]);
        			long l2 = (long)(arr[i][0]-arr[k][0])*(arr[i][0]-arr[k][0])+(long)(arr[i][1]-arr[k][1])*(arr[i][1]-arr[k][1]);
        			long l3 = (long)(arr[k][0]-arr[j][0])*(arr[k][0]-arr[j][0])+(long)(arr[k][1]-arr[j][1])*(arr[k][1]-arr[j][1]);
        			if(l1==l2 || l1==l3 || l2==l3)
        				res ++;		
        		}
	out.println(res);
	out.flush();
}
}


class InputReader {
    private final BufferedReader buf;
    private StringTokenizer tkl;

    public InputReader(InputStream is) {
        buf = new BufferedReader(new InputStreamReader(is));
    }

    public boolean hasNext() {
        try {
            while (tkl == null || !tkl.hasMoreElements()) tkl = new StringTokenizer(buf.readLine());
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public String next() {
        return hasNext() (?) tkl.nextToken() : null;
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }
}
"
6,E,Java,61481689,2023-03-24 19:38:22,北-北瓜,答案正确,"import java.util.*;
import java.math.*;
import java.io.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n= in.nextInt();
        int[]x=new int[n];
        int[]y=new int[n];
        for (int i = 0; i <n; i++) {
            x[i]= in.nextInt();
            y[i]= in.nextInt();
        }
        int ans=0;
        for (int i = 0; i <n; i++) {
            for (int j = i+1; j <n ; j++) {
                for (int k =j+1; k <n ; k++) {
                    int ax=x[i]-x[j];
                    int ay=y[i]-y[j];
                    int bx=x[k]-x[j];
                    int by=y[k]-y[j];
                    if (ax*by-ay*bx!=0){
                        int cx=x[i]-x[k];
                        int cy=y[i]-y[k];
                        int a=ax*ax+ay*ay;
                        int b=bx*bx+by*by;
                        int c=cx*cx+cy*cy;
                        if (a==b||a==c||b==c)ans++;
                    }
                }
            }
        }
        System.out.println(ans);
        
    }
}"
7,E,Java,61481876,2023-03-24 19:39:59,EGOIST9029,答案错误,"import java.awt.*;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static PrintWriter out = new PrintWriter(System.out);
    public static BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));

    public static void main(String[] args)throws Exception {
        int n = Integer.parseInt(reader.readLine());
        Point[] points = new Point[n];
        for(int i = 0;i<n;i++){
            String[] strings = reader.readLine().split("" "");
            points[i] = new Point(Integer.parseInt(strings[0]),Integer.parseInt(strings[1]));
        }
        long ans = 0;
        for(int i = 0;i<n;i++){
            for(int j = i+1;j<n;j++){
                for(int k = j+1;k<n;k++){
                    double a = Math.sqrt(Math.pow(points[i].x-points[j].x,2)+Math.pow(points[i].y-points[j].y,2));
                    double b = Math.sqrt(Math.pow(points[i].x-points[k].x,2)+Math.pow(points[i].y-points[k].y,2));
                    double c = Math.sqrt(Math.pow(points[k].x-points[j].x,2)+Math.pow(points[k].y-points[j].y,2));
                    if(a==b||b==c||a==c){
                        ans++;
                    }
                }
            }
        }
        System.out.println(ans);
    }
}"
8,E,Java,61482179,2023-03-24 19:42:19,EGOIST9029,答案错误,"import java.awt.*;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static PrintWriter out = new PrintWriter(System.out);
    public static BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));

    public static void main(String[] args)throws Exception {
        int n = Integer.parseInt(reader.readLine());
        Point[] points = new Point[n];
        for(int i = 0;i<n;i++){
            String[] strings = reader.readLine().split("" "");
            points[i] = new Point(Integer.parseInt(strings[0]),Integer.parseInt(strings[1]));
        }
        long ans = 0;
        for(int i = 0;i<n;i++){
            for(int j = i+1;j<n;j++){
                for(int k = j+1;k<n;k++){
                    double a = Math.sqrt(Math.pow(points[i].x-points[j].x,2)+Math.pow(points[i].y-points[j].y,2));
                    double b = Math.sqrt(Math.pow(points[i].x-points[k].x,2)+Math.pow(points[i].y-points[k].y,2));
                    double c = Math.sqrt(Math.pow(points[k].x-points[j].x,2)+Math.pow(points[k].y-points[j].y,2));
                    a = round(a);
                    b = round(b);
                    c = round(c);
                    if(a==b||b==c||a==c){
                        ans++;
                    }
                }
            }
        }
        System.out.println(ans);
    }

    public static double round(double value){
        return Math.round(value*100)/100.0;
    }
}"
9,E,Java,61482626,2023-03-24 19:45:41,郑士文,答案正确,"import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static int num(int a1[],int a2[]){
        return (a1[0]-a2[0])*(a1[0]-a2[0])+(a1[1]-a2[1])*(a1[1]-a2[1]);
    }
    public static boolean check(int a1[],int a2[],int a3[]){
        if (num(a1,a2)==num(a1,a3)){
            if(num(a2,a3)==4*num(a1,a2)) return false;
            return true;
        }
        if (num(a2,a1)==num(a2,a3)) {
            if(num(a1,a3)==4*num(a2,a1)) return false;
            return true;
        }
        if (num(a3,a1)==num(a3,a2)) {
            if(num(a1,a2)==4*num(a3,a1)) return false;
            return true;
        }
        return false;
    }
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        int ans=0;
        int n=sc.nextInt();
        int a[][]=new int[n][2];
        for(int i=0;i<n;i++){
            a[i][0]=sc.nextInt();
            a[i][1]=sc.nextInt();
        }
        for(int i=0;i<n;i++){
            for(int j=i+1;j<n;j++){
                if(i==j) continue;
                for(int k=j+1;k<n;k++){
                    if(k==j||k==i) continue;
                    if(check(a[i],a[j],a[k])){
                        ans++;
                    }
                }
            }
        }
        System.out.println(ans);
    }
}"
10,E,Java,61482646,2023-03-24 19:45:49,L-0720,答案错误,"import java.io.*;

public class Main {

    static StreamTokenizer reader = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
    
    public static void main(String[] args) throws IOException {
        int n = nextInt();
        int[][] arr = new int[n][2];
        for (int i = 0; i < n; i++) {
            int x = nextInt();
            int y = nextInt();
            arr[i][0] = x;
            arr[i][1] = y;
        }
        int res = 0;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                for (int k = j + 1; k < n; k++) {
                    double a = Math.sqrt(Math.pow(arr[i][0] - arr[j][0], 2) + Math.pow(arr[i][1] - arr[j][1], 2));
                    double b = Math.sqrt(Math.pow(arr[i][0] - arr[k][0], 2) + Math.pow(arr[i][1] - arr[k][1], 2));
                    double c = Math.sqrt(Math.pow(arr[j][0] - arr[k][0], 2) + Math.pow(arr[j][1] - arr[k][1], 2));
                    if (a == b || a == c || b == c) res++;
                }
            }
        }
        System.out.println(res);
    }

    public static int nextInt() throws IOException {
        reader.nextToken();
        return (int) reader.nval;
    }

}"
11,E,Java,61482752,2023-03-24 19:46:33,小怂很怂,答案错误,"import java.util.Scanner;public class Main {    public static void main(String[] args) {        Scanner scanner = new Scanner(System.in);        int n = scanner.nextInt();        int[][] points = new int[n][2];        for (int i = 0; i < n; i++) {            points[i][0] = scanner.nextInt();            points[i][1] = scanner.nextInt();        }        int count = 0;        for (int i = 0; i < n; i++) {            for (int j = i + 1; j < n; j++) {                for (int k = j + 1; k < n; k++) {                    if (isIsosceles(points[i], points[j], points[k])) {                        count++;                    }                }            }        }        System.out.println(count);    }    private static boolean isIsosceles(int[] p1, int[] p2, int[] p3) {        double d1 = distance(p1, p2);        double d2 = distance(p2, p3);        double d3 = distance(p3, p1);        return d1 == d2 || d2 == d3 || d3 == d1;    }    private static double distance(int[] p1, int[] p2) {        int dx = p1[0] - p2[0];        int dy = p1[1] - p2[1];        return Math.sqrt(dx * dx + dy * dy);    }}
"
12,E,Java,61482945,2023-03-24 19:48:02,人工智能3212卢明涛,答案正确,"
import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public static long gcd(long a,long b) {
            return b==0(?)a:gcd(b, a%b);
        }
        static long ans = 0;
        class Person{
            String name;
            String dui;
            double fen;
        }
        public static int binarySearch(int arr[], int target){
            int left = 0;
            int right = arr.length; // 注意
            while(left<right){ // 注意
                int mid = (left+right)/2;
                if(arr[mid] >= target){// 注意
                    right = mid;
                }else{
                    left = mid+1;
                }
            }
            return left;// 注意
        }
        static long start = 0;
        static long map[] = new long[100];
        static long time[]  = new long[100];

        static long use[] = new long[100];

        static long n,t,p;

        static long max = 0;

        static long maxfen = 0;
        static long sumtime = 0;
        static long[] ai = new long[20];
        static long[] bi = new long[20];
        static long[] ci = new long[20];
        static long[] xi = new long[20];
        static long[] yi = new long[20];

        static long sum =0;
        static void dfs(int id){
            for (int i=1;i<=n;i++){
                if (use[i]==0) {
                    if (sumtime + time[i] <= t) {
                        sumtime = sumtime + time[i];
                        long maxsu = Math.max(ci[i], ai[i] - sumtime * bi[i] - yi[i] * p);
                        sum = sum + maxsu;
                        use[i] = 1;
                        maxfen = Math.max(maxfen, sum);
                        dfs(0);
                        use[i] = 0;
                        sum = sum - maxsu;
                        sumtime = sumtime - time[i];
                    }
                }
            }
        }
        public void solve(int testNumber, InputReader in, PrintWriter out) {
                int n = in.nextInt();
                long sum = 0;
                int x[] = new int[n+2];
                int y[] = new int[n+2];
                for (int i=1;i<=n; i++){
                    x[i] = in.nextInt();
                    y[i] = in.nextInt();
                }
                for (int i=1;i<=n; i++){
                    for (int j = i+1; j <= n; j++) {
                        for (int k=j+1;k<=n; k++){
                            int x1 = x[i];
                            int x2 = x[j];
                            int x3 = x[k];
                            int y1 = y[i];
                            int y2 = y[j];
                            int y3 = y[k];
                            if (  (x1-x2) * (y2-y3)!=(x2-x3)*(y1-y2) ){
                                long a1 = Math.abs(x1-x2) * Math.abs(x1-x2) + Math.abs(y1-y2)*Math.abs(y1-y2);
                                long a2 = Math.abs(x2-x3) * Math.abs(x2-x3) + Math.abs(y2-y3)*Math.abs(y2-y3);
                                long a3 = Math.abs(x1-x3) * Math.abs(x1-x3) + Math.abs(y1-y3)*Math.abs(y1-y3);
                                if (a1 == a2 || a2==a3 || a1==a3){
                                    sum++;
                                }
                            }
                        }
                    }
                }
            System.out.println(sum);
            //            long[] math =new long[n];

        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
13,E,Java,61483021,2023-03-24 19:48:32,Mosyi.,答案错误,"import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int[] x = new int[n];
            int[] y = new int[n];
            for (int i = 0; i < n; i++) {
                x[i] = in.nextInt();
                y[i] = in.nextInt();
            }
            int sum = 0;
            for (int i = 0; i < n; i++) {
                for (int j = i+1; j < n; j++) {
                    for (int k = j+1; k < n; k++) {
                        if((x[j] - x[i])*(y[k] - y[i]) == (x[k] - x[i]) * (y[j] - y[i])){
                            break;
                        }else{
                            double q1 = Math.sqrt((x[i] - x[j]) * (x[i] - x[j]) + (y[i] - y[j]) * (y[i] - y[j]));
                            double q2 = Math.sqrt((x[k] - x[j]) * (x[k] - x[j]) + (y[k] - y[j]) * (y[k] - y[j]));
                            double q3 = Math.sqrt((x[i] - x[k]) * (x[i] - x[k]) + (y[i] - y[k]) * (y[i] - y[k]));
                            if(q1 == q2 || q1 == q3 || q2 == q3){
                                sum++;
                            }
                        }
                    }
                }
            }
            out.println(sum);
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }

    }
}"
14,E,Java,61483037,2023-03-24 19:48:37,小怂很怂,答案错误,"import java.util.Scanner;
public class Main {
    public static void main(String[] args) {        
        Scanner scanner = new Scanner(System.in);        
        int n = scanner.nextInt();        
        int[][] points = new int[n][2];        
        for (int i = 0; i < n; i++) {            
            points[i][0] = scanner.nextInt();            
            points[i][1] = scanner.nextInt();        
        }        
        int count = 0;        
        for (int i = 0; i < n; i++) {            
            for (int j = i + 1; j < n; j++) {                
                for (int k = j + 1; k < n; k++) {                    
                    if (isIsosceles(points[i], points[j], points[k])) {
                        count++;                   
                    }              
                }         
            }    
        }      
        System.out.println(count);   
    }    
    private static boolean isIsosceles(int[] p1, int[] p2, int[] p3) {      
        double d1 = distance(p1, p2);        
        double d2 = distance(p2, p3);     
        double d3 = distance(p3, p1);     
        return d1 == d2 || d2 == d3 || d3 == d1;   
    }    
    private static double distance(int[] p1, int[] p2) {   
        double dx = p1[0] - p2[0];    
        double dy = p1[1] - p2[1];     
        return Math.sqrt(dx * dx + dy * dy);  
    }
}
"
15,E,Java,61483104,2023-03-24 19:49:09,EGOIST9029,答案错误,"import java.awt.*;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static PrintWriter out = new PrintWriter(System.out);
    public static BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));

    public static void main(String[] args)throws Exception {
        int n = Integer.parseInt(reader.readLine());
        Point[] points = new Point[n];
        for(int i = 0;i<n;i++){
            String[] strings = reader.readLine().split("" "");
            points[i] = new Point(Integer.parseInt(strings[0]),Integer.parseInt(strings[1]));
        }
        long ans = 0;
        for(int i = 0;i<n;i++){
            for(int j = i+1;j<n;j++){
                for(int k = j+1;k<n;k++){
                    int s = points[i].x*points[j].y+points[j].x*points[k].y+points[k].x*points[i].y-points[i].x*points[k].y-points[j].x*points[i].y-points[k].x*points[j].y;
                    if(s==0) continue;
                    double a = Math.sqrt(Math.pow(points[i].x-points[j].x,2)+Math.pow(points[i].y-points[j].y,2));
                    double b = Math.sqrt(Math.pow(points[i].x-points[k].x,2)+Math.pow(points[i].y-points[k].y,2));
                    double c = Math.sqrt(Math.pow(points[k].x-points[j].x,2)+Math.pow(points[k].y-points[j].y,2));
                    a = round(a);
                    b = round(b);
                    c = round(c);
                    if(a==b||b==c||a==c){
                        ans++;
                    }
                }
            }
        }
        System.out.println(ans);
    }

    public static double round(double value){
        return Math.round(value*100)/100.0;
    }
}"
16,E,Java,61483502,2023-03-24 19:52:15,Mosyi.,答案正确,"import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int[] x = new int[n];
            int[] y = new int[n];
            for (int i = 0; i < n; i++) {
                x[i] = in.nextInt();
                y[i] = in.nextInt();
            }
            int sum = 0;
            for (int i = 0; i < n; i++) {
                for (int j = i+1; j < n; j++) {
                    for (int k = j+1; k < n; k++) {
                        int f = 0;
                        if((x[j] - x[i])*(y[k] - y[i]) == (x[k] - x[i]) * (y[j] - y[i])){
                            f = 1;
                        }else{
                            double q1 = Math.sqrt((x[i] - x[j]) * (x[i] - x[j]) + (y[i] - y[j]) * (y[i] - y[j]));
                            double q2 = Math.sqrt((x[k] - x[j]) * (x[k] - x[j]) + (y[k] - y[j]) * (y[k] - y[j]));
                            double q3 = Math.sqrt((x[i] - x[k]) * (x[i] - x[k]) + (y[i] - y[k]) * (y[i] - y[k]));
                            if(q1 == q2 || q1 == q3 || q2 == q3){
                                sum++;
                            }
                        }
                    }
                }
            }
            out.println(sum);
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }

    }
}"
17,E,Java,61483514,2023-03-24 19:52:20,EGOIST9029,编译错误,"{""SPECIAL_TM_FH_MEMO_JSON_TAG"":""SPECIAL_TM_FH_MEMO_JSON_TAG"",""stderr"":""Main.java:28: error: cannot find symbol\n                    a = round(a);\n                        ^\n  symbol:   method round(double)\n  location: class Main\nMain.java:29: error: cannot find symbol\n                    b = round(b);\n                        ^\n  symbol:   method round(double)\n  location: class Main\nMain.java:30: error: cannot find symbol\n                    c = round(c);\n                        ^\n  symbol:   method round(double)\n  location: class Main\n3 errors""}

import java.awt.*;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static PrintWriter out = new PrintWriter(System.out);
    public static BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));

    public static void main(String[] args)throws Exception {
        int n = Integer.parseInt(reader.readLine());
        Point[] points = new Point[n];
        for(int i = 0;i<n;i++){
            String[] strings = reader.readLine().split("" "");
            points[i] = new Point(Integer.parseInt(strings[0]),Integer.parseInt(strings[1]));
        }
        long ans = 0;
        for(int i = 0;i<n;i++){
            for(int j = i+1;j<n;j++){
                for(int k = j+1;k<n;k++){
                    int s = points[i].x*points[j].y+points[j].x*points[k].y+points[k].x*points[i].y-points[i].x*points[k].y-points[j].x*points[i].y-points[k].x*points[j].y;
                    if(s==0) continue;
                    double a = Math.sqrt(Math.pow(points[i].x-points[j].x,2)+Math.pow(points[i].y-points[j].y,2));
                    double b = Math.sqrt(Math.pow(points[i].x-points[k].x,2)+Math.pow(points[i].y-points[k].y,2));
                    double c = Math.sqrt(Math.pow(points[k].x-points[j].x,2)+Math.pow(points[k].y-points[j].y,2));
                    a = round(a);
                    b = round(b);
                    c = round(c);
                    if(a==b||b==c||a==c){
                        ans++;
                    }
                }
            }
        }
        System.out.println(ans);
    }
}"
18,E,Java,61483534,2023-03-24 19:52:29,EGOIST9029,答案正确,"import java.awt.*;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static PrintWriter out = new PrintWriter(System.out);
    public static BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));

    public static void main(String[] args)throws Exception {
        int n = Integer.parseInt(reader.readLine());
        Point[] points = new Point[n];
        for(int i = 0;i<n;i++){
            String[] strings = reader.readLine().split("" "");
            points[i] = new Point(Integer.parseInt(strings[0]),Integer.parseInt(strings[1]));
        }
        long ans = 0;
        for(int i = 0;i<n;i++){
            for(int j = i+1;j<n;j++){
                for(int k = j+1;k<n;k++){
                    int s = points[i].x*points[j].y+points[j].x*points[k].y+points[k].x*points[i].y-points[i].x*points[k].y-points[j].x*points[i].y-points[k].x*points[j].y;
                    if(s==0) continue;
                    double a = Math.sqrt(Math.pow(points[i].x-points[j].x,2)+Math.pow(points[i].y-points[j].y,2));
                    double b = Math.sqrt(Math.pow(points[i].x-points[k].x,2)+Math.pow(points[i].y-points[k].y,2));
                    double c = Math.sqrt(Math.pow(points[k].x-points[j].x,2)+Math.pow(points[k].y-points[j].y,2));
                    if(a==b||b==c||a==c){
                        ans++;
                    }
                }
            }
        }
        System.out.println(ans);
    }
}"
19,E,Java,61483569,2023-03-24 19:52:44,牛客644518538号,答案错误,"import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[][] ints = new int[n][2];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < 2; j++) {
                ints[i][j] = scanner.nextInt();
            }
        }
        int res = 0;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                for (int k = j + 1; k < n; k++) {
                    if ((!(ints[i][0] == ints[j][0] && ints[i][0] == ints[k][0] && ints[j][0] == ints[k][0]) &&
                            !(ints[i][1] == ints[j][1] && ints[i][1] == ints[k][1] && ints[j][1] == ints[k][1])) &&
                            ((Math.sqrt(Math.pow(ints[i][0] - ints[j][0], 2) + Math.pow(ints[i][1] - ints[j][1], 2))
                            == Math.sqrt(Math.pow(ints[i][0] - ints[k][0], 2) + Math.pow(ints[i][1] - ints[k][1], 2))) ||
                            (Math.sqrt(Math.pow(ints[i][0] - ints[j][0], 2) + Math.pow(ints[i][1] - ints[j][1], 2))
                            == Math.sqrt(Math.pow(ints[j][0] - ints[k][0], 2) + Math.pow(ints[j][1] - ints[k][1], 2))) ||
                            (Math.sqrt(Math.pow(ints[i][0] - ints[k][0], 2) + Math.pow(ints[i][1] - ints[k][1], 2))
                            == Math.sqrt(Math.pow(ints[j][0] - ints[k][0], 2) + Math.pow(ints[j][1] - ints[k][1], 2))))) {
                        res++;
                    }
                }
            }
        }
        System.out.println(res);
    }
}
"
20,E,Java,61484383,2023-03-24 19:59:10,菜鸡想进大厂～,答案错误,"import java.util.*;
import java.io.*;



public class Main{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in); 
        int n = sc.nextInt(); 
        int[][] points = new int[n][2]; 
        for (int i = 0; i < n; i ++) {
            points[i][0] = sc.nextInt(); 
            points[i][1] = sc.nextInt(); 
        }
        long cnt = 0; 
        for (int i = 0; i < n; i ++) {
            for (int j = i + 1; j < n; j ++) {
                for (int k = j + 1; k < n; k ++) {
                    int d1 = dis(points[i], points[j]); 
                    int d2 = dis(points[i], points[k]); 
                    int d3 = dis(points[j], points[k]); 
                    if (d1 == d2 || d2 == d3 || d1 == d3) cnt ++; 
                }
            }
        }
        System.out.println(cnt);
        
    }
    private static int dis(int[] a, int[] b) {
        return (a[0] - b[0]) * (a[0] - b[0]) + (a[1] - b[1]) * (a[1] - b[1]); 
    }
}
"
21,E,Java,61484401,2023-03-24 19:59:20,ssssse,答案正确,"import java.lang.reflect.Array;
import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();

    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int x[] = new int[n];
            int y[] = new int[n];
            long ans = 0;
            for (int i = 0; i < n; i++) {
                x[i]= in.nextInt();
                y[i] = in.nextInt();
            }
            for (int i = 0; i < n; i++) {
                for (int j = i+1; j < n; j++) {
                    for (int k = j+1; k < n; k++) {
                        double a = Math.sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]));
                        double b = Math.sqrt((x[i]-x[k])*(x[i]-x[k])+(y[i]-y[k])*(y[i]-y[k]));
                        double c = Math.sqrt((x[k]-x[j])*(x[k]-x[j])+(y[k]-y[j])*(y[k]-y[j]));
//                        out.println(a+"" ""+b+"" ""+c);
                        if(a+b>c&&a+c>b&&b+c>a){
                            if(a==b||b==c||a==c){
                                ans++;
                            }
                        }
                    }
                }
            }
            out.println(ans);
        }
    }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        boolean hasNext() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e) {
                    return false;
                }
            }
            return true;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());

        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

    }
}"
22,E,Java,61484541,2023-03-24 20:00:31,232132323,答案错误,"import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int[] x = new int[n];
            int[] y = new int[n];
            long ans = 0;
            for (int i = 0; i < n; i++) {
                x[i] = in.nextInt();
                y[i] = in.nextInt();
                if (i > 1) {
                    for (int j = 0; j < i; j++) {
                        double dis = Math.sqrt((y[i] - y[j]) * (y[i] - y[j]) + (x[i] - x[j]) * (x[i] - x[j]));
                        for (int k = 0; k < j; k++) {
                            double dis1 = Math.sqrt((y[i] - y[k]) * (y[i] - y[k]) + (x[i] - x[k]) * (x[i] - x[k]));
                            double dis2 = Math.sqrt((y[j] - y[k]) * (y[j] - y[k]) + (x[j] - x[k]) * (x[j] - x[k]));
                            if (dis == dis1 || dis == dis2 || dis1 == dis2)
                                ans++;
//                            System.out.println(dis + "" "" + dis1 + "" "" + dis2);
                        }
                    }
                }
            }
            out.println(ans);
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        boolean hasNext() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e) {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

    }
}"
23,E,Java,61484608,2023-03-24 20:00:59,小怂很怂,答案错误,"
import java.io.*;

/**
 * @ClassName 等腰三角形
 * @Description TODO
 * @Author 小怂很怂
 * @Date 2023/3/24 19:50
 * @Version 1.0
 **/
public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(br);
    static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));

    public static void main(String[] args) throws Exception {
        int n=nextInt();
        int [][]f=new int[n][2];
        for (int i=0;i<n;i++){
            f[i][0]=nextInt();
            f[i][1]=nextInt();
        }
        int count=0;
        for (int i=0;i<n;i++){
            for (int j=i+1;j<n;j++){
                for (int k=j+1;k<n;k++){
                    long a= (long) (f[j][0] - f[i][0]) *(f[j][0]-f[i][0])+ (long) (f[j][1] - f[i][1]) *(f[j][1]-f[i][1]);
                    long b= (long) (f[k][0] - f[i][0]) *(f[k][0]-f[i][0])+ (long) (f[k][1] - f[i][1]) *(f[k][1]-f[i][1]);
                    long c= (long) (f[j][0] - f[k][0]) *(f[j][0]-f[k][0])+ (long) (f[j][1] - f[k][1]) *(f[j][1]-f[k][1]);
                    double aa=(f[j][1] - f[i][1])*1.0/(f[j][0] - f[i][0]);
                    double bb=(f[j][1] - f[k][1])*1.0/(f[j][0] - f[k][0]);
                    if (a==b||a==c||b==c&&(aa!=bb)) count++;
                }
            }
        }
        pw.println(count);
        pw.flush();
    }

    public static int nextInt() throws Exception {//int型
        st.nextToken();
        return (int) st.nval;
    }

    public static long nextLong() throws Exception {//long型
        st.nextToken();
        return (long) st.nval;
    }
}
"
24,E,Java,61484767,2023-03-24 20:02:06,小怂很怂,答案正确,"
import java.io.*;

/**
 * @ClassName 等腰三角形
 * @Description TODO
 * @Author 小怂很怂
 * @Date 2023/3/24 19:50
 * @Version 1.0
 **/
public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(br);
    static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));

    public static void main(String[] args) throws Exception {
        int n=nextInt();
        int [][]f=new int[n][2];
        for (int i=0;i<n;i++){
            f[i][0]=nextInt();
            f[i][1]=nextInt();
        }
        int count=0;
        for (int i=0;i<n;i++){
            for (int j=i+1;j<n;j++){
                for (int k=j+1;k<n;k++){
                    long a= (long) (f[j][0] - f[i][0]) *(f[j][0]-f[i][0])+ (long) (f[j][1] - f[i][1]) *(f[j][1]-f[i][1]);
                    long b= (long) (f[k][0] - f[i][0]) *(f[k][0]-f[i][0])+ (long) (f[k][1] - f[i][1]) *(f[k][1]-f[i][1]);
                    long c= (long) (f[j][0] - f[k][0]) *(f[j][0]-f[k][0])+ (long) (f[j][1] - f[k][1]) *(f[j][1]-f[k][1]);
                    double aa=(f[j][1] - f[i][1])*1.0/(f[j][0] - f[i][0]);
                    double bb=(f[j][1] - f[k][1])*1.0/(f[j][0] - f[k][0]);
                    double cc=(f[k][1] - f[i][1])*1.0/(f[k][0] - f[i][0]);
                    if ((a==b||a==c||b==c)&&(aa!=bb&&bb!=cc&&cc!=aa)) count++;
                }
            }
        }
        pw.println(count);
        pw.flush();
    }

    public static int nextInt() throws Exception {//int型
        st.nextToken();
        return (int) st.nval;
    }

    public static long nextLong() throws Exception {//long型
        st.nextToken();
        return (long) st.nval;
    }
}
"
25,E,Java,61484798,2023-03-24 20:02:19,232132323,答案错误,"import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int[] x = new int[n];
            int[] y = new int[n];
            long ans = 0;
            for (int i = 0; i < n; i++) {
                x[i] = in.nextInt();
                y[i] = in.nextInt();
                if (i > 1) {
                    for (int j = 0; j < i; j++) {
                        double dis = (y[i] - y[j]) * (y[i] - y[j]) + (x[i] - x[j]) * (x[i] - x[j]);
                        for (int k = 0; k < j; k++) {
                            double dis1 = (y[i] - y[k]) * (y[i] - y[k]) + (x[i] - x[k]) * (x[i] - x[k]);
                            double dis2 = (y[j] - y[k]) * (y[j] - y[k]) + (x[j] - x[k]) * (x[j] - x[k]);
                            if (dis == dis1 || dis == dis2 || dis1 == dis2)
                                ans++;
//
                        }
                    }
                }
            }
            out.println(ans);
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        boolean hasNext() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e) {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

    }
}"
26,E,Java,61484839,2023-03-24 20:02:43,232132323,答案错误,"import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int[] x = new int[n];
            int[] y = new int[n];
            long ans = 0;
            for (int i = 0; i < n; i++) {
                x[i] = in.nextInt();
                y[i] = in.nextInt();
                if (i > 1) {
                    for (int j = 1; j < i; j++) {
                        double dis = (y[i] - y[j]) * (y[i] - y[j]) + (x[i] - x[j]) * (x[i] - x[j]);
                        for (int k = 0; k < j; k++) {
                            double dis1 = (y[i] - y[k]) * (y[i] - y[k]) + (x[i] - x[k]) * (x[i] - x[k]);
                            double dis2 = (y[j] - y[k]) * (y[j] - y[k]) + (x[j] - x[k]) * (x[j] - x[k]);
                            if (dis == dis1 || dis == dis2 || dis1 == dis2)
                                ans++;
//
                        }
                    }
                }
            }
            out.println(ans);
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        boolean hasNext() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e) {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

    }
}"
27,E,Java,61484932,2023-03-24 20:03:29,菜鸡想进大厂～,答案错误,"import java.util.*;
import java.io.*;



public class Main{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] points = new int[n][2];
        for (int i = 0; i < n; i ++) {
            points[i][0] = sc.nextInt();
            points[i][1] = sc.nextInt();
        }
        long cnt = 0;
        for (int i = 0; i < n; i ++) {
            for (int j = i + 1; j < n; j ++) {
                for (int k = j + 1; k < n; k ++) {
                    if (points[i][0] * points[j][1] == points[i][1] * points[j][0]
                    && points[i][0] * points[k][1] == points[i][1] * points[k][0]) continue;
                    int d1 = dis(points[i], points[j]);
                    int d2 = dis(points[i], points[k]);
                    int d3 = dis(points[j], points[k]);
                    if (d1 == d2 || d2 == d3 || d1 == d3) cnt ++;
                }
            }
        }
        System.out.println(cnt);

    }
    private static int dis(int[] a, int[] b) {
        return (a[0] - b[0]) * (a[0] - b[0]) + (a[1] - b[1]) * (a[1] - b[1]);
    }
}

"
28,E,Java,61485028,2023-03-24 20:04:14,kk129,答案正确,"import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {

        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int[] x = new int[n];
            int[] y = new int[n];
            for (int i = 0; i < n; i++) {
                x[i] = in.nextInt();
                y[i] = in.nextInt();
            }
            int sum = 0;
            for (int i = 0; i < n-2; i++) {//a
                for (int j = i; j < n-1; j++) {//b
                    for (int k = j; k < n; k++) {//c
                        //ab
                        int xab = x[j]-x[i];
                        int yab = y[j]-y[i];
                        int xac = x[k]-x[i];
                        int yac = y[k]-y[i];
                        if(xab*yac!=yab*xac){
                            double ab = Math.sqrt((x[j]-x[i])*(x[j]-x[i])+(y[j]-y[i])*(y[j]-y[i]));
                            double bc = Math.sqrt((x[j]-x[k])*(x[j]-x[k])+(y[j]-y[k])*(y[j]-y[k]));
                            double ac = Math.sqrt((x[k]-x[i])*(x[k]-x[i])+(y[k]-y[i])*(y[k]-y[i]));
                            if(ab==bc||bc==ac||ac==ab)
                                sum++;
                        }
                    }
                }
            }
            out.println(sum);
        }
    }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;
        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}
"
29,E,Java,61485038,2023-03-24 20:04:17,牛客826200090号,答案错误,"
import java.util.*;
import java.io.*;

// public class Main {
//     public static void main(String[] args) {
//         ac in=new ac();
//         Comparator<int[]> cmp =( o1, o2)->{return o1[0] != o2[0] (?) o1[0] - o2[0] : o1[1] - o2[1];};
//         int n=in.nextInt();int t=in.nextInt();int p=in.nextInt();
//         long sum=0;
//         int arr[][]=new int [n][2];
//         for(int i=0;i<n;i++){
//             int a=in.nextInt();int b=in.nextInt();int c=in.nextInt();int x=in.nextInt();int y=in.nextInt();
//             int tmp=Math.max(c,a-x*b-y*p);
//             arr[i][0]=tmp;arr[i][1]=x;
//         }
//         Arrays.sort(arr,cmp);
//         in.println(sum);
//         in.flush();

// }
// }
class ac extends PrintWriter{
    StringTokenizer st;
    BufferedReader br;
    ac(){this(System.in,System.out);}
    ac(InputStream i,OutputStream o){
        super(o);br=new BufferedReader(new InputStreamReader(i));
    }
    String next(){
        try{while(st==null||!st.hasMoreTokens())st=new StringTokenizer(br.readLine());
        return st.nextToken();}catch (Exception e){}
        return null;
    }
    int nextInt(){return Integer.parseInt(next());}
    long nextLong(){return Long.parseLong(next());}
}


public class Main {
    public static void main(String[] args) {
        ac sc = new ac();
        int n = sc.nextInt();
        int[][] points = new int[n][2];
        for (int i = 0; i < n; i++) {
            points[i][0] = sc.nextInt();
            points[i][1] = sc.nextInt();
        }
        int count = 0;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                for (int k = j + 1; k < n; k++) {
                    if (isIsoscelesTriangle(points[i], points[j], points[k])) {
                        count++;
                    }
                }
            }
        }
        System.out.println(count);
    }

    public static boolean isIsoscelesTriangle(int[] p1, int[] p2, int[] p3) {
        double a = Math.sqrt((p1[0] - p2[0]) * (p1[0] - p2[0]) + (p1[1] - p2[1]) * (p1[1] - p2[1]));
        double b = Math.sqrt((p1[0] - p3[0]) * (p1[0] - p3[0]) + (p1[1] - p3[1]) * (p1[1] - p3[1]));
        double c = Math.sqrt((p2[0] - p3[0]) * (p2[0] - p3[0]) + (p2[1] - p3[1]) * (p2[1] - p3[1]));
        return a == b || a == c || b == c;
    }
}"
30,E,Java,61485044,2023-03-24 20:04:20,L-0720,答案正确,"import java.io.*;

public class Main {

    static StreamTokenizer reader = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
    
    public static void main(String[] args) throws IOException {
        int n = nextInt();
        int[][] arr = new int[n][2];
        for (int i = 0; i < n; i++) {
            int x = nextInt();
            int y = nextInt();
            arr[i][0] = x;
            arr[i][1] = y;
        }
        int res = 0;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                for (int k = j + 1; k < n; k++) {
                    if (arr[i][0] == arr[j][0] && arr[i][0] == arr[k][0] ||
                            arr[i][1] == arr[j][1] && arr[i][1] == arr[k][1]) continue;

                    double x1 = (double) (arr[i][0] + arr[j][0]) / 2.0;
                    double y1 = (double) (arr[i][1] + arr[j][1]) / 2.0;
                    double x2 = (double) (arr[i][0] + arr[k][0]) / 2.0;
                    double y2 = (double) (arr[i][1] + arr[k][1]) / 2.0;
                    double x3 = (double) (arr[k][0] + arr[j][0]) / 2.0;
                    double y3 = (double) (arr[k][1] + arr[j][1]) / 2.0;
                    if (x1 == arr[i][0] && y1 == arr[i][1] || x1 == arr[j][0] && y1 == arr[j][1] || x1 == arr[k][0] && y1 == arr[k][1]) continue;
                    if (x2 == arr[i][0] && y2 == arr[i][1] || x2 == arr[j][0] && y2 == arr[j][1] || x2 == arr[k][0] && y2 == arr[k][1]) continue;
                    if (x3 == arr[i][0] && y3 == arr[i][1] || x3 == arr[j][0] && y3 == arr[j][1] || x3 == arr[k][0] && y3 == arr[k][1]) continue;

                    double a = Math.sqrt(Math.pow(arr[i][0] - arr[j][0], 2) + Math.pow(arr[i][1] - arr[j][1], 2));
                    double b = Math.sqrt(Math.pow(arr[i][0] - arr[k][0], 2) + Math.pow(arr[i][1] - arr[k][1], 2));
                    double c = Math.sqrt(Math.pow(arr[j][0] - arr[k][0], 2) + Math.pow(arr[j][1] - arr[k][1], 2));
                    if (a == b || a == c || b == c) res++;
                }
            }
        }
        System.out.println(res);
    }

    public static int nextInt() throws IOException {
        reader.nextToken();
        return (int) reader.nval;
    }

}"
31,E,Java,61485316,2023-03-24 20:06:18,232132323,答案正确,"import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int[] x = new int[n];
            int[] y = new int[n];
            long ans = 0;
            for (int i = 0; i < n; i++) {
                x[i] = in.nextInt();
                y[i] = in.nextInt();
                if (i > 1) {
                    for (int j = 1; j < i; j++) {
                        double dis = Math.sqrt((y[i] - y[j]) * (y[i] - y[j]) + (x[i] - x[j]) * (x[i] - x[j]));
                        for (int k = 0; k < j; k++) {
                            double dis1 = Math.sqrt((y[i] - y[k]) * (y[i] - y[k]) + (x[i] - x[k]) * (x[i] - x[k]));
                            double dis2 = Math.sqrt((y[j] - y[k]) * (y[j] - y[k]) + (x[j] - x[k]) * (x[j] - x[k]));
                            if ((dis == dis1 || dis == dis2 || dis1 == dis2)&&(dis != dis1 + dis2 && dis1 != dis + dis2 && dis2 != dis + dis1))
                                ans++;
//
                        }
                    }
                }
            }
            out.println(ans);
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        boolean hasNext() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e) {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

    }
}"
32,E,Java,61485476,2023-03-24 20:07:34,何妨吟啸且徐行1,答案正确,"import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();

        // 将所有点存储到一个数组中
        int[][] points = new int[n][2];
        for (int i = 0; i < n; i++) {
            points[i][0] = scanner.nextInt();
            points[i][1] = scanner.nextInt();
        }

        int count = 0;
        // 枚举每一组可能的三个点
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                for (int k = j + 1; k < n; k++) {
                    // 如果这三个点构成等腰三角形，增加计数器
                    if (isIsoscelesTriangle(points[i], points[j], points[k])) {
                        count++;
                    }
                }
            }
        }

        System.out.println(count);
    }

    // 判断三个点是否构成等腰三角形
    private static boolean isIsoscelesTriangle(int[] a, int[] b, int[] c) {
        // 如果三个点共线，则不构成三角形
        if ((b[0] - a[0]) * (c[1] - a[1]) == (c[0] - a[0]) * (b[1] - a[1])) {
            return false;
        }

        // 计算三边长度
        double ab = Math.sqrt((b[0] - a[0]) * (b[0] - a[0]) + (b[1] - a[1]) * (b[1] - a[1]));
        double ac = Math.sqrt((c[0] - a[0]) * (c[0] - a[0]) + (c[1] - a[1]) * (c[1] - a[1]));
        double bc = Math.sqrt((c[0] - b[0]) * (c[0] - b[0]) + (c[1] - b[1]) * (c[1] - b[1]));

        // 如果任意两边相等，则构成等腰三角形
        return ab == ac || ab == bc || ac == bc;
    }
}
"
33,E,Java,61485548,2023-03-24 20:08:12,菜鸡想进大厂～,答案错误,"import java.util.*;
import java.io.*;



public class Main{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] points = new int[n][2];
        for (int i = 0; i < n; i ++) {
            points[i][0] = sc.nextInt();
            points[i][1] = sc.nextInt();
        }
        long cnt = 0;
        for (int i = 0; i < n; i ++) {
            for (int j = i + 1; j < n; j ++) {
                for (int k = j + 1; k < n; k ++) {
//                    if (points[i][0] * points[j][1] == points[i][1] * points[j][0]
//                    && points[i][0] * points[k][1] == points[i][1] * points[k][0]) continue;
                    int d1 = dis(points[i], points[j]);
                    int d2 = dis(points[i], points[k]);
                    int d3 = dis(points[j], points[k]);
                    int[] t = {d1,d2, d3}; 
                    Arrays.sort(t);
                    if (t[0] == t[1] && t[0] + t[1] > t[2]) cnt ++;
                }
            }
        }
        System.out.println(cnt);

    }
    private static int dis(int[] a, int[] b) {
        return (a[0] - b[0]) * (a[0] - b[0]) + (a[1] - b[1]) * (a[1] - b[1]);
    }
}

"
34,E,Java,61485654,2023-03-24 20:09:02,牛客517457762号,答案错误,"import java.util.*;
public class Main {
    static  int n;
    static  int[][]num;
    static  int ans=0;
    static Set<Integer> set=new HashSet<>();
    static  int[]curnum=new int[3];
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        n=sc.nextInt();
        num=new int[n][2];
        for(int i=0;i<n;i++) {
            num[i][0]=sc.nextInt();
            num[i][1]=sc.nextInt();
        }
        dfs(0,0);
        System.out.println(ans);
    }
    static  void dfs(int idx,int le){
        if(le==3){
            if(check()) ans++;
            return;
        }
        for(int i=idx;i<n;i++){
            if(set.contains(i)) continue;
            set.add(i);
            curnum[le]=i;
            dfs(i+1,le+1);
            set.remove(i);
        }
    }
    static  boolean check(){
        int a1=num[curnum[0]][0],b1=num[curnum[0]][1];
        int a2=num[curnum[1]][0],b2=num[curnum[1]][1];
        int a3=num[curnum[2]][0],b3=num[curnum[2]][1];
        if((a1==a2&&a2==a3)||(b1==b2&&b2==b3)) return  false;
        int s1=(a1-a2)*(a1-a2)+(b1-b2)*(b1-b2);
        int s2=(a1-a3)*(a1-a3)+(b1-b3)*(b1-b3);
        int s3=(a3-a2)*(a3-a2)+(b3-b2)*(b3-b2);
        if(s1==s2||s2==s3||s3==s1) return true;
        return  false;
    }
}"
35,E,Java,61485924,2023-03-24 20:11:18,菜鸡想进大厂～,答案错误,"import java.util.*;
import java.io.*;



public class Main{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] points = new int[n][2];
        for (int i = 0; i < n; i ++) {
            points[i][0] = sc.nextInt();
            points[i][1] = sc.nextInt();
        }
        long cnt = 0;
        for (int i = 0; i < n; i ++) {
            for (int j = i + 1; j < n; j ++) {
                for (int k = j + 1; k < n; k ++) {
//                    if (points[i][0] * points[j][1] == points[i][1] * points[j][0]
//                    && points[i][0] * points[k][1] == points[i][1] * points[k][0]) continue;
                    int d1 = dis(points[i], points[j]);
                    int d2 = dis(points[i], points[k]);
                    int d3 = dis(points[j], points[k]);
                    int[] t = {d1, d2, d3};
                    Arrays.sort(t);
                    if (t[0] == t[1] && t[0] + t[1] > t[2] && t[2] - t[1] < t[0]) cnt ++;
                }
            }
        }
        System.out.println(cnt);

    }
    private static int dis(int[] a, int[] b) {
        return (a[0] - b[0]) * (a[0] - b[0]) + (a[1] - b[1]) * (a[1] - b[1]);
    }
}

"
36,E,Java,61486017,2023-03-24 20:12:02,牛客826200090号,答案错误,"
import java.util.*;
import java.io.*;

class ac extends PrintWriter{
    StringTokenizer st;
    BufferedReader br;
    ac(){this(System.in,System.out);}
    ac(InputStream i,OutputStream o){
        super(o);br=new BufferedReader(new InputStreamReader(i));
    }
    String next(){
        try{while(st==null||!st.hasMoreTokens())st=new StringTokenizer(br.readLine());
        return st.nextToken();}catch (Exception e){}
        return null;
    }
    int nextInt(){return Integer.parseInt(next());}
    long nextLong(){return Long.parseLong(next());}
}


public class Main {
    public static void main(String[] args) {
        ac sc = new ac();
        int n = sc.nextInt();
        int[][] points = new int[n][2];
        for (int i = 0; i < n; i++) {
            points[i][0] = sc.nextInt();
            points[i][1] = sc.nextInt();
        }
        int count = 0;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                for (int k = j + 1; k < n; k++) {
                    if (is(points[i], points[j], points[k])) {
                        
                        count++;
                    }
                }
            }
        }
        System.out.println(count);
    }

    public static boolean is(int[] p1, int[] p2, int[] p3) {
        if(p1[0]==p2[0])if(p1[0]==p3[0])return false;
        if(p1[1]==p2[1])if(p1[1]==p3[1])return false;
        double a = Math.sqrt((p1[0] - p2[0]) * (p1[0] - p2[0]) + (p1[1] - p2[1]) * (p1[1] - p2[1]));
        double b = Math.sqrt((p1[0] - p3[0]) * (p1[0] - p3[0]) + (p1[1] - p3[1]) * (p1[1] - p3[1]));
        double c = Math.sqrt((p2[0] - p3[0]) * (p2[0] - p3[0]) + (p2[1] - p3[1]) * (p2[1] - p3[1]));
        return a == b || a == c || b == c;
    }
}"
37,E,Java,61486241,2023-03-24 20:13:52,wkkwmm,答案错误,"import javax.swing.plaf.IconUIResource;
import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {

        public void solve(int testNumber, InputReader in, PrintWriter out) {
          int n=in.nextInt();
          double a[]=new double[n];
          double b[]=new double[n];
            for (int i = 0; i <n ; i++) {
                a[i]=in.nextDouble();
                b[i]=in.nextDouble();
            }
            int sum=0;
            for (int i = 0; i < n-2; i++) {
                for (int j = i+1; j <n-1 ; j++) {
                    for (int k = j+1; k <n ; k++) {
                        double k1=(b[j]-b[i])/(a[j]-a[i]);
                        double k2=(b[k]-b[i])/(a[k]-a[i]);
                        if(k1!=k2){
                            double l1=Math.sqrt((a[i]-a[j])*(a[i]-a[j])+(b[i]-b[j])*(b[i]-b[j]));
                            double l2=Math.sqrt((a[k]-a[j])*(a[k]-a[j])+(b[k]-b[j])*(b[k]-b[j]));
                            double l3=Math.sqrt((a[k]-a[i])*(a[k]-a[i])+(b[k]-b[i])*(b[k]-b[i]));
                            if(l1==l2||l2==l3||l3==l1){
                                sum++;
                            }
                        }
                    }
                }
            }
            out.println(sum);
        }

    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }

    }
}"
38,E,Java,61486518,2023-03-24 20:16:09,智破云霄,答案错误,"import java.util.*;
import java.io.*;
public class Main {
public static void main(String[] args) {
 InputReader in = new InputReader(System.in);
PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        int n = in.nextInt();
        int[][] arr = new int[n][2];
        for(int i = 0;i <n;i ++)
        {
        	arr[i][0] = in.nextInt();
        	arr[i][1] = in.nextInt();
        }
        int res = 0;
        for(int i = 0;i < n;i ++)
        	for(int j = i+1;j < n;j ++)
        		for(int k = j+1;k < n;k ++)
        		{
        			long l1 = (long)(arr[i][0]-arr[j][0])*(arr[i][0]-arr[j][0])+(long)(arr[i][1]-arr[j][1])*(arr[i][1]-arr[j][1]);
        			long l2 = (long)(arr[i][0]-arr[k][0])*(arr[i][0]-arr[k][0])+(long)(arr[i][1]-arr[k][1])*(arr[i][1]-arr[k][1]);
        			long l3 = (long)(arr[k][0]-arr[j][0])*(arr[k][0]-arr[j][0])+(long)(arr[k][1]-arr[j][1])*(arr[k][1]-arr[j][1]);
        			
        			if(l1+l2>l3 || l1+l3>l2||l3+l2>l1)
        			{
        				if(l1==l2 || l1==l3 || l2==l3)
            				res ++;
        			}
        		}
	out.println(res);
	out.flush();
}
}


class InputReader {
    private final BufferedReader buf;
    private StringTokenizer tkl;

    public InputReader(InputStream is) {
        buf = new BufferedReader(new InputStreamReader(is));
    }

    public boolean hasNext() {
        try {
            while (tkl == null || !tkl.hasMoreElements()) tkl = new StringTokenizer(buf.readLine());
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public String next() {
        return hasNext() (?) tkl.nextToken() : null;
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }
}
"
39,E,Java,61486665,2023-03-24 20:17:20,智破云霄,答案错误,"import java.util.*;
import java.io.*;
public class Main {
public static void main(String[] args) {
 InputReader in = new InputReader(System.in);
PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        int n = in.nextInt();
        int[][] arr = new int[n][2];
        for(int i = 0;i <n;i ++)
        {
        	arr[i][0] = in.nextInt();
        	arr[i][1] = in.nextInt();
        }
        int res = 0;
        for(int i = 0;i < n;i ++)
        	for(int j = i+1;j < n;j ++)
        		for(int k = j+1;k < n;k ++)
        		{
        			long l1 = (long)(arr[i][0]-arr[j][0])*(arr[i][0]-arr[j][0])+(long)(arr[i][1]-arr[j][1])*(arr[i][1]-arr[j][1]);
        			long l2 = (long)(arr[i][0]-arr[k][0])*(arr[i][0]-arr[k][0])+(long)(arr[i][1]-arr[k][1])*(arr[i][1]-arr[k][1]);
        			long l3 = (long)(arr[k][0]-arr[j][0])*(arr[k][0]-arr[j][0])+(long)(arr[k][1]-arr[j][1])*(arr[k][1]-arr[j][1]);
        			
        			if(l1+l2>l3 || l1+l3>l2||l3+l2>l1)
        			{
        				if(l1!=0 && l2!=0 &&l3!=0)
                        {
                            if(l1==l2 || l1==l3 || l2==l3)
            				res ++;
                        }
        			}
        		}
	out.println(res);
	out.flush();
}
}


class InputReader {
    private final BufferedReader buf;
    private StringTokenizer tkl;

    public InputReader(InputStream is) {
        buf = new BufferedReader(new InputStreamReader(is));
    }

    public boolean hasNext() {
        try {
            while (tkl == null || !tkl.hasMoreElements()) tkl = new StringTokenizer(buf.readLine());
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public String next() {
        return hasNext() (?) tkl.nextToken() : null;
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }
}
"
40,E,Java,61486758,2023-03-24 20:18:10,智破云霄,答案错误,"import java.util.*;
import java.io.*;
public class Main {
public static void main(String[] args) {
 InputReader in = new InputReader(System.in);
PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        int n = in.nextInt();
        int[][] arr = new int[n][2];
        for(int i = 0;i <n;i ++)
        {
        	arr[i][0] = in.nextInt();
        	arr[i][1] = in.nextInt();
        }
        long res = 0;
        for(int i = 0;i < n;i ++)
        	for(int j = i+1;j < n;j ++)
        		for(int k = j+1;k < n;k ++)
        		{
        			long l1 = (long)(arr[i][0]-arr[j][0])*(arr[i][0]-arr[j][0])+(long)(arr[i][1]-arr[j][1])*(arr[i][1]-arr[j][1]);
        			long l2 = (long)(arr[i][0]-arr[k][0])*(arr[i][0]-arr[k][0])+(long)(arr[i][1]-arr[k][1])*(arr[i][1]-arr[k][1]);
        			long l3 = (long)(arr[k][0]-arr[j][0])*(arr[k][0]-arr[j][0])+(long)(arr[k][1]-arr[j][1])*(arr[k][1]-arr[j][1]);
        			if(l1+l2>l3 || l1+l3>l2||l3+l2>l1)
        			{
        				if(l1!=0 && l2!=0 &&l3!=0)
                        {
                            if(l1==l2 || l1==l3 || l2==l3)
            				res ++;
                        }
        			}
        		}
	out.println(res);
	out.flush();
}
}


class InputReader {
    private final BufferedReader buf;
    private StringTokenizer tkl;

    public InputReader(InputStream is) {
        buf = new BufferedReader(new InputStreamReader(is));
    }

    public boolean hasNext() {
        try {
            while (tkl == null || !tkl.hasMoreElements()) tkl = new StringTokenizer(buf.readLine());
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public String next() {
        return hasNext() (?) tkl.nextToken() : null;
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }
}
"
41,E,Java,61486995,2023-03-24 20:20:15,菜鸡想进大厂～,答案错误,"import java.nio.Buffer;
import java.util.*;
import java.io.*;



public class Main{
    public static void main(String[] args) throws Exception{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String[] ss = br.readLine().split("" "");
        int n = Integer.parseInt(ss[0]);
        int[][] points = new int[n][2];
        for (int i = 0; i < n; i ++) {
            ss = br.readLine().split("" "");
            points[i][0] = Integer.parseInt(ss[0]);
            points[i][1] = Integer.parseInt(ss[1]);
        }
        long cnt = 0;
        for (int i = 0; i < n; i ++) {
            for (int j = i + 1; j < n; j ++) {
                for (int k = j + 1; k < n; k ++) {
//                    if (points[i][0] * points[j][1] == points[i][1] * points[j][0]
//                    && points[i][0] * points[k][1] == points[i][1] * points[k][0]) continue;
                    int d1 = dis(points[i], points[j]);
                    int d2 = dis(points[i], points[k]);
                    int d3 = dis(points[j], points[k]);
                    int[] t = {d1, d2, d3};
                    Arrays.sort(t);
                    if (t[0] == t[1] && Math.sqrt(t[0]) + Math.sqrt(t[1]) > Math.sqrt(t[2])) cnt ++;
                }
            }
        }
        System.out.println(cnt);

    }
    private static int dis(int[] a, int[] b) {
        return (a[0] - b[0]) * (a[0] - b[0]) + (a[1] - b[1]) * (a[1] - b[1]);
    }
}

"
42,E,Java,61487023,2023-03-24 20:20:28,人工智能3221闫文杰,答案错误,"
import java.io.*;
import java.util.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;


public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }
    static class TaskA {
        public static double f(int x,int y){
            return Math.sqrt(1.0 * (x * x + y * y));
        }
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int[][] m = new int[n][2];
            int sum = 0;
            for (int i = 0; i < n; i++) {
                m[i][0] = in.nextInt();
                m[i][1] = in.nextInt();
            }
            for (int i = 0; i < n; i++) {
                for (int j = i+1; j < n; j++) {
                    for (int k = j+1; k < n; k++) {
                        if (f(m[i][0]-m[j][0],m[j][1]-m[i][1]) == f(m[k][0]-m[j][0],m[j][1]-m[k][1]) || f(m[i][0]-m[j][0],m[j][1]-m[i][1]) == f(m[k][0]-m[i][0],m[i][1]-m[k][1]) || f(m[i][0]-m[k][0],m[k][1]-m[i][1]) == f(m[k][0]-m[j][0],m[j][1]-m[k][1]))
                            sum++;
                    }
                }
            }
            out.println(sum);
        }
    }


    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public boolean hasNext() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    return false;
                }
            }
            return true;
        }
    }
}"
43,E,Java,61487371,2023-03-24 20:23:26,人工智能3221黄天鲁,答案错误,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner=new Scanner(System.in);
        int n= scanner.nextInt();
       double []x=new double[n];
        double []y=new double[n];
        for (int i = 0; i <n; i++) {
            x[i]= scanner.nextInt();
            y[i]= scanner.nextInt();
        }
        int gs=0;
        for (int i = 0; i < n-2; i++) {
            for (int j = i+1; j <n-1; j++) {
                for (int k =j+1; k <n ; k++) {
                    double sum1=Math.sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]));
                   double sum2=Math.sqrt((x[i]-x[k])*(x[i]-x[k])+(y[i]-y[k])*(y[i]-y[k]));
                    double sum3=sum1;
                    double sum4=Math.sqrt((x[j]-x[k])*(x[j]-x[k])+(y[j]-y[k])*(y[j]-y[k]));
                   double sum5=sum4;
                   double sum6=sum2;
                   if(sum1==sum2||sum3==sum4||sum5==sum6){
                       gs++;
                   }

                }
            }
        }
        System.out.println(gs);
    }
}
"
44,E,Java,61487455,2023-03-24 20:23:58,lllllllle,答案正确,"

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Queue;
import java.util.Scanner;
import java.util.Set;


public class Main {
	
	
	public static void main(String[] args) throws IOException {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		PrintWriter pw=new PrintWriter(new OutputStreamWriter(System.out));
		String[] s=br.readLine().split("" "");
		int n=Integer.parseInt(s[0]);
		int[][] cd=new int[n][2];
		for(int i=0;i<n;i++) {
			s=br.readLine().split("" "");
			cd[i][0]=Integer.parseInt(s[0]);
			cd[i][1]=Integer.parseInt(s[1]);
		}
		int ans=0;
		for(int i=0;i<n;i++) {
			for(int j=i+1;j<n;j++) {
				for(int k=j+1;k<n;k++) {
					if(ckeck(cd,i,j,k)) {
						ans++;
					}
				}
			}
		}
		System.out.println(ans);
		
	}

	private static boolean ckeck(int[][] cd, int a, int b, int c) {
		long t1=(cd[a][0]-cd[b][0])*(cd[a][0]-cd[b][0])+(cd[a][1]-cd[b][1])*(cd[a][1]-cd[b][1]);
		long t2=(cd[a][0]-cd[c][0])*(cd[a][0]-cd[c][0])+(cd[a][1]-cd[c][1])*(cd[a][1]-cd[c][1]);
		long t3=(cd[c][0]-cd[b][0])*(cd[c][0]-cd[b][0])+(cd[c][1]-cd[b][1])*(cd[c][1]-cd[b][1]);
		if(t1==t2||t1==t3||t2==t3) {
			if((cd[c][0]-cd[a][0])*(cd[b][1]-cd[a][1])==(cd[c][1]-cd[a][1])*(cd[b][0]-cd[a][0])) {
				return false;
			}
			return true;
		}
		return false;
	}
	
	
}
"
45,E,Java,61487683,2023-03-24 20:25:50,人工智能3221闫文杰,答案错误,"

import java.io.*;
import java.util.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;


public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }
    static class TaskA {
        public static int f(int x,int y){
            return x * x + y * y;
        }
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int[][] m = new int[n][2];
            int sum = 0;
            for (int i = 0; i < n; i++) {
                m[i][0] = in.nextInt();
                m[i][1] = in.nextInt();
            }
            for (int i = 0; i < n; i++) {
                for (int j = i+1; j < n; j++) {
                    for (int k = j+1; k < n; k++) {
                        if (f(m[i][0]-m[j][0],m[j][1]-m[i][1]) == f(m[k][0]-m[j][0],m[j][1]-m[k][1]) || f(m[i][0]-m[j][0],m[j][1]-m[i][1]) == f(m[k][0]-m[i][0],m[i][1]-m[k][1]) || f(m[i][0]-m[k][0],m[k][1]-m[i][1]) == f(m[k][0]-m[j][0],m[j][1]-m[k][1]))
                            sum++;
                    }
                }
            }
//            System.out.println(f(2,3));
            out.println(sum);
        }
    }


    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public boolean hasNext() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    return false;
                }
            }
            return true;
        }
    }
}"
46,E,Java,61487723,2023-03-24 20:26:06,智破云霄,答案正确,"import java.util.*;
import java.io.*;
public class Main {
public static void main(String[] args) {
 InputReader in = new InputReader(System.in);
PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        int n = in.nextInt();
        double[][] arr = new double[n][2];
        for(int i = 0;i <n;i ++)
        {
        	arr[i][0] = in.nextDouble();
        	arr[i][1] = in.nextDouble();
        }
        long res = 0;
        for(int i = 0;i < n;i ++)
        	for(int j = i+1;j < n;j ++)
        		for(int k = j+1;k < n;k ++)
        		{
        			
        			double l1 = Math.sqrt(Math.pow(arr[i][0]-arr[j][0], 2)+Math.pow(arr[i][1]-arr[j][1],2));
        			double l2 =  Math.sqrt(Math.pow(arr[k][0]-arr[j][0], 2)+Math.pow(arr[k][1]-arr[j][1],2));
        			double l3 =  Math.sqrt(Math.pow(arr[i][0]-arr[k][0], 2)+Math.pow(arr[i][1]-arr[k][1],2));
        			if(l1+l2>l3 && l1+l3>l2&&l3+l2>l1)
        			{
        				if(l1!=0 && l2!=0 &&l3!=0)
                        {
                            if(l1==l2 || l1==l3 || l2==l3)
            				res ++;
                        }
        			}
        		}
	out.println(res);
	out.flush();
}
}


class InputReader {
    private final BufferedReader buf;
    private StringTokenizer tkl;

    public InputReader(InputStream is) {
        buf = new BufferedReader(new InputStreamReader(is));
    }

    public boolean hasNext() {
        try {
            while (tkl == null || !tkl.hasMoreElements()) tkl = new StringTokenizer(buf.readLine());
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public String next() {
        return hasNext() (?) tkl.nextToken() : null;
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }
}
"
47,E,Java,61487758,2023-03-24 20:26:27,wkkwmm,答案正确,"import javax.swing.plaf.IconUIResource;
import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {

        public void solve(int testNumber, InputReader in, PrintWriter out) {
          int n=in.nextInt();
          double a[]=new double[n];
          double b[]=new double[n];
            for (int i = 0; i <n ; i++) {
                a[i]=in.nextDouble();
                b[i]=in.nextDouble();
            }
            int sum=0;
            for (int i = 0; i < n-2; i++) {
                for (int j = i+1; j <n-1 ; j++) {
                    for (int k = j+1; k <n ; k++) {
                        if((a[j]-a[i])*(b[k]-b[i])!=(b[j]-b[i])*(a[k]-a[i])){
                            double l1=Math.sqrt((a[i]-a[j])*(a[i]-a[j])+(b[i]-b[j])*(b[i]-b[j]));
                            double l2=Math.sqrt((a[k]-a[j])*(a[k]-a[j])+(b[k]-b[j])*(b[k]-b[j]));
                            double l3=Math.sqrt((a[k]-a[i])*(a[k]-a[i])+(b[k]-b[i])*(b[k]-b[i]));
                            if(l1==l2||l2==l3||l3==l1){
                                sum++;
                            }
                        }
                    }
                }
            }
            out.println(sum);
        }

    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }

    }
}"
48,E,Java,61487789,2023-03-24 20:26:43,人工智能3221黄天鲁,答案错误,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner=new Scanner(System.in);
        int n= scanner.nextInt();
       double []x=new double[n];
        double []y=new double[n];
        for (int i = 0; i <n; i++) {
            x[i]= scanner.nextInt();
            y[i]= scanner.nextInt();
        }
        int gs=0;
        for (int i = 0; i < n-2; i++) {
            for (int j = i+1; j <n-1; j++) {
                for (int k =j+1; k <n ; k++) {
                    double sum1=Math.sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]));
                   double sum2=Math.sqrt((x[i]-x[k])*(x[i]-x[k])+(y[i]-y[k])*(y[i]-y[k]));
                    double sum3=Math.sqrt((x[j]-x[i])*(x[j]-x[i])+(y[j]-y[i])*(y[j]-y[i]));
                    double sum4=Math.sqrt((x[j]-x[k])*(x[j]-x[k])+(y[j]-y[k])*(y[j]-y[k]));
                   double sum5=Math.sqrt((x[k]-x[j])*(x[k]-x[j])+(y[k]-y[j])*(y[k]-y[j]));
                   double sum6=Math.sqrt((x[k]-x[i])*(x[k]-x[i])+(y[k]-y[i])*(y[k]-y[i]));
                   if(sum1==sum2||sum3==sum4||sum5==sum6){
                       gs++;
                   }

                }
            }
        }
        System.out.println(gs);
    }
}
"
49,E,Java,61488275,2023-03-24 20:30:11,人工智能3221黄天鲁,答案错误,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner=new Scanner(System.in);
        int n= scanner.nextInt();
       double []x=new double[n];
        double []y=new double[n];
        for (int i = 0; i <n; i++) {
            x[i]= scanner.nextInt();
            y[i]= scanner.nextInt();
        }
        int gs=0;
        for (int i = 0; i < n-2; i++) {
            for (int j = i+1; j <n-1; j++) {
                for (int k =j+1; k <n ; k++) {
                    int pd=0;
                    double sum1=Math.sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]));
                   double sum2=Math.sqrt((x[i]-x[k])*(x[i]-x[k])+(y[i]-y[k])*(y[i]-y[k]));
                    double sum3=Math.sqrt((x[j]-x[i])*(x[j]-x[i])+(y[j]-y[i])*(y[j]-y[i]));
                    double sum4=Math.sqrt((x[j]-x[k])*(x[j]-x[k])+(y[j]-y[k])*(y[j]-y[k]));
                   double sum5=Math.sqrt((x[k]-x[j])*(x[k]-x[j])+(y[k]-y[j])*(y[k]-y[j]));
                   double sum6=Math.sqrt((x[k]-x[i])*(x[k]-x[i])+(y[k]-y[i])*(y[k]-y[i]));
                   if((x[i]==x[j]&&x[i]==x[k])||(y[i]==y[j]&&y[i]==y[k])){
                       pd=1;
                   }
                   if(pd==0){
                       if(sum1==sum2||sum3==sum4||sum5==sum6){
                           gs++;
                       }
                   }


                }
            }
        }
        System.out.println(gs);
    }
}
"
50,E,Java,61488393,2023-03-24 20:31:14,牛客826200090号,答案错误,"
import java.util.*;
import java.io.*;

class ac extends PrintWriter{
    StringTokenizer st;
    BufferedReader br;
    ac(){this(System.in,System.out);}
    ac(InputStream i,OutputStream o){
        super(o);br=new BufferedReader(new InputStreamReader(i));
    }
    String next(){
        try{while(st==null||!st.hasMoreTokens())st=new StringTokenizer(br.readLine());
        return st.nextToken();}catch (Exception e){}
        return null;
    }
    int nextInt(){return Integer.parseInt(next());}
    long nextLong(){return Long.parseLong(next());}
}


public class Main {
    public static void main(String[] args) {
        ac sc = new ac();
        int n = sc.nextInt();
        int[][] points = new int[n][2];
        for (int i = 0; i < n; i++) {
            points[i][0] = sc.nextInt();
            points[i][1] = sc.nextInt();
        }
        int count = 0;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                for (int k = j + 1; k < n; k++) {
                    if (is(points[i], points[j], points[k])) {
                        
                        count++;
                    }
                }
            }
        }
        System.out.println(count);
    }

    public static boolean is(int[] p1, int[] p2, int[] p3) {
        if(p1[0]==p2[0]){if(p1[0]==p3[0])return false;}
        if(p1[1]==p2[1]){if(p1[1]==p3[1])return false;}
        double a = Math.sqrt((p1[0] - p2[0]) * (p1[0] - p2[0]) + (p1[1] - p2[1]) * (p1[1] - p2[1]));
        double b = Math.sqrt((p1[0] - p3[0]) * (p1[0] - p3[0]) + (p1[1] - p3[1]) * (p1[1] - p3[1]));
        double c = Math.sqrt((p2[0] - p3[0]) * (p2[0] - p3[0]) + (p2[1] - p3[1]) * (p2[1] - p3[1]));
        return a == b || a == c || b == c;
    }
}"
51,E,Java,61488850,2023-03-24 20:35:26,人工智能3221黄天鲁,答案正确,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner=new Scanner(System.in);
        int n= scanner.nextInt();
       double []x=new double[n];
        double []y=new double[n];
        for (int i = 0; i <n; i++) {
            x[i]= scanner.nextInt();
            y[i]= scanner.nextInt();
        }
        int gs=0;
        for (int i = 0; i < n-2; i++) {
            for (int j = i+1; j <n-1; j++) {
                for (int k =j+1; k <n ; k++) {
                    int pd=0;
                    double sum1=Math.sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]));
                   double sum2=Math.sqrt((x[i]-x[k])*(x[i]-x[k])+(y[i]-y[k])*(y[i]-y[k]));
                    double sum3=Math.sqrt((x[j]-x[i])*(x[j]-x[i])+(y[j]-y[i])*(y[j]-y[i]));
                    double sum4=Math.sqrt((x[j]-x[k])*(x[j]-x[k])+(y[j]-y[k])*(y[j]-y[k]));
                   double sum5=Math.sqrt((x[k]-x[j])*(x[k]-x[j])+(y[k]-y[j])*(y[k]-y[j]));
                   double sum6=Math.sqrt((x[k]-x[i])*(x[k]-x[i])+(y[k]-y[i])*(y[k]-y[i]));
                   if((x[i]==x[j]&&x[i]==x[k])||(y[i]==y[j]&&y[i]==y[k])){
                       pd=1;
                   }
                   if(sum1+sum2>sum4&&sum1+sum4>sum2&&sum4+sum2>sum1&&sum1-sum2<sum4&&sum1-sum4<sum2&&sum4-sum2<sum1){
                       if(pd==0){
                           if(sum1==sum2||sum3==sum4||sum5==sum6){
                               gs++;
                           }
                       }
                   }
                }
            }
        }
        System.out.println(gs);
    }
}
"
52,E,Java,61488898,2023-03-24 20:35:49,人工智能3221闫文杰,答案正确,"
import java.io.*;
import java.util.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;


public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }
    static class TaskA {
        public static int f(int x,int y){
            return x * x + y * y;
        }
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int[][] m = new int[n][2];
            int [] x=new int[n+10];
            int [] y=new int[n+10];
            int sum = 0;
            for (int i = 0; i < n; i++) {
                x[i]=in.nextInt();
                y[i]=in.nextInt();
            }
            int ans=0;
            for (int i = 0; i < n; i++) {
                for (int j = i+1; j < n; j++) {
                    for (int k = j+1; k < n; k++) {
                        if((x[i]-x[j])*(y[j]-y[k])!=(x[j]-x[k])*(y[i]-y[j])){
                            int a = (x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]);
                            int b = (x[i]-x[k])*(x[i]-x[k])+(y[i]-y[k])*(y[i]-y[k]);
                            int c = (x[j]-x[k])*(x[j]-x[k])+(y[j]-y[k])*(y[j]-y[k]);
                            if(a==b||b==c||a==c){
                                ans++;
                            }
                        }
                    }
                }
            }
//            System.out.println(f(2,3));
            out.println(ans);
        }
    }


    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public boolean hasNext() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    return false;
                }
            }
            return true;
        }
    }
}"
53,E,Java,61488923,2023-03-24 20:36:01,黄明勇,答案错误,"import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.StreamTokenizer;
import java.util.ArrayList;
public class Main{
	static Node[] nodes;
	public static void main(String[] args) throws Exception{
		Reader sc = new Reader();
//		Scanner sc = new Scanner(System.in);
//		PrintWriter pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
		int n = sc.nextInt();
		nodes = new Node[n];
		for(int i = 0; i < n; i++) {
			nodes[i] = new Node(sc.nextInt(),sc.nextInt());
		}
		int sum = 0;
		for(int i = 0; i < n; i++) {
			for(int j = 0; j < n; j++) {
				for(int k = 0; k < n; k++) {
					if(i == j || i == k || j == k) continue;
					sum += dis(i, j, k);
				}
			}
		}
		System.out.println(sum / 6);
	}
	public static int dis(int a, int b, int c) {
		if(nodes[a].x == nodes[b].x && nodes[b].x ==  nodes[c].x 
				|| nodes[a].y == nodes[b].y && nodes[b].y == nodes[c].y) {
			return 0;
		}
		double da = distant(a, b);
		double db = distant(b, c);
		double dc = distant(c, a);
		if(da == db || da == dc || db == dc) return 1;
		return 0;
	}
	public static double distant(int x, int y) {
		return Math.pow((nodes[x].x - nodes[y].x), 2) + Math.pow((nodes[x].y - nodes[y].y), 2);
	}
}
class Node {
	int x;
	int y;
	public Node(int x, int y) {
		super();
		this.x = x;
		this.y = y;
	}
}
class Reader{
	StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
	public int nextInt () throws Exception {
		st.nextToken();
		return (int)st.nval;
	}
	public String next() throws Exception {
		st.nextToken();
		return st.sval;
	}
}
"
54,E,Java,61489044,2023-03-24 20:36:58,黄明勇,答案错误,"import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.StreamTokenizer;
import java.util.ArrayList;
public class Main{
	static Node[] nodes;
	public static void main(String[] args) throws Exception{
		Reader sc = new Reader();
//		Scanner sc = new Scanner(System.in);
//		PrintWriter pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
		int n = sc.nextInt();
		nodes = new Node[n];
		for(int i = 0; i < n; i++) {
			nodes[i] = new Node(sc.nextInt(),sc.nextInt());
		}
		int sum = 0;
		for(int i = 0; i < n; i++) {
			for(int j = 0; j < n; j++) {
				for(int k = 0; k < n; k++) {
					if(i == j || i == k || j == k) continue;
					sum += dis(i, j, k);
				}
			}
		}
		System.out.println(sum / 6);
	}
	public static int dis(int a, int b, int c) {
		if(nodes[a].x == nodes[b].x && nodes[b].x ==  nodes[c].x 
				|| nodes[a].y == nodes[b].y && nodes[b].y == nodes[c].y) {
			return 0;
		}
		double da = distant(a, b);
		double db = distant(b, c);
		double dc = distant(c, a);
		if(da == db || da == dc || db == dc) return 1;
		return 0;
	}
	public static double distant(int x, int y) {
		return Math.pow(Math.abs((nodes[x].x - nodes[y].x)), 2) + Math.pow(Math.abs((nodes[x].y - nodes[y].y)), 2);
	}
}
class Node {
	int x;
	int y;
	public Node(int x, int y) {
		super();
		this.x = x;
		this.y = y;
	}
}
class Reader{
	StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
	public int nextInt () throws Exception {
		st.nextToken();
		return (int)st.nval;
	}
	public String next() throws Exception {
		st.nextToken();
		return st.sval;
	}
}
"
55,E,Java,61489110,2023-03-24 20:37:30,黄明勇,答案错误,"import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.StreamTokenizer;
import java.util.ArrayList;
public class Main{
	static Node[] nodes;
	public static void main(String[] args) throws Exception{
		Reader sc = new Reader();
//		Scanner sc = new Scanner(System.in);
//		PrintWriter pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
		int n = sc.nextInt();
		nodes = new Node[n];
		for(int i = 0; i < n; i++) {
			nodes[i] = new Node(sc.nextInt(),sc.nextInt());
		}
		int sum = 0;
		for(int i = 0; i < n; i++) {
			for(int j = 0; j < n; j++) {
				for(int k = 0; k < n; k++) {
					if(i == j || i == k || j == k) continue;
					sum += dis(i, j, k);
				}
			}
		}
		System.out.println(sum / 6);
	}
	public static int dis(int a, int b, int c) {
		if(nodes[a].x == nodes[b].x && nodes[b].x ==  nodes[c].x 
				|| nodes[a].y == nodes[b].y && nodes[b].y == nodes[c].y) {
			return 0;
		}
		double da = distant(a, b);
		double db = distant(b, c);
		double dc = distant(c, a);
		if(da == db || da == dc || db == dc) return 1;
		return 0;
	}
	public static double distant(int x, int y) {
		return Math.sqrt(Math.pow(Math.abs((nodes[x].x - nodes[y].x)), 2) + Math.pow(Math.abs((nodes[x].y - nodes[y].y)), 2));
	}
}
class Node {
	int x;
	int y;
	public Node(int x, int y) {
		super();
		this.x = x;
		this.y = y;
	}
}
class Reader{
	StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
	public int nextInt () throws Exception {
		st.nextToken();
		return (int)st.nval;
	}
	public String next() throws Exception {
		st.nextToken();
		return st.sval;
	}
}
"
56,E,Java,61489161,2023-03-24 20:37:53,郑士文,答案正确,"import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static int num(int a1[],int a2[]){
        return (a1[0]-a2[0])*(a1[0]-a2[0])+(a1[1]-a2[1])*(a1[1]-a2[1]);
    }
    public static boolean check(int a1[],int a2[],int a3[]){
        if (num(a1,a2)==num(a1,a3)){
            if(num(a2,a3)==4*num(a1,a2)) return false;
            return true;
        }
        if (num(a2,a1)==num(a2,a3)) {
            if(num(a1,a3)==4*num(a2,a1)) return false;
            return true;
        }
        if (num(a3,a1)==num(a3,a2)) {
            if(num(a1,a2)==4*num(a3,a1)) return false;
            return true;
        }
        return false;
    }
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        int ans=0;
        int n=sc.nextInt();
        int a[][]=new int[n][2];
        for(int i=0;i<n;i++){
            a[i][0]=sc.nextInt();
            a[i][1]=sc.nextInt();
        }
        for(int i=0;i<n;i++){
            for(int j=i+1;j<n;j++){
                for(int k=j+1;k<n;k++){
                    if(check(a[i],a[j],a[k])){
                        ans++;
                    }
                }
            }
        }
        System.out.println(ans);
    }
}"
57,E,Java,61489353,2023-03-24 20:39:34,黄明勇,答案错误,"import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.StreamTokenizer;
import java.util.ArrayList;
public class Main{
	static Node[] nodes;
	public static void main(String[] args) throws Exception{
		Reader sc = new Reader();
//		Scanner sc = new Scanner(System.in);
//		PrintWriter pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
		int n = sc.nextInt();
		nodes = new Node[n];
		for(int i = 0; i < n; i++) {
			nodes[i] = new Node(sc.nextInt(),sc.nextInt());
		}
		int sum = 0;
		for(int i = 0; i < n; i++) {
			for(int j = 0; j < n; j++) {
				for(int k = 0; k < n; k++) {
					if(i == j || i == k || j == k) continue;
					sum += dis(i, j, k);
				}
			}
		}
		System.out.println(sum / 6);
	}
	public static int dis(int a, int b, int c) {
		if(nodes[a].x == nodes[b].x && nodes[b].x ==  nodes[c].x 
				|| nodes[a].y == nodes[b].y && nodes[b].y == nodes[c].y) {
			return 0;
		}
		double da = distant(a, b);
		double db = distant(b, c);
		double dc = distant(c, a);
		if(!(da + db > dc || da + dc > db || dc + db > da)) {
			return 0;
		}
		if(da == db || da == dc || db == dc) return 1;
		return 0;
	}
	public static double distant(int x, int y) {
		return Math.sqrt(Math.pow(Math.abs((nodes[x].x - nodes[y].x)), 2) + Math.pow(Math.abs((nodes[x].y - nodes[y].y)), 2));
	}
}
class Node {
	int x;
	int y;
	public Node(int x, int y) {
		super();
		this.x = x;
		this.y = y;
	}
}
class Reader{
	StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
	public int nextInt () throws Exception {
		st.nextToken();
		return (int)st.nval;
	}
	public String next() throws Exception {
		st.nextToken();
		return st.sval;
	}
}
"
58,E,Java,61489447,2023-03-24 20:40:25,牛客517457762号,答案正确,"import java.util.*;
public class Main {
    static  int n;
    static  int[][]num;
    static  int ans=0;
    static  int[]curnum=new int[3];
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        n=sc.nextInt();
        num=new int[n][2];
        for(int i=0;i<n;i++) {
            num[i][0]=sc.nextInt();
            num[i][1]=sc.nextInt();
        }
        dfs(0,0);
        System.out.println(ans);
    }
    static  void dfs(int idx,int le){
        if(le==3){
            if(check()) ans++;
            return;
        }
        for(int i=idx;i<n;i++){
            curnum[le]=i;
            dfs(i+1,le+1);
        }
    }
    static  boolean check(){
        int a1=num[curnum[0]][0],b1=num[curnum[0]][1];
        int a2=num[curnum[1]][0],b2=num[curnum[1]][1];
        int a3=num[curnum[2]][0],b3=num[curnum[2]][1];
        if((a1==a2&&a2==a3)||(b1==b2&&b2==b3)) return  false;
        int s1=(a1-a2)*(a1-a2)+(b1-b2)*(b1-b2);
        int s2=(a1-a3)*(a1-a3)+(b1-b3)*(b1-b3);
        int s3=(a3-a2)*(a3-a2)+(b3-b2)*(b3-b2);
        if(Math.sqrt(s1)+Math.sqrt(s2)>Math.sqrt(s3)&Math.abs(Math.sqrt(s1)-Math.sqrt(s2))<Math.sqrt(s3)){
            if(s1==s2||s2==s3||s3==s1) return true;
        }

        return  false;
    }
}"
59,E,Java,61489478,2023-03-24 20:40:35,黄明勇,答案错误,"import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.StreamTokenizer;
import java.util.ArrayList;
public class Main{
	static Node[] nodes;
	public static void main(String[] args) throws Exception{
		Reader sc = new Reader();
//		Scanner sc = new Scanner(System.in);
//		PrintWriter pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
		int n = sc.nextInt();
		nodes = new Node[n];
		for(int i = 0; i < n; i++) {
			nodes[i] = new Node(sc.nextInt(),sc.nextInt());
		}
		int sum = 0;
		for(int i = 0; i < n; i++) {
			for(int j = 0; j < n; j++) {
				for(int k = 0; k < n; k++) {
					if(i == j || i == k || j == k) continue;
					sum += dis(i, j, k);
				}
			}
		}
		System.out.println(sum / 6);
	}
	public static int dis(int a, int b, int c) {
		if(nodes[a].x == nodes[b].x && nodes[b].x ==  nodes[c].x 
				|| nodes[a].y == nodes[b].y && nodes[b].y == nodes[c].y) {
			return 0;
		}
		double da = distant(a, b);
		double db = distant(b, c);
		double dc = distant(c, a);
		if(da + db >= dc || da + dc >= db || dc + db >= da) {
            if(da == db || da == dc || db == dc) return 1;
		}
		return 0;
	}
	public static double distant(int x, int y) {
		return Math.sqrt(Math.pow(Math.abs((nodes[x].x - nodes[y].x)), 2) + Math.pow(Math.abs((nodes[x].y - nodes[y].y)), 2));
	}
}
class Node {
	int x;
	int y;
	public Node(int x, int y) {
		super();
		this.x = x;
		this.y = y;
	}
}
class Reader{
	StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
	public int nextInt () throws Exception {
		st.nextToken();
		return (int)st.nval;
	}
	public String next() throws Exception {
		st.nextToken();
		return st.sval;
	}
}
"
60,E,Java,61489520,2023-03-24 20:40:54,黄明勇,答案错误,"import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.StreamTokenizer;
import java.util.ArrayList;
public class Main{
	static Node[] nodes;
	public static void main(String[] args) throws Exception{
		Reader sc = new Reader();
//		Scanner sc = new Scanner(System.in);
//		PrintWriter pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
		int n = sc.nextInt();
		nodes = new Node[n];
		for(int i = 0; i < n; i++) {
			nodes[i] = new Node(sc.nextInt(),sc.nextInt());
		}
		int sum = 0;
		for(int i = 0; i < n; i++) {
			for(int j = 0; j < n; j++) {
				for(int k = 0; k < n; k++) {
					if(i == j || i == k || j == k) continue;
					sum += dis(i, j, k);
				}
			}
		}
		System.out.println(sum / 6);
	}
	public static int dis(int a, int b, int c) {
		if(nodes[a].x == nodes[b].x && nodes[b].x ==  nodes[c].x 
				|| nodes[a].y == nodes[b].y && nodes[b].y == nodes[c].y) {
			return 0;
		}
		double da = distant(a, b);
		double db = distant(b, c);
		double dc = distant(c, a);
		if(da + db > dc || da + dc > db || dc + db > da) {
            if(da == db || da == dc || db == dc) return 1;
		}
		return 0;
	}
	public static double distant(int x, int y) {
		return Math.sqrt(Math.pow(Math.abs((nodes[x].x - nodes[y].x)), 2) + Math.pow(Math.abs((nodes[x].y - nodes[y].y)), 2));
	}
}
class Node {
	int x;
	int y;
	public Node(int x, int y) {
		super();
		this.x = x;
		this.y = y;
	}
}
class Reader{
	StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
	public int nextInt () throws Exception {
		st.nextToken();
		return (int)st.nval;
	}
	public String next() throws Exception {
		st.nextToken();
		return st.sval;
	}
}
"
61,E,Java,61489681,2023-03-24 20:42:29,黄明勇,答案正确,"import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.StreamTokenizer;
import java.util.ArrayList;
public class Main{
	static Node[] nodes;
	public static void main(String[] args) throws Exception{
		Reader sc = new Reader();
//		Scanner sc = new Scanner(System.in);
//		PrintWriter pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
		int n = sc.nextInt();
		nodes = new Node[n];
		for(int i = 0; i < n; i++) {
			nodes[i] = new Node(sc.nextInt(),sc.nextInt());
		}
		int sum = 0;
		for(int i = 0; i < n; i++) {
			for(int j = 0; j < n; j++) {
				for(int k = 0; k < n; k++) {
					if(i == j || i == k || j == k) continue;
					sum += dis(i, j, k);
				}
			}
		}
		System.out.println(sum / 6);
	}
	public static int dis(int a, int b, int c) {
		if(nodes[a].x == nodes[b].x && nodes[b].x ==  nodes[c].x 
				|| nodes[a].y == nodes[b].y && nodes[b].y == nodes[c].y) {
			return 0;
		}
		double da = distant(a, b);
		double db = distant(b, c);
		double dc = distant(c, a);
		if(da + db > dc && da + dc > db && dc + db > da) {
            if(da == db || da == dc || db == dc) return 1;
		}
		return 0;
	}
	public static double distant(int x, int y) {
		return Math.sqrt(Math.pow(Math.abs((nodes[x].x - nodes[y].x)), 2) + Math.pow(Math.abs((nodes[x].y - nodes[y].y)), 2));
	}
}
class Node {
	int x;
	int y;
	public Node(int x, int y) {
		super();
		this.x = x;
		this.y = y;
	}
}
class Reader{
	StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
	public int nextInt () throws Exception {
		st.nextToken();
		return (int)st.nval;
	}
	public String next() throws Exception {
		st.nextToken();
		return st.sval;
	}
}
"
62,E,Java,61490108,2023-03-24 20:46:10,giao1,答案错误,"import java.util.*;

public class Main{
    
    static Vector<int[]> vector = new Vector<>();
    static boolean[][] st = new boolean[1000][1000];
    public static void main(String[] args){
        Scanner cin = new Scanner(System.in);
        int n = cin.nextInt();
        int m = n;
        while(m-->0){
            int x = cin.nextInt();
            int y = cin.nextInt();
            if(x<0) x = Math.abs(x-500);
            if(y<0) y = Math.abs(y-500);
            
            if(!st[x][y]){
                vector.add(new int[]{x,y});
                st[x][y] = true;
            }
        }
        int sum = 0;
        boolean flage1 = false;
        boolean flage2 = false;
        boolean flage3 = false;
        for(int i = 0;i<n;i++)
            for(int j = i+1;j<n;j++)
                for(int k = j+1;k<n;k++){
                    int x1 = vector.get(i)[0];
                    if(x1>500) x1 = -1*x1+500;
                    int y1 = vector.get(i)[1];
                    if(y1>500) y1 = -1*y1+500;
                    int x2 = vector.get(j)[0];
                    if(x2>500) x2 = -1*x2+500;
                    int y2 = vector.get(j)[1];
                     if(y2>500) y2 = -1*y2+500;
                    int x3 = vector.get(k)[0];
                    if(x3>500) x3 = -1*x3+500;
                    int y3 = vector.get(k)[1];
                     if(y3>500) y3 = -1*y3+500;
                    double a = Math.pow(x1-x2,2)+Math.pow(y1-y2,2);
                    double b = Math.pow(x1-x3,2)+Math.pow(y1-y3,2);
                    double c = Math.pow(x3-x2,2)+Math.pow(y3-y2,2);
                    //if(a+b>c&&a+c>b&&b+c>a) flage1=true;
                    //if((a-c<b||c-a<b)&&(a-b<c||b-a<c)&&(b-c<a||c-b<a)) flage2 = true;
                    if(a==b||a==c||b==c) flage3 = true;
                    //System.out.println(a+"" ""+b+"" ""+c);
                    if(flage3) sum++;
                }
        System.out.println(sum);
    }
}"
63,E,Java,61490121,2023-03-24 20:46:15,nuclearr,答案错误,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        int n = s.nextInt();
        int[] arr1 = new int[n];
        int[] arr2 = new int[n];
        for (int i = 0; i < n; i++) {
            arr1[i] = s.nextInt();
            arr2[i] = s.nextInt();
        }
        int res = 0;
        for (int i = 0; i <= n - 3; i++) {
            for (int j = i + 1; j <= n - 2; j++) {
                for (int k = j + 1; k <= n - 1; k++) {
                    int k1 = (arr2[i] - arr2[j]) / (arr1[i] - arr1[j]);
                    int k2 = (arr2[i] - arr2[k]) / (arr1[i] - arr1[k]);
                    double l1 = Math.sqrt((arr1[i] - arr1[j]) * (arr1[i] - arr1[j]) + (arr2[i] - arr2[j]) * (arr2[i] - arr2[j]));
                    double l2 = Math.sqrt((arr1[i] - arr1[k]) * (arr1[i] - arr1[k]) + (arr2[i] - arr2[k]) * (arr2[i] - arr2[k]));
                    double l3 = Math.sqrt((arr1[j] - arr1[k]) * (arr1[j] - arr1[k]) + (arr2[j] - arr2[k]) * (arr2[j] - arr2[k]));
                    if (l1 == l2 || l1 == l3 || l2 == l3) {
                        if (k1 != k2) {
                            res++;
                        }
                    }
                }
            }
        }
    }
}

"
64,E,Java,61490149,2023-03-24 20:46:31,牛客826200090号,答案正确,"import java.util.*;
import java.io.*;

public class Main {
    public static void main(String[] args) {
        ac sc=new ac();
        int n = sc.nextInt();
        int[][] points = new int[n][2];
        for (int i = 0; i < n; i++) {
            points[i][0] = sc.nextInt();
            points[i][1] = sc.nextInt();
        }
        int count = 0;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                for (int k = j + 1; k < n; k++) {
                    if (!isCollinear(points[i], points[j], points[k]) && isIsoscelesTriangle(points[i], points[j], points[k])) {
                        count++;
                    }
                }
            }
        }
        System.out.println(count);
    }


    public static boolean isCollinear(int[] p1, int[] p2, int[] p3) {
        return (p2[1] - p1[1]) * (p3[0] - p2[0]) == (p3[1] - p2[1]) * (p2[0] - p1[0]);
    }

   
    public static boolean isIsoscelesTriangle(int[] p1, int[] p2, int[] p3) {
        double a = Math.sqrt((p1[0] - p2[0]) * (p1[0] - p2[0]) + (p1[1] - p2[1]) * (p1[1] - p2[1]));
        double b = Math.sqrt((p1[0] - p3[0]) * (p1[0] - p3[0]) + (p1[1] - p3[1]) * (p1[1] - p3[1]));
        double c = Math.sqrt((p2[0] - p3[0]) * (p2[0] - p3[0]) + (p2[1] - p3[1]) * (p2[1] - p3[1]));
        return a == b || a == c || b == c;
    }
}
class ac extends PrintWriter{
    StringTokenizer st;
    BufferedReader br;
    ac(){this(System.in,System.out);}
    ac(InputStream i,OutputStream o){
        super(o);br=new BufferedReader(new InputStreamReader(i));
    }
    String next(){
        try{while(st==null||!st.hasMoreTokens())st=new StringTokenizer(br.readLine());
        return st.nextToken();}catch (Exception e){}
        return null;
    }
    int nextInt(){return Integer.parseInt(next());}
    long nextLong(){return Long.parseLong(next());}
}

"
65,E,Java,61490306,2023-03-24 20:47:47,giao1,执行出错,"import java.util.*;

public class Main{
    
    static Vector<int[]> vector = new Vector<>();
    static boolean[][] st = new boolean[1000][1000];
    public static void main(String[] args){
        Scanner cin = new Scanner(System.in);
        int n = cin.nextInt();
        int m = n;
        while(m-->0){
            int x = cin.nextInt();
            int y = cin.nextInt();
            if(x<0) x = Math.abs(x-500);
            if(y<0) y = Math.abs(y-500);
            
            if(!st[x][y]){
                vector.add(new int[]{x,y});
                st[x][y] = true;
            }
        }
        int sum = 0;
        boolean flage1 = false;
        boolean flage2 = false;
        boolean flage3 = false;
        for(int i = 0;i<n;i++)
            for(int j = i+1;j<n;j++)
                for(int k = j+1;k<n;k++){
                    int x1 = vector.get(i)[0];
                    if(x1>500) x1 = -1*x1+500;
                    int y1 = vector.get(i)[1];
                    if(y1>500) y1 = -1*y1+500;
                    int x2 = vector.get(j)[0];
                    if(x2>500) x2 = -1*x2+500;
                    int y2 = vector.get(j)[1];
                     if(y2>500) y2 = -1*y2+500;
                    int x3 = vector.get(k)[0];
                    if(x3>500) x3 = -1*x3+500;
                    int y3 = vector.get(k)[1];
                     if(y3>500) y3 = -1*y3+500;
                    double a = Math.pow(Math.pow(x1-x2,2)+Math.pow(y1-y2,2),0.5);
                    double b = Math.pow(Math.pow(x1-x3,2)+Math.pow(y1-y3,2),0.5);
                    double c = Math.pow(Math.pow(x3-x2,2)+Math.pow(y3-y2,2),0.5);
                    if(a+b>c&&a+c>b&&b+c>a) flage1=true;
                    if((a-c<b||c-a<b)&&(a-b<c||b-a<c)&&(b-c<a||c-b<a)) flage2 = true;
                    if(a==b||a==c||b==c) flage3 = true;
                    //System.out.println(a+"" ""+b+"" ""+c);
                    if(flage1&&flage2&&flage3) sum++;
                }
        System.out.println(sum);
    }
}"
66,E,Java,61490364,2023-03-24 20:48:18,giao1,答案错误,"import java.util.*;

public class Main{
    
    static Vector<int[]> vector = new Vector<>();
    static boolean[][] st = new boolean[1010][1010];
    public static void main(String[] args){
        Scanner cin = new Scanner(System.in);
        int n = cin.nextInt();
        int m = n;
        while(m-->0){
            int x = cin.nextInt();
            int y = cin.nextInt();
            if(x<0) x = Math.abs(x-500);
            if(y<0) y = Math.abs(y-500);
            
            if(!st[x][y]){
                vector.add(new int[]{x,y});
                st[x][y] = true;
            }
        }
        int sum = 0;
        boolean flage1 = false;
        boolean flage2 = false;
        boolean flage3 = false;
        for(int i = 0;i<n;i++)
            for(int j = i+1;j<n;j++)
                for(int k = j+1;k<n;k++){
                    int x1 = vector.get(i)[0];
                    if(x1>500) x1 = -1*x1+500;
                    int y1 = vector.get(i)[1];
                    if(y1>500) y1 = -1*y1+500;
                    int x2 = vector.get(j)[0];
                    if(x2>500) x2 = -1*x2+500;
                    int y2 = vector.get(j)[1];
                     if(y2>500) y2 = -1*y2+500;
                    int x3 = vector.get(k)[0];
                    if(x3>500) x3 = -1*x3+500;
                    int y3 = vector.get(k)[1];
                     if(y3>500) y3 = -1*y3+500;
                    double a = Math.pow(Math.pow(x1-x2,2)+Math.pow(y1-y2,2),0.5);
                    double b = Math.pow(Math.pow(x1-x3,2)+Math.pow(y1-y3,2),0.5);
                    double c = Math.pow(Math.pow(x3-x2,2)+Math.pow(y3-y2,2),0.5);
                    if(a+b>c&&a+c>b&&b+c>a) flage1=true;
                    if((a-c<b||c-a<b)&&(a-b<c||b-a<c)&&(b-c<a||c-b<a)) flage2 = true;
                    if(a==b||a==c||b==c) flage3 = true;
                    //System.out.println(a+"" ""+b+"" ""+c);
                    if(flage1&&flage2&&flage3) sum++;
                }
        System.out.println(sum);
    }
}"
67,E,Java,61490616,2023-03-24 20:50:29,可爱抱抱呀😥,答案错误,"//Java快读快写模板，不定时更新优化内容
//@可爱抱抱呀
import java.util.*;
import java.io.*;
import java.math.*;
import java.text.*;
public class Main{
    public static void main(String args[]) throws IOException{
        Read sc=new Read();
        int n=sc.nextInt();
        int arr[][]=new int[n][];
        long ans=0;
        for(int i=0;i<n;i++){
            arr[i]=new int[]{sc.nextInt(),sc.nextInt()};
        }
        for(int i=0;i<n;i++){
            for(int j=i+1;j<n;j++){
                for(int k=j+1;k<n;k++){
                    if(has(arr[i],arr[j],arr[k])){
                        ans++;
                    }
                }
            }
        }
        sc.println(ans);
        //sc.print(0);
        sc.bw.flush();
        sc.bw.close();
    }
    static boolean has(int a[],int b[],int c[]){
        return find(a,b)==find(b,c)||find(a,b)==find(a,c)||find(c,b)==find(a,c);
    }
    static long find(int a[],int b[]){
        return (long)(a[1]-b[1])*(a[1]-b[1])+(long)(a[0]-b[0])*(a[0]-b[0]);
    }
}
//记住看数字范围，需要开long吗，需要用BigInteger吗，需要手动处理字符串吗，复杂度数量级控制在1e7或者以下了吗
//开数组的数据范围最高不能超过1e7，数据范围再大就要用哈希表离散化了
//基本数据类型不能自定义sort排序，二维数组就可以了，顺序排序的时候是小减大，注意返回值应该是int
class Read{
    BufferedReader bf;
    StringTokenizer st;
    BufferedWriter bw;
    public Read(){
        bf=new BufferedReader(new InputStreamReader(System.in));
        st=new StringTokenizer("""");
        bw=new BufferedWriter(new OutputStreamWriter(System.out));
        //什么时候才能持续稳定ak力扣、AcWing呢？
        //什么时候才能ak cf的div2，div1呢？才能打div2不计rating呢？
        //什么时候才能ak  abc  不计rating呢？
        //什么时候才能ak 牛客练习赛不计rating呢(?)
    }
    public String nextLine() throws IOException{
        return bf.readLine();
    }
    public String next() throws IOException{
        while(!st.hasMoreTokens()){
            st=new StringTokenizer(bf.readLine());
        }
        return st.nextToken();
    }
    public char nextChar() throws IOException{
        //确定下一个token只有一个字符的时候再用
        return next().charAt(0);
    }
    public int nextInt() throws IOException{
        return Integer.parseInt(next());
    }
    public long nextLong() throws IOException{
        return Long.parseLong(next());
    }
    public double nextDouble() throws IOException{
        return Double.parseDouble(next());
    }
    public float nextFloat() throws IOException{
        return Float.parseFloat(next());
    }
    public byte nextByte() throws IOException{
        return Byte.parseByte(next());
    }
    public short nextShort() throws IOException{
        return Short.parseShort(next());
    }
    public BigInteger nextBigInteger() throws IOException{
        return new BigInteger(next());
    }
    public void println(int a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(int a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(String a) throws IOException{
        bw.write(a);
        bw.newLine();
        return;
    }
    public void print(String a) throws IOException{
        bw.write(a);
        return;
    }
    public void println(long a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(long a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(double a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(double a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void print(BigInteger a) throws IOException{
        bw.write(a.toString());
        return;
    }
    public void print(char a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(char a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
}"
68,E,Java,61490620,2023-03-24 20:50:32,giao1,答案错误,"import java.util.*;

public class Main{
    
    static Vector<int[]> vector = new Vector<>();
    static boolean[][] st = new boolean[1010][1010];
    public static void main(String[] args){
        Scanner cin = new Scanner(System.in);
        int n = cin.nextInt();
        int m = n;
        while(m-->0){
            int x = cin.nextInt();
            int y = cin.nextInt();
            if(x<0) x = Math.abs(x-500);
            if(y<0) y = Math.abs(y-500);
            
            if(!st[x][y]){
                vector.add(new int[]{x,y});
                st[x][y] = true;
            }
        }
        int sum = 0;
        boolean flage1 = false;
        boolean flage2 = false;
        boolean flage3 = false;
        for(int i = 0;i<n;i++)
            for(int j = i+1;j<n;j++)
                for(int k = j+1;k<n;k++){
                    int x1 = vector.get(i)[0];
                    if(x1>500) x1 = -1*x1+500;
                    int y1 = vector.get(i)[1];
                    if(y1>500) y1 = -1*y1+500;
                    int x2 = vector.get(j)[0];
                    if(x2>500) x2 = -1*x2+500;
                    int y2 = vector.get(j)[1];
                     if(y2>500) y2 = -1*y2+500;
                    int x3 = vector.get(k)[0];
                    if(x3>500) x3 = -1*x3+500;
                    int y3 = vector.get(k)[1];
                     if(y3>500) y3 = -1*y3+500;
                    double a = Math.pow(Math.pow(x1-x2,2)+Math.pow(y1-y2,2),0.5);
                    double b = Math.pow(Math.pow(x1-x3,2)+Math.pow(y1-y3,2),0.5);
                    double c = Math.pow(Math.pow(x3-x2,2)+Math.pow(y3-y2,2),0.5);
                    if(a+b>c&&a+c>b&&b+c>a) flage1=true;
                    if((Math.abs(c-a)<b)&&(Math.abs(a-b)<c)&&Math.abs(b-c)<a) flage2 = true;
                    if(a==b||a==c||b==c) flage3 = true;
                    //System.out.println(a+"" ""+b+"" ""+c);
                    if(flage1&&flage2&&flage3) sum++;
                }
        System.out.println(sum);
    }
}"
69,E,Java,61490745,2023-03-24 20:51:37,HMETAO,答案错误,"
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;

public class Main {

    static StringBuilder sb = new StringBuilder();

    public static void main(String[] args) {
        Reader r = new Reader();
        int t = 1;
//        t = r.nextInt();
        while (t-- > 0) {
            solve(r);
        }
        if (sb.length() > 0) System.out.println(sb.deleteCharAt(sb.length() - 1));

    }

    static long p = 0;

    private static void solve(Reader sc) {
        int n = sc.nextInt();
        ArrayList<int[]> list = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            list.add(new int[]{sc.nextInt(), sc.nextInt()});
        }
        long ans = 0;
        for (int i = 0; i < list.size(); i++) {
            for (int j = i + 1; j < list.size(); j++) {
                if (i == j) continue;
                for (int k = j + 1; k < list.size(); k++) {
                    if (i == k || j == k) continue;
                    int[] a = list.get(i);
                    int[] b = list.get(j);
                    int[] c = list.get(k);
                    HashMap<Long, Integer> map = new HashMap<>();
                    map.merge(handler(a, b), 1, Integer::sum);
                    map.merge(handler(a, c), 1, Integer::sum);
                    map.merge(handler(b, c), 1, Integer::sum);
                    if (map.size() != 3) ans++;

                }
            }
        }
        println(ans);
    }

    public static long handler(int[] a, int[] b) {
        return (long) (Math.pow(a[0] - b[0], 2) + Math.pow(a[1] - b[1], 2));
    }


    static class UnionFind {
        int[] parent;

        int n;
        long score;
        long inc = 1;

        Deque<Long> stack = new LinkedList<>();

        public UnionFind(int n) {
            this.n = n - 1;
            this.parent = new int[n];
//            for (int i = 0; i < n; i++) {
//                parent[i] = i;
//            }
        }

        public boolean isCon() {
            return n == 0;
        }

        public int find(int k) {
            if (parent[k] != k) {
                parent[k] = find(parent[k]);
            }
            return parent[k];
        }

        public boolean union(int x, int y, long s, long mid) {
            int xRoot = find(x);
            int yRoot = find(y);
            if (xRoot != yRoot) {
                parent[xRoot] = yRoot;
                if (s > mid) {
//                    score = score + (s * inc);
                    inc++;
                    stack.add(s);
                }
                return true;
            }
            return false;
        }
    }

    static class BitIndexTree {
        long[] trie;
        int n;

        public BitIndexTree(int n) {
            this.n = n;
            trie = new long[n + 1];
        }

        public static int lowBit(int x) {
            return x & (-x);
        }

        public void add(int index, int v) {
            while (index <= n) {
                trie[index] += v;
                index += lowBit(index);
            }
        }

        public long query(int index) {
            long ans = 0;
            while (index > 0) {
                ans += trie[index];
                index -= lowBit(index);
            }
            return ans;
        }
    }

    private static void swap(int[] arr, int a, int b) {
        int temp = arr[a];
        arr[a] = arr[b];
        arr[b] = temp;
    }

    public static long pow3(long a, long b) {
        long ans = 1;
        while (b > 0) {
            if ((b & 1) == 1) {
                ans *= a;
            }
            a *= a;
            b >>= 1;
        }
        return ans;
    }

    public static long pow4(long a, long b, int p) {
        long ans = 1;
        a %= p;
        while (b > 0) {
            if ((b & 1) == 1) {
                ans = ans * a % p;
            }
            a = a * a % p;
            b >>= 1;
        }
        return ans;
    }

    public static List<Integer> euler(int n) {
        boolean[] check = new boolean[n + 1];
        List<Integer> ans = new ArrayList<>();
        for (int i = 2; i <= n; i++) {
            if (!check[i]) {
                ans.add(i);
            }
            for (Integer item : ans) {
                if (item * i > n) break;
                check[(item * i)] = true;
                if (i % item == 0) break;
            }
        }
        return ans;
    }

    public static void euler_phi(int n) {
        int ans = n;
        for (int i = 2; i <= n / i; i++) {
            if (n % i == 0) {
                ans *= (1 - 1.0 / i);
                while (n % i == 0) {
                    n /= i;
                }
            }
        }
        if (n > 1) ans *= (1 - 1.0 / n);
        System.out.println(ans);
    }

    public static int[] eulers(int n) {
        boolean[] check = new boolean[n + 1];
        int[] phi = new int[n + 1];
        phi[1] = 1;
        ArrayList<Integer> primes = new ArrayList<>();
        for (int i = 2; i <= n; i++) {
            if (!check[i]) {
                primes.add(i);
                phi[i] = i - 1;
            }

            for (Integer item : primes) {
                if (item * i > n) break;
                check[item * i] = true;
                if (i % item == 0) {
                    phi[item * i] = item * phi[i];
                    break;
                }
                phi[item * i] = (item - 1) * phi[i];
            }
        }
        return phi;
    }


    static final Random random = new Random();

    static void ruffleSort(int[] a) {
        int n = a.length;//shuffle, then sort
        for (int i = 0; i < n; i++) {
            int oi = random.nextInt(n), temp = a[oi];
            a[oi] = a[i];
            a[i] = temp;
        }
        Arrays.sort(a);
    }

    static class Reader {
        BufferedReader buf;
        StringTokenizer tok;

        Reader() {
            buf = new BufferedReader(new InputStreamReader(System.in));
        }

        boolean hasNext() {
            while (tok == null || !tok.hasMoreElements()) {
                try {
                    tok = new StringTokenizer(buf.readLine());
                } catch (Exception e) {
                    return false;
                }
            }
            return true;
        }

        String nextLine() {
            try {
                return buf.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        String next() {
            if (hasNext()) return tok.nextToken();
            return null;
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        int[] nextIntArrForSizeIndexOfOne(int size) {
            int[] nums = new int[size + 1];
            for (int i = 1; i <= size; i++) {
                nums[i] = nextInt();
            }
            return nums;
        }

        int[] nextIntArrForSizeIndexOfZero(int size) {
            int[] nums = new int[size];
            for (int i = 0; i < size; i++) {
                nums[i] = nextInt();
            }
            return nums;
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }
    }

    private static void print(Object t) {
        sb.append(t);
    }

    private static void printf(Object t) {
        sb.append(t).append("" "");
    }

    private static void printf(Object... t) {
        for (Object s : t) {
            sb.append(s).append("" "");
        }
        sb.deleteCharAt(sb.length() - 1);
    }

    private static void printf(String end, Object... t) {
        for (Object s : t) {
            sb.append(s).append("" "");
        }
        sb.deleteCharAt(sb.length() - 1);
        sb.append(end);
    }

    private static void println(Object t) {
        sb.append(t).append(""\n"");
    }

    private static void println() {
        sb.append(""\n"");
    }

    private static <T> void printArr(long[] arr) {
        for (Object o : arr) {
            sb.append(o).append("" "");
        }
    }

    private static <T> void printArr(int[] arr) {
        for (Object o : arr) {
            sb.append(o).append("" "");
        }
    }

}


"
70,E,Java,61490895,2023-03-24 20:52:51,可爱抱抱呀😥,答案正确,"//Java快读快写模板，不定时更新优化内容
//@可爱抱抱呀
import java.util.*;
import java.io.*;
import java.math.*;
import java.text.*;
public class Main{
    public static void main(String args[]) throws IOException{
        Read sc=new Read();
        int n=sc.nextInt();
        int arr[][]=new int[n][];
        long ans=0;
        for(int i=0;i<n;i++){
            arr[i]=new int[]{sc.nextInt(),sc.nextInt()};
        }
        for(int i=0;i<n;i++){
            for(int j=i+1;j<n;j++){
                for(int k=j+1;k<n;k++){
                    if(has(arr[i],arr[j],arr[k])){
                        ans++;
                    }
                }
            }
        }
        sc.println(ans);
        //sc.print(0);
        sc.bw.flush();
        sc.bw.close();
    }
    static boolean has(int a[],int b[],int c[]){
        if((long)(b[1]-a[1])*(c[0]-a[0])==(long)(b[0]-a[0])*(c[1]-a[1])){
            return false;
        }
        return find(a,b)==find(b,c)||find(a,b)==find(a,c)||find(c,b)==find(a,c);
    }
    static long find(int a[],int b[]){
        return (long)(a[1]-b[1])*(a[1]-b[1])+(long)(a[0]-b[0])*(a[0]-b[0]);
    }
}
//记住看数字范围，需要开long吗，需要用BigInteger吗，需要手动处理字符串吗，复杂度数量级控制在1e7或者以下了吗
//开数组的数据范围最高不能超过1e7，数据范围再大就要用哈希表离散化了
//基本数据类型不能自定义sort排序，二维数组就可以了，顺序排序的时候是小减大，注意返回值应该是int
class Read{
    BufferedReader bf;
    StringTokenizer st;
    BufferedWriter bw;
    public Read(){
        bf=new BufferedReader(new InputStreamReader(System.in));
        st=new StringTokenizer("""");
        bw=new BufferedWriter(new OutputStreamWriter(System.out));
        //什么时候才能持续稳定ak力扣、AcWing呢？
        //什么时候才能ak cf的div2，div1呢？才能打div2不计rating呢？
        //什么时候才能ak  abc  不计rating呢？
        //什么时候才能ak 牛客练习赛不计rating呢(?)
    }
    public String nextLine() throws IOException{
        return bf.readLine();
    }
    public String next() throws IOException{
        while(!st.hasMoreTokens()){
            st=new StringTokenizer(bf.readLine());
        }
        return st.nextToken();
    }
    public char nextChar() throws IOException{
        //确定下一个token只有一个字符的时候再用
        return next().charAt(0);
    }
    public int nextInt() throws IOException{
        return Integer.parseInt(next());
    }
    public long nextLong() throws IOException{
        return Long.parseLong(next());
    }
    public double nextDouble() throws IOException{
        return Double.parseDouble(next());
    }
    public float nextFloat() throws IOException{
        return Float.parseFloat(next());
    }
    public byte nextByte() throws IOException{
        return Byte.parseByte(next());
    }
    public short nextShort() throws IOException{
        return Short.parseShort(next());
    }
    public BigInteger nextBigInteger() throws IOException{
        return new BigInteger(next());
    }
    public void println(int a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(int a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(String a) throws IOException{
        bw.write(a);
        bw.newLine();
        return;
    }
    public void print(String a) throws IOException{
        bw.write(a);
        return;
    }
    public void println(long a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(long a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(double a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(double a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void print(BigInteger a) throws IOException{
        bw.write(a.toString());
        return;
    }
    public void print(char a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(char a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
}"
71,E,Java,61490953,2023-03-24 20:53:30,牛客285677822号,答案正确,"
import java.io.*;
import java.util.*;

public class Main {
    static StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    public static double nextDouble() throws IOException{ in.nextToken(); return in.nval; }
    public static float nextFloat() throws IOException{ in.nextToken(); return (float)in.nval; }
    public static int nextInt() throws IOException { in.nextToken(); return (int)in.nval; }
    public static long nextLong() throws IOException { in.nextToken(); return (long)in.nval; }
    public static String next() throws IOException{ in.nextToken(); return in.sval;}
    static BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
    
    static class Point {
        int x,y;

        @Override
        public boolean equals(Object o) {
            if (this == o) return true;
            if (o == null || getClass() != o.getClass()) return false;
            Point point = (Point) o;
            return x == point.x && y == point.y;
        }

        @Override
        public int hashCode() {
            return Objects.hash(x, y);
        }

        public Point(int x, int y) {
            this.x = x;
            this.y = y;
        }
    }

    public int distance(Point p, Point q) {
        return (p.x - q.x) * (p.x - q.x) + (p.y - q.y) * (p.y - q.y);
    }

    public void resolve() throws Exception {
        int n=nextInt();
        Point[] a=new Point[n];
        for (int i = 0; i < n; i++) {
            a[i]=new Point(nextInt(),nextInt());
        }
        long edge2=0;
        long edge3=0;
        for (int i = 0; i < n; i++) {
            Map<Integer,List<Point>> dmap=new HashMap<>();
            for (int j = 0; j < n; j++) {
                if (i==j)continue;
                int d=distance(a[i],a[j]);
                List<Point> list = dmap.computeIfAbsent(d, integer -> new ArrayList<>());
                list.add(a[j]);
            }
            Point base=a[i];
            for (List<Point> list : dmap.values()) {
                if (list.size()<2)continue;
                int c=list.size();
                for (int j = 0; j < c; j++) {
                    for (int k = j+1; k < c; k++) {
                        int x1=list.get(j).x-base.x;
                        int y1=list.get(j).y-base.y;
                        int x2=list.get(k).x-base.x;
                        int y2=list.get(k).y-base.y;
                        if (x1*y2-x2*y1==0) continue;
                        edge2++;
                        if (distance(base,list.get(j))==distance(list.get(j),list.get(k))){
                            edge3++;
                        }
                    }
                }
            }
        }
        out.println(edge2-edge3+edge3/3);
    }

    public static void main(String[] args) throws Exception {
        new Main().resolve();
        out.flush();
    }
}

"
72,E,Java,61491119,2023-03-24 20:54:54,HMETAO,答案错误,"
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;

public class Main {

    static StringBuilder sb = new StringBuilder();

    public static void main(String[] args) {
        Reader r = new Reader();
        int t = 1;
//        t = r.nextInt();
        while (t-- > 0) {
            solve(r);
        }
        if (sb.length() > 0) System.out.println(sb.deleteCharAt(sb.length() - 1));

    }


    private static void solve(Reader sc) {
        int n = sc.nextInt();
        ArrayList<int[]> list = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            list.add(new int[]{sc.nextInt(), sc.nextInt()});
        }
        long ans = 0;
        for (int i = 0; i < list.size(); i++) {
            for (int j = i + 1; j < list.size(); j++) {
                for (int k = j + 1; k < list.size(); k++) {
                    int[] a = list.get(i);
                    int[] b = list.get(j);
                    int[] c = list.get(k);
                    if (a[0] == b[0] && a[0] == c[0]) continue;
                    if (a[1] == b[1] && b[1] == c[1]) continue;
                    HashMap<Long, Integer> map = new HashMap<>();
                    map.merge(handler(a, b), 1, Integer::sum);
                    map.merge(handler(a, c), 1, Integer::sum);
                    map.merge(handler(b, c), 1, Integer::sum);
                    if (map.size() != 3) ans++;

                }
            }
        }
        println(ans);
    }

    public static long handler(int[] a, int[] b) {
        return (long) (Math.pow(a[0] - b[0], 2) + Math.pow(a[1] - b[1], 2));
    }


    static class UnionFind {
        int[] parent;

        int n;
        long score;
        long inc = 1;

        Deque<Long> stack = new LinkedList<>();

        public UnionFind(int n) {
            this.n = n - 1;
            this.parent = new int[n];
//            for (int i = 0; i < n; i++) {
//                parent[i] = i;
//            }
        }

        public boolean isCon() {
            return n == 0;
        }

        public int find(int k) {
            if (parent[k] != k) {
                parent[k] = find(parent[k]);
            }
            return parent[k];
        }

        public boolean union(int x, int y, long s, long mid) {
            int xRoot = find(x);
            int yRoot = find(y);
            if (xRoot != yRoot) {
                parent[xRoot] = yRoot;
                if (s > mid) {
//                    score = score + (s * inc);
                    inc++;
                    stack.add(s);
                }
                return true;
            }
            return false;
        }
    }

    static class BitIndexTree {
        long[] trie;
        int n;

        public BitIndexTree(int n) {
            this.n = n;
            trie = new long[n + 1];
        }

        public static int lowBit(int x) {
            return x & (-x);
        }

        public void add(int index, int v) {
            while (index <= n) {
                trie[index] += v;
                index += lowBit(index);
            }
        }

        public long query(int index) {
            long ans = 0;
            while (index > 0) {
                ans += trie[index];
                index -= lowBit(index);
            }
            return ans;
        }
    }

    private static void swap(int[] arr, int a, int b) {
        int temp = arr[a];
        arr[a] = arr[b];
        arr[b] = temp;
    }

    public static long pow3(long a, long b) {
        long ans = 1;
        while (b > 0) {
            if ((b & 1) == 1) {
                ans *= a;
            }
            a *= a;
            b >>= 1;
        }
        return ans;
    }

    public static long pow4(long a, long b, int p) {
        long ans = 1;
        a %= p;
        while (b > 0) {
            if ((b & 1) == 1) {
                ans = ans * a % p;
            }
            a = a * a % p;
            b >>= 1;
        }
        return ans;
    }

    public static List<Integer> euler(int n) {
        boolean[] check = new boolean[n + 1];
        List<Integer> ans = new ArrayList<>();
        for (int i = 2; i <= n; i++) {
            if (!check[i]) {
                ans.add(i);
            }
            for (Integer item : ans) {
                if (item * i > n) break;
                check[(item * i)] = true;
                if (i % item == 0) break;
            }
        }
        return ans;
    }

    public static void euler_phi(int n) {
        int ans = n;
        for (int i = 2; i <= n / i; i++) {
            if (n % i == 0) {
                ans *= (1 - 1.0 / i);
                while (n % i == 0) {
                    n /= i;
                }
            }
        }
        if (n > 1) ans *= (1 - 1.0 / n);
        System.out.println(ans);
    }

    public static int[] eulers(int n) {
        boolean[] check = new boolean[n + 1];
        int[] phi = new int[n + 1];
        phi[1] = 1;
        ArrayList<Integer> primes = new ArrayList<>();
        for (int i = 2; i <= n; i++) {
            if (!check[i]) {
                primes.add(i);
                phi[i] = i - 1;
            }

            for (Integer item : primes) {
                if (item * i > n) break;
                check[item * i] = true;
                if (i % item == 0) {
                    phi[item * i] = item * phi[i];
                    break;
                }
                phi[item * i] = (item - 1) * phi[i];
            }
        }
        return phi;
    }


    static final Random random = new Random();

    static void ruffleSort(int[] a) {
        int n = a.length;//shuffle, then sort
        for (int i = 0; i < n; i++) {
            int oi = random.nextInt(n), temp = a[oi];
            a[oi] = a[i];
            a[i] = temp;
        }
        Arrays.sort(a);
    }

    static class Reader {
        BufferedReader buf;
        StringTokenizer tok;

        Reader() {
            buf = new BufferedReader(new InputStreamReader(System.in));
        }

        boolean hasNext() {
            while (tok == null || !tok.hasMoreElements()) {
                try {
                    tok = new StringTokenizer(buf.readLine());
                } catch (Exception e) {
                    return false;
                }
            }
            return true;
        }

        String nextLine() {
            try {
                return buf.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        String next() {
            if (hasNext()) return tok.nextToken();
            return null;
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        int[] nextIntArrForSizeIndexOfOne(int size) {
            int[] nums = new int[size + 1];
            for (int i = 1; i <= size; i++) {
                nums[i] = nextInt();
            }
            return nums;
        }

        int[] nextIntArrForSizeIndexOfZero(int size) {
            int[] nums = new int[size];
            for (int i = 0; i < size; i++) {
                nums[i] = nextInt();
            }
            return nums;
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }
    }

    private static void print(Object t) {
        sb.append(t);
    }

    private static void printf(Object t) {
        sb.append(t).append("" "");
    }

    private static void printf(Object... t) {
        for (Object s : t) {
            sb.append(s).append("" "");
        }
        sb.deleteCharAt(sb.length() - 1);
    }

    private static void printf(String end, Object... t) {
        for (Object s : t) {
            sb.append(s).append("" "");
        }
        sb.deleteCharAt(sb.length() - 1);
        sb.append(end);
    }

    private static void println(Object t) {
        sb.append(t).append(""\n"");
    }

    private static void println() {
        sb.append(""\n"");
    }

    private static <T> void printArr(long[] arr) {
        for (Object o : arr) {
            sb.append(o).append("" "");
        }
    }

    private static <T> void printArr(int[] arr) {
        for (Object o : arr) {
            sb.append(o).append("" "");
        }
    }

}


"
73,E,Java,61491781,2023-03-24 20:59:48,HMETAO,答案错误,"
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;

public class Main {

    static StringBuilder sb = new StringBuilder();

    public static void main(String[] args) {
        Reader r = new Reader();
        int t = 1;
//        t = r.nextInt();
        while (t-- > 0) {
            solve(r);
        }
        if (sb.length() > 0) System.out.println(sb.deleteCharAt(sb.length() - 1));

    }


    private static void solve(Reader sc) {
        int n = sc.nextInt();
        ArrayList<int[]> list = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            list.add(new int[]{sc.nextInt(), sc.nextInt()});
        }
        long ans = 0;
        for (int i = 0; i < list.size(); i++) {
            for (int j = i + 1; j < list.size(); j++) {
                for (int k = j + 1; k < list.size(); k++) {
                    int[] a = list.get(i);
                    int[] b = list.get(j);
                    int[] c = list.get(k);
                    if (a[0] == b[0] && a[0] == c[0]) continue;
                    if (a[1] == b[1] && b[1] == c[1]) continue;
                    if (a[0] + b[0] / 2 == b[0] + c[0] / 2) continue;
                    if (a[1] + b[1] / 2 == b[1] + c[1] / 2) continue;
                    
                    HashMap<Long, Integer> map = new HashMap<>();
                    map.merge(handler(a, b), 1, Integer::sum);
                    map.merge(handler(a, c), 1, Integer::sum);
                    map.merge(handler(b, c), 1, Integer::sum);
                    if (map.size() != 3) ans++;

                }
            }
        }
        println(ans);
    }

    public static long handler(int[] a, int[] b) {
        return (long) (Math.pow(a[0] - b[0], 2) + Math.pow(a[1] - b[1], 2));
    }


    static class UnionFind {
        int[] parent;

        int n;
        long score;
        long inc = 1;

        Deque<Long> stack = new LinkedList<>();

        public UnionFind(int n) {
            this.n = n - 1;
            this.parent = new int[n];
//            for (int i = 0; i < n; i++) {
//                parent[i] = i;
//            }
        }

        public boolean isCon() {
            return n == 0;
        }

        public int find(int k) {
            if (parent[k] != k) {
                parent[k] = find(parent[k]);
            }
            return parent[k];
        }

        public boolean union(int x, int y, long s, long mid) {
            int xRoot = find(x);
            int yRoot = find(y);
            if (xRoot != yRoot) {
                parent[xRoot] = yRoot;
                if (s > mid) {
//                    score = score + (s * inc);
                    inc++;
                    stack.add(s);
                }
                return true;
            }
            return false;
        }
    }

    static class BitIndexTree {
        long[] trie;
        int n;

        public BitIndexTree(int n) {
            this.n = n;
            trie = new long[n + 1];
        }

        public static int lowBit(int x) {
            return x & (-x);
        }

        public void add(int index, int v) {
            while (index <= n) {
                trie[index] += v;
                index += lowBit(index);
            }
        }

        public long query(int index) {
            long ans = 0;
            while (index > 0) {
                ans += trie[index];
                index -= lowBit(index);
            }
            return ans;
        }
    }

    private static void swap(int[] arr, int a, int b) {
        int temp = arr[a];
        arr[a] = arr[b];
        arr[b] = temp;
    }

    public static long pow3(long a, long b) {
        long ans = 1;
        while (b > 0) {
            if ((b & 1) == 1) {
                ans *= a;
            }
            a *= a;
            b >>= 1;
        }
        return ans;
    }

    public static long pow4(long a, long b, int p) {
        long ans = 1;
        a %= p;
        while (b > 0) {
            if ((b & 1) == 1) {
                ans = ans * a % p;
            }
            a = a * a % p;
            b >>= 1;
        }
        return ans;
    }

    public static List<Integer> euler(int n) {
        boolean[] check = new boolean[n + 1];
        List<Integer> ans = new ArrayList<>();
        for (int i = 2; i <= n; i++) {
            if (!check[i]) {
                ans.add(i);
            }
            for (Integer item : ans) {
                if (item * i > n) break;
                check[(item * i)] = true;
                if (i % item == 0) break;
            }
        }
        return ans;
    }

    public static void euler_phi(int n) {
        int ans = n;
        for (int i = 2; i <= n / i; i++) {
            if (n % i == 0) {
                ans *= (1 - 1.0 / i);
                while (n % i == 0) {
                    n /= i;
                }
            }
        }
        if (n > 1) ans *= (1 - 1.0 / n);
        System.out.println(ans);
    }

    public static int[] eulers(int n) {
        boolean[] check = new boolean[n + 1];
        int[] phi = new int[n + 1];
        phi[1] = 1;
        ArrayList<Integer> primes = new ArrayList<>();
        for (int i = 2; i <= n; i++) {
            if (!check[i]) {
                primes.add(i);
                phi[i] = i - 1;
            }

            for (Integer item : primes) {
                if (item * i > n) break;
                check[item * i] = true;
                if (i % item == 0) {
                    phi[item * i] = item * phi[i];
                    break;
                }
                phi[item * i] = (item - 1) * phi[i];
            }
        }
        return phi;
    }


    static final Random random = new Random();

    static void ruffleSort(int[] a) {
        int n = a.length;//shuffle, then sort
        for (int i = 0; i < n; i++) {
            int oi = random.nextInt(n), temp = a[oi];
            a[oi] = a[i];
            a[i] = temp;
        }
        Arrays.sort(a);
    }

    static class Reader {
        BufferedReader buf;
        StringTokenizer tok;

        Reader() {
            buf = new BufferedReader(new InputStreamReader(System.in));
        }

        boolean hasNext() {
            while (tok == null || !tok.hasMoreElements()) {
                try {
                    tok = new StringTokenizer(buf.readLine());
                } catch (Exception e) {
                    return false;
                }
            }
            return true;
        }

        String nextLine() {
            try {
                return buf.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        String next() {
            if (hasNext()) return tok.nextToken();
            return null;
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        int[] nextIntArrForSizeIndexOfOne(int size) {
            int[] nums = new int[size + 1];
            for (int i = 1; i <= size; i++) {
                nums[i] = nextInt();
            }
            return nums;
        }

        int[] nextIntArrForSizeIndexOfZero(int size) {
            int[] nums = new int[size];
            for (int i = 0; i < size; i++) {
                nums[i] = nextInt();
            }
            return nums;
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }
    }

    private static void print(Object t) {
        sb.append(t);
    }

    private static void printf(Object t) {
        sb.append(t).append("" "");
    }

    private static void printf(Object... t) {
        for (Object s : t) {
            sb.append(s).append("" "");
        }
        sb.deleteCharAt(sb.length() - 1);
    }

    private static void printf(String end, Object... t) {
        for (Object s : t) {
            sb.append(s).append("" "");
        }
        sb.deleteCharAt(sb.length() - 1);
        sb.append(end);
    }

    private static void println(Object t) {
        sb.append(t).append(""\n"");
    }

    private static void println() {
        sb.append(""\n"");
    }

    private static <T> void printArr(long[] arr) {
        for (Object o : arr) {
            sb.append(o).append("" "");
        }
    }

    private static <T> void printArr(int[] arr) {
        for (Object o : arr) {
            sb.append(o).append("" "");
        }
    }

}


"
74,E,Java,61491798,2023-03-24 20:59:55,HMETAO,答案错误,"
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;

public class Main {

    static StringBuilder sb = new StringBuilder();

    public static void main(String[] args) {
        Reader r = new Reader();
        int t = 1;
//        t = r.nextInt();
        while (t-- > 0) {
            solve(r);
        }
        if (sb.length() > 0) System.out.println(sb.deleteCharAt(sb.length() - 1));

    }


    private static void solve(Reader sc) {
        int n = sc.nextInt();
        ArrayList<int[]> list = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            list.add(new int[]{sc.nextInt(), sc.nextInt()});
        }
        long ans = 0;
        for (int i = 0; i < list.size(); i++) {
            for (int j = i + 1; j < list.size(); j++) {
                for (int k = j + 1; k < list.size(); k++) {
                    int[] a = list.get(i);
                    int[] b = list.get(j);
                    int[] c = list.get(k);
                    if (a[0] == b[0] && a[0] == c[0]) continue;
                    if (a[1] == b[1] && b[1] == c[1]) continue;

                    HashMap<Long, Integer> map = new HashMap<>();
                    map.merge(handler(a, b), 1, Integer::sum);
                    map.merge(handler(a, c), 1, Integer::sum);
                    map.merge(handler(b, c), 1, Integer::sum);
                    if (map.size() != 3) ans++;

                }
            }
        }
        println(ans);
    }

    public static long handler(int[] a, int[] b) {
        return (long) (Math.pow(a[0] - b[0], 2) + Math.pow(a[1] - b[1], 2));
    }


    static class UnionFind {
        int[] parent;

        int n;
        long score;
        long inc = 1;

        Deque<Long> stack = new LinkedList<>();

        public UnionFind(int n) {
            this.n = n - 1;
            this.parent = new int[n];
//            for (int i = 0; i < n; i++) {
//                parent[i] = i;
//            }
        }

        public boolean isCon() {
            return n == 0;
        }

        public int find(int k) {
            if (parent[k] != k) {
                parent[k] = find(parent[k]);
            }
            return parent[k];
        }

        public boolean union(int x, int y, long s, long mid) {
            int xRoot = find(x);
            int yRoot = find(y);
            if (xRoot != yRoot) {
                parent[xRoot] = yRoot;
                if (s > mid) {
//                    score = score + (s * inc);
                    inc++;
                    stack.add(s);
                }
                return true;
            }
            return false;
        }
    }

    static class BitIndexTree {
        long[] trie;
        int n;

        public BitIndexTree(int n) {
            this.n = n;
            trie = new long[n + 1];
        }

        public static int lowBit(int x) {
            return x & (-x);
        }

        public void add(int index, int v) {
            while (index <= n) {
                trie[index] += v;
                index += lowBit(index);
            }
        }

        public long query(int index) {
            long ans = 0;
            while (index > 0) {
                ans += trie[index];
                index -= lowBit(index);
            }
            return ans;
        }
    }

    private static void swap(int[] arr, int a, int b) {
        int temp = arr[a];
        arr[a] = arr[b];
        arr[b] = temp;
    }

    public static long pow3(long a, long b) {
        long ans = 1;
        while (b > 0) {
            if ((b & 1) == 1) {
                ans *= a;
            }
            a *= a;
            b >>= 1;
        }
        return ans;
    }

    public static long pow4(long a, long b, int p) {
        long ans = 1;
        a %= p;
        while (b > 0) {
            if ((b & 1) == 1) {
                ans = ans * a % p;
            }
            a = a * a % p;
            b >>= 1;
        }
        return ans;
    }

    public static List<Integer> euler(int n) {
        boolean[] check = new boolean[n + 1];
        List<Integer> ans = new ArrayList<>();
        for (int i = 2; i <= n; i++) {
            if (!check[i]) {
                ans.add(i);
            }
            for (Integer item : ans) {
                if (item * i > n) break;
                check[(item * i)] = true;
                if (i % item == 0) break;
            }
        }
        return ans;
    }

    public static void euler_phi(int n) {
        int ans = n;
        for (int i = 2; i <= n / i; i++) {
            if (n % i == 0) {
                ans *= (1 - 1.0 / i);
                while (n % i == 0) {
                    n /= i;
                }
            }
        }
        if (n > 1) ans *= (1 - 1.0 / n);
        System.out.println(ans);
    }

    public static int[] eulers(int n) {
        boolean[] check = new boolean[n + 1];
        int[] phi = new int[n + 1];
        phi[1] = 1;
        ArrayList<Integer> primes = new ArrayList<>();
        for (int i = 2; i <= n; i++) {
            if (!check[i]) {
                primes.add(i);
                phi[i] = i - 1;
            }

            for (Integer item : primes) {
                if (item * i > n) break;
                check[item * i] = true;
                if (i % item == 0) {
                    phi[item * i] = item * phi[i];
                    break;
                }
                phi[item * i] = (item - 1) * phi[i];
            }
        }
        return phi;
    }


    static final Random random = new Random();

    static void ruffleSort(int[] a) {
        int n = a.length;//shuffle, then sort
        for (int i = 0; i < n; i++) {
            int oi = random.nextInt(n), temp = a[oi];
            a[oi] = a[i];
            a[i] = temp;
        }
        Arrays.sort(a);
    }

    static class Reader {
        BufferedReader buf;
        StringTokenizer tok;

        Reader() {
            buf = new BufferedReader(new InputStreamReader(System.in));
        }

        boolean hasNext() {
            while (tok == null || !tok.hasMoreElements()) {
                try {
                    tok = new StringTokenizer(buf.readLine());
                } catch (Exception e) {
                    return false;
                }
            }
            return true;
        }

        String nextLine() {
            try {
                return buf.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        String next() {
            if (hasNext()) return tok.nextToken();
            return null;
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        int[] nextIntArrForSizeIndexOfOne(int size) {
            int[] nums = new int[size + 1];
            for (int i = 1; i <= size; i++) {
                nums[i] = nextInt();
            }
            return nums;
        }

        int[] nextIntArrForSizeIndexOfZero(int size) {
            int[] nums = new int[size];
            for (int i = 0; i < size; i++) {
                nums[i] = nextInt();
            }
            return nums;
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }
    }

    private static void print(Object t) {
        sb.append(t);
    }

    private static void printf(Object t) {
        sb.append(t).append("" "");
    }

    private static void printf(Object... t) {
        for (Object s : t) {
            sb.append(s).append("" "");
        }
        sb.deleteCharAt(sb.length() - 1);
    }

    private static void printf(String end, Object... t) {
        for (Object s : t) {
            sb.append(s).append("" "");
        }
        sb.deleteCharAt(sb.length() - 1);
        sb.append(end);
    }

    private static void println(Object t) {
        sb.append(t).append(""\n"");
    }

    private static void println() {
        sb.append(""\n"");
    }

    private static <T> void printArr(long[] arr) {
        for (Object o : arr) {
            sb.append(o).append("" "");
        }
    }

    private static <T> void printArr(int[] arr) {
        for (Object o : arr) {
            sb.append(o).append("" "");
        }
    }

}


"
75,E,Java,61491806,2023-03-24 20:59:57,huvz,答案错误,"import java.io.*;
import java.util.*;

public class Main {
    static Read in = new Read();

    //static AWriter out = new AWriter();
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    //static Scanner in = new Scanner(System.in);
    public static void solve() throws IOException {
        int n = in.nextInt();
        int[][]  xy = new int[n][2];
        for(int i=0;i<n;i++)
        {
            xy[i][0] =in.nextInt();
            xy[i][1]= in.nextInt();
        }
        int cnt = 0;
        for(int i=0;i<n;i++)
        {
            for(int j=i+1;j<n;j++)
            {
                for(int k=j+1;k<n;k++) {
                    int x1 = xy[i][0];
                    int y1 = xy[i][0];
                    int x2 = xy[j][0];
                    int y2 = xy[j][0];
                    int x3 = xy[k][0];
                    int y3 = xy[k][0];
                    //如果共线,跳过
                    if (x1 == x2  && x2 == x3) continue;
                    if (y1 == y2  && y2 == y3) continue;

                    double x11 = (double) (xy[i][0] + xy[j][0]) / 2.0;
                    double y11 = (double) (xy[i][1] + xy[j][1]) / 2.0;
                    double x22 = (double) (xy[i][0] + xy[k][0]) / 2.0;
                    double y22 = (double) (xy[i][1] + xy[k][1]) / 2.0;
                    double x33 = (double) (xy[k][0] + xy[j][0]) / 2.0;
                    double y33 = (double) (xy[k][1] + xy[j][1]) / 2.0;
                    if (x11 == xy[i][0] & y11 == xy[i][1]  || x11 == xy[j][0] & y11 == xy[j][1]  || x11 == xy[k][0] & y11 == xy[k][1]) continue;
                    if (x22 == xy[i][0] && y22 == xy[i][1]  || x22 == xy[j][0] && y22 == xy[j][1]  || x22 == xy[k][0] && y22 == xy[k][1]) continue;
                    if (x33 == xy[i][0] && y33 == xy[i][1]  || x33 == xy[j][0] && y33 == xy[j][1]  || x33 == xy[k][0] & y33 == xy[k][1]) continue;
                    if(isTriange(x1,y1,x2,y2,x3,y3)){
                        cnt++;
                    }

                }
            }
        }
        System.out.println(cnt);
    }

    public static boolean isTriange(int x1,int y1,int x2,int y2,int x3,int y3){
        double a = Math.sqrt( Math.pow( Math.abs(x1-x2) ,2) + Math.pow( Math.abs(y1-y2) ,2) ) ;//利用公式分别求三边长度
        double b = Math.sqrt(  Math.pow(  Math.abs(x1-x3) ,2) + Math. pow(  Math.abs(y1-y3) ,2) ) ;//
        double c = Math.sqrt(  Math.pow(  Math.abs(x2-x3) ,2) +  Math.pow(  Math.abs(y2-y3) ,2) ) ;//

            if(a==b ||  b==c || c==a){
                return true;
            }

        return false;
    }
    public static void main(String[] arg) throws Exception {
        int t=1;

        //Scanner in = new Scanner(System.in);
        //t = in.nextInt();
        while(t-->0)
        {
            solve();
        }

    }

    static class Read{
        static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        static StreamTokenizer st = new StreamTokenizer(br);
        static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));
        public int nextInt() throws IOException {
            st.nextToken();
            return (int) st.nval;
        }
        public Long nextLong() throws IOException {
            st.nextToken();
            return (long) st.nval;
        }
        public String next() throws IOException{
            st.nextToken();
            return st.sval;
        }
        // 若需要nextDouble等方法，请自行调用Double.parseDouble包装
    }
    static class AWriter implements Closeable {
        private BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(System.out));
        public void print(Object object) throws IOException {
            writer.write(object.toString());
        }
        public void println(Object object) throws IOException {
            writer.write(object.toString());
            writer.write(System.lineSeparator());
        }
        @Override
        public void close() throws IOException {
            writer.close();
        }
    }

}"
76,E,Java,61491943,2023-03-24 21:00:55,菜鸡想进大厂～,答案错误,"import java.util.*;
import java.io.*;

public class Main{
    public static void main(String[] args) throws Exception{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String[] ss = br.readLine().split("" "");
        int n = Integer.parseInt(ss[0]);
        int[][] points = new int[n][2];
        for (int i = 0; i < n; i ++) {
            ss = br.readLine().split("" "");
            points[i][0] = Integer.parseInt(ss[0]);
            points[i][1] = Integer.parseInt(ss[1]);
        }
        long cnt = 0;
        for (int i = 0; i < n; i ++) {
            for (int j = i + 1; j < n; j ++) {
                for (int k = j + 1; k < n; k ++) {
//                    if (points[i][0] * points[j][1] == points[i][1] * points[j][0]
//                    && points[i][0] * points[k][1] == points[i][1] * points[k][0]) continue;
                    int d1 = dis(points[i], points[j]);
                    int d2 = dis(points[i], points[k]);
                    int d3 = dis(points[j], points[k]);
                    int[] t = {d1, d2, d3};
                    Arrays.sort(t);
                    if (t[0] == t[1] && Math.abs(Math.sqrt(t[0]) + Math.sqrt(t[1]) -  Math.sqrt(t[2])) > 0.000001) cnt ++;
                }
            }
        }
        System.out.println(cnt);
    }
    private static int dis(int[] a, int[] b) {
        return (a[0] - b[0]) * (a[0] - b[0]) + (a[1] - b[1]) * (a[1] - b[1]);
    }
}

"
77,E,Java,61492419,2023-03-24 21:06:36,菜鸡想进大厂～,答案错误,"import java.util.*;
import java.io.*;

public class Main{
    public static void main(String[] args) throws Exception{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String[] ss = br.readLine().split("" "");
        int n = Integer.parseInt(ss[0]);
        int[][] points = new int[n][2];
        for (int i = 0; i < n; i ++) {
            ss = br.readLine().split("" "");
            points[i][0] = Integer.parseInt(ss[0]);
            points[i][1] = Integer.parseInt(ss[1]);
        }
        long cnt = 0;
        for (int i = 0; i < n; i ++) {
            for (int j = i + 1; j < n; j ++) {
                for (int k = j + 1; k < n; k ++) {
//                    if (points[i][0] * points[j][1] == points[i][1] * points[j][0]
//                    && points[i][0] * points[k][1] == points[i][1] * points[k][0]) continue;
                    int d1 = dis(points[i], points[j]);
                    int d2 = dis(points[i], points[k]);
                    int d3 = dis(points[j], points[k]);
                    int[] t = {d1, d2, d3};
                    Arrays.sort(t);
                    if (t[0] == t[1] && t[2] != 2 * (t[0] + t[1])) cnt ++;
                }
            }
        }
        System.out.println(cnt);
    }
    private static int dis(int[] a, int[] b) {
        return (a[0] - b[0]) * (a[0] - b[0]) + (a[1] - b[1]) * (a[1] - b[1]);
    }
}

"
78,E,Java,61493151,2023-03-24 21:17:48,小小小巨人,答案正确,"import java.io.*;
import java.math.*;
import java.util.*;
import java.util.Map.*;
/**
 * 
 * @author TCchen
 */
public class Main {
	public static void main(String[]args) throws IOException {
		new Main().run();
	}
//	File input=new File("".\\input.txt"");
//	File output=new File("".\\output.txt"");
	void run() throws IOException{
//		new Solve().setIO(input, output).run();
		new Solve().setIO(System.in,System.out).run();
	}
	class Solve extends ioTask{
		int n,q,m,k,i,j,x,y,len,l,r;
		boolean[][]book=new boolean[3005][3005];
		int[]a,b;
		int dis(int i,int j) {
			return (a[i]-a[j])*(a[i]-a[j])+(b[i]-b[j])*(b[i]-b[j]);
		}
		void solve() throws IOException{
			n=in.in();
			a=new int[n];
			b=new int[n];
			for(i=0;i<n;i++) {
				a[i]=in.in()+1500;
				b[i]=in.in()+1500;
				book[a[i]][b[i]]=true;
			}
			long ans=0;
			for(i=0;i<n;i++) {
				HashMap<Integer,Integer>mp=new HashMap<Integer,Integer>();
				for(j=0;j<n;j++) {
					if(i==j)continue;
					mp.merge(dis(i,j),1 , Integer::sum);
					x=2*a[i]-a[j];
					y=2*b[i]-b[j];
					if(book[x][y])ans--;
				}
				for(int v:mp.values()) {
					ans+=v*(v-1);
				}
			}
			out.println(ans>>1);
		}
		int te=1;
		void run()throws IOException{
//			init();
			int t=1;
//			t=in.in();
			for(te=1;te<=t;te++) {
				solve();
				out.flush();
			}
			out.close();
		}
//		long timeMillis;
//		void st() {
//			timeMillis=System.currentTimeMillis();
//		}
//		void ed() {
//			System.out.println((System.currentTimeMillis()-timeMillis)+""ms"");
//		}
	}
	class QIn{
		StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
		int in() throws IOException {
			st.nextToken();
			return (int)st.nval;
		}
		long inl() throws IOException {
			st.nextToken();
			return (long)st.nval;
		}
		double ind()throws IOException  {
			st.nextToken();
			return st.nval;
		}
		String ins() throws IOException {
			st.nextToken();
			return st.sval;
		}
	}
	class In{
		private StringTokenizer in=new StringTokenizer("""");
		private InputStream is;
		private BufferedReader br;
		public In(File file) throws IOException {
			is=new FileInputStream(file);
			init();
		}
		public In(InputStream is) throws IOException{
			this.is=is;
			init();
		}
		private void init() throws IOException {
			br=new BufferedReader(new InputStreamReader(is));
		}
		/**
		 * File and OJ only
		 */
		boolean hasNext() throws IOException {
			return in.hasMoreTokens()||br.ready();
		}
		String ins() throws IOException {
			while(!in.hasMoreTokens()) {
				in=new StringTokenizer(br.readLine());
			}
			return in.nextToken();
		}
		int in() throws IOException {
			return Integer.parseInt(ins());
		}
		long inl() throws IOException {
			return Long.parseLong(ins());
		}
		double ind() throws IOException {
			return Double.parseDouble(ins());
		}
		String line() throws IOException {
			return br.readLine();
		}
	}
	class Out{
		PrintWriter out;
		private OutputStream os;
		private void init() {
			out=new PrintWriter(new BufferedWriter(new OutputStreamWriter(os)));
		}
		public Out(File file) throws IOException {
			os=new FileOutputStream(file);
			init();
		}
		public Out(OutputStream os) throws IOException{
			this.os=os;
			init();
		}
	}
	abstract class ioTask{
		In in;
		PrintWriter out;
		public ioTask setIO(File in,File out) throws IOException{
			this.in=new In(in);
			this.out=new Out(out).out;
			return this;
		}
		public ioTask setIO(File in,OutputStream out) throws IOException{
			this.in=new In(in);
			this.out=new Out(out).out;
			return this;
		}
		public ioTask setIO(InputStream in,OutputStream out) throws IOException{
			this.in=new In(in);
			this.out=new Out(out).out;
			return this;
		}
		public ioTask setIO(InputStream in,File out) throws IOException{
			this.in=new In(in);
			this.out=new Out(out).out;
			return this;
		}
		void run()throws IOException{}
	}
}"
79,E,Java,61493718,2023-03-24 21:27:27,菜鸡想进大厂～,答案正确,"import java.util.*;
import java.io.*;

public class Main{
    public static void main(String[] args) throws Exception{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String[] ss = br.readLine().split("" "");
        int n = Integer.parseInt(ss[0]);
        int[][] points = new int[n][2];
        for (int i = 0; i < n; i ++) {
            ss = br.readLine().split("" "");
            points[i][0] = Integer.parseInt(ss[0]);
            points[i][1] = Integer.parseInt(ss[1]);
        }
        long cnt = 0;
        for (int i = 0; i < n; i ++) {
            for (int j = i + 1; j < n; j ++) {
                for (int k = j + 1; k < n; k ++) {
//                    if (points[i][0] * points[j][1] == points[i][1] * points[j][0]
//                    && points[i][0] * points[k][1] == points[i][1] * points[k][0]) continue;
                    int d1 = dis(points[i], points[j]);
                    int d2 = dis(points[i], points[k]);
                    int d3 = dis(points[j], points[k]);
                    if ((d1 == d2 && Math.sqrt(d1) + Math.sqrt(d2) - Math.sqrt(d3) > 0.000001)
                       || (d2 == d3 && Math.sqrt(d2) + Math.sqrt(d3) - Math.sqrt(d1) > 0.000001)
                       || (d1 == d3 && Math.sqrt(d1) + Math.sqrt(d3) - Math.sqrt(d2) > 0.000001))
                    cnt ++; 
                }
            }
        }
        System.out.println(cnt);
    }
    private static int dis(int[] a, int[] b) {
        return (a[0] - b[0]) * (a[0] - b[0]) + (a[1] - b[1]) * (a[1] - b[1]);
    }
}

"
80,E,Java,61496112,2023-03-24 22:37:28,zronghui,答案正确,"import java.util.*;

public class Main {
    static class Point {
        int x, y;

        Point(int x, int y) {
            this.x = x;
            this.y = y;
        }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        Point[] points = new Point[n];

        for (int i = 0; i < n; i++) {
            int x = sc.nextInt();
            int y = sc.nextInt();
            points[i] = new Point(x, y);
        }

        int count = 0;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                int distij = calc(points[i], points[j]);
                for (int k = j + 1; k < n; k++) {
                    // 判断第三个点不和前面两个点共线
                    if ((points[j].y - points[i].y) * (points[k].x - points[i].x) !=
                            (points[k].y - points[i].y) * (points[j].x - points[i].x)) {
                        int distjk = calc(points[j], points[k]);
                        int distik = calc(points[i], points[k]);
                        if (distij == distik || distij == distjk || distik == distjk) {
                            count++;
                        }
                    }
                }
            }
        }

        System.out.println(count);
    }

    static int calc(Point p1, Point p2) {
        return (p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y);
    }
}
"
81,E,Java,61496991,2023-03-24 23:18:58,HMETAO,答案正确,"
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;

public class Main {

    static StringBuilder sb = new StringBuilder();

    public static void main(String[] args) {
        Reader r = new Reader();
        int t = 1;
//        t = r.nextInt();
        while (t-- > 0) {
            solve(r);
        }
        if (sb.length() > 0) System.out.println(sb.deleteCharAt(sb.length() - 1));

    }


    private static void solve(Reader sc) {
        int n = sc.nextInt();
        ArrayList<int[]> list = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            list.add(new int[]{sc.nextInt(), sc.nextInt()});
        }
        long ans = 0;
        for (int i = 0; i < list.size(); i++) {
            for (int j = i + 1; j < list.size(); j++) {
                for (int k = j + 1; k < list.size(); k++) {
                    int[] a = list.get(i);
                    int[] b = list.get(j);
                    int[] c = list.get(k);
                    if (a[0] == b[0] && a[0] == c[0]) continue;
                    if (a[1] == b[1] && b[1] == c[1]) continue;
                    if (check(a, b, c)) continue;
                    if (check(b, c, a)) continue;
                    if (check(c, a, b)) continue;
                    HashMap<Long, Integer> map = new HashMap<>();
                    map.merge(handler(a, b), 1, Integer::sum);
                    map.merge(handler(a, c), 1, Integer::sum);
                    map.merge(handler(b, c), 1, Integer::sum);
                    if (map.size() != 3) ans++;

                }
            }
        }
        println(ans);
    }

    public static long handler(int[] a, int[] b) {
        return (long) (Math.pow(a[0] - b[0], 2) + Math.pow(a[1] - b[1], 2));
    }

    public static boolean check(int[] a, int[] b, int[] c) {
        return a[0] + c[0] == b[0] * 2 && a[1] + c[1] == b[1] * 2;
    }


    static class UnionFind {
        int[] parent;

        int n;
        long score;
        long inc = 1;

        Deque<Long> stack = new LinkedList<>();

        public UnionFind(int n) {
            this.n = n - 1;
            this.parent = new int[n];
//            for (int i = 0; i < n; i++) {
//                parent[i] = i;
//            }
        }

        public boolean isCon() {
            return n == 0;
        }

        public int find(int k) {
            if (parent[k] != k) {
                parent[k] = find(parent[k]);
            }
            return parent[k];
        }

        public boolean union(int x, int y, long s, long mid) {
            int xRoot = find(x);
            int yRoot = find(y);
            if (xRoot != yRoot) {
                parent[xRoot] = yRoot;
                if (s > mid) {
//                    score = score + (s * inc);
                    inc++;
                    stack.add(s);
                }
                return true;
            }
            return false;
        }
    }

    static class BitIndexTree {
        long[] trie;
        int n;

        public BitIndexTree(int n) {
            this.n = n;
            trie = new long[n + 1];
        }

        public static int lowBit(int x) {
            return x & (-x);
        }

        public void add(int index, int v) {
            while (index <= n) {
                trie[index] += v;
                index += lowBit(index);
            }
        }

        public long query(int index) {
            long ans = 0;
            while (index > 0) {
                ans += trie[index];
                index -= lowBit(index);
            }
            return ans;
        }
    }

    private static void swap(int[] arr, int a, int b) {
        int temp = arr[a];
        arr[a] = arr[b];
        arr[b] = temp;
    }

    public static long pow3(long a, long b) {
        long ans = 1;
        while (b > 0) {
            if ((b & 1) == 1) {
                ans *= a;
            }
            a *= a;
            b >>= 1;
        }
        return ans;
    }

    public static long pow4(long a, long b, int p) {
        long ans = 1;
        a %= p;
        while (b > 0) {
            if ((b & 1) == 1) {
                ans = ans * a % p;
            }
            a = a * a % p;
            b >>= 1;
        }
        return ans;
    }

    public static List<Integer> euler(int n) {
        boolean[] check = new boolean[n + 1];
        List<Integer> ans = new ArrayList<>();
        for (int i = 2; i <= n; i++) {
            if (!check[i]) {
                ans.add(i);
            }
            for (Integer item : ans) {
                if (item * i > n) break;
                check[(item * i)] = true;
                if (i % item == 0) break;
            }
        }
        return ans;
    }

    public static void euler_phi(int n) {
        int ans = n;
        for (int i = 2; i <= n / i; i++) {
            if (n % i == 0) {
                ans *= (1 - 1.0 / i);
                while (n % i == 0) {
                    n /= i;
                }
            }
        }
        if (n > 1) ans *= (1 - 1.0 / n);
        System.out.println(ans);
    }

    public static int[] eulers(int n) {
        boolean[] check = new boolean[n + 1];
        int[] phi = new int[n + 1];
        phi[1] = 1;
        ArrayList<Integer> primes = new ArrayList<>();
        for (int i = 2; i <= n; i++) {
            if (!check[i]) {
                primes.add(i);
                phi[i] = i - 1;
            }

            for (Integer item : primes) {
                if (item * i > n) break;
                check[item * i] = true;
                if (i % item == 0) {
                    phi[item * i] = item * phi[i];
                    break;
                }
                phi[item * i] = (item - 1) * phi[i];
            }
        }
        return phi;
    }


    static final Random random = new Random();

    static void ruffleSort(int[] a) {
        int n = a.length;//shuffle, then sort
        for (int i = 0; i < n; i++) {
            int oi = random.nextInt(n), temp = a[oi];
            a[oi] = a[i];
            a[i] = temp;
        }
        Arrays.sort(a);
    }

    static class Reader {
        BufferedReader buf;
        StringTokenizer tok;

        Reader() {
            buf = new BufferedReader(new InputStreamReader(System.in));
        }

        boolean hasNext() {
            while (tok == null || !tok.hasMoreElements()) {
                try {
                    tok = new StringTokenizer(buf.readLine());
                } catch (Exception e) {
                    return false;
                }
            }
            return true;
        }

        String nextLine() {
            try {
                return buf.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        String next() {
            if (hasNext()) return tok.nextToken();
            return null;
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        int[] nextIntArrForSizeIndexOfOne(int size) {
            int[] nums = new int[size + 1];
            for (int i = 1; i <= size; i++) {
                nums[i] = nextInt();
            }
            return nums;
        }

        int[] nextIntArrForSizeIndexOfZero(int size) {
            int[] nums = new int[size];
            for (int i = 0; i < size; i++) {
                nums[i] = nextInt();
            }
            return nums;
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }
    }

    private static void print(Object t) {
        sb.append(t);
    }

    private static void printf(Object t) {
        sb.append(t).append("" "");
    }

    private static void printf(Object... t) {
        for (Object s : t) {
            sb.append(s).append("" "");
        }
        sb.deleteCharAt(sb.length() - 1);
    }

    private static void printf(String end, Object... t) {
        for (Object s : t) {
            sb.append(s).append("" "");
        }
        sb.deleteCharAt(sb.length() - 1);
        sb.append(end);
    }

    private static void println(Object t) {
        sb.append(t).append(""\n"");
    }

    private static void println() {
        sb.append(""\n"");
    }

    private static <T> void printArr(long[] arr) {
        for (Object o : arr) {
            sb.append(o).append("" "");
        }
    }

    private static <T> void printArr(int[] arr) {
        for (Object o : arr) {
            sb.append(o).append("" "");
        }
    }

}


"
82,E,Java,61497831,2023-03-25 00:20:55,凯撒Katharsis,答案正确,"import java.util.*;
import java.io.*;

public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
    static final int N = 100010;
    static int n;
    static boolean set[][] = new boolean[3010][3010];
    static int cnt[] = new int [2000010];

    public static void main(String[] args) throws Exception {
        n = Integer.parseInt(br.readLine());

        int a[][] = new int [n][2];

        String str[];
        for(int i = 0; i < n; i ++ ) {
            str = br.readLine().split("" "");
            for(int j = 0; j < 2; j ++ ) a[i][j] = Integer.parseInt(str[j]);
            set[a[i][0] + 1500][a[i][1] + 1500] = true;
        }

        int ans = 0, line = 0;
        for(int i = 0; i < n; i ++ ) {
            for(int j = 0; j < n; j ++ ) {
                if(j != i) {
                    int x = a[i][0] - a[j][0], y = a[i][1] - a[j][1];
                    int xy = x * x + y * y;
                    ans += cnt[xy] ++ ;
                    if(set[a[i][0] + x + 1500][1500 + a[i][1] + y]) line ++ ;
                }
            }

            Arrays.fill(cnt, 0);
        }

        bw.write((int)(ans - (line) / 2) + ""\n"");
        bw.flush();
    }
}"
83,E,Java,61497865,2023-03-25 00:27:35,祸灵梦,答案错误,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.StreamTokenizer;

class Point{
    int x, y;

    public Point(int x, int y) {
        this.x = x;
        this.y = y;
    }
}

public class Main {
    final static int N = 410;
    static Point[] points = new Point[N];
    static int n;
    static StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));

    static int cal(int i, int j){
        return (points[i].x - points[j].x) * (points[i].x - points[j].x) + (points[i].y - points[j].y) * (points[i].y - points[j].y);
    }

    public static void main(String[] args) throws IOException {
        in.nextToken(); n = (int) in.nval;

        for(int i = 1; i <= n; i++){
            int x, y;
            in.nextToken(); x = (int) in.nval;
            in.nextToken(); y = (int) in.nval;

            points[i] = new Point(x, y);
        }

        long ans = 0;
        for(int i = 1; i <= n; i++){
            for(int j = i + 1; j <= n; j++){
                for(int k = j + 1; k <= n; k++){
                    if(cal(i,j) == cal(j,k) || cal(i,k) == cal(k,j) || cal(j, i) == cal(k, i))
                        ans++;
                }
            }
        }

        System.out.println(ans);
    }
}"
84,E,Java,61497872,2023-03-25 00:29:15,Jiarui.X,答案错误,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.StreamTokenizer;
import  java.util.*;

public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static final int N = 410;
    static int n;
    static int[] x = new int[N], y = new int[N];
    public static void Solve() throws IOException {
        n = Integer.parseInt(br.readLine());
        for (int i = 1; i <= n; i ++) {
            String[] S = br.readLine().split("" "");
            x[i] = Integer.parseInt(S[0]);
            y[i] = Integer.parseInt(S[1]);
        }
        int ans = 0;
        for (int i = 1; i <= n; i ++) {
            for (int j = i + 1; j <= n; j ++) {
                for (int k = j + 1; k <= n; k ++) {
                    int x1 = x[i], y1 = y[i];
                    int x2 = x[j], y2 = y[j];
                    int x3 = x[k], y3 = y[k];
                    int d1 = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);
                    int d2 = (x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2);
                    int d3 = (x3 - x1) * (x3 - x1) + (y3 - y1) * (y3 - y1);
                    if(d1 == d2 || d2 == d3 || d1 == d3) {
                        ++ ans;
                    }
                }
            }
        }
        System.out.println(ans);
    }
    public static void main(String[] args) throws IOException {
        int T = 1;
        for (; T > 0; T --) Solve();
    }
}"
85,E,Java,61497877,2023-03-25 00:30:44,Jiarui.X,答案正确,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.StreamTokenizer;
import  java.util.*;

public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static final int N = 410;
    static int n;
    static int[] x = new int[N], y = new int[N];
    public static void Solve() throws IOException {
        n = Integer.parseInt(br.readLine());
        for (int i = 1; i <= n; i ++) {
            String[] S = br.readLine().split("" "");
            x[i] = Integer.parseInt(S[0]);
            y[i] = Integer.parseInt(S[1]);
        }
        int ans = 0;
        for (int i = 1; i <= n; i ++) {
            for (int j = i + 1; j <= n; j ++) {
                for (int k = j + 1; k <= n; k ++) {
                    int x1 = x[i], y1 = y[i];
                    int x2 = x[j], y2 = y[j];
                    int x3 = x[k], y3 = y[k];
                    int cross = (x1 - x3) * (y2 - y3) - (x2 - x3) * (y1 - y3);
                    if(cross == 0) continue;
                    int d1 = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);
                    int d2 = (x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2);
                    int d3 = (x3 - x1) * (x3 - x1) + (y3 - y1) * (y3 - y1);
                    if(d1 == d2 || d2 == d3 || d1 == d3) {
                        ++ ans;
                    }
                }
            }
        }
        System.out.println(ans);
    }
    public static void main(String[] args) throws IOException {
        int T = 1;
        for (; T > 0; T --) Solve();
    }
}"
86,E,Java,61497891,2023-03-25 00:35:33,祸灵梦,答案正确,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.StreamTokenizer;

class Point{
    int x, y;

    public Point(int x, int y) {
        this.x = x;
        this.y = y;
    }
}

public class Main {
    final static int N = 410;
    static Point[] points = new Point[N];
    static int n;
    static StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));

    static int cal(int i, int j){
        return (points[i].x - points[j].x) * (points[i].x - points[j].x) + (points[i].y - points[j].y) * (points[i].y - points[j].y);
    }

    static boolean check(int i, int j, int k){ // 检查共线与否
        return Math.abs((points[k].y - points[i].y) * (points[j].x - points[i].x) - (points[j].y - points[i].y) * (points[k].x - points[i].x)) == 0;
    }

    public static void main(String[] args) throws IOException {
        in.nextToken(); n = (int) in.nval;

        for(int i = 1; i <= n; i++){
            int x, y;
            in.nextToken(); x = (int) in.nval;
            in.nextToken(); y = (int) in.nval;

            points[i] = new Point(x, y);
        }

        long ans = 0;
        for(int i = 1; i <= n; i++){
            for(int j = i + 1; j <= n; j++){
                for(int k = j + 1; k <= n; k++){
                    if(!check(i,j,k) && (cal(i,j) == cal(j,k) || cal(i,k) == cal(k,j) || cal(j, i) == cal(k, i)))
                        ans++;
                }
            }
        }

        System.out.println(ans);
    }
}"
87,E,Java,61498757,2023-03-25 09:18:50,giao1,答案错误,"import java.util.*;

public class Main{
    
    static Vector<int[]> vector = new Vector<>();
    static boolean[][] st = new boolean[1010][1010];
    public static void main(String[] args){
        Scanner cin = new Scanner(System.in);
        int n = cin.nextInt();
        int m = n;
        while(m-->0){
            int x = cin.nextInt();
            int y = cin.nextInt();
            if(x<0) x = Math.abs(x-500);
            if(y<0) y = Math.abs(y-500);
            
            if(!st[x][y]){
                vector.add(new int[]{x,y});
                st[x][y] = true;
            }
        }
        int sum = 0;
        boolean flage1 = false;
        boolean flage2 = false;
        boolean flage3 = false;
        for(int i = 0;i<n;i++)
            for(int j = i+1;j<n;j++)
                for(int k = j+1;k<n;k++){
                    int x1 = vector.get(i)[0];
                    if(x1>500) x1 = -1*x1+500;
                    int y1 = vector.get(i)[1];
                    if(y1>500) y1 = -1*y1+500;
                    int x2 = vector.get(j)[0];
                    if(x2>500) x2 = -1*x2+500;
                    int y2 = vector.get(j)[1];
                     if(y2>500) y2 = -1*y2+500;
                    int x3 = vector.get(k)[0];
                    if(x3>500) x3 = -1*x3+500;
                    int y3 = vector.get(k)[1];
                     if(y3>500) y3 = -1*y3+500;
                    long a = (y1-y2)*(y1-y2)+(x1-x2)*(x1-x2);
                    long b = (y1-y3)*(y1-y3)+(x1-x3)*(x1-x3);
                    long c = (y2-y3)*(y2-y3)+(x2-x3)*(x2-x3);
                    if((y1-y2)*(x3-x2)!=(y3-y2)*(x1-x2)) flage1 = true;
                    if(a==b||a==c||b==c) flage2 = true;
                    if(flage1&&flage2) sum++;
                }
        System.out.println(sum);
    }
}"
88,E,Java,61498797,2023-03-25 09:23:28,giao1,答案正确,"import java.util.*;

public class Main{
    
    static Vector<int[]> vector = new Vector<>();
    static boolean[][] st = new boolean[1010][1010];
    public static void main(String[] args){
        Scanner cin = new Scanner(System.in);
        int n = cin.nextInt();
        int m = n;
        while(m-->0){
            int x = cin.nextInt();
            int y = cin.nextInt();
            if(x<0) x = Math.abs(x-500);
            if(y<0) y = Math.abs(y-500);
            
            if(!st[x][y]){
                vector.add(new int[]{x,y});
                st[x][y] = true;
            }
        }
        int sum = 0;
        
        boolean flage3 = false;
        for(int i = 0;i<n;i++)
            for(int j = i+1;j<n;j++)
                for(int k = j+1;k<n;k++){
                    boolean flage1 = false;
                    boolean flage2 = false;
                    int x1 = vector.get(i)[0];
                    if(x1>500) x1 = -1*x1+500;
                    int y1 = vector.get(i)[1];
                    if(y1>500) y1 = -1*y1+500;
                    int x2 = vector.get(j)[0];
                    if(x2>500) x2 = -1*x2+500;
                    int y2 = vector.get(j)[1];
                     if(y2>500) y2 = -1*y2+500;
                    int x3 = vector.get(k)[0];
                    if(x3>500) x3 = -1*x3+500;
                    int y3 = vector.get(k)[1];
                     if(y3>500) y3 = -1*y3+500;
                    long a = (y1-y2)*(y1-y2)+(x1-x2)*(x1-x2);
                    long b = (y1-y3)*(y1-y3)+(x1-x3)*(x1-x3);
                    long c = (y2-y3)*(y2-y3)+(x2-x3)*(x2-x3);
                    //System.out.println(a+"" ""+b+"" ""+c);
                    if((y1-y2)*(x3-x2)!=(y3-y2)*(x1-x2)) flage1 = true;
                    if(a==b||a==c||b==c) flage2 = true;
                    if(flage1&&flage2) sum++;
                }
        System.out.println(sum);
    }
}"
89,E,Java,61500015,2023-03-25 10:52:48,今天一定早点睡,答案正确,"import java.io.*;
import java.util.*;

public class Main {
    static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    static int N = 410, n;
    static int[][] nu = new int[N][2];

    static int cal(int a, int b) {
        return (a - b) * (a - b);
    }

    public static void main(String[] args) throws Exception {
        n = Integer.parseInt(in.readLine());
        for (int i = 1; i <= n; i++) {
            String[] s1 = in.readLine().split("" "");
            nu[i][0] = Integer.parseInt(s1[0]);
            nu[i][1] = Integer.parseInt(s1[1]);
        }
        int ans = 0;
        for (int i = 1; i <= n; i++)
            for (int j = i + 1; j <= n; j++)
                for (int k = j + 1; k <= n; k++) {
                    int x1 = nu[i][0], y1 = nu[i][1];
                    int x2 = nu[j][0], y2 = nu[j][1];
                    int x3 = nu[k][0], y3 = nu[k][1];
                    int f1 = (y2 - y1) * (x3 - x2);
                    int f2 = (y3 - y2) * (x2 - x1);
                    if (f1 != f2) {
                        int d1 = cal(x1, x2) + cal(y1, y2);
                        int d2 = cal(x1, x3) + cal(y1, y3);
                        int d3 = cal(x2, x3) + cal(y2, y3);
                        if (d1 == d2 || d2 == d3 || d1 == d3) ans ++;
                    }
                }
        out.println(ans);
        out.flush();
    }
}
"
90,E,Java,61508791,2023-03-25 13:30:46,菜鸡想进大厂～,答案正确,"import java.util.*;
import java.io.*;

public class Main{
    public static void main(String[] args) throws Exception{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String[] ss = br.readLine().split("" "");
        int n = Integer.parseInt(ss[0]);
        int[][] points = new int[n][2];
        for (int i = 0; i < n; i ++) {
            ss = br.readLine().split("" "");
            points[i][0] = Integer.parseInt(ss[0]);
            points[i][1] = Integer.parseInt(ss[1]);
        }
        long cnt = 0;
        for (int i = 0; i < n; i ++) {
            for (int j = i + 1; j < n; j ++) {
                for (int k = j + 1; k < n; k ++) {
//                    if (points[i][0] * points[j][1] == points[i][1] * points[j][0]
//                    && points[i][0] * points[k][1] == points[i][1] * points[k][0]) continue;
                    int d1 = dis(points[i], points[j]);
                    int d2 = dis(points[i], points[k]);
                    int d3 = dis(points[j], points[k]);
                    if ((d1 == d2 && Math.sqrt(d1) + Math.sqrt(d2) - Math.sqrt(d3) > 0.000001)
                       || (d2 == d3 && Math.sqrt(d2) + Math.sqrt(d3) - Math.sqrt(d1) > 0.000001)
                       || (d1 == d3 && Math.sqrt(d1) + Math.sqrt(d3) - Math.sqrt(d2) > 0.000001))
                    cnt ++; 
                }
            }
        }
        System.out.println(cnt);
    }
    private static int dis(int[] a, int[] b) {
        return (a[0] - b[0]) * (a[0] - b[0]) + (a[1] - b[1]) * (a[1] - b[1]);
    }
}

"
91,E,Java,61518635,2023-03-25 14:42:11,迷你滨,答案错误,"import java.util.*;
import java.io.*;


public class Main {
	static int n,m,mod=(int)1e9+7,maxn=40002;
	static long ans=0,INF=(long)1e18;
	static Scanner sc = new Scanner (System.in);
	static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
	static StreamTokenizer st = new StreamTokenizer(bf);
	static PrintWriter pw = new PrintWriter(System.out);
	
	public static void main(String[]args) throws IOException{
		int T = 1;
		//T = I();
		while(T-->0) solve();
		pw.flush();
	}
	
	static int I() throws IOException{
		st.nextToken();
		return (int)st.nval;
	}
	
	static String S() throws IOException{
		String s = bf.readLine();
		while(s.equals("""")) s = bf.readLine();
		return s;
	}
	
	static double a[] = new double[404];
	static double b[] = new double[402];
	
	static double d(int i,int j) {
		return (double)Math.sqrt((a[i]-a[j])*(a[i]-a[j])+(b[i]-b[j])*(b[i]-b[j]));
	}
	
	static void solve() throws IOException{
		n=I();
		for(int i=0;i<n;i++) {
			a[i]=(double)I();b[i]=(double)I();
		}
		for(int i=0;i<n;i++)
			for(int j=i+1;j<n;j++)
				for(int k=j+1;k<n;k++) {
					if(Math.abs(d(i,j) - d(i,k)) < 1e-4 && Math.abs(d(i,j) - d(i,k)) < 1e-4)
						ans++;
				}
		pw.println(ans);
	}
	
}
"
92,E,Java,61519060,2023-03-25 14:45:14,迷你滨,答案错误,"import java.util.*;
import java.io.*;


public class Main {
	static int n,m,mod=(int)1e9+7,maxn=40002;
	static long ans=0,INF=(long)1e18;
	static Scanner sc = new Scanner (System.in);
	static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
	static StreamTokenizer st = new StreamTokenizer(bf);
	static PrintWriter pw = new PrintWriter(System.out);
	
	public static void main(String[]args) throws IOException{
		int T = 1;
		//T = I();
		while(T-->0) solve();
		pw.flush();
	}
	
	static int I() throws IOException{
		st.nextToken();
		return (int)st.nval;
	}
	
	static String S() throws IOException{
		String s = bf.readLine();
		while(s.equals("""")) s = bf.readLine();
		return s;
	}
	
	static double a[] = new double[404];
	static double b[] = new double[402];
	
	static double d(int i,int j) {
		return Math.sqrt((a[i]-a[j])*(a[i]-a[j])+(b[i]-b[j])*(b[i]-b[j]));
	}
	
	static void solve() throws IOException{
		n=sc.nextInt();
		for(int i=0;i<n;i++) {
			a[i]=sc.nextDouble();b[i]=sc.nextDouble();
		}
		for(int i=0;i<n;i++)
			for(int j=i+1;j<n;j++)
				for(int k=j+1;k<n;k++) {
					if(Math.abs(d(i,j) - d(i,k)) < 1e-6 || Math.abs(d(k,j) - d(i,k)) < 1e-6 || 
                      Math.abs(d(k,j) - d(i,j)) < 1e-6)
						ans++;
				}
		pw.println(ans);
	}
	
}
"
93,E,Java,61519117,2023-03-25 14:45:34,迷你滨,答案错误,"import java.util.*;
import java.io.*;


public class Main {
	static int n,m,mod=(int)1e9+7,maxn=40002;
	static long ans=0,INF=(long)1e18;
	static Scanner sc = new Scanner (System.in);
	static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
	static StreamTokenizer st = new StreamTokenizer(bf);
	static PrintWriter pw = new PrintWriter(System.out);
	
	public static void main(String[]args) throws IOException{
		int T = 1;
		//T = I();
		while(T-->0) solve();
		pw.flush();
	}
	
	static int I() throws IOException{
		st.nextToken();
		return (int)st.nval;
	}
	
	static String S() throws IOException{
		String s = bf.readLine();
		while(s.equals("""")) s = bf.readLine();
		return s;
	}
	
	static double a[] = new double[404];
	static double b[] = new double[402];
	
	static double d(int i,int j) {
		return Math.sqrt((a[i]-a[j])*(a[i]-a[j])+(b[i]-b[j])*(b[i]-b[j]));
	}
	
	static void solve() throws IOException{
		n=sc.nextInt();
		for(int i=0;i<n;i++) {
			a[i]=sc.nextDouble();b[i]=sc.nextDouble();
		}
		for(int i=0;i<n;i++)
			for(int j=i+1;j<n;j++)
				for(int k=j+1;k<n;k++) {
					if(Math.abs(d(i,j) - d(i,k)) < 1e-3 || Math.abs(d(k,j) - d(i,k)) < 1e-3 || 
                      Math.abs(d(k,j) - d(i,j)) < 1e-3)
						ans++;
				}
		pw.println(ans);
	}
	
}
"
94,E,Java,61519282,2023-03-25 14:46:48,迷你滨,答案错误,"import java.util.*;
import java.io.*;


public class Main {
	static int n,m,mod=(int)1e9+7,maxn=40002;
	static long ans=0,INF=(long)1e18;
	static Scanner sc = new Scanner (System.in);
	static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
	static StreamTokenizer st = new StreamTokenizer(bf);
	static PrintWriter pw = new PrintWriter(System.out);
	
	public static void main(String[]args) throws IOException{
		int T = 1;
		//T = I();
		while(T-->0) solve();
		pw.flush();
	}
	
	static int I() throws IOException{
		st.nextToken();
		return (int)st.nval;
	}
	
	static String S() throws IOException{
		String s = bf.readLine();
		while(s.equals("""")) s = bf.readLine();
		return s;
	}
	
	static double a[] = new double[404];
	static double b[] = new double[402];
	
	static double d(int i,int j) {
		return Math.sqrt((a[i]-a[j])*(a[i]-a[j])+(b[i]-b[j])*(b[i]-b[j]));
	}
	
	static void solve() throws IOException{
		n=sc.nextInt();
		for(int i=0;i<n;i++) {
			a[i]=sc.nextDouble();b[i]=sc.nextDouble();
		}
		for(int i=0;i<n;i++)
			for(int j=i+1;j<n;j++)
				for(int k=j+1;k<n;k++) {
					if(Math.abs(d(i,j) - d(i,k)) < 1e-9 || Math.abs(d(k,j) - d(i,k)) < 1e-9 || 
                      Math.abs(d(k,j) - d(i,j)) < 1e-9)
						ans++;
				}
		pw.println(ans);
	}
	
}
"
95,E,Java,61519590,2023-03-25 14:49:04,迷你滨,答案错误,"import java.util.*;
import java.io.*;


public class Main {
	static int n,m,mod=(int)1e9+7,maxn=40002;
	static long ans=0,INF=(long)1e18;
	static Scanner sc = new Scanner (System.in);
	static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
	static StreamTokenizer st = new StreamTokenizer(bf);
	static PrintWriter pw = new PrintWriter(System.out);
	
	public static void main(String[]args) throws IOException{
		int T = 1;
		//T = I();
		while(T-->0) solve();
		pw.flush();
	}
	
	static int I() throws IOException{
		st.nextToken();
		return (int)st.nval;
	}
	
	static String S() throws IOException{
		String s = bf.readLine();
		while(s.equals("""")) s = bf.readLine();
		return s;
	}
	
	static double a[] = new double[404];
	static double b[] = new double[402];
	
	static double d(int i,int j) {
		return Math.sqrt((a[i]-a[j])*(a[i]-a[j])+(b[i]-b[j])*(b[i]-b[j]));
	}
    
    static double kk(int i,int j){
        return (b[i]-b[j])/(a[i]-a[j]);
    }
	
	static void solve() throws IOException{
		n=sc.nextInt();
		for(int i=0;i<n;i++) {
			a[i]=sc.nextDouble();b[i]=sc.nextDouble();
		}
		for(int i=0;i<n;i++)
			for(int j=i+1;j<n;j++)
				for(int k=j+1;k<n;k++) {
                    if(kk(i,j) == kk(j,k)) continue;
					if(Math.abs(d(i,j) - d(i,k)) < 1e-9 || Math.abs(d(k,j) - d(i,k)) < 1e-9 || 
                      Math.abs(d(k,j) - d(i,j)) < 1e-9)
						ans++;
				}
		pw.println(ans);
	}
	
}
"
96,E,Java,61519644,2023-03-25 14:49:27,迷你滨,答案错误,"import java.util.*;
import java.io.*;


public class Main {
	static int n,m,mod=(int)1e9+7,maxn=40002;
	static long ans=0,INF=(long)1e18;
	static Scanner sc = new Scanner (System.in);
	static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
	static StreamTokenizer st = new StreamTokenizer(bf);
	static PrintWriter pw = new PrintWriter(System.out);
	
	public static void main(String[]args) throws IOException{
		int T = 1;
		//T = I();
		while(T-->0) solve();
		pw.flush();
	}
	
	static int I() throws IOException{
		st.nextToken();
		return (int)st.nval;
	}
	
	static String S() throws IOException{
		String s = bf.readLine();
		while(s.equals("""")) s = bf.readLine();
		return s;
	}
	
	static double a[] = new double[404];
	static double b[] = new double[402];
	
	static double d(int i,int j) {
		return Math.sqrt((a[i]-a[j])*(a[i]-a[j])+(b[i]-b[j])*(b[i]-b[j]));
	}
    
    static double kk(int i,int j){
        return (b[i]-b[j])/(a[i]-a[j]);
    }
	
	static void solve() throws IOException{
		n=sc.nextInt();
		for(int i=0;i<n;i++) {
			a[i]=sc.nextDouble();b[i]=sc.nextDouble();
		}
		for(int i=0;i<n;i++)
			for(int j=i+1;j<n;j++)
				for(int k=j+1;k<n;k++) {
                    if(kk(i,j) == kk(j,k)) continue;
					if(Math.abs(d(i,j) - d(i,k)) < 1e-4 || Math.abs(d(k,j) - d(i,k)) < 1e-4 || 
                      Math.abs(d(k,j) - d(i,j)) < 1e-4)
						ans++;
				}
		pw.println(ans);
	}
	
}
"
97,E,Java,61519843,2023-03-25 14:51:04,迷你滨,答案错误,"import java.util.*;
import java.io.*;


public class Main {
	static int n,m,mod=(int)1e9+7,maxn=40002;
	static long ans=0,INF=(long)1e18;
	static Scanner sc = new Scanner (System.in);
	static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
	static StreamTokenizer st = new StreamTokenizer(bf);
	static PrintWriter pw = new PrintWriter(System.out);
	
	public static void main(String[]args) throws IOException{
		int T = 1;
		//T = I();
		while(T-->0) solve();
		pw.flush();
	}
	
	static int I() throws IOException{
		st.nextToken();
		return (int)st.nval;
	}
	
	static String S() throws IOException{
		String s = bf.readLine();
		while(s.equals("""")) s = bf.readLine();
		return s;
	}
	
	static double a[] = new double[404];
	static double b[] = new double[402];
	
	static double d(int i,int j) {
		return Math.sqrt((a[i]-a[j])*(a[i]-a[j])+(b[i]-b[j])*(b[i]-b[j]));
	}
    
    static double kk(int i,int j){
        return (b[i]-b[j])/(a[i]-a[j]);
    }
	
	static void solve() throws IOException{
		n=sc.nextInt();
		for(int i=0;i<n;i++) {
			a[i]=sc.nextDouble();b[i]=sc.nextDouble();
		}
		for(int i=0;i<n;i++)
			for(int j=i+1;j<n;j++)
				for(int k=j+1;k<n;k++) {
                    if(Math.abs(kk(i,j) - kk(j,k)) < 1e-5) continue;
					if(Math.abs(d(i,j) - d(i,k)) < 1e-4 || Math.abs(d(k,j) - d(i,k)) < 1e-4 || 
                      Math.abs(d(k,j) - d(i,j)) < 1e-4)
						ans++;
				}
		pw.println(ans);
	}
	
}
"
98,E,Java,61520460,2023-03-25 14:55:38,迷你滨,答案错误,"import java.util.*;
import java.io.*;


public class Main {
	static int n,m,mod=(int)1e9+7,maxn=40002;
	static long ans=0,INF=(long)1e18;
	static Scanner sc = new Scanner (System.in);
	static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
	static StreamTokenizer st = new StreamTokenizer(bf);
	static PrintWriter pw = new PrintWriter(System.out);
	
	public static void main(String[]args) throws IOException{
		int T = 1;
		//T = I();
		while(T-->0) solve();
		pw.flush();
	}
	
	static int I() throws IOException{
		st.nextToken();
		return (int)st.nval;
	}
	
	static String S() throws IOException{
		String s = bf.readLine();
		while(s.equals("""")) s = bf.readLine();
		return s;
	}
	
	static double a[] = new double[404];
	static double b[] = new double[402];
	
	static double d(int i,int j) {
		return Math.sqrt((a[i]-a[j])*(a[i]-a[j])+(b[i]-b[j])*(b[i]-b[j]));
	}
    
    static double kk(int i,int j){
        return (b[i]-b[j])/(a[i]-a[j]);
    }
	
	static void solve() throws IOException{
		n=sc.nextInt();
		for(int i=0;i<n;i++) {
			a[i]=sc.nextDouble();b[i]=sc.nextDouble();
		}
		for(int i=0;i<n;i++)
			for(int j=i+1;j<n;j++)
				for(int k=j+1;k<n;k++) {
                    if(Math.abs(kk(i,j) - kk(j,k)) < 1e-9) continue;
					if(Math.abs(d(i,j) - d(i,k)) < 1e-9 || Math.abs(d(k,j) - d(i,k)) < 1e-9 || 
                      Math.abs(d(k,j) - d(i,j)) < 1e-9)
						ans++;
				}
		pw.println(ans);
	}
	
}
"
99,E,Java,61521006,2023-03-25 14:59:41,迷你滨,答案正确,"import java.util.*;
import java.io.*;


public class Main {
	static int n,m,mod=(int)1e9+7,maxn=40002;
	static long ans=0,INF=(long)1e18;
	static Scanner sc = new Scanner (System.in);
	static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
	static StreamTokenizer st = new StreamTokenizer(bf);
	static PrintWriter pw = new PrintWriter(System.out);
	
	public static void main(String[]args) throws IOException{
		int T = 1;
		//T = I();
		while(T-->0) solve();
		pw.flush();
	}
	
	static int I() throws IOException{
		st.nextToken();
		return (int)st.nval;
	}
	
	static String S() throws IOException{
		String s = bf.readLine();
		while(s.equals("""")) s = bf.readLine();
		return s;
	}
	
	static double a[] = new double[404];
	static double b[] = new double[402];
	
	static double d(int i,int j) {
		return Math.abs((a[i]-a[j])*(a[i]-a[j])+(b[i]-b[j])*(b[i]-b[j]));
	}
    
	
	static void solve() throws IOException{
		n=sc.nextInt();
		for(int i=0;i<n;i++) {
			a[i]=sc.nextDouble();b[i]=sc.nextDouble();
		}
		for(int i=0;i<n;i++)
			for(int j=i+1;j<n;j++)
				for(int k=j+1;k<n;k++) {
                    if((b[j]-b[i])*(a[k]-a[i]) == (a[j]-a[i])*(b[k]-b[i])) continue;
					if(d(i,j) == d(i,k) ||d(k,j) == d(i,k) || (d(k,j) == d(i,j)))
						ans++;
				}
		pw.println(ans);
	}
	
}
"
100,E,Java,61555398,2023-03-26 15:30:40,山东协和学院_张福旭,答案错误,"import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
    static Read sc=new Read(System.in);
    static PrintWriter out=new PrintWriter(new OutputStreamWriter(System.out));
    public static void main(String[] args) {
        int n=sc.nextInt();
        Node[] a=new Node[n+1];
        long ans=0;
        for (int i=1;i<=n;i++)
            a[i]=new Node(sc.nextInt(),sc.nextInt());
        for (int i=1;i<=n;i++){
            for (int j=i+1;j<=n;j++){
                for (int k=j+1;k<=n;k++){
                    double x=check(a[i].x,a[i].y,a[j].x,a[j].y);
                    double y=check(a[j].x,a[j].y,a[k].x,a[k].y);
                    double z=check(a[i].x,a[i].y,a[k].x,a[k].y);
                    if(x==y||x==z||y==z) ans++;
                }
            }
        }
        out.println(ans);
        out.flush();
    }
    public static double check(int x1,int y1,int x2,int y2){
        int x=x1-x2;
        int y=y1-y2;
        return Math.sqrt(x*x+y*y);
    }
    static class Node{
        int x,y;
        public Node(int x,int y){
            this.x=x;
            this.y=y;
        }
    }
    static class Read {
        BufferedReader br;
        StringTokenizer st;

        public Read(InputStream in) {
            br = new BufferedReader(new InputStreamReader(in), 16384);
            eat("""");
        }

        public void eat(String s) {
            st = new StringTokenizer(s);
        }

        public String nextLine() {
            try {
                return br.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        public boolean hasNext() {
            while (!st.hasMoreTokens()) {
                String s = nextLine();
                if (s == null)
                    return false;
                eat(s);
            }
            return true;
        }

        public String next() {
            hasNext();
            return st.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }
    }
}"
101,E,Java,61556074,2023-03-26 15:38:10,山东协和学院_张福旭,答案错误,"import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
    static Read sc=new Read(System.in);
    static PrintWriter out=new PrintWriter(new OutputStreamWriter(System.out));
    public static void main(String[] args) {
        int n=sc.nextInt();
        Node[] a=new Node[n+1];
        long ans=0;
        for (int i=1;i<=n;i++)
            a[i]=new Node(sc.nextInt(),sc.nextInt());
        for (int i=1;i<=n;i++){
            for (int j=i+1;j<=n;j++){
                for (int k=j+1;k<=n;k++){
                    double x=check(a[i].x,a[i].y,a[j].x,a[j].y);
                    double y=check(a[j].x,a[j].y,a[k].x,a[k].y);
                    double z=check(a[i].x,a[i].y,a[k].x,a[k].y);
                    double K=(a[i].y-a[j].y)*1.0/(a[i].x-a[j].x);
                    boolean vis=(a[k].y-a[i].y==K*(a[k].x-a[i].x))(?)false:true;
                    if(x==y||x==z||y==z&&vis) ans++;
                }
            }
        }
        out.println(ans);
        out.flush();
    }
    public static double check(int x1,int y1,int x2,int y2){
        int x=x1-x2;
        int y=y1-y2;
        return Math.sqrt(x*x+y*y);
    }
    static class Node{
        int x,y;
        public Node(int x,int y){
            this.x=x;
            this.y=y;
        }
    }
    static class Read {
        BufferedReader br;
        StringTokenizer st;

        public Read(InputStream in) {
            br = new BufferedReader(new InputStreamReader(in), 16384);
            eat("""");
        }

        public void eat(String s) {
            st = new StringTokenizer(s);
        }

        public String nextLine() {
            try {
                return br.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        public boolean hasNext() {
            while (!st.hasMoreTokens()) {
                String s = nextLine();
                if (s == null)
                    return false;
                eat(s);
            }
            return true;
        }

        public String next() {
            hasNext();
            return st.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }
    }
}"
102,E,Java,61556264,2023-03-26 15:39:56,山东协和学院_张福旭,答案错误,"import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
    static Read sc=new Read(System.in);
    static PrintWriter out=new PrintWriter(new OutputStreamWriter(System.out));
    public static void main(String[] args) {
        int n=sc.nextInt();
        Node[] a=new Node[n+1];
        long ans=0;
        for (int i=1;i<=n;i++)
            a[i]=new Node(sc.nextInt(),sc.nextInt());
        for (int i=1;i<=n;i++){
            for (int j=i+1;j<=n;j++){
                for (int k=j+1;k<=n;k++){
                    double x=check(a[i].x,a[i].y,a[j].x,a[j].y);
                    double y=check(a[j].x,a[j].y,a[k].x,a[k].y);
                    double z=check(a[i].x,a[i].y,a[k].x,a[k].y);
                    double K=(a[i].y-a[j].y)*1.0/(a[i].x-a[j].x);
                    boolean vis=(a[k].y-a[i].y==K*(a[k].x-a[i].x))(?)false:true;
                    if(x==y||x==z||y==z&&vis) ans++;
                }
            }
        }
        out.println(ans);
        out.flush();
    }
    public static double check(int x1,int y1,int x2,int y2){
        double x=x1-x2*1.0;
        double y=y1-y2*1.0;
        return Math.sqrt(x*x+y*y);
    }
    static class Node{
        int x,y;
        public Node(int x,int y){
            this.x=x;
            this.y=y;
        }
    }
    static class Read {
        BufferedReader br;
        StringTokenizer st;

        public Read(InputStream in) {
            br = new BufferedReader(new InputStreamReader(in), 16384);
            eat("""");
        }

        public void eat(String s) {
            st = new StringTokenizer(s);
        }

        public String nextLine() {
            try {
                return br.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        public boolean hasNext() {
            while (!st.hasMoreTokens()) {
                String s = nextLine();
                if (s == null)
                    return false;
                eat(s);
            }
            return true;
        }

        public String next() {
            hasNext();
            return st.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }
    }
}"
103,E,Java,61556568,2023-03-26 15:44:58,山东协和学院_张福旭,答案错误,"import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
    static Read sc=new Read(System.in);
    static PrintWriter out=new PrintWriter(new OutputStreamWriter(System.out));
    public static void main(String[] args) {
        int n=sc.nextInt();
        Node[] a=new Node[n+1];
        long ans=0;
        for (int i=1;i<=n;i++)
            a[i]=new Node(sc.nextInt(),sc.nextInt());
        for (int i=1;i<=n;i++){
            for (int j=i+1;j<=n;j++){
                for (int k=j+1;k<=n;k++){
                    double x=check(a[i].x,a[i].y,a[j].x,a[j].y);
                    double y=check(a[j].x,a[j].y,a[k].x,a[k].y);
                    double z=check(a[i].x,a[i].y,a[k].x,a[k].y);
                   boolean vis=(a[j].y-a[i].y)*(a[k].x-a[i].x)==(a[k].y-a[i].y)*(a[j].x-a[i].x)(?)false:true;
                    if(x==y||x==z||y==z&&vis) ans++;
                }
            }
        }
        out.println(ans);
        out.flush();
    }
    public static double check(int x1,int y1,int x2,int y2){
        int x=x1-x2;
        int y=y1-y2;
        return x*x+y*y;
    }
    static class Node{
        int x,y;
        public Node(int x,int y){
            this.x=x;
            this.y=y;
        }
    }
    static class Read {
        BufferedReader br;
        StringTokenizer st;

        public Read(InputStream in) {
            br = new BufferedReader(new InputStreamReader(in), 16384);
            eat("""");
        }

        public void eat(String s) {
            st = new StringTokenizer(s);
        }

        public String nextLine() {
            try {
                return br.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        public boolean hasNext() {
            while (!st.hasMoreTokens()) {
                String s = nextLine();
                if (s == null)
                    return false;
                eat(s);
            }
            return true;
        }

        public String next() {
            hasNext();
            return st.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }
    }
}"
104,E,Java,61556620,2023-03-26 15:45:55,山东协和学院_张福旭,答案错误,"import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
    static Read sc=new Read(System.in);
    static PrintWriter out=new PrintWriter(new OutputStreamWriter(System.out));
    public static void main(String[] args) {
        int n=sc.nextInt();
        Node[] a=new Node[n+1];
        long ans=0;
        for (int i=1;i<=n;i++)
            a[i]=new Node(sc.nextInt(),sc.nextInt());
        for (int i=1;i<=n;i++){
            for (int j=i+1;j<=n;j++){
                for (int k=j+1;k<=n;k++){
                    int x=check(a[i].x,a[i].y,a[j].x,a[j].y);
                    int y=check(a[j].x,a[j].y,a[k].x,a[k].y);
                    int z=check(a[i].x,a[i].y,a[k].x,a[k].y);
                   boolean vis=(a[j].y-a[i].y)*(a[k].x-a[i].x)==(a[k].y-a[i].y)*(a[j].x-a[i].x)(?)false:true;
                    if(x==y||x==z||y==z&&vis) ans++;
                }
            }
        }
        out.println(ans);
        out.flush();
    }
    public static int check(int x1,int y1,int x2,int y2){
        int x=x1-x2;
        int y=y1-y2;
        return x*x+y*y;
    }
    static class Node{
        int x,y;
        public Node(int x,int y){
            this.x=x;
            this.y=y;
        }
    }
    static class Read {
        BufferedReader br;
        StringTokenizer st;

        public Read(InputStream in) {
            br = new BufferedReader(new InputStreamReader(in), 16384);
            eat("""");
        }

        public void eat(String s) {
            st = new StringTokenizer(s);
        }

        public String nextLine() {
            try {
                return br.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        public boolean hasNext() {
            while (!st.hasMoreTokens()) {
                String s = nextLine();
                if (s == null)
                    return false;
                eat(s);
            }
            return true;
        }

        public String next() {
            hasNext();
            return st.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }
    }
}"
105,E,Java,61556816,2023-03-26 15:49:15,山东协和学院_张福旭,答案错误,"import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
    static Read sc=new Read(System.in);
    static PrintWriter out=new PrintWriter(new OutputStreamWriter(System.out));
    public static void main(String[] args) {
        int n=sc.nextInt();
        int[] x=new int[n+1];
        int[] y=new int[n+1];
        long ans=0;
        for (int i=1;i<=n;i++){
            x[i]=sc.nextInt();
            y[i]=sc.nextInt();
        }
        for (int i=1;i<=n;i++){
            for (int j=i+1;j<=n;j++){
                for (int k=j+1;k<=n;k++){
                    int X=check(x[i],y[i],x[j],y[j]);
                    int Y=check(x[i],y[i],x[k],y[k]);
                    int Z=check(x[k],y[k],x[j],y[j]);
                   boolean vis=(y[j]-y[i])*(x[k]-x[i])==(y[k]-y[i])*(x[j]-x[i])(?)false:true;
                    if(X==Y||X==Z||Y==Z&&vis) ans++;
                }
            }
        }
        out.println(ans);
        out.flush();
    }
    public static int check(int x1,int y1,int x2,int y2){
        int x=x1-x2;
        int y=y1-y2;
        return x*x+y*y;
    }
    static class Read {
        BufferedReader br;
        StringTokenizer st;

        public Read(InputStream in) {
            br = new BufferedReader(new InputStreamReader(in), 16384);
            eat("""");
        }

        public void eat(String s) {
            st = new StringTokenizer(s);
        }

        public String nextLine() {
            try {
                return br.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        public boolean hasNext() {
            while (!st.hasMoreTokens()) {
                String s = nextLine();
                if (s == null)
                    return false;
                eat(s);
            }
            return true;
        }

        public String next() {
            hasNext();
            return st.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }
    }
}"
106,E,Java,61556942,2023-03-26 15:51:01,山东协和学院_张福旭,答案错误,"import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
    static Read sc=new Read(System.in);
    static PrintWriter out=new PrintWriter(new OutputStreamWriter(System.out));
    static int n=sc.nextInt();
    static int[] x=new int[n+1];
    static int[] y=new int[n+1];
    public static void main(String[] args) {
        long ans=0;
        for (int i=1;i<=n;i++){
            x[i]=sc.nextInt();
            y[i]=sc.nextInt();
        }
        for (int i=1;i<=n;i++){
            for (int j=i+1;j<=n;j++){
                for (int k=j+1;k<=n;k++){
                    int X=check(i,j);
                    int Y=check(i,k);
                    int Z=check(j,k);
                   boolean vis=(y[j]-y[i])*(x[k]-x[i])==(y[k]-y[i])*(x[j]-x[i])(?)false:true;
                    if(X==Y||X==Z||Y==Z&&vis) ans++;
                }
            }
        }
        out.println(ans);
        out.flush();
    }
    public static int check(int i,int j){
        return (x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]);
    }
    static class Read {
        BufferedReader br;
        StringTokenizer st;

        public Read(InputStream in) {
            br = new BufferedReader(new InputStreamReader(in), 16384);
            eat("""");
        }

        public void eat(String s) {
            st = new StringTokenizer(s);
        }

        public String nextLine() {
            try {
                return br.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        public boolean hasNext() {
            while (!st.hasMoreTokens()) {
                String s = nextLine();
                if (s == null)
                    return false;
                eat(s);
            }
            return true;
        }

        public String next() {
            hasNext();
            return st.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }
    }
}"
107,E,Java,61556973,2023-03-26 15:51:41,山东协和学院_张福旭,答案正确,"import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
    static Read sc=new Read(System.in);
    static PrintWriter out=new PrintWriter(new OutputStreamWriter(System.out));
    static int n=sc.nextInt();
    static int[] x=new int[n+1];
    static int[] y=new int[n+1];
    public static void main(String[] args) {
        long ans=0;
        for (int i=1;i<=n;i++){
            x[i]=sc.nextInt();
            y[i]=sc.nextInt();
        }
        for (int i=1;i<=n;i++)
            for (int j=i+1;j<=n;j++)
                for (int k=j+1;k<=n;k++)
                    if (dis(i,j)==dis(j,k)||dis(i,k)==dis(j,k)||dis(i,j)==dis(i,k))
                    {
                        if ((y[j]-y[i])*(x[k]-x[i])==
                                (y[k]-y[i])*(x[j]-x[i])) continue;
                        ans++;
                    }
        out.println(ans);
        out.flush();
    }
    public static int dis(int i,int j){
        return (x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]);
    }
    static class Read {
        BufferedReader br;
        StringTokenizer st;

        public Read(InputStream in) {
            br = new BufferedReader(new InputStreamReader(in), 16384);
            eat("""");
        }

        public void eat(String s) {
            st = new StringTokenizer(s);
        }

        public String nextLine() {
            try {
                return br.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        public boolean hasNext() {
            while (!st.hasMoreTokens()) {
                String s = nextLine();
                if (s == null)
                    return false;
                eat(s);
            }
            return true;
        }

        public String next() {
            hasNext();
            return st.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }
    }
}"
108,E,Java,61557036,2023-03-26 15:52:57,山东协和学院_张福旭,答案错误,"import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
    static Read sc=new Read(System.in);
    static PrintWriter out=new PrintWriter(new OutputStreamWriter(System.out));
    static int n=sc.nextInt();
    static int[] x=new int[n+1];
    static int[] y=new int[n+1];
    public static void main(String[] args) {
        long ans=0;
        for (int i=1;i<=n;i++){
            x[i]=sc.nextInt();
            y[i]=sc.nextInt();
        }
        for (int i=1;i<=n;i++)
            for (int j=i+1;j<=n;j++)
                for (int k=j+1;k<=n;k++){
                    boolean vis=(y[j]-y[i])*(x[k]-x[i])==(y[k]-y[i])*(x[j]-x[i])(?)false:true;
                    if (dis(i,j)==dis(j,k)||dis(i,k)==dis(j,k)||dis(i,j)==dis(i,k)&&vis)
                    {
                        ans++;
                    }
                }
                    
        out.println(ans);
        out.flush();
    }
    public static int dis(int i,int j){
        return (x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]);
    }
    static class Read {
        BufferedReader br;
        StringTokenizer st;

        public Read(InputStream in) {
            br = new BufferedReader(new InputStreamReader(in), 16384);
            eat("""");
        }

        public void eat(String s) {
            st = new StringTokenizer(s);
        }

        public String nextLine() {
            try {
                return br.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        public boolean hasNext() {
            while (!st.hasMoreTokens()) {
                String s = nextLine();
                if (s == null)
                    return false;
                eat(s);
            }
            return true;
        }

        public String next() {
            hasNext();
            return st.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }
    }
}"
109,E,Java,61557103,2023-03-26 15:54:22,山东协和学院_张福旭,答案错误,"import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
    static Read sc=new Read(System.in);
    static PrintWriter out=new PrintWriter(new OutputStreamWriter(System.out));
    static int n=sc.nextInt();
    static int[] x=new int[n+1];
    static int[] y=new int[n+1];
    public static void main(String[] args) {
        long ans=0;
        for (int i=1;i<=n;i++){
            x[i]=sc.nextInt();
            y[i]=sc.nextInt();
        }
        for (int i=1;i<=n;i++)
            for (int j=i+1;j<=n;j++)
                for (int k=j+1;k<=n;k++){
                    boolean vis=(y[j]-y[i])*(x[k]-x[i])== (y[k]-y[i])*(x[j]-x[i])(?)false:true;
                    if (dis(i,j)==dis(j,k)||dis(i,k)==dis(j,k)||dis(i,j)==dis(i,k)&&vis)
                    {
                        ans++;
                    }
                }

        out.println(ans);
        out.flush();
    }
    public static int dis(int i,int j){
        return (x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]);
    }
    static class Read {
        BufferedReader br;
        StringTokenizer st;

        public Read(InputStream in) {
            br = new BufferedReader(new InputStreamReader(in), 16384);
            eat("""");
        }

        public void eat(String s) {
            st = new StringTokenizer(s);
        }

        public String nextLine() {
            try {
                return br.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        public boolean hasNext() {
            while (!st.hasMoreTokens()) {
                String s = nextLine();
                if (s == null)
                    return false;
                eat(s);
            }
            return true;
        }

        public String next() {
            hasNext();
            return st.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }
    }
}"
110,E,Java,61557184,2023-03-26 15:55:53,山东协和学院_张福旭,答案正确,"import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
    static Read sc=new Read(System.in);
    static PrintWriter out=new PrintWriter(new OutputStreamWriter(System.out));
    static int n=sc.nextInt();
    static int[] x=new int[n+1];
    static int[] y=new int[n+1];
    public static void main(String[] args) {
        long ans=0;
        for (int i=1;i<=n;i++){
            x[i]=sc.nextInt();
            y[i]=sc.nextInt();
        }
        for (int i=1;i<=n;i++)
            for (int j=i+1;j<=n;j++)
                for (int k=j+1;k<=n;k++){
                    if (dis(i,j)==dis(j,k)||dis(i,k)==dis(j,k)||dis(i,j)==dis(i,k))
                    {
                        if((y[j]-y[i])*(x[k]-x[i])!= (y[k]-y[i])*(x[j]-x[i]))
                        ans++;
                    }
                }

        out.println(ans);
        out.flush();
    }
    public static int dis(int i,int j){
        return (x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]);
    }
    static class Read {
        BufferedReader br;
        StringTokenizer st;

        public Read(InputStream in) {
            br = new BufferedReader(new InputStreamReader(in), 16384);
            eat("""");
        }

        public void eat(String s) {
            st = new StringTokenizer(s);
        }

        public String nextLine() {
            try {
                return br.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        public boolean hasNext() {
            while (!st.hasMoreTokens()) {
                String s = nextLine();
                if (s == null)
                    return false;
                eat(s);
            }
            return true;
        }

        public String next() {
            hasNext();
            return st.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }
    }
}"
111,E,Java,61557296,2023-03-26 15:57:28,山东协和学院_张福旭,答案正确,"import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
    static Read sc=new Read(System.in);
    static PrintWriter out=new PrintWriter(new OutputStreamWriter(System.out));
    static int n=sc.nextInt();
    static int[] x=new int[n+1];
    static int[] y=new int[n+1];
    public static void main(String[] args) {
        long ans=0;
        for (int i=1;i<=n;i++){
            x[i]=sc.nextInt();
            y[i]=sc.nextInt();
        }
        for (int i=1;i<=n;i++){
            for (int j=i+1;j<=n;j++){
                for (int k=j+1;k<=n;k++){
                    int X=check(i,j);
                    int Y=check(i,k);
                    int Z=check(j,k);
                    if(X==Y||X==Z||Y==Z) {
                        if((y[j]-y[i])*(x[k]-x[i])!=(y[k]-y[i])*(x[j]-x[i]))
                        ans++;
                    }
                }
            }
        }
        out.println(ans);
        out.flush();
    }
    public static int check(int i,int j){
        return (x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]);
    }
    static class Read {
        BufferedReader br;
        StringTokenizer st;

        public Read(InputStream in) {
            br = new BufferedReader(new InputStreamReader(in), 16384);
            eat("""");
        }

        public void eat(String s) {
            st = new StringTokenizer(s);
        }

        public String nextLine() {
            try {
                return br.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        public boolean hasNext() {
            while (!st.hasMoreTokens()) {
                String s = nextLine();
                if (s == null)
                    return false;
                eat(s);
            }
            return true;
        }

        public String next() {
            hasNext();
            return st.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }
    }
}"
112,E,Java,61557399,2023-03-26 15:58:42,山东协和学院_张福旭,答案错误,"import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
    static Read sc=new Read(System.in);
    static PrintWriter out=new PrintWriter(new OutputStreamWriter(System.out));
    public static void main(String[] args) {
        int n=sc.nextInt();
        Node[] a=new Node[n+1];
        long ans=0;
        for (int i=1;i<=n;i++)
            a[i]=new Node(sc.nextInt(),sc.nextInt());
        for (int i=1;i<=n;i++){
            for (int j=i+1;j<=n;j++){
                for (int k=j+1;k<=n;k++){
                    double x=check(a[i].x,a[i].y,a[j].x,a[j].y);
                    double y=check(a[j].x,a[j].y,a[k].x,a[k].y);
                    double z=check(a[i].x,a[i].y,a[k].x,a[k].y);
                    double K=(a[i].y-a[j].y)*1.0/(a[i].x-a[j].x);
                    if(x==y||x==z||y==z) {
                        if((a[k].y-a[i].y!=K*(a[k].x-a[i].x)))
                        ans++;
                    }
                }
            }
        }
        out.println(ans);
        out.flush();
    }
    public static double check(int x1,int y1,int x2,int y2){
        int x=x1-x2;
        int y=y1-y2;
        return Math.sqrt(x*x+y*y);
    }
    static class Node{
        int x,y;
        public Node(int x,int y){
            this.x=x;
            this.y=y;
        }
    }
    static class Read {
        BufferedReader br;
        StringTokenizer st;

        public Read(InputStream in) {
            br = new BufferedReader(new InputStreamReader(in), 16384);
            eat("""");
        }

        public void eat(String s) {
            st = new StringTokenizer(s);
        }

        public String nextLine() {
            try {
                return br.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        public boolean hasNext() {
            while (!st.hasMoreTokens()) {
                String s = nextLine();
                if (s == null)
                    return false;
                eat(s);
            }
            return true;
        }

        public String next() {
            hasNext();
            return st.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }
    }
}"
113,E,Java,61557553,2023-03-26 16:00:33,山东协和学院_张福旭,答案正确,"import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
    static Read sc=new Read(System.in);
    static PrintWriter out=new PrintWriter(new OutputStreamWriter(System.out));
    public static void main(String[] args) {
        int n=sc.nextInt();
        int[] x=new int[n+1];
        int[] y=new int[n+1];
        long ans=0;
        for (int i=1;i<=n;i++){
            x[i]=sc.nextInt();
            y[i]=sc.nextInt();
        }
        for (int i=1;i<=n;i++){
            for (int j=i+1;j<=n;j++){
                for (int k=j+1;k<=n;k++){
                    int X=check(x[i],y[i],x[j],y[j]);
                    int Y=check(x[i],y[i],x[k],y[k]);
                    int Z=check(x[k],y[k],x[j],y[j]);
                    if(X==Y||X==Z||Y==Z) {
                        if((y[j]-y[i])*(x[k]-x[i])!=(y[k]-y[i])*(x[j]-x[i]))
                        ans++;
                    }
                }
            }
        }
        out.println(ans);
        out.flush();
    }
    public static int check(int x1,int y1,int x2,int y2){
        int x=x1-x2;
        int y=y1-y2;
        return x*x+y*y;
    }
    static class Read {
        BufferedReader br;
        StringTokenizer st;

        public Read(InputStream in) {
            br = new BufferedReader(new InputStreamReader(in), 16384);
            eat("""");
        }

        public void eat(String s) {
            st = new StringTokenizer(s);
        }

        public String nextLine() {
            try {
                return br.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        public boolean hasNext() {
            while (!st.hasMoreTokens()) {
                String s = nextLine();
                if (s == null)
                    return false;
                eat(s);
            }
            return true;
        }

        public String next() {
            hasNext();
            return st.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }
    }
}"
114,E,Java,61592463,2023-03-28 17:02:07,一只往上爬的蚂蚁,答案错误,"import java.io.*;
public class Main {
    static int n;
    static int sum = 0;
    public static void main(String[] args) throws IOException{
        StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
        in.nextToken();
        n = (int) in.nval;
        int[][] m =new int[n][2];
        //x,y下标一一对应(x0,y0)
        int[] x = new int[n];
        int[] y = new int[n];
        for(int i = 0;i < n;i++) {
            for(int j = 0;j < 2;j++) {
                in.nextToken();
                m[i][j] = (int) in.nval;
            }
        }
        for(int i = 0;i < n;i++) x[i] = m[i][0];
        for(int i = 0;i < n;i++) y[i] = m[i][1];
        for(int i = 0;i < n;i++) {
            for(int j = i + 1;j < n;j++) {
                for(int k = j + 1;k < n;k++) {
                    int x1 = x[i], y1 = y[i];
                    int x2 = x[j], y2 = y[j];
                    int x3 = x[k], y3 = y[k];
                    double a = Math.sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));
                    double b = Math.sqrt((x1-x3)*(x1-x3)+(y1-y3)*(y1-y3));
                    double c = Math.sqrt((x2-x3)*(x2-x3)+(y2-y3)*(y2-y3));
                    double q = (a+b+c) / 2;
                    double area = Math.sqrt(q*(q-a)*(q-b)*(q-c));
                    if((int) area == 0) return;
                    if(a == b || b == c || a == c) sum = sum + 1;
                }
            }
        }
        System.out.println(sum);
    }
}"
115,E,Java,61592487,2023-03-28 17:03:22,一只往上爬的蚂蚁,答案错误,"import java.io.*;
public class Main {
    static int n;
    static int sum = 0;
    public static void main(String[] args) throws IOException{
        StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
        in.nextToken();
        n = (int) in.nval;
        int[][] m =new int[n][2];
        //x,y下标一一对应(x0,y0)
        int[] x = new int[n];
        int[] y = new int[n];
        for(int i = 0;i < n;i++) {
            for(int j = 0;j < 2;j++) {
                in.nextToken();
                m[i][j] = (int) in.nval;
            }
        }
        for(int i = 0;i < n;i++) x[i] = m[i][0];
        for(int i = 0;i < n;i++) y[i] = m[i][1];
        for(int i = 0;i < n;i++) {
            for(int j = i + 1;j < n;j++) {
                for(int k = j + 1;k < n;k++) {
                    int x1 = x[i], y1 = y[i];
                    int x2 = x[j], y2 = y[j];
                    int x3 = x[k], y3 = y[k];
                    double a = Math.sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));
                    double b = Math.sqrt((x1-x3)*(x1-x3)+(y1-y3)*(y1-y3));
                    double c = Math.sqrt((x2-x3)*(x2-x3)+(y2-y3)*(y2-y3));
                    double q = (a+b+c) / 2;
                    double area = Math.sqrt(q*(q-a)*(q-b)*(q-c));
                    if((int) area == 0) continue;
                    if(a == b || b == c || a == c) sum = sum + 1;
                }
            }
        }
        System.out.println(sum);
    }
}"
116,E,Java,61592513,2023-03-28 17:04:30,一只往上爬的蚂蚁,答案错误,"import java.io.*;
public class Main {
    static int n;
    static int sum = 0;
    public static void main(String[] args) throws IOException{
        StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
        in.nextToken();
        n = (int) in.nval;
        int[][] m =new int[n][2];
        //x,y下标一一对应(x0,y0)
        int[] x = new int[n];
        int[] y = new int[n];
        for(int i = 0;i < n;i++) {
            for(int j = 0;j < 2;j++) {
                in.nextToken();
                m[i][j] = (int) in.nval;
            }
        }
        for(int i = 0;i < n;i++) x[i] = m[i][0];
        for(int i = 0;i < n;i++) y[i] = m[i][1];
        for(int i = 0;i < n;i++) {
            for(int j = i + 1;j < n;j++) {
                for(int k = j + 1;k < n;k++) {
                    int x1 = x[i], y1 = y[i];
                    int x2 = x[j], y2 = y[j];
                    int x3 = x[k], y3 = y[k];
                    double a = Math.sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));
                    double b = Math.sqrt((x1-x3)*(x1-x3)+(y1-y3)*(y1-y3));
                    double c = Math.sqrt((x2-x3)*(x2-x3)+(y2-y3)*(y2-y3));
                    double q = (a+b+c) / 2;
                    double area = Math.sqrt(q*(q-a)*(q-b)*(q-c));
                    if((int) area == 0) continue;
                    if(a == b || b == c || a == c) sum = sum + 1;
                }
            }
        }
        System.out.println(sum);
    }
}"
117,E,Java,61592655,2023-03-28 17:11:09,一只往上爬的蚂蚁,答案正确,"import java.io.*;
public class Main {
    static int n;
    static int sum = 0;
    public static void main(String[] args) throws IOException{
        StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
        in.nextToken();
        n = (int) in.nval;
        int[][] m =new int[n][2];
        //x,y下标一一对应(x0,y0)
        int[] x = new int[n];
        int[] y = new int[n];
        for(int i = 0;i < n;i++) {
            for(int j = 0;j < 2;j++) {
                in.nextToken();
                m[i][j] = (int) in.nval;
            }
        }
        for(int i = 0;i < n;i++) x[i] = m[i][0];
        for(int i = 0;i < n;i++) y[i] = m[i][1];
        for(int i = 0;i < n;i++) {
            for(int j = i + 1;j < n;j++) {
                for(int k = j + 1;k < n;k++) {
                    int x1 = x[i], y1 = y[i];
                    int x2 = x[j], y2 = y[j];
                    int x3 = x[k], y3 = y[k];
                    int cross = (x1 - x3) * (y2 - y3) - (x2 - x3) * (y1 - y3);
                    if(cross == 0) continue;
                    int d1 = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);
                    int d2 = (x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2);
                    int d3 = (x3 - x1) * (x3 - x1) + (y3 - y1) * (y3 - y1);
                    if(d1 == d2 || d2 == d3 || d1 == d3) sum = sum + 1;
                }
            }
        }
        System.out.println(sum);
    }
}"
118,E,Java,61592944,2023-03-28 17:25:01,一只往上爬的蚂蚁,答案错误,"import java.io.*;
public class Main {
    static int n;
    static int sum = 0;
    public static void main(String[] args) throws IOException{
        StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
        in.nextToken();
        n = (int) in.nval;
        int[][] m =new int[n][2];
        //x,y下标一一对应(x0,y0)
        int[] x = new int[n];
        int[] y = new int[n];
        for(int i = 0;i < n;i++) {
            for(int j = 0;j < 2;j++) {
                in.nextToken();
                m[i][j] = (int) in.nval;
            }
        }
        for(int i = 0;i < n;i++) x[i] = m[i][0];
        for(int i = 0;i < n;i++) y[i] = m[i][1];
        for(int i = 0;i < n;i++) {
            for(int j = i + 1;j < n;j++) {
                for(int k = j + 1;k < n;k++) {
                    int x1 = x[i], y1 = y[i];
                    int x2 = x[j], y2 = y[j];
                    int x3 = x[k], y3 = y[k];
                    double a = Math.sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));
                    double b = Math.sqrt((x1-x3)*(x1-x3)+(y1-y3)*(y1-y3));
                    double c = Math.sqrt((x2-x3)*(x2-x3)+(y2-y3)*(y2-y3));
                    double q = (a+b+c) / 2;
                    double area = Math.sqrt(q*(q-a)*(q-b)*(q-c));
                    if((int) area == 0) continue;
                    int d1 = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);
                    int d2 = (x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2);
                    int d3 = (x3 - x1) * (x3 - x1) + (y3 - y1) * (y3 - y1);
                    if(d1 == d2 || d2 == d3 || d1 == d3) sum = sum + 1;
                }
            }
        }
        System.out.println(sum);
    }
}"
119,E,Java,61593184,2023-03-28 17:35:46,一只往上爬的蚂蚁,答案正确,"import java.io.*;
public class Main {
    static int n;
    static int sum = 0;
    public static void main(String[] args) throws IOException{
        StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
        in.nextToken();
        n = (int) in.nval;
        int[][] m =new int[n][2];
        //x,y下标一一对应(x0,y0)
        int[] x = new int[n];
        int[] y = new int[n];
        for(int i = 0;i < n;i++) {
            for(int j = 0;j < 2;j++) {
                in.nextToken();
                m[i][j] = (int) in.nval;
            }
        }
        for(int i = 0;i < n;i++) x[i] = m[i][0];
        for(int i = 0;i < n;i++) y[i] = m[i][1];
        for(int i = 0;i < n;i++) {
            for(int j = i + 1;j < n;j++) {
                for(int k = j + 1;k < n;k++) {
                    int x1 = x[i], y1 = y[i];
                    int x2 = x[j], y2 = y[j];
                    int x3 = x[k], y3 = y[k];
                    double a = Math.sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));
                    double b = Math.sqrt((x1-x3)*(x1-x3)+(y1-y3)*(y1-y3));
                    double c = Math.sqrt((x2-x3)*(x2-x3)+(y2-y3)*(y2-y3));
                    double q = (a+b+c) / 2;
                    double area = Math.sqrt(q*(q-a)*(q-b)*(q-c));
                    if(area == 0.0) continue;
                    if(a == b || b == c || a == c) sum = sum + 1;
                }
            }
        }
        System.out.println(sum);
    }
}
"
120,E,Java,61593381,2023-03-28 17:49:01,一只往上爬的蚂蚁,答案正确,"import java.io.*;
public class Main {
    static int n;
    static int sum = 0;
    public static void main(String[] args) throws IOException{
        StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
        in.nextToken();
        n = (int) in.nval;
        int[][] m =new int[n][2];
        //x,y下标一一对应(x0,y0)
        int[] x = new int[n];
        int[] y = new int[n];
        for(int i = 0;i < n;i++) {
            for(int j = 0;j < 2;j++) {
                in.nextToken();
                m[i][j] = (int) in.nval;
            }
        }
        for(int i = 0;i < n;i++) x[i] = m[i][0];
        for(int i = 0;i < n;i++) y[i] = m[i][1];
        for(int i = 0;i < n;i++) {
            for(int j = i + 1;j < n;j++) {
                for(int k = j + 1;k < n;k++) {
                    int x1 = x[i], y1 = y[i];
                    int x2 = x[j], y2 = y[j];
                    int x3 = x[k], y3 = y[k];
                    int corss = Math.abs(x1*y2+y1*x3+x2*y3-x1*y3-y1*x2-y2*x3);
                    if(corss == 0) continue;
                    int d1 = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);
                    int d2 = (x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2);
                    int d3 = (x3 - x1) * (x3 - x1) + (y3 - y1) * (y3 - y1);
                    if(d1 == d2 || d2 == d3 || d1 == d3) sum = sum + 1;
                }
            }
        }
        System.out.println(sum);
    }
}
"
121,E,Java,61597727,2023-03-28 21:13:53,一只往上爬的蚂蚁,答案错误,"import java.io.*;
public class Main {
    static int n;
    static int sum = 0;
    public static void main(String[] args) throws IOException{
        StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
        in.nextToken();
        n = (int) in.nval;
        int[][] m =new int[n][2];
        //x,y下标一一对应(x0,y0)
        int[] x = new int[n];
        int[] y = new int[n];
        for(int i = 0;i < n;i++) {
            for(int j = 0;j < 2;j++) {
                in.nextToken();
                m[i][j] = (int) in.nval;
            }
        }
        for(int i = 0;i < n;i++) x[i] = m[i][0];
        for(int i = 0;i < n;i++) y[i] = m[i][1];
        for(int i = 0;i < n;i++) {
            for(int j = i + 1;j < n;j++) {
                for(int k = j + 1;k < n;k++) {
                    int x1 = x[i], y1 = y[i];
                    int x2 = x[j], y2 = y[j];
                    int x3 = x[k], y3 = y[k];
                    double a = Math.sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));
                    double b = Math.sqrt((x1-x3)*(x1-x3)+(y1-y3)*(y1-y3));
                    double c = Math.sqrt((x2-x3)*(x2-x3)+(y2-y3)*(y2-y3));
                    double q = (a+b+c) / 2;
                    double area = Math.sqrt(q*(q-a)*(q-b)*(q-c));
                    if((int) area == 0.0) continue;
                    int d1 = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);
                    int d2 = (x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2);
                    int d3 = (x3 - x1) * (x3 - x1) + (y3 - y1) * (y3 - y1);
                    if(d1 == d2 || d2 == d3 || d1 == d3) sum = sum + 1;
                }
            }
        }
        System.out.println(sum);
    }
}
"
122,E,Java,61597728,2023-03-28 21:14:02,一只往上爬的蚂蚁,答案错误,"import java.io.*;
public class Main {
    static int n;
    static int sum = 0;
    public static void main(String[] args) throws IOException{
        StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
        in.nextToken();
        n = (int) in.nval;
        int[][] m =new int[n][2];
        //x,y下标一一对应(x0,y0)
        int[] x = new int[n];
        int[] y = new int[n];
        for(int i = 0;i < n;i++) {
            for(int j = 0;j < 2;j++) {
                in.nextToken();
                m[i][j] = (int) in.nval;
            }
        }
        for(int i = 0;i < n;i++) x[i] = m[i][0];
        for(int i = 0;i < n;i++) y[i] = m[i][1];
        for(int i = 0;i < n;i++) {
            for(int j = i + 1;j < n;j++) {
                for(int k = j + 1;k < n;k++) {
                    int x1 = x[i], y1 = y[i];
                    int x2 = x[j], y2 = y[j];
                    int x3 = x[k], y3 = y[k];
                    double a = Math.sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));
                    double b = Math.sqrt((x1-x3)*(x1-x3)+(y1-y3)*(y1-y3));
                    double c = Math.sqrt((x2-x3)*(x2-x3)+(y2-y3)*(y2-y3));
                    double q = (a+b+c) / 2;
                    double area = Math.sqrt(q*(q-a)*(q-b)*(q-c));
                    if((int) area == 0) continue;
                    int d1 = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);
                    int d2 = (x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2);
                    int d3 = (x3 - x1) * (x3 - x1) + (y3 - y1) * (y3 - y1);
                    if(d1 == d2 || d2 == d3 || d1 == d3) sum = sum + 1;
                }
            }
        }
        System.out.println(sum);
    }
}
"
123,E,Java,61597736,2023-03-28 21:14:14,一只往上爬的蚂蚁,答案正确,"import java.io.*;
public class Main {
    static int n;
    static int sum = 0;
    public static void main(String[] args) throws IOException{
        StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
        in.nextToken();
        n = (int) in.nval;
        int[][] m =new int[n][2];
        //x,y下标一一对应(x0,y0)
        int[] x = new int[n];
        int[] y = new int[n];
        for(int i = 0;i < n;i++) {
            for(int j = 0;j < 2;j++) {
                in.nextToken();
                m[i][j] = (int) in.nval;
            }
        }
        for(int i = 0;i < n;i++) x[i] = m[i][0];
        for(int i = 0;i < n;i++) y[i] = m[i][1];
        for(int i = 0;i < n;i++) {
            for(int j = i + 1;j < n;j++) {
                for(int k = j + 1;k < n;k++) {
                    int x1 = x[i], y1 = y[i];
                    int x2 = x[j], y2 = y[j];
                    int x3 = x[k], y3 = y[k];
                    double a = Math.sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));
                    double b = Math.sqrt((x1-x3)*(x1-x3)+(y1-y3)*(y1-y3));
                    double c = Math.sqrt((x2-x3)*(x2-x3)+(y2-y3)*(y2-y3));
                    double q = (a+b+c) / 2;
                    double area = Math.sqrt(q*(q-a)*(q-b)*(q-c));
                    if( area == 0.0) continue;
                    int d1 = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);
                    int d2 = (x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2);
                    int d3 = (x3 - x1) * (x3 - x1) + (y3 - y1) * (y3 - y1);
                    if(d1 == d2 || d2 == d3 || d1 == d3) sum = sum + 1;
                }
            }
        }
        System.out.println(sum);
    }
}
"
124,E,Java,61597810,2023-03-28 21:17:20,一只往上爬的蚂蚁,编译错误,"{""SPECIAL_TM_FH_MEMO_JSON_TAG"":""SPECIAL_TM_FH_MEMO_JSON_TAG"",""stderr"":""Main.java:33: error: cannot find symbol\n                    if(d1 == d2 || d2 == d3 || d1 == d3) sum = sum + 1;\n                       ^\n  symbol:   variable d1\n  location: class Main\nMain.java:33: error: cannot find symbol\n                    if(d1 == d2 || d2 == d3 || d1 == d3) sum = sum + 1;\n                             ^\n  symbol:   variable d2\n  location: class Main\nMain.java:33: error: cannot find symbol\n                    if(d1 == d2 || d2 == d3 || d1 == d3) sum = sum + 1;\n                                   ^\n  symbol:   variable d2\n  location: class Main\nMain.java:33: error: cannot find symbol\n                    if(d1 == d2 || d2 == d3 || d1 == d3) sum = sum + 1;\n                                         ^\n  symbol:   variable d3\n  location: class Main\nMain.java:33: error: cannot find symbol\n                    if(d1 == d2 || d2 == d3 || d1 == d3) sum = sum + 1;\n                                               ^\n  symbol:   variable d1\n  location: class Main\nMain.java:33: error: cannot find symbol\n                    if(d1 == d2 || d2 == d3 || d1 == d3) sum = sum + 1;\n                                                     ^\n  symbol:   variable d3\n  location: class Main\n6 errors""}

import java.io.*;
public class Main {
    static int n;
    static int sum = 0;
    public static void main(String[] args) throws IOException{
        StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
        in.nextToken();
        n = (int) in.nval;
        int[][] m =new int[n][2];
        //x,y下标一一对应(x0,y0)
        int[] x = new int[n];
        int[] y = new int[n];
        for(int i = 0;i < n;i++) {
            for(int j = 0;j < 2;j++) {
                in.nextToken();
                m[i][j] = (int) in.nval;
            }
        }
        for(int i = 0;i < n;i++) x[i] = m[i][0];
        for(int i = 0;i < n;i++) y[i] = m[i][1];
        for(int i = 0;i < n;i++) {
            for(int j = i + 1;j < n;j++) {
                for(int k = j + 1;k < n;k++) {
                    int x1 = x[i], y1 = y[i];
                    int x2 = x[j], y2 = y[j];
                    int x3 = x[k], y3 = y[k];
                    double a = Math.sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));
                    double b = Math.sqrt((x1-x3)*(x1-x3)+(y1-y3)*(y1-y3));
                    double c = Math.sqrt((x2-x3)*(x2-x3)+(y2-y3)*(y2-y3));
                    double q = (a+b+c) / 2;
                    double area = Math.sqrt(q*(q-a)*(q-b)*(q-c));
                    if(area == 0.0) continue;
                    if(d1 == d2 || d2 == d3 || d1 == d3) sum = sum + 1;
                }
            }
        }
        System.out.println(sum);
    }
}
"
125,E,Java,61597816,2023-03-28 21:17:30,一只往上爬的蚂蚁,答案正确,"import java.io.*;
public class Main {
    static int n;
    static int sum = 0;
    public static void main(String[] args) throws IOException{
        StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
        in.nextToken();
        n = (int) in.nval;
        int[][] m =new int[n][2];
        //x,y下标一一对应(x0,y0)
        int[] x = new int[n];
        int[] y = new int[n];
        for(int i = 0;i < n;i++) {
            for(int j = 0;j < 2;j++) {
                in.nextToken();
                m[i][j] = (int) in.nval;
            }
        }
        for(int i = 0;i < n;i++) x[i] = m[i][0];
        for(int i = 0;i < n;i++) y[i] = m[i][1];
        for(int i = 0;i < n;i++) {
            for(int j = i + 1;j < n;j++) {
                for(int k = j + 1;k < n;k++) {
                    int x1 = x[i], y1 = y[i];
                    int x2 = x[j], y2 = y[j];
                    int x3 = x[k], y3 = y[k];
                    double a = Math.sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));
                    double b = Math.sqrt((x1-x3)*(x1-x3)+(y1-y3)*(y1-y3));
                    double c = Math.sqrt((x2-x3)*(x2-x3)+(y2-y3)*(y2-y3));
                    double q = (a+b+c) / 2;
                    double area = Math.sqrt(q*(q-a)*(q-b)*(q-c));
                    if(area == 0.0) continue;
                    if(a == b || b == c || a == c) sum = sum + 1;
                }
            }
        }
        System.out.println(sum);
    }
}
"
126,E,Java,61597826,2023-03-28 21:17:50,一只往上爬的蚂蚁,答案正确,"import java.io.*;
public class Main {
    static int n;
    static int sum = 0;
    public static void main(String[] args) throws IOException{
        StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
        in.nextToken();
        n = (int) in.nval;
        int[][] m =new int[n][2];
        //x,y下标一一对应(x0,y0)
        int[] x = new int[n];
        int[] y = new int[n];
        for(int i = 0;i < n;i++) {
            for(int j = 0;j < 2;j++) {
                in.nextToken();
                m[i][j] = (int) in.nval;
            }
        }
        for(int i = 0;i < n;i++) x[i] = m[i][0];
        for(int i = 0;i < n;i++) y[i] = m[i][1];
        for(int i = 0;i < n;i++) {
            int x1 = x[i], y1 = y[i];
            for(int j = i + 1;j < n;j++) {
                int x2 = x[j], y2 = y[j];
                for(int k = j + 1;k < n;k++) {
                    int x3 = x[k], y3 = y[k];
                    double a = Math.sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));
                    double b = Math.sqrt((x1-x3)*(x1-x3)+(y1-y3)*(y1-y3));
                    double c = Math.sqrt((x2-x3)*(x2-x3)+(y2-y3)*(y2-y3));
                    double q = (a+b+c) / 2;
                    double area = Math.sqrt(q*(q-a)*(q-b)*(q-c));
                    if(area == 0.0) continue;
                    if(a == b || b == c || a == c) sum = sum + 1;
                }
            }
        }
        System.out.println(sum);
    }
}
"
127,E,Java,61597844,2023-03-28 21:18:41,一只往上爬的蚂蚁,答案正确,"import java.io.*;
public class Main {
    static int n;
    static int sum = 0;
    public static void main(String[] args) throws IOException{
        StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
        in.nextToken();
        n = (int) in.nval;
        int[][] m =new int[n][2];
        //x,y下标一一对应(x0,y0)
        int[] x = new int[n];
        int[] y = new int[n];
        for(int i = 0;i < n;i++) {
            for(int j = 0;j < 2;j++) {
                in.nextToken();
                m[i][j] = (int) in.nval;
            }
        }
        for(int i = 0;i < n;i++) x[i] = m[i][0];
        for(int i = 0;i < n;i++) y[i] = m[i][1];
        for(int i = 0;i < n;i++) {
            int x1 = x[i], y1 = y[i];
            for(int j = i + 1;j < n;j++) {
                int x2 = x[j], y2 = y[j];
                double a = Math.sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));
                for(int k = j + 1;k < n;k++) {
                    int x3 = x[k], y3 = y[k];
                    double b = Math.sqrt((x1-x3)*(x1-x3)+(y1-y3)*(y1-y3));
                    double c = Math.sqrt((x2-x3)*(x2-x3)+(y2-y3)*(y2-y3));
                    double q = (a+b+c) / 2;
                    double area = Math.sqrt(q*(q-a)*(q-b)*(q-c));
                    if(area == 0.0) continue;
                    if(a == b || b == c || a == c) sum = sum + 1;
                }
            }
        }
        System.out.println(sum);
    }
}
"
128,E,Java,61598078,2023-03-28 21:29:49,一只往上爬的蚂蚁,答案正确,"import java.io.*;
public class Main {
    static int n;
    static int sum = 0;
    public static void main(String[] args) throws IOException{
        StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
        in.nextToken();
        n = (int) in.nval;
        int[][] m =new int[n][2];
        //x,y下标一一对应(x0,y0)
        int[] x = new int[n];
        int[] y = new int[n];
        for(int i = 0;i < n;i++) {
            for(int j = 0;j < 2;j++) {
                in.nextToken();
                m[i][j] = (int) in.nval;
            }
        }
        for(int i = 0;i < n;i++) x[i] = m[i][0];
        for(int i = 0;i < n;i++) y[i] = m[i][1];
        for(int i = 0;i < n;i++) {
            int x1 = x[i], y1 = y[i];
            for(int j = i + 1;j < n;j++) {
                int x2 = x[j], y2 = y[j];
                for(int k = j + 1;k < n;k++) {
                    int x3 = x[k], y3 = y[k];
                    int cross = (x1 - x3) * (y2 - y3) - (x2 - x3) * (y1 - y3);
                    if(cross == 0) continue;
                    int d1 = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);
                    int d2 = (x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2);
                    int d3 = (x3 - x1) * (x3 - x1) + (y3 - y1) * (y3 - y1);
                    if(d1 == d2 || d2 == d3 || d1 == d3) sum = sum + 1;
                }
            }
        }
        System.out.println(sum);
    }
}
"
129,E,Java,61598090,2023-03-28 21:30:15,一只往上爬的蚂蚁,答案正确,"import java.io.*;
public class Main {
    static int n;
    static int sum = 0;
    public static void main(String[] args) throws IOException{
        StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
        in.nextToken();
        n = (int) in.nval;
        int[][] m =new int[n][2];
        //x,y下标一一对应(x0,y0)
        int[] x = new int[n];
        int[] y = new int[n];
        for(int i = 0;i < n;i++) {
            for(int j = 0;j < 2;j++) {
                in.nextToken();
                m[i][j] = (int) in.nval;
            }
        }
        for(int i = 0;i < n;i++) x[i] = m[i][0];
        for(int i = 0;i < n;i++) y[i] = m[i][1];
        for(int i = 0;i < n;i++) {
            int x1 = x[i], y1 = y[i];
            for(int j = i + 1;j < n;j++) {
                int x2 = x[j], y2 = y[j];
                int d1 = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);
                for(int k = j + 1;k < n;k++) {
                    int x3 = x[k], y3 = y[k];
                    int cross = (x1 - x3) * (y2 - y3) - (x2 - x3) * (y1 - y3);
                    if(cross == 0) continue;
                    int d2 = (x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2);
                    int d3 = (x3 - x1) * (x3 - x1) + (y3 - y1) * (y3 - y1);
                    if(d1 == d2 || d2 == d3 || d1 == d3) sum = sum + 1;
                }
            }
        }
        System.out.println(sum);
    }
}
"
130,E,Java,61598104,2023-03-28 21:30:39,一只往上爬的蚂蚁,答案正确,"import java.io.*;
public class Main {
    static int n;
    static int sum = 0;
    public static void main(String[] args) throws IOException{
        StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
        in.nextToken();
        n = (int) in.nval;
        int[][] m =new int[n][2];
        //x,y下标一一对应(x0,y0)
        int[] x = new int[n];
        int[] y = new int[n];
        for(int i = 0;i < n;i++) {
            for(int j = 0;j < 2;j++) {
                in.nextToken();
                m[i][j] = (int) in.nval;
            }
        }
        for(int i = 0;i < n;i++) x[i] = m[i][0];
        for(int i = 0;i < n;i++) y[i] = m[i][1];
        for(int i = 0;i < n;i++) {
            int x1 = x[i], y1 = y[i];
            for(int j = i + 1;j < n;j++) {
                int x2 = x[j], y2 = y[j];
                for(int k = j + 1;k < n;k++) {
                    int x3 = x[k], y3 = y[k];
                    int cross = (x1 - x3) * (y2 - y3) - (x2 - x3) * (y1 - y3);
                    if(cross == 0) continue;
                    int d1 = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);
                    int d2 = (x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2);
                    int d3 = (x3 - x1) * (x3 - x1) + (y3 - y1) * (y3 - y1);
                    if(d1 == d2 || d2 == d3 || d1 == d3) sum = sum + 1;
                }
            }
        }
        System.out.println(sum);
    }
}
"
131,E,Java,61614607,2023-03-30 08:13:27,一个男人_,答案正确,"import java.io.*;
import java.util.*;

public class Main {
    static StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    static BufferedReader bin = new BufferedReader(new InputStreamReader(System.in));
    static final int N = 410;
    static int n, ans;
    static int[] x = new int[N], y = new int[N];
    
    static int cin() throws IOException {
        in.nextToken();
        return (int) in.nval;
    }

    public static void main(String[] args) throws IOException {
        n = cin();
        for (int i = 0; i < n; i ++ ) {
            x[i] = cin();
            y[i] = cin();
        }
        for (int i = 0; i < n; i ++ ) {
            for (int j = i + 1; j < n; j ++ ) {
                for (int k = j + 1; k < n; k ++ ) {
                    int x1 = x[i], y1 = y[i];
                    int x2 = x[j], y2 = y[j];
                    int x3 = x[k], y3 = y[k];
                    int k1 = (x1 - x2) * (y2 - y3), k2 = (x2 - x3) * (y1 - y2);
                    if (k1 - k2 == 0) continue;
                    int a = (int) (Math.pow((x1 - x2), 2) + Math.pow((y1 - y2), 2));
                    int b = (int) (Math.pow((x1 - x3), 2) + Math.pow((y1 - y3), 2));
                    int c = (int) (Math.pow((x2 - x3), 2) + Math.pow((y2 - y3), 2));
                    if (a == b || a == c || b == c) {
                        ans ++ ;
                    }
                }
            }
        }
        out.println(ans);
        out.close();
    }
}"
132,E,Java,61619973,2023-03-30 19:16:01,人工智能3211江海洋,答案错误,"import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
//        out.flush();
        out.close();
    }

    static class TaskA {

        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            double[] x = new double[n];
            double[] y = new double[n];
            for (int i = 0; i < n; i++) {
                x[i] = in.nextDouble();
                y[i] = in.nextDouble();
            }
            int c = 0;
            for (int i = 0; i < n; i++) {
                for (int j = i+1; j < n; j++) {
                    for (int k = j+1; k < n; k++) {
                        if(!((y[k]-y[i])*(x[j]-x[i])-(y[j]-y[i])*(x[k]-x[i])<=1e-9)) {

                            if (Math.sqrt((x[i] - x[j]) * (x[i] - x[j]) + (y[i] - y[j]) * (y[i] - y[j])) == Math.sqrt((x[i] - x[k]) * (x[i] - x[k]) + (y[i] - y[k]) * (y[i] - y[k])) ||
                                    Math.sqrt((x[i] - x[j]) * (x[i] - x[j]) + (y[i] - y[j]) * (y[i] - y[j])) == Math.sqrt((x[j] - x[k]) * (x[j] - x[k]) + (y[j] - y[k]) * (y[j] - y[k])) ||
                                    Math.sqrt((x[k] - x[i]) * (x[k] - x[i]) + (y[k] - y[i]) * (y[k] - y[i])) == Math.sqrt((x[j] - x[k]) * (x[j] - x[k]) + (y[j] - y[k]) * (y[j] - y[k]))
                            ) c++;
                        }
                    }
                }
            }
            System.out.println(c);


        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        boolean hasNext() {
            while (tokenizer == null || !tokenizer.hasMoreElements()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e) {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }

    }
}
"
133,E,Java,61619996,2023-03-30 19:17:19,人工智能3211江海洋,答案错误,"import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
//        out.flush();
        out.close();
    }

    static class TaskA {

        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            double[] x = new double[n];
            double[] y = new double[n];
            for (int i = 0; i < n; i++) {
                x[i] = in.nextDouble();
                y[i] = in.nextDouble();
            }
            int c = 0;
            for (int i = 0; i < n; i++) {
                for (int j = i+1; j < n; j++) {
                    for (int k = j+1; k < n; k++) {
                        if(!((y[k]-y[i])*(x[j]-x[i])-(y[j]-y[i])*(x[k]-x[i])<=1e-9)) {

                            if (Math.abs(Math.sqrt((x[i] - x[j]) * (x[i] - x[j]) + (y[i] - y[j]) * (y[i] - y[j]))-Math.sqrt((x[i] - x[k]) * (x[i] - x[k]) + (y[i] - y[k]) * (y[i] - y[k])))<=1e-9 ||
                                    Math.abs(Math.sqrt((x[i] - x[j]) * (x[i] - x[j]) + (y[i] - y[j]) * (y[i] - y[j])) - Math.sqrt((x[j] - x[k]) * (x[j] - x[k]) + (y[j] - y[k]) * (y[j] - y[k])))<=1e-9  ||
                                    Math.abs(Math.sqrt((x[k] - x[i]) * (x[k] - x[i]) + (y[k] - y[i]) * (y[k] - y[i])) - Math.sqrt((x[j] - x[k]) * (x[j] - x[k]) + (y[j] - y[k]) * (y[j] - y[k])))<=1e-9
                            ) c++;
                        }
                    }
                }
            }
            System.out.println(c);


        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        boolean hasNext() {
            while (tokenizer == null || !tokenizer.hasMoreElements()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e) {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }

    }
}
"
134,E,Java,61620145,2023-03-30 19:26:09,人工智能3211江海洋,答案错误,"import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
//        out.flush();
        out.close();
    }

    static class TaskA {

        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            double[] x = new double[n];
            double[] y = new double[n];
            for (int i = 0; i < n; i++) {
                x[i] = in.nextDouble();
                y[i] = in.nextDouble();
            }
            int cc = 0;
            for (int i = 0; i < n; i++) {
                for (int j = i+1; j < n; j++) {
                    for (int k = j+1; k < n; k++) {
                        if(!((y[k]-y[i])*(x[j]-x[i])-(y[j]-y[i])*(x[k]-x[i])<=1e-9)) {
                            double a = Math.pow(x[i]-x[j],2)+Math.pow(y[i]-y[j],2);
                            double b = Math.pow(x[i]-x[k],2)+Math.pow(y[i]-y[k],2);
                            double c = Math.pow(x[j]-x[k],2)+Math.pow(y[j]-y[k],2);
                            if(a==b||b==c||a==c){
                                cc++;
//                                double a1 = Math.sqrt(a);
//                                double b1 = Math.sqrt(b);
//                                double c1 = Math.sqrt(c);
//                                if(a1+b1>c1&&a1+c1>b1||b1+c1>a1)
//                                    cc++;
                            }
                            
                        }
                    }
                }
            }
            System.out.println(cc);


        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        boolean hasNext() {
            while (tokenizer == null || !tokenizer.hasMoreElements()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e) {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }

    }
}
"
135,E,Java,61620166,2023-03-30 19:27:06,人工智能3211江海洋,答案错误,"import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
//        out.flush();
        out.close();
    }

    static class TaskA {

        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            double[] x = new double[n];
            double[] y = new double[n];
            for (int i = 0; i < n; i++) {
                x[i] = in.nextDouble();
                y[i] = in.nextDouble();
            }
            int cc = 0;
            for (int i = 0; i < n; i++) {
                for (int j = i+1; j < n; j++) {
                    for (int k = j+1; k < n; k++) {
                        double a = Math.pow(x[i]-x[j],2)+Math.pow(y[i]-y[j],2);
                        double b = Math.pow(x[i]-x[k],2)+Math.pow(y[i]-y[k],2);
                        double c = Math.pow(x[j]-x[k],2)+Math.pow(y[j]-y[k],2);
                        if(a==b||b==c||a==c){
//                            cc++;
                            double a1 = Math.sqrt(a);
                            double b1 = Math.sqrt(b);
                            double c1 = Math.sqrt(c);
                            if(a1+b1>c1&&a1+c1>b1||b1+c1>a1)
                                cc++;
                        }
                    }
                }
            }
            System.out.println(cc);


        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        boolean hasNext() {
            while (tokenizer == null || !tokenizer.hasMoreElements()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e) {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }

    }
}
"
136,E,Java,61620186,2023-03-30 19:29:13,人工智能3211江海洋,答案错误,"import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
//        out.flush();
        out.close();
    }

    static class TaskA {

        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int[] x = new int[n];
            int[] y = new int[n];
//            double[] x = new double[n];
//            double[] y = new double[n];
            for (int i = 0; i < n; i++) {
                x[i] = in.nextInt();
                y[i] = in.nextInt();
            }
            int cc = 0;
            for (int i = 0; i < n; i++) {
                for (int j = i+1; j < n; j++) {
                    for (int k = j+1; k < n; k++) {
                        int a = (x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]);
                        int b = (x[i]-x[k])*(x[i]-x[k])+(y[i]-y[k])*(y[i]-y[k]);
                        int c = (x[j]-x[k])*(x[j]-x[k])+(y[j]-y[k])*(y[j]-y[k]);
                        if(a==b||b==c||a==c){
//                            cc++;
                            double a1 = Math.sqrt(a);
                            double b1 = Math.sqrt(b);
                            double c1 = Math.sqrt(c);
                            if(a1+b1>c1&&a1+c1>b1||b1+c1>a1)
                                cc++;
                        }
                    }
                }
            }
            System.out.println(cc);


        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        boolean hasNext() {
            while (tokenizer == null || !tokenizer.hasMoreElements()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e) {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }

    }
}
"
137,E,Java,61620195,2023-03-30 19:29:59,人工智能3211江海洋,答案正确,"import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
//        out.flush();
        out.close();
    }

    static class TaskA {

        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int[] x = new int[n];
            int[] y = new int[n];
//            double[] x = new double[n];
//            double[] y = new double[n];
            for (int i = 0; i < n; i++) {
                x[i] = in.nextInt();
                y[i] = in.nextInt();
            }
            int cc = 0;
            for (int i = 0; i < n; i++) {
                for (int j = i+1; j < n; j++) {
                    for (int k = j+1; k < n; k++) {
                        int a = (x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]);
                        int b = (x[i]-x[k])*(x[i]-x[k])+(y[i]-y[k])*(y[i]-y[k]);
                        int c = (x[j]-x[k])*(x[j]-x[k])+(y[j]-y[k])*(y[j]-y[k]);
                        if(a==b||b==c||a==c){
//                            cc++;
                            double a1 = Math.sqrt(a);
                            double b1 = Math.sqrt(b);
                            double c1 = Math.sqrt(c);
                            if(a1+b1>c1 && a1+c1>b1 && b1+c1>a1)
                                cc++;
                        }
                    }
                }
            }
            System.out.println(cc);


        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        boolean hasNext() {
            while (tokenizer == null || !tokenizer.hasMoreElements()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e) {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }

    }
}
"
138,E,Java,61660119,2023-04-01 16:37:16,尹唐唐,答案错误,"import java.io.*;
import java.util.*;
import java.math.*;
import java.util.Set;
public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }
    int B(int num[],int kaisi,int left,int right){
        while (right>=left) {
            int mid = left + (right - left) / 2;
            if (num[mid]>=kaisi&&num[mid]-1<=kaisi){
                return mid;
            }else if (num[mid]<kaisi){
                left = mid+1;
            }else{
                right=mid-1;
            }
        }
        return num.length+1;
    }


    static class TaskA {

        public void solve(int testNumber, InputReader in, PrintWriter out) {
          int n = in.nextInt();
          int []x =new int[n];
          int []y =new int[n];
            for (int i = 0; i < n; i++) {
                x[i]=in.nextInt();
                y[i]=in.nextInt();
            }
          int ans =0;
            for (int i = 0; i < n; i++) {
                for (int j = i+1; j <n ; j++) {
                    for (int k = j+1; k < n; k++) {
                        int a = (x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j]*y[i]-y[j]);
                        int b = (x[i]-x[k])*(x[i]-x[k])+(y[i]-y[k]*y[i]-y[k]);
                        int c = (x[j]-x[k])*(x[j]-x[k])+(y[j]-y[k]*y[j]-y[k]);
                        if (a==b||a==c||b==c){
                            double a1=Math.sqrt(a);
                            double b1=Math.sqrt(b);
                            double c1=Math.sqrt(c);
                            if (a1+b1>c1&&a1+c1>b1&&b1+c1>a1){
                                ans++;
                            }
                        }
                    }
                }
            }
           out.println(ans);
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
139,E,Java,61660179,2023-04-01 16:38:12,尹唐唐,答案正确,"import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
//        out.flush();
        out.close();
    }

    static class TaskA {

        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int[] x = new int[n];
            int[] y = new int[n];
//            double[] x = new double[n];
//            double[] y = new double[n];
            for (int i = 0; i < n; i++) {
                x[i] = in.nextInt();
                y[i] = in.nextInt();
            }
            int cc = 0;
            for (int i = 0; i < n; i++) {
                for (int j = i+1; j < n; j++) {
                    for (int k = j+1; k < n; k++) {
                        int a = (x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]);
                        int b = (x[i]-x[k])*(x[i]-x[k])+(y[i]-y[k])*(y[i]-y[k]);
                        int c = (x[j]-x[k])*(x[j]-x[k])+(y[j]-y[k])*(y[j]-y[k]);
                        if(a==b||b==c||a==c){
//                            cc++;
                            double a1 = Math.sqrt(a);
                            double b1 = Math.sqrt(b);
                            double c1 = Math.sqrt(c);
                            if(a1+b1>c1 && a1+c1>b1 && b1+c1>a1)
                                cc++;
                        }
                    }
                }
            }
            System.out.println(cc);


        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        boolean hasNext() {
            while (tokenizer == null || !tokenizer.hasMoreElements()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e) {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }

    }
}
"
140,E,Java,61660255,2023-04-01 16:39:02,尹唐唐,答案错误,"import java.io.*;
import java.util.*;
import java.math.*;
import java.util.Set;
public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }
    int B(int num[],int kaisi,int left,int right){
        while (right>=left) {
            int mid = left + (right - left) / 2;
            if (num[mid]>=kaisi&&num[mid]-1<=kaisi){
                return mid;
            }else if (num[mid]<kaisi){
                left = mid+1;
            }else{
                right=mid-1;
            }
        }
        return num.length+1;
    }


    static class TaskA {

        public void solve(int testNumber, InputReader in, PrintWriter out) {
          int n = in.nextInt();
          int []x =new int[n];
          int []y =new int[n];
            for (int i = 0; i < n; i++) {
                x[i]=in.nextInt();
                y[i]=in.nextInt();
            }
          int ans =0;
            for (int i = 0; i < n; i++) {
                for (int j = i+1; j <n ; j++) {
                    for (int k = j + 1; k < n; k++) {
                        int a = (x[i] - x[j]) * (x[i] - x[j]) + (y[i] - y[j] * y[i] - y[j]);
                        int b = (x[i] - x[k]) * (x[i] - x[k]) + (y[i] - y[k] * y[i] - y[k]);
                        int c = (x[j] - x[k]) * (x[j] - x[k]) + (y[j] - y[k] * y[j] - y[k]);
                        if (a == b || a == c || b == c) {
                            double a1 = Math.sqrt(a);
                            double b1 = Math.sqrt(b);
                            double c1 = Math.sqrt(c);
                            if (a1 + b1 > c1 && a1 + c1 > b1 && b1 + c1 > a1) {
                                ans++;
                            }
                        }
                    }
                }
            }
           System.out.println(ans);
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
141,E,Java,61660354,2023-04-01 16:40:24,尹唐唐,答案错误,"import java.io.*;
import java.util.*;
import java.math.*;
import java.util.Set;
public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }
    static class TaskA {

        public void solve(int testNumber, InputReader in, PrintWriter out) {
          int n = in.nextInt();
          int []x =new int[n];
          int []y =new int[n];
            for (int i = 0; i < n; i++) {
                x[i]=in.nextInt();
                y[i]=in.nextInt();
            }
          int ans =0;
            for (int i = 0; i < n; i++) {
                for (int j = i+1; j <n ; j++) {
                    for (int k = j + 1; k < n; k++) {
                        int a = (x[i] - x[j]) * (x[i] - x[j]) + (y[i] - y[j] * y[i] - y[j]);
                        int b = (x[i] - x[k]) * (x[i] - x[k]) + (y[i] - y[k] * y[i] - y[k]);
                        int c = (x[j] - x[k]) * (x[j] - x[k]) + (y[j] - y[k] * y[j] - y[k]);
                        if (a == b || a == c || b == c) {
                            double a1 = Math.sqrt(a);
                            double b1 = Math.sqrt(b);
                            double c1 = Math.sqrt(c);
                            if (a1 + b1 > c1 && a1 + c1 > b1 && b1 + c1 > a1) {
                                ans++;
                            }
                        }
                    }
                }
            }
           System.out.println(ans);
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
142,E,Java,61724490,2023-04-02 18:27:40,范宗林,答案正确,"import java.io.*;

public class Main {
    public static BufferedReader ins = new BufferedReader(new InputStreamReader(System.in));
    public static StreamTokenizer in = new StreamTokenizer(ins);
    public static PrintWriter out = new PrintWriter(System.out);
    public static int MAX = Integer.MAX_VALUE;

    public static void main(String[] args) throws IOException {
        in.nextToken();
        int n = (int) in.nval;
        int[] x = new int[n];
        int[] y = new int[n];
        int count = 0;
        for (int i = 0; i < n; i++) {
            in.nextToken();
            x[i] = (int) in.nval;
            in.nextToken();
            y[i] = (int) in.nval;
        }
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                for (int k = j + 1; k < n; k++) {
                    int x1 = x[i];
                    int y1 = y[i];
                    int x2 = x[j];
                    int y2 = y[j];
                    int x3 = x[k];
                    int y3 = y[k];
                    int k1 = (x1 - x2) * (y2 - y3);
                    int k2 = (y1 - y2) * (x2 - x3);
                    if (k1 == k2){
                        continue;
                    }
                    int a = (int) (Math.pow(x1 - x2,2) + Math.pow(y1 - y2,2));
                    int b = (int) (Math.pow(x1 - x3,2) + Math.pow(y1 - y3,2));
                    int c = (int) (Math.pow(x2 - x3,2) + Math.pow(y2 - y3,2));
                    if (a == b || a == c || b == c){
                        count ++;
                    }
                }
            }
        }
        out.println(count);
        out.flush();
        out.close();
    }
}
"
143,E,Java,61735036,2023-04-03 18:53:09,SongL7,答案错误,"
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;

public class Main{
    static FastReader in = new FastReader();
    static int N = 200005;
    static double eqs = 1e-18;

    @SuppressWarnings({""all""})
    static void solve() {
        int n = in.nextInt();
        node[] arr = new node[n + 1];
        for (int i = 1; i <= n; i++) {
            arr[i] = new node(in.nextInt(),in.nextInt());
        }
        int ans =0 ;
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= n; j++) {
                if(i == j) continue;
                for (int k = 1; k <= n; k++) {
                    if(j == k || i == k) continue;
                    if(arr[i].x == arr[j].x && arr[j].x == arr[k].x) continue;
                    if(arr[i].y == arr[j].y && arr[j].y == arr[k].y) continue;
                    double u = distance(arr[i].x,arr[i].y,arr[j].x,arr[j].y);
                    double v = distance(arr[i].x,arr[i].y,arr[k].x,arr[k].y);
                    if(Math.abs(u - v) < eqs) ++ans;
                }
            }
        }
        System.out.println(ans / 2);

    }

    static double distance(int x1, int y1, int x2, int y2) {
        return Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1- y2));
    }

    static class node{
        int x, y;

        public node(int x, int y) {
            this.x = x;
            this.y = y;
        }
    }


    public static void main(String[] args)  {
        int t = 1;
        while( t --> 0) {
            solve();
        }
    }

    static <T extends Comparable<T>>T max(T a, T b) {
        return a.compareTo(b) > 0 (?) a : b;
    }

    static <T extends Comparable<T>>T min(T a, T b) {
        return a.compareTo(b) < 0 (?) a : b;
    }

    static <T> void swap(T[] arr, int i , int j) {
        T temp = arr[i];arr[i] = arr[j];arr[j] = temp;
    }


    @SuppressWarnings({""all""})
    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        public FastReader() {
            br = new BufferedReader(new InputStreamReader(System.in));
        }

        String next() {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }

        String nextLine() {
            String str = """";
            try {
                str = br.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }

}
"
144,E,Java,61735345,2023-04-03 19:07:37,SongL7,答案正确,"
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;

public class Main{
    static FastReader in = new FastReader();
    static int N = 200005;
    static double eqs = 1e-9;

    @SuppressWarnings({""all""})
    static void solve() {
        int n = in.nextInt();
        node[] arr = new node[n + 1];
        for (int i = 1; i <= n; i++) {
            arr[i] = new node(in.nextInt(),in.nextInt());
        }
        int ans =0 ;
        for (int i = 1; i <= n; i++) {
            for (int j = i + 1; j <= n; j++) {
                for (int k = j + 1; k <= n; k++) {
                    int x1 = arr[i].x , y1 = arr[i].y;
                    int x2 = arr[j].x , y2 = arr[j].y;
                    int x3 = arr[k].x , y3 = arr[k].y;
                    if((y1- y2) * (x2 - x3) ==(x1 - x2)*(y2 - y3)) continue;
                    double u = distance(arr[i].x,arr[i].y,arr[j].x,arr[j].y);
                    double v = distance(arr[i].x,arr[i].y,arr[k].x,arr[k].y);
                    double t = distance(arr[j].x,arr[j].y,arr[k].x,arr[k].y);
                    if(Math.abs(u - v) < eqs || Math.abs(v - t) < eqs || Math.abs(u - t) < eqs) ++ans;
                }
            }
        }
        System.out.println(ans);

    }

    static double distance(int x1, int y1, int x2, int y2) {
        return Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1- y2));
    }

    static class node{
        int x, y;

        public node(int x, int y) {
            this.x = x;
            this.y = y;
        }
    }


    public static void main(String[] args)  {
        int t = 1;
        while( t --> 0) {
            solve();
        }
    }

    static <T extends Comparable<T>>T max(T a, T b) {
        return a.compareTo(b) > 0 (?) a : b;
    }

    static <T extends Comparable<T>>T min(T a, T b) {
        return a.compareTo(b) < 0 (?) a : b;
    }

    static <T> void swap(T[] arr, int i , int j) {
        T temp = arr[i];arr[i] = arr[j];arr[j] = temp;
    }


    @SuppressWarnings({""all""})
    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        public FastReader() {
            br = new BufferedReader(new InputStreamReader(System.in));
        }

        String next() {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }

        String nextLine() {
            String str = """";
            try {
                str = br.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }

}
"
145,E,Java,61766083,2023-04-06 17:33:23,牛客829798037号,答案错误,"

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Main {
    static int n,res;
    static int[][]num;
    static boolean[]va;
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        n=sc.nextInt();
        num=new int[n][2];
        int index=0;
        va=new boolean[n];
        while(index<n){
            num[index][0]=sc.nextInt();
            num[index++][1]=sc.nextInt();
        }
        for(int i=0;i<n;i++){
            for(int j=i+1;j<n;j++){
                for(int k=j+1;k<n;k++){
                    int[]temp1=num[k],temp2=num[j];
                    int a=Math.abs(temp1[1]-temp2[1]),b=Math.abs(temp1[0]-temp2[0]);
                    int a1=Math.abs(temp1[1]-num[i][1]),b1=Math.abs(temp1[0]-num[i][0]),a2=Math.abs(temp2[1]-num[i][1]),b2=Math.abs(temp2[0]-num[i][0]);
                    int temp=0;
                    if((a1*a1+b1*b1)==(a*a+b*b)){
                        temp++;
                    }
                    if((a2*a2+b2*b2)==(a*a+b*b)){
                        temp++;
                    }
                    if((a1*a1+b1*b1)==(a2*a2+b2*b2)){
                        temp++;
                    }
                    if(temp>=1) {
                        res++;
                    }
                }
            }
        }
        System.out.println(res);
    }
    
}
"
146,E,Java,61766119,2023-04-06 17:37:59,牛客829798037号,答案错误,"

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Main {
    static int n,res;
    static int[][]num;
    static boolean[]va;
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        n=sc.nextInt();
        num=new int[n][2];
        int index=0;
        va=new boolean[n];
        while(index<n){
            num[index][0]=sc.nextInt();
            num[index++][1]=sc.nextInt();
        }
        for(int i=0;i<n;i++){
            for(int j=i+1;j<n;j++){
                for(int k=j+1;k<n;k++){
                    int[]temp1=num[k],temp2=num[j];
                    int a=Math.abs(temp1[1]-temp2[1]),b=Math.abs(temp1[0]-temp2[0]);
                    int a1=Math.abs(temp1[1]-num[i][1]),b1=Math.abs(temp1[0]-num[i][0]),a2=Math.abs(temp2[1]-num[i][1]),b2=Math.abs(temp2[0]-num[i][0]);
                    int temp=0;
                    if((b- b1) * (a - a1) ==(a1 - a2)*(b1 - b2)) continue;
                    if((a1*a1+b1*b1)==(a*a+b*b)){
                        temp++;
                    }
                    if((a2*a2+b2*b2)==(a*a+b*b)){
                        temp++;
                    }
                    if((a1*a1+b1*b1)==(a2*a2+b2*b2)){
                        temp++;
                    }
                    if(temp>=1) {
                        res++;
                    }
                }
            }
        }
        System.out.println(res);
    }
    
}
"
147,E,Java,61766126,2023-04-06 17:38:52,牛客829798037号,答案错误,"

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Main {
    static int n,res;
    static int[][]num;
    static boolean[]va;
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        n=sc.nextInt();
        num=new int[n][2];
        int index=0;
        va=new boolean[n];
        while(index<n){
            num[index][0]=sc.nextInt();
            num[index++][1]=sc.nextInt();
        }
        for(int i=0;i<n;i++){
            for(int j=i+1;j<n;j++){
                for(int k=j+1;k<n;k++){
                    int[]temp1=num[k],temp2=num[j];
                    int a=Math.abs(temp1[1]-temp2[1]),b=Math.abs(temp1[0]-temp2[0]);
                    int a1=Math.abs(temp1[1]-num[i][1]),b1=Math.abs(temp1[0]-num[i][0]),a2=Math.abs(temp2[1]-num[i][1]),b2=Math.abs(temp2[0]-num[i][0]);
                    int temp=0;
                    if((b- b1) * (a1 - a2) ==(a - a1)*(b1 - b2)) continue;
                    if((a1*a1+b1*b1)==(a*a+b*b)){
                        temp++;
                    }
                    if((a2*a2+b2*b2)==(a*a+b*b)){
                        temp++;
                    }
                    if((a1*a1+b1*b1)==(a2*a2+b2*b2)){
                        temp++;
                    }
                    if(temp>=1) {
                        res++;
                    }
                }
            }
        }
        System.out.println(res);
    }
    
}
"
148,E,Java,61766143,2023-04-06 17:40:27,牛客829798037号,答案错误,"

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Main {
    static int n,res;
    static int[][]num;
    static boolean[]va;
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        n=sc.nextInt();
        num=new int[n][2];
        int index=0;
        va=new boolean[n];
        while(index<n){
            num[index][0]=sc.nextInt();
            num[index++][1]=sc.nextInt();
        }
        for(int i=0;i<n;i++){
            for(int j=i+1;j<n;j++){
                for(int k=j+1;k<n;k++){
                    int[]temp1=num[k],temp2=num[j];
                    long a=Math.abs(temp1[1]-temp2[1]),b=Math.abs(temp1[0]-temp2[0]);
                    long a1=Math.abs(temp1[1]-num[i][1]),b1=Math.abs(temp1[0]-num[i][0]),a2=Math.abs(temp2[1]-num[i][1]),b2=Math.abs(temp2[0]-num[i][0]);
                    int temp=0;
                    if((b- b1) * (a1 - a2) ==(a - a1)*(b1 - b2)) continue;
                    if((a1*a1+b1*b1)==(a*a+b*b)){
                        temp++;
                    }
                    if((a2*a2+b2*b2)==(a*a+b*b)){
                        temp++;
                    }
                    if((a1*a1+b1*b1)==(a2*a2+b2*b2)){
                        temp++;
                    }
                    if(temp>=1) {
                        res++;
                    }
                }
            }
        }
        System.out.println(res);
    }
    
}
"
149,E,Java,61766361,2023-04-06 18:08:51,牛客829798037号,答案错误,"

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Main {
    static int n,res;
    static int[][]num;
    static boolean[]va;
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        n=sc.nextInt();
        num=new int[n][2];
        int index=0;
        va=new boolean[n];
        while(index<n){
            num[index][0]=sc.nextInt();
            num[index++][1]=sc.nextInt();
        }
        for(int i=0;i<n;i++){
            for(int j=i+1;j<n;j++){
                for(int k=j+1;k<n;k++){
                   int a = (num[i][0]-num[j][0])*(num[i][0]-num[j][0])+(num[i][1]-num[j][1])*(num[i][0]-num[j][0]);
                    int b = (num[i][0]-num[k][0])*(num[i][0]-num[k][0])+(num[i][1]-num[k][1])*(num[i][1]-num[k][1]);
                    int c = (num[j][1]-num[k][1])*(num[j][1]-num[k][1])+(num[j][0]-num[k][0])*(num[j][0]-num[k][0]);
                    if(a==b||b==c||a==c){
                        double a1 = Math.sqrt(a);
                        double b1 = Math.sqrt(b);
                        double c1 = Math.sqrt(c);
                        if(a1+b1>c1 && a1+c1>b1 && b1+c1>a1)
                            res++;
                    }
                }
            }
        }
        System.out.println(res);
    }
    
}
"
150,E,Java,61766367,2023-04-06 18:09:26,牛客829798037号,答案正确,"

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Main {
    static int n,res;
    static int[][]num;
    static boolean[]va;
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        n=sc.nextInt();
        num=new int[n][2];
        int index=0;
        va=new boolean[n];
        while(index<n){
            num[index][0]=sc.nextInt();
            num[index++][1]=sc.nextInt();
        }
        for(int i=0;i<n;i++){
            for(int j=i+1;j<n;j++){
                for(int k=j+1;k<n;k++){
                   int a = (num[i][0]-num[j][0])*(num[i][0]-num[j][0])+(num[i][1]-num[j][1])*(num[i][1]-num[j][1]);
                    int b = (num[i][0]-num[k][0])*(num[i][0]-num[k][0])+(num[i][1]-num[k][1])*(num[i][1]-num[k][1]);
                    int c = (num[j][1]-num[k][1])*(num[j][1]-num[k][1])+(num[j][0]-num[k][0])*(num[j][0]-num[k][0]);
                    if(a==b||b==c||a==c){
                        double a1 = Math.sqrt(a);
                        double b1 = Math.sqrt(b);
                        double c1 = Math.sqrt(c);
                        if(a1+b1>c1 && a1+c1>b1 && b1+c1>a1)
                            res++;
                    }
                }
            }
        }
        System.out.println(res);
    }
    
}
"
151,E,Java,61784700,2023-04-07 15:44:17,10201,答案正确,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.nio.channels.AcceptPendingException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Queue;
import java.util.Scanner;
import java.util.Stack;

public class Main {
	public static void main(String[] args) throws IOException, ParseException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int n = Integer.parseInt(br.readLine());

		int num[][] = new int[n][2];
		for (int i = 0; i < n; i++) {
			String[] s = br.readLine().split("" "");
			num[i][0] = Integer.parseInt(s[0]);
			num[i][1] = Integer.parseInt(s[1]);
		}
		int res = 0;
		for (int i = 0; i < num.length; i++) {
			for (int j = i; j < num.length; j++) {
				for (int k = j; k < num.length; k++) {
					int a = (num[i][0] - num[j][0]) * (num[i][0] - num[j][0])
							+ (num[i][1] - num[j][1]) * (num[i][1] - num[j][1]);
					int b = (num[i][0] - num[k][0]) * (num[i][0] - num[k][0])
							+ (num[i][1] - num[k][1]) * (num[i][1] - num[k][1]);
					int c = (num[j][1] - num[k][1]) * (num[j][1] - num[k][1])
							+ (num[j][0] - num[k][0]) * (num[j][0] - num[k][0]);
					if (a == b || b == c || a == c) {
						double a1 = Math.sqrt(a);
						double b1 = Math.sqrt(b);
						double c1 = Math.sqrt(c);
						if (a1 + b1 > c1 && a1 + c1 > b1 && b1 + c1 > a1)
							res++;
					}

				}
			}
		}
		System.out.print(res);
	}
}
"
152,E,Java,61832941,2023-04-09 21:59:11,白泽oj,执行出错,"import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.util.Random;
import java.util.Scanner;

public class Main {
	static PrintWriter out=new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
   static BufferedReader be=new BufferedReader(new InputStreamReader(System.in));
	public static void main(String[] args)throws IOException {
        // TODO Auto-generated method stub
//坐标个数n
		String str=be.readLine();
		int n=Integer.parseInt(str);
		//定义一个二维数组存坐标.
		int arr[][]=new int[n][2];
		for(int i=0;i<n;i++) {
			String arr1[]=be.readLine().split("" "");
			arr[i][0]=Integer.parseInt(arr1[0]);
			arr[i][1]=Integer.parseInt(arr1[1]);
		}
		int count=0;
		//判断两两点的距离是否相等
		for(int i=0;i<n;i++) {
			for(int j=i+1;i<n;j++) {
				for(int k=j+1;i<n;k++) {
int a=(arr[i][0]-arr[j][0])*(arr[i][0]-arr[j][0])+(arr[i][1]-arr[j][1])*(arr[i][1]-arr[j][1]);	
int b=(arr[i][0]-arr[k][0])*(arr[i][0]-arr[k][0])+(arr[i][1]-arr[k][1])*(arr[i][1]-arr[k][1]);	
int c=(arr[j][0]-arr[k][0])*(arr[j][0]-arr[k][0])+(arr[j][1]-arr[k][1])*(arr[j][1]-arr[k][1]);
double x=Math.sqrt(a);					
double y=Math.sqrt(b);
double z=Math.sqrt(c);

if(x+y>z&&y+z>x&&x+z>y) {
	
	count++;
}
					
					
				}
				
				
			}
			
			
		}
		out.println(count);
		out.close();
		
		
		
		
		
		
         
    }
 
}"
153,E,Java,61837698,2023-04-10 18:42:38,白泽oj,答案错误,"import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] points = new int[n][2];
        for (int i = 0; i < n; i++) {
            points[i][0] = sc.nextInt();
            points[i][1] = sc.nextInt();
        }
        int ans = 0;
        for (int i = 0; i < n; i++) {
            Map<Double, Integer> map = new HashMap<>();
            for (int j = 0; j < n; j++) {
                if (i == j) continue;
                double slope = getSlope(points[i], points[j]);
                if (map.containsKey(slope)) {
                    ans += map.get(slope);
                    map.put(slope, map.get(slope) + 1);
                } else {
                    map.put(slope, 1);
                }
            }
        }
        System.out.println(ans);
    }

    private static double getSlope(int[] p1, int[] p2) {
        if (p1[0] == p2[0]) return Double.POSITIVE_INFINITY;
        return (double) (p1[1] - p2[1]) / (p1[0] - p2[0]);
    }
}
"
154,E,Java,61837713,2023-04-10 18:44:14,白泽oj,答案错误,"import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] points = new int[n][2];
        for (int i = 0; i < n; i++) {
            points[i][0] = sc.nextInt();
            points[i][1] = sc.nextInt();
        }
        int ans = 0;
        for (int i = 0; i < n; i++) {
            Map<Double, Integer> map = new HashMap<>();
            int sameX = 1;
            for (int j = 0; j < n; j++) {
                if (i == j) continue;
                if (points[i][0] == points[j][0]) {
                    if (points[i][1] == points[j][1]) {
                        sameX++;
                    } else {
                        map.put(Double.POSITIVE_INFINITY, map.getOrDefault(Double.POSITIVE_INFINITY, 0) + 1);
                    }
                } else {
                    double slope = (double) (points[j][1] - points[i][1]) / (points[j][0] - points[i][0]);
                    map.put(slope, map.getOrDefault(slope, 0) + 1);
                }
            }
            for (int cnt : map.values()) {
                if (cnt > 1) {
                    ans += cnt * (cnt - 1) / 2;
                }
            }
            ans += sameX * (sameX - 1) * (n - sameX) / 2;
        }
        System.out.println(ans);
    }
}
"
155,E,Java,61837738,2023-04-10 18:45:52,白泽oj,答案错误,"import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] points = new int[n][2];
        for (int i = 0; i < n; i++) {
            points[i][0] = sc.nextInt();
            points[i][1] = sc.nextInt();
        }
        int ans = 0;
        for (int i = 0; i < n; i++) {
            Map<Double, Integer> map = new HashMap<>();
            int sameX = 1;
            for (int j = 0; j < n; j++) {
                if (i == j) continue;
                if (points[i][0] == points[j][0]) {
                    if (points[i][1] == points[j][1]) {
                        sameX++;
                    } else {
                        map.put(Double.POSITIVE_INFINITY, map.getOrDefault(Double.POSITIVE_INFINITY, 0) + 1);
                    }
                } else {
                    double slope = (double) (points[j][1] - points[i][1]) / (points[j][0] - points[i][0]);
                    map.put(slope, map.getOrDefault(slope, 0) + 1);
                }
            }
            for (int cnt : map.values()) {
                if (cnt > 1) {
                    ans += cnt * (cnt - 1) / 2;
                }
            }
            ans += sameX * (sameX - 1) * (n - sameX) / 2;
            ans += (n - sameX) * (n - sameX - 1) / 2;
        }
        System.out.println(ans);
    }
}
"
156,E,Java,61839819,2023-04-10 20:37:06,白泽oj,答案错误,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());

        int[][] num = new int[n][2];
        for (int i = 0; i < n; i++) {
            String[] s = br.readLine().split("" "");
            num[i][0] = Integer.parseInt(s[0]);
            num[i][1] = Integer.parseInt(s[1]);
        }

        int count = 0;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                for (int k = j + 1; k < n; k++) {
                    int x1 = num[i][0];
                    int y1 = num[i][1];
                    int x2 = num[j][0];
                    int y2 = num[j][1];
                    int x3 = num[k][0];
                    int y3 = num[k][1];
                    double a = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));
                    double b = Math.sqrt((x3 - x1) * (x3 - x1) + (y3 - y1) * (y3 - y1));
                    double c = Math.sqrt((x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2));
                    if (Math.abs(a - b) < 1e-6 || Math.abs(b - c) < 1e-6 || Math.abs(a - c) < 1e-6) {
                        count++;
                    }
                }
            }
        }
        System.out.println(count);
    }
}
"
157,E,Java,61840065,2023-04-10 20:50:41,白泽oj,答案正确,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());
        int[][] points = new int[n][2];
        for (int i = 0; i < n; i++) {
            String[] str = br.readLine().split("" "");
            points[i][0] = Integer.parseInt(str[0]);
            points[i][1] = Integer.parseInt(str[1]);
        }
        int count = 0;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                int[] a = points[i];
                int[] b = points[j];
                for (int k = j + 1; k < n; k++) {
                    int[] c = points[k];
                    // 判断是否三点共线
                    if ((b[1] - a[1]) * (c[0] - b[0]) == (c[1] - b[1]) * (b[0] - a[0])) {
                        continue;
                    }
                    // 判断是否等腰三角形
                    int d1 = (a[0] - b[0]) * (a[0] - b[0]) + (a[1] - b[1]) * (a[1] - b[1]);
                    int d2 = (a[0] - c[0]) * (a[0] - c[0]) + (a[1] - c[1]) * (a[1] - c[1]);
                    int d3 = (b[0] - c[0]) * (b[0] - c[0]) + (b[1] - c[1]) * (b[1] - c[1]);
                    if (d1 == d2 || d2 == d3 || d3 == d1) {
                        count++;
                    }
                }
            }
        }
        System.out.println(count);
    }
}
"
