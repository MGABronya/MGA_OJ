,index,languageName,submissionId,submitTime,userName,statusMessage,code
0,D,C,61488452,2023-03-24 20:31:40,牛客76481700号,答案错误,"#include""stdio.h""
struct node
{
    long long u;
    long long v;
    long long w;
}a[100005];
long long f[40005];
void sort(struct node *a,int left,int right)
{
    int i,j;
    struct node t,k;
    i=left;
    j=right;
    k=a[left];
    if(left>=right) return ;
    while(i<j)
    {
        while(i<j&&k.w>=a[j].w) j--;
        while(i<j&&k.w<=a[i].w) i++;
        if(i<j)
        {
            t=a[i];
            a[i]=a[j];
            a[j]=t;
        }
    }
    a[left]=a[i];
    a[i]=k;
    sort(a,left,i-1);
    sort(a,i+1,right);
}
int find(long long u)
{
    if(f[u]==u) return u;
    else 
    {
        f[u]=find(f[u]);
        return f[u];
    } 
}
void hb(long long u,long long v)
{
    long long t1,t2;
    t1=find(u);
    t2=find(v);
    if(t1!=t2)
    {
        f[t2]=t1;
    }
}
int main()
{
    long long n,m,c,p;
    int i;
    scanf(""%lld %lld %lld"",&n,&m,&c);
    for(i=1;i<=n;i++)
        f[i]=i;
    for(i=1;i<=m;i++)
    {
        scanf(""%lld %lld %lld"",&a[i].v,&a[i].u,&a[i].w); 
    }
    sort(a,1,m);
    for(i=1;i<=m;i++)
    {
        int k=1;
        long long num=0;
        if(find(a[i].u)!=find(a[i].v))
        {
            if(num<=c)
            {
                hb(a[i].u,a[i].v);
                num+=k*a[i].w;
                k++;
            }  
        }
        if(num>=c)
        {
           p=m-k;
        }      
    }
    printf(""%lld"",p+1); 
}"
1,D,C,61491187,2023-03-24 20:55:26,牛客20220304118,运行超时,"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
int mark;
//int used[100001][2];
void dfs(long long(*arr)[3],long long mid,long long t,
long long n,long long m,long long c,int num){
	if(t==m){
//		printf(""m=%lld\n"",m);
		mark=1;
		return;
	}
	if(m==4){
		printf(""@@\n"");
	}
	if(num>=n*2) return;
	if(mark) return;
	long long i;
	for(i=0;i<n;i++){
		if(mark) return;
//		if(used[i][0]==1||used[i][1]==1) continue;
		if(arr[i][0]==m){
//			printf(""@@\n"");
			if(mid>=arr[i][2]){
//				used[i][0]=1;
				dfs(arr,mid,t,n,arr[i][1],c,num+1);
//				used[i][0]=0;
			}
			else if(c>=arr[i][2]){
//				used[i][0]=1;
				dfs(arr,mid,t,n,arr[i][1],c-arr[i][2],num+1);
//				used[i][0]=0;
			}
		}
		if(arr[i][1]==m){
			if(mid>=arr[i][2]){
//				used[i][1]=1;
				dfs(arr,mid,t,n,arr[i][0],c,num+1);
//				used[i][1]=0;
			}
			else if(c>=arr[i][2]){
//				used[i][1]=1;
				dfs(arr,mid,t,n,arr[i][0],c-arr[i][2],num+1);
//				used[i][1]=0;
			}
		}
	}
}

int main()
{
	long long n,m,c,i,j;
	scanf(""%lld %lld %lld"",&n,&m,&c);
	long long arr[m][3];
	for(i=0;i<m;i++){
		scanf(""%lld %lld %lld"",&arr[i][0],
		&arr[i][1],&arr[i][2]);
	}
//	for(i=0;i<m;i++){
//		printf(""%lld %lld %lld\n"",arr[i][0],arr[i][1],arr[i][2]);
//	}
	long long left=1,right=1e9+1,mid,t=0;
	while(left<=right){
		mid=(left+right)/2;
		mark=0;
//		memset(used,0,sizeof(used));
		dfs(arr,mid,n,m,1,c,0);
		if(mark){
//			printf(""##\n"");
			t=mid;
			right=mid-1;
		}
		else{
			left=mid+1;
		}
//		printf(""left=%lld,right=%lld\n"",left,right);
//		printf(""t=%lld\n"",t);
	}
	printf(""%lld"",t);
	return 0;
}"
2,D,C,61491374,2023-03-24 20:57:00,牛客20220304118,答案错误,"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
int mark;
int used[100001][2];
void dfs(long long(*arr)[3],long long mid,long long t,
long long n,long long m,long long c,int num){
	if(t==m){
//		printf(""m=%lld\n"",m);
		mark=1;
		return;
	}
//	if(m==4){
//		printf(""@@\n"");
//	}
//	if(num>=n*2) return;
	if(mark) return;
	long long i;
	for(i=0;i<n;i++){
		if(mark) return;
		if(used[i][0]==1&&used[i][1]==1) continue;
		if(arr[i][0]==m){
//			printf(""@@\n"");
			if(mid>=arr[i][2]){
				used[i][0]=1;
				dfs(arr,mid,t,n,arr[i][1],c,num+1);
				used[i][0]=0;
			}
			else if(c>=arr[i][2]){
				used[i][0]=1;
				dfs(arr,mid,t,n,arr[i][1],c-arr[i][2],num+1);
				used[i][0]=0;
			}
		}
		if(arr[i][1]==m){
			if(mid>=arr[i][2]){
				used[i][1]=1;
				dfs(arr,mid,t,n,arr[i][0],c,num+1);
				used[i][1]=0;
			}
			else if(c>=arr[i][2]){
				used[i][1]=1;
				dfs(arr,mid,t,n,arr[i][0],c-arr[i][2],num+1);
				used[i][1]=0;
			}
		}
	}
}

int main()
{
	long long n,m,c,i,j;
	scanf(""%lld %lld %lld"",&n,&m,&c);
	long long arr[m][3];
	for(i=0;i<m;i++){
		scanf(""%lld %lld %lld"",&arr[i][0],
		&arr[i][1],&arr[i][2]);
	}
//	for(i=0;i<m;i++){
//		printf(""%lld %lld %lld\n"",arr[i][0],arr[i][1],arr[i][2]);
//	}
	long long left=1,right=1e9+1,mid,t=0;
	while(left<=right){
		mid=(left+right)/2;
		mark=0;
		memset(used,0,sizeof(used));
		dfs(arr,mid,n,m,1,c,0);
		if(mark){
//			printf(""##\n"");
			t=mid;
			right=mid-1;
		}
		else{
			left=mid+1;
		}
//		printf(""left=%lld,right=%lld\n"",left,right);
//		printf(""t=%lld\n"",t);
	}
	printf(""%lld"",t);
	return 0;
}"
3,D,C,61501686,2023-03-25 12:32:02,牛客20220304118,运行超时,"#include <stdio.h>
#include <string.h>
#include <stdlib.h>
int mark;
#define ll long long
int cmp(const void*a,const void*b){
	return *(int*)b-*(int*)a;
}
void check(int*isjoin,int*lowcost,ll n,
ll m,ll c,int(*ans)[3]){
	int i,j=0,l,min;
	ll sum=0;
	for(l=1;l<=n;l++){
		min=1e9+1;
		for(i=1;i<=n;i++){
			if(isjoin[i]==0){
				if(lowcost[i-1]!=-1&&min>=lowcost[i-1]){
					j=i;
					min=lowcost[i-1];
				}
			}
		}
		isjoin[j]=1;
		for(i=0;i<m;i++){
			if(isjoin[ans[i][0]]==1&&isjoin[ans[i][1]]==0){
				if(lowcost[ans[i][1]-1]==-1||
				(lowcost[ans[i][1]-1]>ans[i][2])){
					lowcost[ans[i][1]-1]=ans[i][2];
				}
			}
			if(isjoin[ans[i][1]]==1&&isjoin[ans[i][0]]==0){
				if(lowcost[ans[i][0]-1]==-1||
				(lowcost[ans[i][0]-1]>ans[i][2])){
					lowcost[ans[i][0]-1]=ans[i][2];
				}
			}
		}
//		for(i=0;i<n;i++){
//			printf(""lowcost=%d\t"",lowcost[i]);
//		}
//		printf(""\n"");
	}
//	printf(""\n"");
	qsort(lowcost,n,sizeof(int),cmp);
	for(i=0;i<n;i++){
//		printf(""lowcost[i]=%d\t"",lowcost[i]);
		sum+=(i+1)*lowcost[i];
	}
//	printf(""\n"");
//	printf(""sum=%lld\n"",sum);
	if(c>=sum) mark=1;
	return;
}
int main()
{	
  	ll n,m,c,i,j;
  	scanf(""%lld %lld %lld"",&n,&m,&c);
  	int arr[m][3];
  	for(i=0;i<m;i++){
  		scanf(""%d %d %d"",&arr[i][0],&arr[i][1],&arr[i][2]);
	}
	int ans[m][3];
  	int isjoin[n+1],lowcost[n];
  	ll left=0,right=1e9+1,mid,t=1e9+1;
  	while(left<=right){
  		mid=(left+right)/2;
  		memset(isjoin,0,sizeof(isjoin));
	  	memset(lowcost,-1,sizeof(lowcost));
	  	lowcost[0]=0,mark=0;
	  	for(i=0;i<m;i++){
	  		ans[i][0]=arr[i][0],ans[i][1]=arr[i][1];
	  		if(arr[i][2]<=mid){
	  			ans[i][2]=0;
			}
	  		else{
			  	ans[i][2]=arr[i][2];	
			}
		}
//		printf(""left=%lld,right=%lld\n"",left,right);
//		printf(""mid=%lld\n"",mid);
	  	check(isjoin,lowcost,n,m,c,ans);
		if(mark){
			t=mid;
			right=mid-1;
		}	
		else{
			left=mid+1;
		}
//		printf(""t=%lld\n"",t);
//		printf(""mark=%d\n"",mark);
	}
  	printf(""%lld"",t);
	return 0;
}"
4,D,C,61501792,2023-03-25 12:33:16,牛客20220304118,运行超时,"#include <stdio.h>
#include <string.h>
#include <stdlib.h>
int mark;
#define ll long long
int cmp(const void*a,const void*b){
	return *(int*)b-*(int*)a;
}
void check(int*isjoin,int*lowcost,ll n,
ll m,ll c,int(*ans)[3]){
	int i,j=0,l,min;
	ll sum=0;
	for(l=1;l<=n;l++){
		min=1e9+1;
		for(i=1;i<=n;i++){
			if(isjoin[i]==0){
				if(lowcost[i-1]!=-1&&min>=lowcost[i-1]){
					j=i;
					min=lowcost[i-1];
				}
			}
		}
		isjoin[j]=1;
		for(i=0;i<m;i++){
			if(isjoin[ans[i][0]]==1&&isjoin[ans[i][1]]==0){
				if(lowcost[ans[i][1]-1]==-1||
				(lowcost[ans[i][1]-1]>ans[i][2])){
					lowcost[ans[i][1]-1]=ans[i][2];
				}
			}
			if(isjoin[ans[i][1]]==1&&isjoin[ans[i][0]]==0){
				if(lowcost[ans[i][0]-1]==-1||
				(lowcost[ans[i][0]-1]>ans[i][2])){
					lowcost[ans[i][0]-1]=ans[i][2];
				}
			}
		}
//		for(i=0;i<n;i++){
//			printf(""lowcost=%d\t"",lowcost[i]);
//		}
//		printf(""\n"");
	}
//	printf(""\n"");
	qsort(lowcost,n,sizeof(int),cmp);
	for(i=0;i<n;i++){
//		printf(""lowcost[i]=%d\t"",lowcost[i]);
		sum+=(long long)(i+1)*lowcost[i];
	}
//	printf(""\n"");
//	printf(""sum=%lld\n"",sum);
	if(c>=sum) mark=1;
	return;
}
int main()
{	
  	ll n,m,c,i,j;
  	scanf(""%lld %lld %lld"",&n,&m,&c);
  	int arr[m][3];
  	for(i=0;i<m;i++){
  		scanf(""%d %d %d"",&arr[i][0],&arr[i][1],&arr[i][2]);
	}
	int ans[m][3];
  	int isjoin[n+1],lowcost[n];
  	ll left=0,right=1e9+1,mid,t=1e9+1;
  	while(left<=right){
  		mid=(left+right)/2;
  		memset(isjoin,0,sizeof(isjoin));
	  	memset(lowcost,-1,sizeof(lowcost));
	  	lowcost[0]=0,mark=0;
	  	for(i=0;i<m;i++){
	  		ans[i][0]=arr[i][0],ans[i][1]=arr[i][1];
	  		if(arr[i][2]<=mid){
	  			ans[i][2]=0;
			}
	  		else{
			  	ans[i][2]=arr[i][2];	
			}
		}
//		printf(""left=%lld,right=%lld\n"",left,right);
//		printf(""mid=%lld\n"",mid);
	  	check(isjoin,lowcost,n,m,c,ans);
		if(mark){
			t=mid;
			right=mid-1;
		}	
		else{
			left=mid+1;
		}
//		printf(""t=%lld\n"",t);
//		printf(""mark=%d\n"",mark);
	}
  	printf(""%lld"",t);
	return 0;
}"
5,D,C,61523346,2023-03-25 15:17:39,牛客20220304118,运行超时,"#include <stdio.h>
#include <string.h>
#include <stdlib.h>
int mark;
#define ll long long
int cmp(const void*a,const void*b){
	return *(int*)b-*(int*)a;
}
void check(int*isjoin,int*lowcost,ll n,
ll m,ll c,int(*ans)[3]){
	int i,j=1,l,min;
	ll sum=0;
	for(l=1;l<=n;l++){
		for(i=0;i<m;i++){
			if(isjoin[ans[i][0]]==1&&isjoin[ans[i][1]]==0){
//				if(ans[i][0]==j){
					if(lowcost[ans[i][1]-1]==-1||
					(lowcost[ans[i][1]-1]>ans[i][2])){
						lowcost[ans[i][1]-1]=ans[i][2];
					}
//				}
			}
			if(isjoin[ans[i][1]]==1&&isjoin[ans[i][0]]==0){
//				if(ans[i][1]==j){
					if(lowcost[ans[i][0]-1]==-1||
					(lowcost[ans[i][0]-1]>ans[i][2])){
						lowcost[ans[i][0]-1]=ans[i][2];
					}
//				}		
			}
//			if(isjoin[ans[i][0]]==1&&isjoin[ans[i][1]]==0){
//				if(lowcost[ans[i][1]-1]==-1||
//				(lowcost[ans[i][1]-1]>ans[i][2])){
//					lowcost[ans[i][1]-1]=ans[i][2];
//				}
//			}
//			if(isjoin[ans[i][1]]==1&&isjoin[ans[i][0]]==0){
//				if(lowcost[ans[i][0]-1]==-1||
//				(lowcost[ans[i][0]-1]>ans[i][2])){
//					lowcost[ans[i][0]-1]=ans[i][2];
//				}
//			}
		}
		min=1e9+1;
		for(i=1;i<=n;i++){
			if(isjoin[i]==0){
				if(lowcost[i-1]!=-1&&min>=lowcost[i-1]){
//					printf(""@@\n"");
					j=i;
					min=lowcost[i-1];
				}
			}
		}
		isjoin[j]=1;
//		printf(""j=%d\n"",j);
//		for(i=0;i<n;i++){
//			printf(""lowcost=%d\t"",lowcost[i]);
//		}
//		printf(""\n"");
	}
//	printf(""\n"");
	qsort(lowcost,n,sizeof(int),cmp);
	for(i=0;i<n;i++){
//		printf(""lowcost[i]=%d\t"",lowcost[i]);
		sum+=(ll)(i+1)*lowcost[i];
	}
//	printf(""\n"");
//	printf(""sum=%lld\n"",sum);
	if(c>=sum) mark=1;
	return;
}
int main()
{	
  	ll n,m,c,i,j;
  	scanf(""%lld %lld %lld"",&n,&m,&c);
  	int arr[m][3];
  	for(i=0;i<m;i++){
  		scanf(""%d %d %d"",&arr[i][0],&arr[i][1],&arr[i][2]);
	}
	int ans[m][3];
  	int isjoin[n+1],lowcost[n];
  	ll left=0,right=1e9+1,mid,t=1e9+1;
  	while(left<=right){
  		mid=(left+right)/2;
  		memset(isjoin,0,sizeof(isjoin));
	  	memset(lowcost,-1,sizeof(lowcost));
	  	lowcost[0]=0,mark=0;
	  	isjoin[1]=1; 
	  	for(i=0;i<m;i++){
	  		ans[i][0]=arr[i][0],ans[i][1]=arr[i][1];
	  		if(arr[i][2]<=mid){
	  			ans[i][2]=0;
			}
	  		else{
			  	ans[i][2]=arr[i][2];	
			}
		}
//		printf(""left=%lld,right=%lld\n"",left,right);
//		printf(""mid=%lld\n"",mid);
	  	check(isjoin,lowcost,n,m,c,ans);
		if(mark){
			t=mid;
			right=mid-1;
		}	
		else{
			left=mid+1;
		}
//		printf(""t=%lld\n"",t);
//		printf(""mark=%d\n"",mark);
	}
  	printf(""%lld"",t);
	return 0;
}"
6,D,C,61524357,2023-03-25 15:25:28,牛客20220304118,运行超时,"#include <stdio.h>
#include <string.h>
#include <stdlib.h>
int mark;
#define ll long long
int cmp(const void*a,const void*b){
	return *(int*)b-*(int*)a;
}
void check(int*isjoin,int*lowcost,ll n,
ll m,ll c,int(*ans)[3]){
	int i,j=1,l,min;
	ll sum=0;
	for(l=1;l<=n;l++){
		for(i=0;i<m;i++){
//			if(isjoin[ans[i][0]]==1&&isjoin[ans[i][1]]==0){
				if(ans[i][0]==j&&isjoin[ans[i][1]]==0){
					if(lowcost[ans[i][1]-1]==-1||
					(lowcost[ans[i][1]-1]>ans[i][2])){
						lowcost[ans[i][1]-1]=ans[i][2];
					}
				}
//			}
//			if(isjoin[ans[i][1]]==1&&isjoin[ans[i][0]]==0){
				if(ans[i][1]==j&&isjoin[ans[i][0]]==0){
					if(lowcost[ans[i][0]-1]==-1||
					(lowcost[ans[i][0]-1]>ans[i][2])){
						lowcost[ans[i][0]-1]=ans[i][2];
					}
				}		
//			}
//			if(isjoin[ans[i][0]]==1&&isjoin[ans[i][1]]==0){
//				if(lowcost[ans[i][1]-1]==-1||
//				(lowcost[ans[i][1]-1]>ans[i][2])){
//					lowcost[ans[i][1]-1]=ans[i][2];
//				}
//			}
//			if(isjoin[ans[i][1]]==1&&isjoin[ans[i][0]]==0){
//				if(lowcost[ans[i][0]-1]==-1||
//				(lowcost[ans[i][0]-1]>ans[i][2])){
//					lowcost[ans[i][0]-1]=ans[i][2];
//				}
//			}
		}
		min=1e9+1;
		for(i=1;i<=n;i++){
			if(isjoin[i]==0){
				if(lowcost[i-1]!=-1&&min>=lowcost[i-1]){
//					printf(""@@\n"");
					j=i;
					min=lowcost[i-1];
				}
			}
		}
		isjoin[j]=1;
//		printf(""j=%d\n"",j);
//		for(i=0;i<n;i++){
//			printf(""lowcost=%d\t"",lowcost[i]);
//		}
//		printf(""\n"");
	}
//	printf(""\n"");
	qsort(lowcost,n,sizeof(int),cmp);
	for(i=0;i<n;i++){
//		printf(""lowcost[i]=%d\t"",lowcost[i]);
		sum+=(ll)(i+1)*lowcost[i];
	}
//	printf(""\n"");
//	printf(""sum=%lld\n"",sum);
	if(c>=sum) mark=1;
	return;
}
int main()
{	
  	ll n,m,c,i,j;
  	scanf(""%lld %lld %lld"",&n,&m,&c);
  	int arr[m][3];
  	for(i=0;i<m;i++){
  		scanf(""%d %d %d"",&arr[i][0],&arr[i][1],&arr[i][2]);
	}
	int ans[m][3];
  	int isjoin[n+1],lowcost[n];
  	ll left=0,right=1e9+1,mid,t=1e9+1;
  	while(left<=right){
  		mid=(left+right)/2;
  		memset(isjoin,0,sizeof(isjoin));
	  	memset(lowcost,-1,sizeof(lowcost));
	  	lowcost[0]=0,mark=0;
	  	isjoin[1]=1; 
	  	for(i=0;i<m;i++){
	  		ans[i][0]=arr[i][0],ans[i][1]=arr[i][1];
	  		if(arr[i][2]<=mid){
	  			ans[i][2]=0;
			}
	  		else{
			  	ans[i][2]=arr[i][2];	
			}
		}
//		printf(""left=%lld,right=%lld\n"",left,right);
//		printf(""mid=%lld\n"",mid);
	  	check(isjoin,lowcost,n,m,c,ans);
		if(mark){
			t=mid;
			right=mid-1;
		}	
		else{
			left=mid+1;
		}
//		printf(""t=%lld\n"",t);
//		printf(""mark=%d\n"",mark);
	}
  	printf(""%lld"",t);
	return 0;
}"
7,D,C,61524634,2023-03-25 15:27:34,牛客20220304118,运行超时,"#include <stdio.h>
#include <string.h>
#include <stdlib.h>
int mark;
#define ll long long
int cmp(const void*a,const void*b){
	return *(int*)b-*(int*)a;
}
void check(int*isjoin,int*lowcost,ll n,
ll m,ll c,int(*ans)[3]){
	int i,j=1,l,min;
	ll sum=0;
	for(l=1;l<n;l++){
		for(i=0;i<m;i++){
//			if(isjoin[ans[i][0]]==1&&isjoin[ans[i][1]]==0){
				if(ans[i][0]==j&&isjoin[ans[i][1]]==0){
					if(lowcost[ans[i][1]-1]==-1||
					(lowcost[ans[i][1]-1]>ans[i][2])){
						lowcost[ans[i][1]-1]=ans[i][2];
					}
				}
//			}
//			if(isjoin[ans[i][1]]==1&&isjoin[ans[i][0]]==0){
				if(ans[i][1]==j&&isjoin[ans[i][0]]==0){
					if(lowcost[ans[i][0]-1]==-1||
					(lowcost[ans[i][0]-1]>ans[i][2])){
						lowcost[ans[i][0]-1]=ans[i][2];
					}
				}		
//			}
//			if(isjoin[ans[i][0]]==1&&isjoin[ans[i][1]]==0){
//				if(lowcost[ans[i][1]-1]==-1||
//				(lowcost[ans[i][1]-1]>ans[i][2])){
//					lowcost[ans[i][1]-1]=ans[i][2];
//				}
//			}
//			if(isjoin[ans[i][1]]==1&&isjoin[ans[i][0]]==0){
//				if(lowcost[ans[i][0]-1]==-1||
//				(lowcost[ans[i][0]-1]>ans[i][2])){
//					lowcost[ans[i][0]-1]=ans[i][2];
//				}
//			}
		}
		min=1e9+1;
		for(i=1;i<=n;i++){
			if(isjoin[i]==0){
				if(lowcost[i-1]!=-1&&min>=lowcost[i-1]){
//					printf(""@@\n"");
					j=i;
					min=lowcost[i-1];
				}
			}
		}
		isjoin[j]=1;
//		printf(""j=%d\n"",j);
//		for(i=0;i<n;i++){
//			printf(""lowcost=%d\t"",lowcost[i]);
//		}
//		printf(""\n"");
	}
//	printf(""\n"");
	qsort(lowcost,n,sizeof(int),cmp);
	for(i=0;i<n;i++){
//		printf(""lowcost[i]=%d\t"",lowcost[i]);
		sum+=(ll)(i+1)*lowcost[i];
	}
//	printf(""\n"");
//	printf(""sum=%lld\n"",sum);
	if(c>=sum) mark=1;
	return;
}
int main()
{	
  	ll n,m,c,i,j,max=-1;
  	scanf(""%lld %lld %lld"",&n,&m,&c);
  	int arr[m][3];
  	for(i=0;i<m;i++){
  		scanf(""%d %d %d"",&arr[i][0],&arr[i][1],&arr[i][2]);
  		if(max<arr[i][2]){
  			max=arr[i][2];	
		}
	}
	int ans[m][3];
  	int isjoin[n+1],lowcost[n];
  	ll left=0,right=max,mid,t=max;
  	while(left<=right){
  		mid=(left+right)/2;
  		memset(isjoin,0,sizeof(isjoin));
	  	memset(lowcost,-1,sizeof(lowcost));
	  	lowcost[0]=0,mark=0;
	  	isjoin[1]=1; 
	  	for(i=0;i<m;i++){
	  		ans[i][0]=arr[i][0],ans[i][1]=arr[i][1];
	  		if(arr[i][2]<=mid){
	  			ans[i][2]=0;
			}
	  		else{
			  	ans[i][2]=arr[i][2];	
			}
		}
//		printf(""left=%lld,right=%lld\n"",left,right);
//		printf(""mid=%lld\n"",mid);
	  	check(isjoin,lowcost,n,m,c,ans);
		if(mark){
			t=mid;
			right=mid-1;
		}	
		else{
			left=mid+1;
		}
//		printf(""t=%lld\n"",t);
//		printf(""mark=%d\n"",mark);
	}
  	printf(""%lld"",t);
	return 0;
}"
8,D,C,61662078,2023-04-01 17:04:37,牛客20220304118,答案正确,"#include<stdio.h>
#include<stdlib.h>
#include<string.h>

#define ll long long
ll arr[100001][3];
ll ans[100001][3];
int p[40001]; 
int cmp(const void*a,const void*b){
	return ((ll*)a)[2]-((ll*)b)[2];
}

ll find(ll x){
	if(p[x]!=x) p[x]=find(p[x]);
	return p[x];
} 

int check(ll mid,ll n,ll m,ll c){
	ll i,j,num=1;
	ll a,b,sum=0;
	for(i=0;i<m;i++){
		a=find(ans[i][0]);
		b=find(ans[i][1]);
		if(a==b) continue;
		p[a]=p[b];
//		printf(""%lld "",ans[i][2]);
		sum+=ans[i][2]*(n-num);
//		printf(""sum=%lld "",n-num);
		num++;
		if(num==n){
			break;
		}
	}
//	printf(""\n"");
//	printf(""c=%lld,sum=%lld\n"",c,sum);
	return c>=sum;
}

int main()
{
	ll n,m,c,i,j;
	scanf(""%lld %lld %lld"",&n,&m,&c);
	for(i=0;i<m;i++){
		scanf(""%lld %lld %lld"",&arr[i][0],
		&arr[i][1],&arr[i][2]);
	}
	if(n==1){
		printf(""0"");
		return 0;
	}
	ll left=0,right=1e9,mid,t=1e9;
	while(left<=right){
		mid=(left+right)/2;
		for(i=0;i<m;i++){
			ans[i][0]=arr[i][0];
			ans[i][1]=arr[i][1];
			ans[i][2]=arr[i][2];
			if(arr[i][2]<=mid){
				ans[i][2]=0;
			}
		}
		qsort(ans,m,sizeof(ans[0]),cmp);
		for(i=1;i<=n;i++){
			p[i]=i;
		}
		if(check(mid,n,m,c)){
			t=mid;
			right=mid-1;
		}
		else{
			left=mid+1;
		}
//		printf(""mid=%lld\n"",mid);
	}
	printf(""%lld\n"",t);
	return 0;
}"
