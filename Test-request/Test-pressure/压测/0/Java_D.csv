,index,languageName,submissionId,submitTime,userName,statusMessage,code
0,D,Java,61789812,2023-04-07 19:14:34,可爱抱抱呀😥,答案正确,"//Java快读快写模板，不定时更新优化内容
//@可爱抱抱呀
import java.util.*;
import java.io.*;
import java.math.*;
import java.text.*;
public class Main{
    public static void main(String args[]) throws IOException{
        Read sc=new Read();
        int n=sc.nextInt();
        List<Integer> list=new ArrayList<>();
        list.add(-1);
        for(int i=0;i<n;i++){
            if(sc.nextInt()==1){
                list.add(i);
            }
        }
        list.add(n);
        long ans=0;
        for(int i=1;i<list.size()-1;i++){
            ans+=(long)(list.get(i)-list.get(i-1))*(list.get(i+1)-list.get(i));
        }
        sc.println(ans);
        //sc.print(0);
        sc.bw.flush();
        sc.bw.close();
    }
}
//记住看数字范围，需要开long吗，需要用BigInteger吗，需要手动处理字符串吗，复杂度数量级控制在1e7或者以下了吗
//开数组的数据范围最高不能超过1e7，数据范围再大就要用哈希表离散化了
//基本数据类型不能自定义sort排序，二维数组就可以了，顺序排序的时候是小减大，注意返回值应该是int
class Read{
    BufferedReader bf;
    StringTokenizer st;
    BufferedWriter bw;
    public Read(){
        bf=new BufferedReader(new InputStreamReader(System.in));
        st=new StringTokenizer("""");
        bw=new BufferedWriter(new OutputStreamWriter(System.out));
        //什么时候才能持续稳定ak力扣、AcWing呢？
        //什么时候才能ak cf的div2，div1呢？才能打div2不计rating呢？
        //什么时候才能ak  abc  不计rating呢？当然arc不计分更好
        //什么时候才能ak 牛客练习赛不计rating呢?
    }
    public String nextLine() throws IOException{
        return bf.readLine();
    }
    public String next() throws IOException{
        while(!st.hasMoreTokens()){
            st=new StringTokenizer(bf.readLine());
        }
        return st.nextToken();
    }
    public char nextChar() throws IOException{
        //确定下一个token只有一个字符的时候再用
        return next().charAt(0);
    }
    public int nextInt() throws IOException{
        return Integer.parseInt(next());
    }
    public long nextLong() throws IOException{
        return Long.parseLong(next());
    }
    public double nextDouble() throws IOException{
        return Double.parseDouble(next());
    }
    public float nextFloat() throws IOException{
        return Float.parseFloat(next());
    }
    public byte nextByte() throws IOException{
        return Byte.parseByte(next());
    }
    public short nextShort() throws IOException{
        return Short.parseShort(next());
    }
    public BigInteger nextBigInteger() throws IOException{
        return new BigInteger(next());
    }
    public void println(int a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(int a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(String a) throws IOException{
        bw.write(a);
        bw.newLine();
        return;
    }
    public void print(String a) throws IOException{
        bw.write(a);
        return;
    }
    public void println(long a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(long a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(double a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(double a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void print(BigInteger a) throws IOException{
        bw.write(a.toString());
        return;
    }
    public void print(char a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(char a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
}"
1,D,Java,61790020,2023-04-07 19:15:44,232132323,答案错误,"import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {

        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int index = 0;
            int front = -1;
            boolean flag = true;
            long ans = 0;
            for (int i = 0; i < n; i++) {
                int x = in.nextInt();
                if (x == 1){
                    if (flag) {
                        index = i;
                        flag = false;
                    }
                    else {
                        ans += (long) (i - index) * (index-front);
                        front = index;
                        index = i;
                    }
                }
            }
            ans += (long) (n - index) * (index-front);
            out.println(ans);
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }

    }
}"
2,D,Java,61790433,2023-04-07 19:18:04,232132323,答案错误,"import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {

        public void solve(int testNumber, InputReader in, PrintWriter out) {
            long n = in.nextLong();
            long index = 0;
            long front = -1;
            boolean flag = true;
            long ans = 0;
            for (int i = 0; i < n; i++) {
                long x = in.nextLong();
                if (x == 1){
                    if (flag) {
                        index = i;
                        flag = false;
                    }
                    else {
                        ans +=  (i - index) * (index-front);
                        front = index;
                        index = i;
                    }
                }
            }
            ans += (n - index) * (index-front);
            out.println(ans);
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }

    }
}"
3,D,Java,61791078,2023-04-07 19:22:25,xiaofeiwang,运行超时,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.nio.channels.AcceptPendingException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Queue;
import java.util.Scanner;
import java.util.Stack;

public class Main {
	public static void main(String[] args) throws IOException, ParseException {
		Scanner sc = new Scanner(System.in);

		int n = sc.nextInt();
		int ans = 0;
		int q[] = new int[n + 1]; // q数组存元素
		int S[] = new int[n + 1]; // S数组每个下标n ,存储q数组前n项的和
		for (int i = 1; i <= n; i++) {
			q[i] = sc.nextInt();
			S[i] += S[i - 1] + q[i];
			if (S[i] == 1) {
				ans++;
			}
		}

		for (int i = 1; i <= n; i++) {
			for (int j = i; j <= n; j++) {
				if ((S[j] - S[i]) == 1) {
					ans++;

				}
			}
		}
System.out.println(ans);
	}

}
"
4,D,Java,61791282,2023-04-07 19:23:40,迷你滨,答案错误,"import java.io.*;
import java.util.*;
import java.math.*;
//An apple a day

public class Main{
	static int maxn = 200005,n,m;
	static long INF = (long)1e18,ans = 0,mod = (int)1e9+7;
	static Scanner sc = new Scanner (System.in);
	static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st  =new StreamTokenizer(bf);
    static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));
    public static void main(String[]args) throws IOException{
    	int T = 1;
    	//T = Integer.parseInt(S());
        
    	while(T-->0) solve();
    	//while(st.nextToken() != st.TT_EOF) {
    		//n = (int)st.nval;solve();
    	//}
        pw.flush();
    }
    static final int I() throws IOException {
    	st.nextToken();
    	return (int)st.nval;
    }
    
    static String S() throws IOException{
    	String res = bf.readLine();
    	while(res.equals("""")) res = bf.readLine();
    	return res;
    }
    
    
    
    static void solve() throws IOException{
    	n=I();
    	int[]a = new int [n+5];
    	for(int i=1;i<=n;i++) a[i] = I();
    	int []l = new int [n+5],r = new int [n+5];
    	int cnt=0;
    	for(int i=1;i<=n;i++) {
    		if(a[i]==1) {
    			l[i]=cnt;
    			cnt=0;
    		}
    		else cnt++;
    	}
    	cnt=0;
    	for(int i=n;i>=1;i--) {
    		if(a[i]==1) {
    			r[i]=cnt;
    			cnt=0;
    		}
    		else cnt++;
    	}
    	for(int i=1;i<=n;i++)
    		if(a[i]==1) ans += (l[i]+1)*(r[i]+1);
    	pw.println(ans);
    }
}
"
5,D,Java,61791354,2023-04-07 19:24:12,232132323,答案正确,"import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {

        public void solve(int testNumber, InputReader in, PrintWriter out) {
            long n = in.nextLong();
            long index = 0;
            long front = -1;
            boolean flag = true;
            long ans = 0;
            for (int i = 0; i < n; i++) {
                long x = in.nextLong();
                if (x == 1){
                    if (flag) {
                        index = i;
                        flag = false;
                    }
                    else {
                        ans +=  (i - index) * (index-front);
                        front = index;
                        index = i;
                    }
                }
            }
            ans += (n - index) * (index-front);
            if (flag)
                out.println(0);
            else
                out.println(ans);
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }

    }
}"
6,D,Java,61791604,2023-04-07 19:25:58,迷你滨,答案正确,"import java.io.*;
import java.util.*;
import java.math.*;
//An apple a day

public class Main{
	static int maxn = 200005,n,m;
	static long INF = (long)1e18,ans = 0,mod = (int)1e9+7;
	static Scanner sc = new Scanner (System.in);
	static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st  =new StreamTokenizer(bf);
    static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));
    public static void main(String[]args) throws IOException{
    	int T = 1;
    	//T = Integer.parseInt(S());
        
    	while(T-->0) solve();
    	//while(st.nextToken() != st.TT_EOF) {
    		//n = (int)st.nval;solve();
    	//}
        pw.flush();
    }
    static final int I() throws IOException {
    	st.nextToken();
    	return (int)st.nval;
    }
    
    static String S() throws IOException{
    	String res = bf.readLine();
    	while(res.equals("""")) res = bf.readLine();
    	return res;
    }
    
    
    
    static void solve() throws IOException{
    	n=I();
    	int[]a = new int [n+5];
    	for(int i=1;i<=n;i++) a[i] = I();
    	long []l = new long [n+5],r = new long [n+5];
    	int cnt=0;
    	for(int i=1;i<=n;i++) {
    		if(a[i]==1) {
    			l[i]=cnt;
    			cnt=0;
    		}
    		else cnt++;
    	}
    	cnt=0;
    	for(int i=n;i>=1;i--) {
    		if(a[i]==1) {
    			r[i]=cnt;
    			cnt=0;
    		}
    		else cnt++;
    	}
    	for(int i=1;i<=n;i++)
    		if(a[i]==1) ans += (l[i]+1)*(r[i]+1);
    	pw.println(ans);
    }
}
"
7,D,Java,61791625,2023-04-07 19:26:09,凯撒Katharsis,答案错误,"import java.io.*;
import java.util.*;

public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

    public static int gcd(int a, int b) {
        return b > 0 ? gcd(b, a % b) : a;
    }

    public static void main(String[] args) throws Exception {
        int n = Integer.parseInt(br.readLine());

        String str[] = br.readLine().split("" "");

        int l = 0, r = 0;
        long ans = 0;
        boolean first = true;
        for(int i = 0; i < n; i ++ ) {
            int x = Integer.parseInt(str[i]);
            if(x == 1) {
                if(!first) ans += (l + 1) * 1L * (r + 1);
                first = false;
                l = r;
                r = 0;
            } else {
                r ++ ;
            }
        }

        ans += (l + 1) * 1L * (r + 1);

        bw.write(ans + ""\n"");
        bw.flush();
    }
}"
8,D,Java,61791654,2023-04-07 19:26:28,牛客815947679号,运行超时,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.nio.channels.AcceptPendingException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Queue;
import java.util.Scanner;
import java.util.Stack;

public class Main {
 public static void main(String[] args) throws IOException, ParseException {
  BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

  int n = Integer.parseInt(br.readLine());
  String[] temp = br.readLine().split("" "");
  int ans = 0;
  int q[] = new int[n + 1]; // q数组存元素
  int S[] = new int[n + 1]; // S数组每个下标n ,存储q数组前n项的和
  for (int i = 1; i <= n; i++) {
   q[i] = Integer.parseInt(temp[i - 1]);
   S[i] += S[i - 1] + q[i];
   if (S[i] == 1) {
    ans++;
   }
  }

  for (int i = 1; i <= n; i++) {
   for (int j = i; j <= n; j++) {
    if ((S[j] - S[i]) == 1) {
     ans++;
    }
   }
  }
  System.out.println(ans);
 }

}"
9,D,Java,61791707,2023-04-07 19:26:50,牛客815947679号,运行超时,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.nio.channels.AcceptPendingException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Queue;
import java.util.Scanner;
import java.util.Stack;

public class Main {
 public static void main(String[] args) throws IOException, ParseException {
  BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

  int n = Integer.parseInt(br.readLine());
  String[] temp = br.readLine().split("" "");
  int ans = 0;
  int q[] = new int[n + 1]; // q数组存元素
  int S[] = new int[n + 1]; // S数组每个下标n ,存储q数组前n项的和
  for (int i = 1; i <= n; i++) {
   q[i] = Integer.parseInt(temp[i - 1]);
   S[i] += S[i - 1] + q[i];
   if (S[i] == 1) {
    ans++;
   }
  }

  for (int i = 1; i <= n; i++) {
   for (int j = i; j <= n; j++) {
    if ((S[j] - S[i]) == 1) {
     ans++;
    }
   }
  }
  System.out.println(ans);
 }

}"
10,D,Java,61791762,2023-04-07 19:27:18,xiaofeiwang,运行超时,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.nio.channels.AcceptPendingException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Queue;
import java.util.Scanner;
import java.util.Stack;

public class Main {
 public static void main(String[] args) throws IOException, ParseException {
  BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

  int n = Integer.parseInt(br.readLine());
  String[] temp = br.readLine().split("" "");
  int ans = 0;
  int q[] = new int[n + 1]; // q数组存元素
  int S[] = new int[n + 1]; // S数组每个下标n ,存储q数组前n项的和
  for (int i = 1; i <= n; i++) {
   q[i] = Integer.parseInt(temp[i - 1]);
   S[i] += S[i - 1] + q[i];
   if (S[i] == 1) {
    ans++;
   }
  }

  for (int i = 1; i <= n; i++) {
   for (int j = i; j <= n; j++) {
    if ((S[j] - S[i]) == 1) {
     ans++;
    }
   }
  }
  System.out.println(ans);
 }

}"
11,D,Java,61791870,2023-04-07 19:28:05,牛客815947679号,运行超时,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.nio.channels.AcceptPendingException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Queue;
import java.util.Scanner;
import java.util.Stack;

public class Main {
 public static void main(String[] args) throws IOException, ParseException {
  BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

  int n = Integer.parseInt(br.readLine());
  String[] temp = br.readLine().split("" "");
  int ans = 0;
  int q[] = new int[n + 1]; // q数组存元素
  int S[] = new int[n + 1]; // S数组每个下标n ,存储q数组前n项的和
  for (int i = 1; i <= n; i++) {
   q[i] = Integer.parseInt(temp[i - 1]);
   S[i] += S[i - 1] + q[i];
   if (S[i] == 1) {
    ans++;
   }
  }

  for (int i = 1; i <= n; i++) {
   for (int j = i; j <= n; j++) {
    if ((S[j] - S[i]) == 1) {
     ans++;
    }
   }
  }
  System.out.println(ans);
 }

}"
12,D,Java,61792101,2023-04-07 19:29:35,北-北瓜,答案错误,"import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n= in.nextInt();
            int l=0;int r=0;
            long sum=0;
            for (int i = 0; i <n; i++) {
                int x= in.nextInt();
                if (x==1){
                    if (r == 0) {
                        l++;
                        r++;
                    }else {
                        sum+=l*r;
                        l=r;
                        r=1;
                    }
                } else if (r == 0) {
                    l++;
                }
                else r++;
            }
            sum+=l*r;
            System.out.println(sum);
        }
    }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;
        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}
"
13,D,Java,61792180,2023-04-07 19:30:05,凯撒Katharsis,答案错误,"import java.io.*;
import java.util.*;

public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

    public static int gcd(int a, int b) {
        return b > 0 ? gcd(b, a % b) : a;
    }

    public static void main(String[] args) throws Exception {
        int n = Integer.parseInt(br.readLine());

        String str[] = br.readLine().split("" "");

        long l = 0, r = 0;
        long ans = 0;
        boolean first = true;
        for(int i = 0; i < n; i ++ ) {
            int x = Integer.parseInt(str[i]);
            if(x == 1) {
                if(!first) ans += (l + 1) * 1L * (r + 1);
                first = false;
                l = r;
                r = 0;
            } else {
                r ++ ;
            }
        }

        ans += (l + 1) * 1L * (r + 1);

        bw.write(ans + ""\n"");
        bw.flush();
    }
}"
14,D,Java,61792435,2023-04-07 19:31:54,zzl064,答案错误,"import java.util.*;

public class Main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n + 1];
        for(int i = 0; i < n; ++i){
            a[i] = sc.nextInt();
        }
        long ans = 0;
        for(int i = 0, j = 0, k = 0, cnt = a[0], cnt2 = a[0]; i <  n; ++i){
            while(cnt < 1 && j + 1 <= n){
                cnt += a[++j];
            }
            while(cnt2 < 2 && k + 1 <= n){
                cnt2 += a[++k];
            }
            ans += k - j;
            cnt -= a[i];
//             System.out.println(j + ""  "" + k);
        }
        System.out.println(ans);
    }
}"
15,D,Java,61792478,2023-04-07 19:32:14,zzl064,答案正确,"import java.util.*;

public class Main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n + 1];
        for(int i = 0; i < n; ++i){
            a[i] = sc.nextInt();
        }
        long ans = 0;
        for(int i = 0, j = 0, k = 0, cnt = a[0], cnt2 = a[0]; i <  n; ++i){
            while(cnt < 1 && j + 1 <= n){
                cnt += a[++j];
            }
            while(cnt2 < 2 && k + 1 <= n){
                cnt2 += a[++k];
            }
            ans += k - j;
            cnt -= a[i];
            cnt2 -= a[i];
        }
        System.out.println(ans);
    }
}"
16,D,Java,61792598,2023-04-07 19:33:07,牛客765377204号,答案正确,"

import java.util.*;

public class Main {

    static Scanner in = new Scanner(System.in);
    static int[] dx = {1, -1, 0, 0};
    static int[] dy = {0, 0, -1, 1};
    static boolean[][] st;
    static int n, m;
    static char[][] grid;
    static int ans = 0;

    public static void dfs(int i, int j) {
        if (i < 0 || i >= n || j < 0 || j >= m || grid[i][j] == '#') return;
        if (grid[i][j] == '!') ans++;
        grid[i][j] = '#';
        for (int k = 0; k < 4; k++) {
            dfs(i + dx[k], j + dy[k]);
        }
    }

    public static void main(String[] args) {
        int n = in.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++)
            a[i] = in.nextInt();
        Stack<Integer> stack = new Stack<>();
        int[] left = new int[n];
        for (int i = 0; i < n; i++) {
            if (stack.isEmpty()) {
                if (a[i] == 0) {
                    stack.add(i);
                }
            }
            if (a[i] == 1) {
                left[i] = stack.isEmpty() ? i : stack.pop();
            }
        }
        int[] right = new int[n];
        stack.clear();
        for (int i = n - 1; i >= 0; i--) {
            if (stack.isEmpty()) {
                if (a[i] == 0)
                    stack.add(i);
            }
            if (a[i] == 1) {
                right[i] = stack.isEmpty() ? i : stack.pop();
            }
        }
        long ans = 0;
        for (int i = 0; i < n; i++) {
            if (a[i] == 1) {
                int l = i - left[i];
                int r = right[i] - i;
                ans+= (long) l *r;
                ans+=l+r;
                ans++;
            }
        }

        System.out.println(ans);
    }
}
"
17,D,Java,61792720,2023-04-07 19:34:11,北-北瓜,答案正确,"import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n= in.nextInt();
            long l=0;long r=0;
            long sum=0;
            for (int i = 0; i <n; i++) {
                int x= in.nextInt();
                if (x==1){
                    if (r == 0) {
                        l++;
                        r++;
                    }else {
                        sum+=l*r;
                        l=r;
                        r=1;
                    }
                } else if (r == 0) {
                    l++;
                }
                else r++;
            }
            sum+=l*r;
            System.out.println(sum);
        }
    }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;
        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}
"
18,D,Java,61792805,2023-04-07 19:34:49,牛客399999999999号,答案错误,"//package com.company;

import java.io.IOException;
import java.util.*;
import java.util.regex.Matcher;

public class Main
{
    static Scanner cin =new Scanner(System.in);

    public static void main(String[] args) throws IOException
    {
        int n=cin.nextInt();
        int a[] = new int[1000000+100];
        int b[] = new int[1000000+100];
        int c[] = new int[1000000+100];
        for(int i=1;i<=n;i++)
            a[i]=cin.nextInt();
        int now=1;
        for(int i=1;i<=n;i++)
        {
            if(a[i]==1)
            {
                b[i]=now;
                now=0;
            }
            now++;
        }
        now=1;
        for(int i=n;i>=1;i--)
        {
            if(a[i]==1) {
                c[i]=now;
                now=0;
            }
            now++;
        }
        long ans=0;
        for(int i=1;i<=n;i++)
        {
            if(a[i]==1)
            {
                ans+=b[i]*c[i];
            }
        }
        System.out.println(ans);
    }
}
class Pair implements Comparable<Pair>
{
    int x,y;
    Pair(int x,int y)
    {
        this.x=x;
        this.y=y;
    }
    @Override
    public int compareTo(Pair o) {
        return this.y - o.y;
    }
}"
19,D,Java,61792981,2023-04-07 19:36:10,牛客815947679号,答案错误,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.nio.channels.AcceptPendingException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Queue;
import java.util.Scanner;
import java.util.Stack;

public class Main {
 public static void main(String[] args) throws IOException, ParseException {
  BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
  int n = Integer.parseInt(br.readLine());
  String[] temp = br.readLine().split("" "");
  int[] num = new int[n];
  for (int i = 0; i < num.length; i++) {
   num[i] = Integer.parseInt(temp[i]);
  }
  System.out.print(subarraySum(num, 1));
 }

 public static int subarraySum(int[] nums, int k) {
  Map<Integer, Integer> preSumFreq = new HashMap<>();
  preSumFreq.put(0, 1);
  int preSum = 0;
  int count = 0;
  for (int num : nums) {
   preSum += num;
   if (preSumFreq.containsKey(preSum - k)) {
    count += preSumFreq.get(preSum - k);
   }
   preSumFreq.put(preSum, preSumFreq.getOrDefault(preSum, 0) + 1);
  }
  return count;
 }
}"
20,D,Java,61792996,2023-04-07 19:36:16,陈力明,答案错误,"


import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.lang.invoke.MethodHandles;
import java.util.*;



import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
 
public class Main{
 
private static final boolean String = false;
static int []f;
//static int []f2;
static int []size;
//static int []size2;
//static int []a=new int [500001];
static int max=Integer.MAX_VALUE;

static Set<Long>set=new HashSet<>();
static int k;
static long mod= 998244353;
static int res=0;
static int n,m;
static int x1,y1;
 static List<Integer>[]ans;
 static char [][]c;

static int[] dx = {-1, 0, 1, 0}, dy = {0, 1, 0, -1};
	public static void main(String []args) {
		MyScanner s=new MyScanner();
		PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
	
		int n=s.nextInt();
		int []f=new int [n];
		for(int i=0;i<n;i++)
			f[i]=s.nextInt();
		long []a=new long [n];
		if(f[0]==1)a[0]=1;
		for(int i=1;i<n;i++)
		{
			if(f[i]==1)
			{
				a[i]=a[i-1]+1;
				
			}
			else a[i]=0;
		}
		long []b=new long [n];
		if(f[n-1]==1)b[n-1]=1;
		for(int i=n-2;i>=0;i--)
		{
			if(f[i]==1)
			{
				b[i]=a[i+1]+1;
				
			}
			else b[i]=0;
		}
		long res=0;
		for(int i=0;i<n;i++)
		{
			if(f[i]==1)
			{
				res++;
				res+=a[i];
				res+=b[i];
				res+=a[i]*b[i];
			}
		}
		out.println(res);
	out.close();
	}
	public static void dfs(int x,int y,char [][]f,int [][]v)
	{
		v[x][y]=1;
		if(f[x][y]=='!')res++;
		for(int i=0;i<4;i++)
		{
			int x1=x+dx[i];
			int y1=y+dy[i];
			if(x1<0||x1>=f.length||y1<0||y1>=f[0].length||v[x1][y1]==1||f[x1][y1]=='#')continue;
			dfs(x1,y1,f,v);
		}
	}
	public static long shuwei(int i,int  mask,boolean limitnums,boolean isnum,char []c,long [][]dp)
	{
		if(i==c.length)
			return isnum?1:0;
					
	
	if(!limitnums&&isnum&&dp[i][mask]!=-1)
		return dp[i][mask];
	long res=0;
	if(!isnum)
	{
		res=shuwei(i+1,mask,false,false,c,dp);
	}
	int up=limitnums?c[i]-'0':9;
	for(int d=isnum?0:1;d<=up;++d)
	{
		 if((mask>>d&1)==0)
			 res+=shuwei(i+1,mask,limitnums&&d==up,true,c,dp);
	}
	if(!limitnums&&isnum)
		dp[i][mask]=res;
	return res;
}
	
     


	public static boolean is(char []c)
	{
		int l=0;
		int r=c.length-1;
		while(l<r)
		{
			if(c[l]!=c[r])return false;
			l++;r--;
		}
		return true;
	}
	public static void swap (int l,int r,int []f)
	{
		if(l>=f.length||r>=f.length)return;
		int tt=f[l];
		f[l]=f[r];
		f[r]=tt;
		
	}
	
public static void reverse(int []a)
{
	int l=0,r=a.length-1;
	while(l<r)
	{
		int t=a[l];
		a[l]=a[r];
		a[r]=t;
		l++;r--;
	}
}
	public static long sum (int x,long mod)
	{
		
	long sum=1;
		for(int i = 2; i * i <= x; ++i){
			long temp = 1;
			if(x % i == 0){
				long j = i;
				while(x % i == 0){
					temp += j;
					j *= i;
					x /= i;
				}
				sum = (sum * temp) % mod;
			}

	
	}
		if(x > 1) sum = (sum * (1 + x)) % mod;
		return sum;
	}
	  public  static long Mode(long a,  long b, long mode)
	  {
	  	 long sum = 1;
	  	a = a % mode;
	   
	  	while (b > 0) {
	  		if (b % 2 == 1)		//判断是否是奇数，是奇数的话将多出来的数事先乘如sum
	  			sum = (sum * a) % mode;
	   
	  		b /= 2;
	  		a = (a * a) % mode;// 不断的两两合并再取模，减小a和b的规模
	  	}
	  	return sum;
	  }
	public static long is(int mid,long []f,int d)
	{
		long ans=0;
		for(int i=0;i<d;i++)
		{
			
			int   k=i%mid;
			if(k>f.length-1)continue;
			ans+=f[f.length-k-1];
		}
		return ans;
	}
	
	public static boolean is(String a,String b)
	{
		for(int i=0;i<=b.length()-a.length();i++)
		{
			if(b.substring(i,i+a.length()).equals(a))
				return true;
		}
		return false;
		
	}
	
	
	  public static boolean is(int  n) {
		    if (n <= 3) {
		        return n > 1;
		    }
		    // 只有6x-1和6x+1的数才有可能是质数
		    if (n % 6 != 1 && n % 6 != 5) {
		        return false;
		    }
		    // 判断这些数能否被小于sqrt(n)的奇数整除
		    int sqrt = (int) Math.sqrt(n);
		    for (int i = 5; i <= sqrt; i += 6) {
		        if (n % i == 0 || n % (i + 2) == 0) {
		            return false;
		        }
		    }
		    return true;
		}



public static int find (int []father,int x) {
		if(x!=father[x])
			x=find(father,father[x]);
		return father[x];
	}
public static void union(int []father,int x,int y,int []size) {
	x=find(father,x);
	y=find(father,y);
	if(x==y)
		return ;
	if(size[x]<size[y]) {
		 int tem=x;
         x=y;
         y=tem;
	}
	father[y]=x;
	size[x]+=size[y];
return ;
}
		
					
public static void shufu(int []f) {
		for(int i=0;i<f.length;i++) {
			int k=(int)(Math.random()*(f.length));
			int t=f[k];
			
			f[k]=f[0];
			f[0]=t;
			
		}
	}
public static void shufu1(long []f) {
	for(int i=0;i<f.length;i++) {
		int k=(int)(Math.random()*(f.length));
		long t=f[k];
		f[k]=f[0];
		f[0]=t;
	}
}
public  static int  gcd(int x,int y) {
		return y==0?x:gcd(y,x%y);
	}
 
 
public  static int  lcm(int x,int y) {
		
		return x*y/gcd(x,y);
}
		
	
	
		
		
	
	
		
	
/*					
public static void buildertree(int k,int l,int r) {
		if(l==r)
		{
			f[k]=a[l];
			return ;
		}
		int m=l+r>>1;
		buildertree(k+k,l,m);
		buildertree(k+k+1,m+1,r);
		f[k]=	
	
	}
public static	void update(int u,int l,int r,int x,int c)
{
    if(l==x && r==x)
    {
        f[u]=c;
        return;
    }
    int mid=l+r>>1;
    if(x<=mid)update(u<<1,l,mid,x,c);
    else if(x>=mid+1)update(u<<1|1,mid+1,r,x,c);
   	f[u]=Math.max(f[u+u], f[u+u+1]);
}
	
public static int query(int k,int l,int r,int x,int y) {
		if(x==l&&y==r) {
			return f[k];
		}
		int m=l+r>>1;
		if(y<=m) {
			return query(k+k,l,m,x,y);
		}
		else if(x>m)return query(k+k+1,m+1,r,x,y);
		else  {
			int i=query(k+k,l,m,x,m),j=query(k+k+1,m+1,r,m+1,y);
		return Math.max(j, Math.max(i+j, i));
		
		}
	}
	
public static void calc(int k,int l,int r,int x,int z) {
 
			f[k]+=z;
			if(l==r) {
				return ;
			}
			int m=l+r>>1;
    		if(x<=m)
    			calc(k+k,l,m,x,z);
    		else calc(k+k+1,m+1,r,x,z);
			
			
		}
	
				
			
 
		*/
		
				
	
			
	
			
	
 
	public static class MyScanner {
	    BufferedReader br;
	    StringTokenizer st;
	 
	    public MyScanner() {
	      try {
	        final String USERDIR = System.getProperty(""user.dir"");
	        String cname = MethodHandles.lookup().lookupClass().getCanonicalName().replace("".MyScanner"", """");
	        cname = cname.lastIndexOf('.') > 0 ? cname.substring(cname.lastIndexOf('.') + 1) : cname;
	        final File fin = new File(USERDIR + ""/io/c"" + cname.substring(1,5) + ""/"" + cname + "".in"");
	        br = new BufferedReader(new InputStreamReader(fin.exists()
	            ? new FileInputStream(fin) : System.in));
	      } catch (Exception e) {
	        br = new BufferedReader(new InputStreamReader(System.in));
	      }
	    }
	 
	    public String next() {
	      try {
	        while (st == null || !st.hasMoreElements()) {
	          st = new StringTokenizer(br.readLine());
	        }
	        return st.nextToken();
	      } catch (Exception e) {
	        throw new RuntimeException(e);
	      }
	    }
	 
	    public int nextInt() {
	      return Integer.parseInt(next());
	    }
	 
	    public long nextLong() {
	      return Long.parseLong(next());
	    }
	  }
	
		}"
21,D,Java,61793191,2023-04-07 19:37:33,小怂很怂,答案错误,"
import java.io.*;

/**
 * @ClassName 孤独区间
 * @Description TODO
 * @Author 小怂很怂
 * @Date 2023/4/7 19:32
 * @Version 1.0
 **/
public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(br);
    static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));

    public static void main(String[] args) throws Exception {
        int n=nextInt();
        int []f=new int[n];
        int []b=new int[3];
        for (int i=0;i<n;i++){
            f[i]=nextInt();
            if (f[i]==0&&b[1]==0) b[0]=1;
            else if (f[i]==1) b[1]=1;
            else if (f[i]==0&&b[1]==1) b[2]=1;
        }
        if (b[1]==0) pw.println(0);
        else if (b[0] == 1 && b[2] == 1) pw.println(4);
        else if (b[0]==1||b[2]==1) pw.println(2);
        else pw.println(1);
        pw.flush();
    }

    public static int nextInt() throws Exception {//int型
        st.nextToken();
        return (int) st.nval;
    }

    public static long nextLong() throws Exception {//long型
        st.nextToken();
        return (long) st.nval;
    }
}
"
22,D,Java,61793328,2023-04-07 19:38:25,陈力明,答案正确,"


import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.lang.invoke.MethodHandles;
import java.util.*;



import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
 
public class Main{
 
private static final boolean String = false;
static int []f;
//static int []f2;
static int []size;
//static int []size2;
//static int []a=new int [500001];
static int max=Integer.MAX_VALUE;

static Set<Long>set=new HashSet<>();
static int k;
static long mod= 998244353;
static int res=0;
static int n,m;
static int x1,y1;
 static List<Integer>[]ans;
 static char [][]c;

static int[] dx = {-1, 0, 1, 0}, dy = {0, 1, 0, -1};
	public static void main(String []args) {
		MyScanner s=new MyScanner();
		PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
	
		int n=s.nextInt();
		int []f=new int [n];
		for(int i=0;i<n;i++)
			f[i]=s.nextInt();
		long []a=new long [n];
		if(f[0]==0)a[0]=1;
		for(int i=1;i<n;i++)
		{
			if(f[i]==0)
			{
				a[i]=a[i-1]+1;
				
			}
			else a[i]=0;
		}
		long []b=new long [n];
		if(f[n-1]==0)b[n-1]=1;
		for(int i=n-2;i>=0;i--)
		{
			if(f[i]==0)
			{
				b[i]=b[i+1]+1;
				
			}
			else b[i]=0;
		}
		long res=0;
		for(int i=0;i<n;i++)
		{
			if(f[i]==1)
			{
				res++;
                if(i>0)
				res+=a[i-1];
                if(i+1<n)
				res+=b[i+1];
                if(i>0&&i+1<n)
				res+=a[i-1]*b[i+1];
			}
		}
		out.println(res);
	out.close();
	}
	public static void dfs(int x,int y,char [][]f,int [][]v)
	{
		v[x][y]=1;
		if(f[x][y]=='!')res++;
		for(int i=0;i<4;i++)
		{
			int x1=x+dx[i];
			int y1=y+dy[i];
			if(x1<0||x1>=f.length||y1<0||y1>=f[0].length||v[x1][y1]==1||f[x1][y1]=='#')continue;
			dfs(x1,y1,f,v);
		}
	}
	public static long shuwei(int i,int  mask,boolean limitnums,boolean isnum,char []c,long [][]dp)
	{
		if(i==c.length)
			return isnum?1:0;
					
	
	if(!limitnums&&isnum&&dp[i][mask]!=-1)
		return dp[i][mask];
	long res=0;
	if(!isnum)
	{
		res=shuwei(i+1,mask,false,false,c,dp);
	}
	int up=limitnums?c[i]-'0':9;
	for(int d=isnum?0:1;d<=up;++d)
	{
		 if((mask>>d&1)==0)
			 res+=shuwei(i+1,mask,limitnums&&d==up,true,c,dp);
	}
	if(!limitnums&&isnum)
		dp[i][mask]=res;
	return res;
}
	
     


	public static boolean is(char []c)
	{
		int l=0;
		int r=c.length-1;
		while(l<r)
		{
			if(c[l]!=c[r])return false;
			l++;r--;
		}
		return true;
	}
	public static void swap (int l,int r,int []f)
	{
		if(l>=f.length||r>=f.length)return;
		int tt=f[l];
		f[l]=f[r];
		f[r]=tt;
		
	}
	
public static void reverse(int []a)
{
	int l=0,r=a.length-1;
	while(l<r)
	{
		int t=a[l];
		a[l]=a[r];
		a[r]=t;
		l++;r--;
	}
}
	public static long sum (int x,long mod)
	{
		
	long sum=1;
		for(int i = 2; i * i <= x; ++i){
			long temp = 1;
			if(x % i == 0){
				long j = i;
				while(x % i == 0){
					temp += j;
					j *= i;
					x /= i;
				}
				sum = (sum * temp) % mod;
			}

	
	}
		if(x > 1) sum = (sum * (1 + x)) % mod;
		return sum;
	}
	  public  static long Mode(long a,  long b, long mode)
	  {
	  	 long sum = 1;
	  	a = a % mode;
	   
	  	while (b > 0) {
	  		if (b % 2 == 1)		//判断是否是奇数，是奇数的话将多出来的数事先乘如sum
	  			sum = (sum * a) % mode;
	   
	  		b /= 2;
	  		a = (a * a) % mode;// 不断的两两合并再取模，减小a和b的规模
	  	}
	  	return sum;
	  }
	public static long is(int mid,long []f,int d)
	{
		long ans=0;
		for(int i=0;i<d;i++)
		{
			
			int   k=i%mid;
			if(k>f.length-1)continue;
			ans+=f[f.length-k-1];
		}
		return ans;
	}
	
	public static boolean is(String a,String b)
	{
		for(int i=0;i<=b.length()-a.length();i++)
		{
			if(b.substring(i,i+a.length()).equals(a))
				return true;
		}
		return false;
		
	}
	
	
	  public static boolean is(int  n) {
		    if (n <= 3) {
		        return n > 1;
		    }
		    // 只有6x-1和6x+1的数才有可能是质数
		    if (n % 6 != 1 && n % 6 != 5) {
		        return false;
		    }
		    // 判断这些数能否被小于sqrt(n)的奇数整除
		    int sqrt = (int) Math.sqrt(n);
		    for (int i = 5; i <= sqrt; i += 6) {
		        if (n % i == 0 || n % (i + 2) == 0) {
		            return false;
		        }
		    }
		    return true;
		}



public static int find (int []father,int x) {
		if(x!=father[x])
			x=find(father,father[x]);
		return father[x];
	}
public static void union(int []father,int x,int y,int []size) {
	x=find(father,x);
	y=find(father,y);
	if(x==y)
		return ;
	if(size[x]<size[y]) {
		 int tem=x;
         x=y;
         y=tem;
	}
	father[y]=x;
	size[x]+=size[y];
return ;
}
		
					
public static void shufu(int []f) {
		for(int i=0;i<f.length;i++) {
			int k=(int)(Math.random()*(f.length));
			int t=f[k];
			
			f[k]=f[0];
			f[0]=t;
			
		}
	}
public static void shufu1(long []f) {
	for(int i=0;i<f.length;i++) {
		int k=(int)(Math.random()*(f.length));
		long t=f[k];
		f[k]=f[0];
		f[0]=t;
	}
}
public  static int  gcd(int x,int y) {
		return y==0?x:gcd(y,x%y);
	}
 
 
public  static int  lcm(int x,int y) {
		
		return x*y/gcd(x,y);
}
		
	
	
		
		
	
	
		
	
/*					
public static void buildertree(int k,int l,int r) {
		if(l==r)
		{
			f[k]=a[l];
			return ;
		}
		int m=l+r>>1;
		buildertree(k+k,l,m);
		buildertree(k+k+1,m+1,r);
		f[k]=	
	
	}
public static	void update(int u,int l,int r,int x,int c)
{
    if(l==x && r==x)
    {
        f[u]=c;
        return;
    }
    int mid=l+r>>1;
    if(x<=mid)update(u<<1,l,mid,x,c);
    else if(x>=mid+1)update(u<<1|1,mid+1,r,x,c);
   	f[u]=Math.max(f[u+u], f[u+u+1]);
}
	
public static int query(int k,int l,int r,int x,int y) {
		if(x==l&&y==r) {
			return f[k];
		}
		int m=l+r>>1;
		if(y<=m) {
			return query(k+k,l,m,x,y);
		}
		else if(x>m)return query(k+k+1,m+1,r,x,y);
		else  {
			int i=query(k+k,l,m,x,m),j=query(k+k+1,m+1,r,m+1,y);
		return Math.max(j, Math.max(i+j, i));
		
		}
	}
	
public static void calc(int k,int l,int r,int x,int z) {
 
			f[k]+=z;
			if(l==r) {
				return ;
			}
			int m=l+r>>1;
    		if(x<=m)
    			calc(k+k,l,m,x,z);
    		else calc(k+k+1,m+1,r,x,z);
			
			
		}
	
				
			
 
		*/
		
				
	
			
	
			
	
 
	public static class MyScanner {
	    BufferedReader br;
	    StringTokenizer st;
	 
	    public MyScanner() {
	      try {
	        final String USERDIR = System.getProperty(""user.dir"");
	        String cname = MethodHandles.lookup().lookupClass().getCanonicalName().replace("".MyScanner"", """");
	        cname = cname.lastIndexOf('.') > 0 ? cname.substring(cname.lastIndexOf('.') + 1) : cname;
	        final File fin = new File(USERDIR + ""/io/c"" + cname.substring(1,5) + ""/"" + cname + "".in"");
	        br = new BufferedReader(new InputStreamReader(fin.exists()
	            ? new FileInputStream(fin) : System.in));
	      } catch (Exception e) {
	        br = new BufferedReader(new InputStreamReader(System.in));
	      }
	    }
	 
	    public String next() {
	      try {
	        while (st == null || !st.hasMoreElements()) {
	          st = new StringTokenizer(br.readLine());
	        }
	        return st.nextToken();
	      } catch (Exception e) {
	        throw new RuntimeException(e);
	      }
	    }
	 
	    public int nextInt() {
	      return Integer.parseInt(next());
	    }
	 
	    public long nextLong() {
	      return Long.parseLong(next());
	    }
	  }
	
		}"
23,D,Java,61793330,2023-04-07 19:38:25,牛客815947679号,答案错误,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.nio.channels.AcceptPendingException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Queue;
import java.util.Scanner;
import java.util.Stack;

public class Main {
 public static void main(String[] args) throws IOException, ParseException {
  BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
  int n = Integer.parseInt(br.readLine());
  String[] temp = br.readLine().split("" "");
  int[] num = new int[n];
  for (int i = 0; i < num.length; i++) {
   num[i] = Integer.parseInt(temp[i]);
  }
  System.out.println(subarraySum(num, 1));
 }

 public static int subarraySum(int[] nums, int k) {
  Map<Integer, Integer> preSumFreq = new HashMap<>();
  preSumFreq.put(0, 1);
  int preSum = 0;
  int count = 0;
  for (int num : nums) {
   preSum += num;
   if (preSumFreq.containsKey(preSum - k)) {
    count += preSumFreq.get(preSum - k);
   }
   preSumFreq.put(preSum, preSumFreq.getOrDefault(preSum, 0) + 1);
  }
  return count;
 }
}"
24,D,Java,61793332,2023-04-07 19:38:26,欧克z,答案错误,"
import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        long res = 0;
        for (int i = 0; i < n; i++) {
            if (a[i] == 0) {
                continue;
            }
            int l = i - 1, r = i + 1;
            int ll = 0, rr = 0;
            while (l >= 0 && a[l] == 0) {
                l++;
                ll++;
            }
            while (r < n && a[r] == 0) {
                r++;
                rr++;
            }
            res += (long) (ll + 1) * (rr + 1);
        }
        System.out.println(res);

    }

}

"
25,D,Java,61793469,2023-04-07 19:39:25,牛客399999999999号,答案正确,"//package com.company;

import java.io.IOException;
import java.util.*;

public class Main
{
    static Scanner cin =new Scanner(System.in);

    public static void main(String[] args) throws IOException
    {
        int n=cin.nextInt();
        int a[] = new int[1000000+100];
        long b[] = new long[1000000+100];
        long c[] = new long[1000000+100];
        for(int i=1;i<=n;i++)
            a[i]=cin.nextInt();
        long now=1;
        for(int i=1;i<=n;i++)
        {
            if(a[i]==1)
            {
                b[i]=now;
                now=0;
            }
            now++;
        }
        now=1;
        for(int i=n;i>=1;i--)
        {
            if(a[i]==1) {
                c[i]=now;
                now=0;
            }
            now++;
        }
        long ans=0;
        for(int i=1;i<=n;i++)
        {
            if(a[i]==1)
            {
                ans+=b[i]*c[i];
            }
        }
        System.out.println(ans);
    }
}
"
26,D,Java,61793482,2023-04-07 19:39:31,蜉蝣~,答案错误,"import javax.swing.event.MenuListener;
import java.util.*;
public class Main {
    static Scanner sc=new Scanner(System.in);
    public static void main(String[] args) {
        int n= sc.nextInt();
        int []num=new int[n];
        List<Integer> list=new ArrayList<>();
        for(int i=0;i<n;i++) {
            num[i]= sc.nextInt();
            if(num[i]==1)list.add(i);
        }
        int ans=0;
        for(int i=0;i<list.size();i++){
            int start=list.get(i);
            int end;
            if(i!=list.size()-1) end=list.get(i+1)-1;
            else end=n-1;
            ans+=end-start+1;
        }
        for(int i=0;i<list.size();i++){
            int end=list.get(i);
            int start=0;
            if(i!=0)start=list.get(i-1)-1;
            else start=0;
            ans+=end-start;
        }
        for(int i=0;i<list.size();i++){
            int start=0;
            if(i==0) start=0;
            else start=list.get(i-1)-1;
            int end=0;
            if(i==list.size()-1) end=n-1;
            else end=list.get(i+1)-1;
            if(start==list.get(i)||end==list.get(i)) continue;
            ans+=(list.get(i)-start)*(end-list.get(i));
        }
        System.out.println(ans);
    }
}"
27,D,Java,61793508,2023-04-07 19:39:41,牛客815947679号,答案错误,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.nio.channels.AcceptPendingException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Queue;
import java.util.Scanner;
import java.util.Stack;

public class Main {
 public static void main(String[] args) throws IOException, ParseException {
  BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
  int n = Integer.parseInt(br.readLine());
  String[] temp = br.readLine().split("" "");
  int[] num = new int[n];
  for (int i = 0; i < num.length; i++) {
   num[i] = Integer.parseInt(temp[i]);
  }
  System.out.println(subarraySum(num, 1));
 }

 public static int subarraySum(int[] nums, int k) {
  int l = nums.length;
  HashMap<Integer, Integer> map = new HashMap<>();
  int pre = 0, res = 0;

  map.put(0, 1);
  for (int i = 0; i < l; i++) {
   pre += nums[i];
   if (map.containsKey(pre - k)) {
    res += map.get(pre - k);
   }
   map.put(pre, map.getOrDefault(pre, 0) + 1);
  }
  return res;

 }
}"
28,D,Java,61793561,2023-04-07 19:40:05,牛客815947679号,答案错误,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.nio.channels.AcceptPendingException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Queue;
import java.util.Scanner;
import java.util.Stack;

public class Main {
 public static void main(String[] args) throws IOException, ParseException {
  BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
  int n = Integer.parseInt(br.readLine());
  String[] temp = br.readLine().split("" "");
  int[] num = new int[n];
  for (int i = 0; i < num.length; i++) {
   num[i] = Integer.parseInt(temp[i]);
  }
  System.out.println(subarraySum(num, 1));
 }

 public static int subarraySum(int[] nums, int k) {
  int l = nums.length;
  HashMap<Integer, Integer> map = new HashMap<>();
  int pre = 0, res = 0;

  map.put(0, 1);
  for (int i = 0; i < l; i++) {
   pre += nums[i];
   if (map.containsKey(pre - k)) {
    res += map.get(pre - k);
   }
   map.put(pre, map.getOrDefault(pre, 0) + 1);
  }
  return res;

 }
}"
29,D,Java,61793829,2023-04-07 19:41:55,xiaofeiwang,答案错误,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.nio.channels.AcceptPendingException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Queue;
import java.util.Scanner;
import java.util.Stack;

public class Main {
	public static void main(String[] args) throws IOException, ParseException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int n = Integer.parseInt(br.readLine());
		String[] temp = br.readLine().split("" "");
		int[] num = new int[n];
		for (int i = 0; i < num.length; i++) {
			num[i] = Integer.parseInt(temp[i]);
		}
		System.out.println(subarraySum(num, 1));
	}

	public static int subarraySum(int[] nums, int k) {
		int l = nums.length;
		HashMap<Integer, Integer> map = new HashMap<>();
		int pre = 0, res = 0;

		map.put(0, 1);
		for (int i = 0; i < l; i++) {
			pre += nums[i];
			if (map.containsKey(pre - k)) {
				res += map.get(pre - k);
			}
			map.put(pre, map.getOrDefault(pre, 0) + 1);
		}
		return res;

	}
}
"
30,D,Java,61793924,2023-04-07 19:42:33,悠然小白,答案错误,"import java.util.*;
import java.io.*;

public class Main {

    public static void main(String[] args) {

        Scanner in = new Scanner(new BufferedReader(new InputStreamReader(System.in)));
        PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));

        long n = in.nextLong();
        
        int[] nums = new int[(int)n];
        for (int i = 0; i < n; i++) {
            nums[i] = in.nextInt();
        }
        
        long ans = 0;
        long[] nums1 = {0, 1};
        
        for (int i = 0; i < n; i++) {
            
            if (nums[i] == 0) {
                nums1[1]++;
            }
            
            if (nums[i] == 1 || i == nums.length - 1) {
                ans += nums1[0] * nums1[1];
                nums1[0] = nums1[1];
                nums1[1] = 1;
            }
        }

        out.println(ans);


        out.flush();
    }

}
"
31,D,Java,61794113,2023-04-07 19:44:07,准备进厂的托尼很喜欢溜溜球,答案错误,"import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;

public class Main {

	private static boolean is_one;
	private static int n, ans;
	private static String[] arrTemp;
	private static final int N = 1000010;
	private static int[] q = new int[N];
	private static final BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
	private static final BufferedWriter out = new BufferedWriter(new OutputStreamWriter(System.out));

	public static void main(String[] args) throws IOException {

		n = Integer.parseInt(in.readLine());
		ans = n;

		arrTemp = in.readLine().split("" "");
		for (int i = 0; i < n; i++) {
			q[i] = Integer.parseInt(arrTemp[i]);
		}

		for (int i = n - 1; i >= 0; i--) {
			if (is_one && q[i] == 0) {
				ans++;
			}
			if (q[i] == 1) {
				is_one = true;
			}
		}
		
		out.write(ans+"""");

		in.close();
		out.close();
	}

}
"
32,D,Java,61794175,2023-04-07 19:44:36,牛客815947679号,答案错误,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.nio.channels.AcceptPendingException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Queue;
import java.util.Scanner;
import java.util.Stack;

public class Main {
 public static void main(String[] args) throws IOException, ParseException {
  BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
  int n = Integer.parseInt(br.readLine());
  String[] temp = br.readLine().split("" "");
  int[] num = new int[n];
  for (int i = 0; i < num.length; i++) {
   num[i] = Integer.parseInt(temp[i]);
  }
  System.out.println(subarraySum(num, 1));
 }

 public static int subarraySum(int[] nums, int k) {
  int n = nums.length, ans = 0;
  int[] sum = new int[n + 10];
  for (int i = 1; i <= n; i++)
   sum[i] = sum[i - 1] + nums[i - 1];
  Map<Integer, Integer> map = new HashMap<>();
  map.put(0, 1);
  for (int i = 1; i <= n; i++) {
   int t = sum[i], d = t - k;
   ans += map.getOrDefault(d, 0);
   map.put(t, map.getOrDefault(t, 0) + 1);
  }
  return ans;
 }
}"
33,D,Java,61794297,2023-04-07 19:45:30,RDeAmor,答案错误,"import java.util.*;

public class Main {
    public static void main(String args[]) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] nums = new int[n];
        for(int i = 0;i <n; i++) nums[i] = in.nextInt();
        //区间只包含0和1
        int ans = 0;
        for(int i = 0; i < n; i++) {
            if(nums[i] == 1) {
                ans += func(nums, i);
            }
        }
        System.out.println(ans);
    }
    public static int func(int[] nums, int pos) {
        int left = 0, right = nums.length - 1;
        int pl = pos - 1, pr = pos + 1;
        while(pr <= right && nums[pr] == '0') pr++;
        while(pl >= left && nums[pl] == '0') pl--;
        return (pr - pos) * (pos - pl);
    }
}"
34,D,Java,61794510,2023-04-07 19:47:10,牛客418895276号,答案错误,"import java.util.Scanner;

// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        // 注意 hasNext 和 hasNextLine 的区别
        
            int n = in.nextInt();
            int[] num = new int[n];
            int[] pre = new int[n];
            int[] suf = new int[n];
        int cnt0=0;
        int last1 = 0;
        for(int i=0;i<n;i++) 
        {
            num[i]=in.nextInt();
            if(num[i]==1){
                pre[i] = i-last1;
                last1=i;
            }
        }
        last1 = n-1;
        for(int i=n-1;i>=0;i--) 
        {
            if(num[i]==1){
                suf[i] = last1-i;
                last1=i;
            }
        }
        int ans=0;
        for(int i=0;i<n;i++){
            if(num[i]==1)
            ans += pre[i] * suf[i] + pre[i] + suf[i]+1;
        }
        System.out.println(ans);
            
                
    }
}"
35,D,Java,61794667,2023-04-07 19:48:13,Eunoiay,答案正确,"import static java.lang.Math.*;
import java.util.*;
import java.io.*;

public class Main {
    private static FastReader sc = new FastReader();
    private static PrintWriter pw = new PrintWriter(System.out);
    
    static final int N = (int)1e6 + 10;
    static int[] a = new int[N];
    static Info[] p = new Info[N];
    
    public static void main(String[] args) throws IOException {
        solve();
        pw.close();
    }
    
    public static void solve() {
        int n = sc.nextInt();
        
        for (int i = 1; i <= n; i++) a[i] = sc.nextInt();
        
        a[n + 1] = 1;
        
        int k = 0, l = 0;
        for (int i = 1; i <= n + 1; i++) {
            if (a[i] == 0) l++;
            else {
                p[k++] = new Info(i, l, 0);
                if (k - 2 >= 0) p[k - 2].r = l;
                l = 0;
            }
        }

        long res = 0;
        for (int i = 0; i < k - 1; i++) {
            int left = p[i].l + 1;
            int right = p[i].r + 1;

            res += 1L * left * right;
        }
        
        pw.println(res);
    }
    
    public static class Info {
        int k, l, r;
        Info(int k, int l, int r) {
            this.k = k;
            this.l = l;
            this.r = r;
        }
    }
    
    private static class FastReader {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st;
        
        String next() {
            while (st == null || !st.hasMoreElements()) {
                try { 
                    st = new StringTokenizer(br.readLine()); 
                    
                } catch (IOException e) {
                    e.printStackTrace(); 
                }
            }
            return st.nextToken();
        }
        
        int nextInt() {
            return Integer.parseInt(next());
        }
        
        long nextLong() {
            return Long.parseLong(next());
        }
        
        double nextDouble() {
            return Double.parseDouble(next());
        }
        
        String nextLine() {
            String line = null;
            try {
                line = br.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            
            return line;
        }
        
        boolean hasNext() {
            if (st == null || !st.hasMoreElements()) {
                try {
                    String in = br.readLine();
                    if (in == null) return false;
                    st = new StringTokenizer(in);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            return true;
        }
    }
}"
36,D,Java,61794701,2023-04-07 19:48:32,人工智能3212卢明涛,答案正确,"import java.util.LinkedList;
import java.util.Queue;
import java.io.*;
import java.util.*;
import java.math.*;
public class Main {
    static InputStream inputStream = System.in;
    static OutputStream outputStream = System.out;
    static InputReader in = new InputReader(inputStream);
    static PrintWriter out = new PrintWriter(outputStream);
    public static void main(String[] args) {
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {

        static int yanx[] = new int[30];
        static int yany[] = new int[30];

        static int yanname[] = new int[30];
        static int yanwei[][] = new int[30][6];
        static int map[][] = new int[1001][1001];
        int huo[][] = new int[1001][1001];
        static int shao[][] = new int[1001][1001];

        int sum = 1;
        int newdi = 1;

        static int n = 0;
        static int m = 0;
        static int yan = 0;

        static int jue = 0;



        static void dfs(int x,int y){

                if (x+1<=n && shao[x+1][y] == 0){
                    shao[x+1][y]++;
                    dfs(x+1,y);
                }
                if (x-1>=1 && shao[x-1][y]==0){
                    shao[x-1][y]=1;
                    dfs(x-1,y);
                }
                if (y+1<=m && shao[x][y+1]==0){
                    shao[x][y+1]=1;
                    dfs(x,y+1);
                }
                if (y-1>=1 && shao[x][y-1]==0){
                    shao[x][y-1]=1;
                    dfs(x,y-1);
                }
        }
        LinkedList<Integer> dep = new LinkedList<>();
        boolean[]vis;

        public void solve(int testNumber, InputReader in, PrintWriter out) {
//            int sum = 0;
             int n = in.nextInt();
             int map[]= new int[n+1];
             long sum = 0;
             int zero = 0;
             int one[][] = new int[n+1][3];
             int one1 = 0;
             for (int i = 1; i <= n; i++) {
                 map[i] =in.nextInt();
                 if (map[i]==1){
                     one1++;
                     if (one1==1){
                         one[one1][1] = zero;
                     }
                     else {
                         one[one1-1][2] = zero;
                         one[one1][1] = zero;
                     }
                     zero=0;
                 }
                 else {
                     zero++;
                 }
             }
             one[one1][2] = zero;


             for (int i=1;i<=one1;i++){
                sum = sum + one[i][1]+one[i][2]+ (long) one[i][1] *one[i][2];
             }
             sum = sum + one1;
            System.out.println(sum);
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        boolean hasNext() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e) {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }

    }
}
"
37,D,Java,61795006,2023-04-07 19:50:33,小怂很怂,答案错误,"
import java.io.*;
import java.util.LinkedList;
import java.util.Queue;

/**
 * @ClassName 孤独区间
 * @Description TODO
 * @Author 小怂很怂
 * @Date 2023/4/7 19:32
 * @Version 1.0
 **/
public class Main{
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(br);
    static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));

    public static void main(String[] args) throws Exception {
        int n=nextInt();
        int []f=new int[n];
        int a=0,b=0,c=0,d=0;
        for (int i=0;i<n;i++){
            f[i]=nextInt();
            if (f[i]==1) d=1;
        }

        for (int i=1;i<n-1;i++){
            if (f[i]==1&&f[i-1]==0&&f[i+1]==0){
                a=1;
                break;
            }
        }
        for (int i=1;i<n;i++){
            if (f[i]==1&&f[i-1]==0){
                b=1;
                break;
            }
        }
        for (int i=0;i<n-1;i++){
            if (f[i]==1&&f[i+1]==0){
                c=1;
                break;
            }
        }
        if (d==0) pw.println(0);
        else if (a==1) pw.println(4);
        else if (b==1&&c==1) pw.println(3);
        else if (b==1||c==1) pw.println(2);
        else pw.println(1);
        pw.flush();
    }

    public static int nextInt() throws Exception {//int型
        st.nextToken();
        return (int) st.nval;
    }

    public static long nextLong() throws Exception {//long型
        st.nextToken();
        return (long) st.nval;
    }
}
"
38,D,Java,61795034,2023-04-07 19:50:45,牛客815947679号,答案错误,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.nio.channels.AcceptPendingException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Queue;
import java.util.Scanner;
import java.util.Stack;

public class Main {
 public static void main(String[] args) throws IOException, ParseException {
  BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
  int n = Integer.parseInt(br.readLine());
  String[] temp = br.readLine().split("" "");
  int[] num = new int[n];
  for (int i = 0; i < num.length; i++) {
   num[i] = Integer.parseInt(temp[i]);
  }
  System.out.println(subarraySum(num, 1));
 }

 public static int subarraySum(int[] nums, int k) {
  int n = nums.length, ans = 0;
  int[] sum = new int[n + 10];
  for (int i = 1; i <= n; i++)
   sum[i] = sum[i - 1] + nums[i - 1];
  Map<Integer, Integer> map = new HashMap<>();
  map.put(0, 1);
  for (int i = 1; i <= n; i++) {
   int t = sum[i], d = t - k;
   ans += map.getOrDefault(d, 0);
   map.put(t, map.getOrDefault(t, 0) + 1);
  }
  return ans;
 }
}"
39,D,Java,61795212,2023-04-07 19:52:05,牛客418895276号,答案错误,"import java.util.Scanner;

// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        // 注意 hasNext 和 hasNextLine 的区别
        
            int n = in.nextInt();
            int[] num = new int[n];
            int[] pre = new int[n];
            int[] suf = new int[n];
        int cnt0=0;
        int last1 = 0;
        for(int i=0;i<n;i++) 
        {
            num[i]=in.nextInt();
            if(num[i]==1){
                pre[i] = i-last1;
                last1=i+1;
            }
        }
        last1 = n-1;
        for(int i=n-1;i>=0;i--) 
        {
            if(num[i]==1){
                suf[i] = last1-i;
                last1=i-1;
            }
        }
        int ans=0;
        for(int i=0;i<n;i++){
            
            if(num[i]==1){
                //System.out.println(pre[i] +""-""+suf[i]);
                ans += pre[i] * suf[i] + pre[i] + suf[i]+1;
            }
            
        }
        System.out.println(ans);
            
                
    }
}"
40,D,Java,61795293,2023-04-07 19:52:44,RDeAmor,答案错误,"import java.util.*;

public class Main {
    public static void main(String args[]) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] nums = new int[n];
        for(int i = 0;i <n; i++) nums[i] = in.nextInt();
        //区间只包含0和1
        int ans = 0;
        for(int i = 0; i < n; i++) {
            if(nums[i] == 1) {
                ans += func(nums, i);
            }
        }
        System.out.println(ans);
    }
    public static int func(int[] nums, int pos) {
        int left = 0, right = nums.length - 1;
        int pl = pos - 1, pr = pos + 1;
        while(pr <= right && nums[pr] == 0) pr++;
        while(pl >= left && nums[pl] == 0) pl--;
        return (pr - pos) * (pos - pl);
    }
}"
41,D,Java,61795476,2023-04-07 19:53:58,凯撒Katharsis,答案正确,"import java.io.*;
import java.util.*;

public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

    public static int gcd(int a, int b) {
        return b > 0 ? gcd(b, a % b) : a;
    }

    public static void main(String[] args) throws Exception {
        int n = Integer.parseInt(br.readLine());

        String str[] = br.readLine().split("" "");

        long l = 0, r = 0;
        long ans = 0;
        boolean first = true;
        for(int i = 0; i < n; i ++ ) {
            int x = Integer.parseInt(str[i]);
            if(x == 1) {
                if(!first) ans += (l + 1) * 1L * (r + 1);
                first = false;
                l = r;
                r = 0;
            } else {
                r ++ ;
            }
        }

        if(!first) ans += (l + 1) * 1L * (r + 1);

        bw.write(ans + ""\n"");
        bw.flush();
    }
}"
42,D,Java,61795503,2023-04-07 19:54:06,牛客418895276号,答案正确,"import java.util.Scanner;

// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        // 注意 hasNext 和 hasNextLine 的区别
        
            int n = in.nextInt();
            int[] num = new int[n];
            int[] pre = new int[n];
            int[] suf = new int[n];
        int cnt0=0;
        int last1 = 0;
        for(int i=0;i<n;i++) 
        {
            num[i]=in.nextInt();
            if(num[i]==1){
                pre[i] = i-last1;
                last1=i+1;
            }
        }
        last1 = n-1;
        for(int i=n-1;i>=0;i--) 
        {
            if(num[i]==1){
                suf[i] = last1-i;
                last1=i-1;
            }
        }
        long ans=0;
        for(int i=0;i<n;i++){
            
            if(num[i]==1){
                //System.out.println(pre[i] +""-""+suf[i]);
                ans += (long)pre[i] * suf[i] + (long)pre[i] + suf[i]+1;
            }
            
        }
        System.out.println(ans);
            
                
    }
}"
43,D,Java,61795588,2023-04-07 19:54:45,wkkwmm,答案正确,"


import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
    	
        public void solve(int testNumber, InputReader in, PrintWriter out) {           
         int n=in.nextInt();
         long sum=0;
         int a[]=new int[n];
         int n1=0,n2=0,f1=0;
         for(int i=0;i<n;i++) {
        	 a[i]=in.nextInt();
        	 if(a[i]==0) {
        		 if(f1==0) {
        			 n1++;
        		 }
        		 else {
        			 sum+=n1+1;
        			 n2++;
        		 }
        	 }
        	 else {
        		 if(f1==0) {
        			 f1=1;
        			 sum+=n1+1;
        		 }
        		 else {
        			 n1=n2;
        			 n2=0;
        			 sum+=n1+1;
        		 }
        	 }
         }
         out.println(sum);
        }
    }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
44,D,Java,61795809,2023-04-07 19:56:26,人工智能3211江海洋,答案错误,"import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream){};
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
//        out.flush();
        out.close();
    }

    static class TaskA {

        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int[] a = new int[n+1];
            for (int i = 1; i <= n; i++) {
                a[i] = in.nextInt();
            }
            long l = 0,r = 0,id = -1;
            long ans = 0;
            for (int i = 1; i <= n; i++) {
                if(a[i]==0){
                    if(id==-1)
                        l++;
                    else
                        r++;
                }
                else {
                    ans++;
                    if(id==-1) {
                        id=1;
                    }
                    else {
//                        System.out.println(l+"" ""+r);
                        ans += l + r + (l * r);
                        l = r;
                        r = 0;
                    }
                }
            }
//            System.out.println(l+"" ""+r);
            ans+=l+r+(l*r);
            out.println(ans);





        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        boolean hasNext() {
            while (tokenizer == null || !tokenizer.hasMoreElements()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e) {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }

    }
}
"
45,D,Java,61795860,2023-04-07 19:56:53,henuyzf,运行超时,"import java.util.*;

// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        // 注意 hasNext 和 hasNextLine 的区别
        int n = in.nextInt() ;
        int[] x = new int[n];
        int[] sum = new int[n+1];
        for(int i = 0 ; i < n;i++){
            x[i] = in.nextInt() ;
        }
        //
        sum[1] = x[0] ;
        for(int i =2 ; i <=n;i++){
            sum[i] = sum[i-1] + x[i-1] ;
        }
        //
       int count = 0;
       HashMap<Integer,Integer> map = new HashMap<>() ;
        map.put(0,1);
//         for(int i = 1 ; i <= n ;i++){
//             map.put(sum[i],map.getOrDefault(sum[i],0)+1);
//         }
        //
//          for(Map.Entry<Integer,Integer> entry : map.entrySet()){
//             if (entry.getValue() > 1)
//             {
//                 count += entry.getValue() * (entry.getValue()-1) / 2 ;
//             }
//          n
        for (int i = 1; i<= n;i++)
        {
            if (map.containsKey(1-sum[i]))
               count = count + map.get(1-sum[i]) ;
            // int value = map.get(sum[i]);
            map.put(sum[i] ,map.getOrDefault(sum[i],0)+1);
        
        }
//         for(int i = 1 ; i <= n;i++){
//             if (map.containsKey())
//         }
        System.out.print(count);
    }
}"
46,D,Java,61795910,2023-04-07 19:57:14,准备进厂的托尼很喜欢溜溜球,答案错误,"import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;

public class Main {

	private static boolean is_one;
	private static int n, ans;
	private static String[] arrTemp;
	private static final int N = 1000010;
	private static int[] q = new int[N];
	private static int[] left_zero = new int[N];
	private static int[] right_zero = new int[N];
	private static final BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
	private static final BufferedWriter out = new BufferedWriter(new OutputStreamWriter(System.out));

	public static void main(String[] args) throws IOException {

		n = Integer.parseInt(in.readLine());

		arrTemp = in.readLine().split("" "");
		for (int i = 0; i < n; i++) {
			q[i] = Integer.parseInt(arrTemp[i]);
		}

		for (int i = 0; i < n; i++) {
			if (q[i] == 1) {
				is_one = true;
				ans++;
			} else if (is_one && q[i] == 0)
				ans++;
		}

		is_one = false;

		for (int i = n - 1; i >= 0; i--) {
			if (is_one && q[i] == 0) {
				ans++;
			}
			if (q[i] == 1) {
				is_one = true;
			}
		}

		int zero = 0;
		for (int i = 0; i < n; i++) { // 左边0
			if (q[i] == 0)
				zero++;
			else {
				left_zero[i] = zero;
				zero = 0;
			}
		}

		zero = 0;
		for (int i = n - 1; i > 0; i--) {
			if (q[i] == 0)
				zero++;
			else {
				right_zero[i] = zero;
				zero = 0;
			}
		}

		for (int i = 0; i < n; i++) {
			ans += (left_zero[i] * right_zero[i]);
		}

		out.write(ans + """");

		in.close();
		out.close();
	}

}
"
47,D,Java,61795988,2023-04-07 19:57:51,henuyzf,答案错误,"import java.util.*;

// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        // 注意 hasNext 和 hasNextLine 的区别
        int n = in.nextInt() ;
        int[] x = new int[n];
        int[] sum = new int[n+1];
        for(int i = 0 ; i < n;i++){
            x[i] = in.nextInt() ;
        }
        //
        sum[1] = x[0] ;
        for(int i =2 ; i <=n;i++){
            sum[i] = sum[i-1] + x[i-1] ;
        }
        //
       int count = 0;
       HashMap<Integer,Integer> map = new HashMap<>() ;
        map.put(0,1);
//         for(int i = 1 ; i <= n ;i++){
//             map.put(sum[i],map.getOrDefault(sum[i],0)+1);
//         }
        //
//          for(Map.Entry<Integer,Integer> entry : map.entrySet()){
//             if (entry.getValue() > 1)
//             {
//                 count += entry.getValue() * (entry.getValue()-1) / 2 ;
//             }
//          n
        for (int i = 1; i<= n;i++)
        {
            if (map.containsKey(1-sum[i]))
               count = count + map.get(1-sum[i]) ;
            else
            map.put(sum[i] ,map.getOrDefault(sum[i],0)+1);
        
        }
        System.out.print(count);
    }
}"
48,D,Java,61796080,2023-04-07 19:58:31,henuyzf,答案错误,"import java.util.*;

// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        // 注意 hasNext 和 hasNextLine 的区别
        int n = in.nextInt() ;
        int[] x = new int[n];
        int[] sum = new int[n+1];
        for(int i = 0 ; i < n;i++){
            x[i] = in.nextInt() ;
        }
        //
        sum[1] = x[0] ;
        for(int i =2 ; i <=n;i++){
            sum[i] = sum[i-1] + x[i-1] ;
        }
        //
       long  count = 0;
       HashMap<Integer,Integer> map = new HashMap<>() ;
        map.put(0,1);
//         for(int i = 1 ; i <= n ;i++){
//             map.put(sum[i],map.getOrDefault(sum[i],0)+1);
//         }
        //
//          for(Map.Entry<Integer,Integer> entry : map.entrySet()){
//             if (entry.getValue() > 1)
//             {
//                 count += entry.getValue() * (entry.getValue()-1) / 2 ;
//             }
//          n
        for (int i = 1; i<= n;i++)
        {
            if (map.containsKey(1-sum[i]))
               count = count + map.get(1-sum[i]) ;
            map.put(sum[i] ,map.getOrDefault(sum[i],0)+1);
        
        }
        System.out.print(count);
    }
}"
49,D,Java,61796124,2023-04-07 19:58:49,蜉蝣~,答案错误,"
import java.util.*;
public class Main {
    static Scanner sc=new Scanner(System.in);
    public static void main(String[] args) {
        int n= sc.nextInt();
        int []num=new int[n];
        List<Integer> list=new ArrayList<>();
        for(int i=0;i<n;i++) {
            num[i]= sc.nextInt();
            if(num[i]==1)list.add(i);
        }
        int ans=0;
        for(int i=0;i<list.size();i++){
            int start=list.get(i);
            int end;
            if(i!=list.size()-1) end=list.get(i+1)-1;
            else end=n-1;
            ans+=end-start+1;
        }
        for(int i=0;i<list.size();i++){
            int end=list.get(i);
            int start=0;
            if(i!=0)start=list.get(i-1)+1;
            else start=0;
            ans+=end-start;
        }
        for(int i=0;i<list.size();i++){
            int start=0;
            if(i==0) start=0;
            else start=list.get(i-1)+1;
            int end=0;
            if(i==list.size()-1) end=n-1;
            else end=list.get(i+1)-1;
            if(start==list.get(i)||end==list.get(i)) continue;
            ans+=(list.get(i)-start)*(end-list.get(i));
        }
        System.out.println(ans);
    }
}"
50,D,Java,61796141,2023-04-07 19:59:00,rookie1号,答案错误,"
import java.io.*;
import java.math.*;
import java.util.*;

public class Main {
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
	static int dx[]= {-1,0,1, 0};
	static int dy[]= {0 ,1,0,-1};
    public static void main(String[] args) throws IOException {
        //int T=in.nextInt();
        int T=1;
        while(T>0){
            //String[] strs1 = re.readLine().split("" "");
            //int n=Integer.parseInt(strs1[0]);
            //String s=re.readLine();
            //char arr[]=s.toCharArray();

            //long[][] p = new long[n][2];//对 long 二维数组排序
            //Arrays.sort(p, (a, b) -> a[0] <= b[0] ? -1 : 1);
            //Set<Integer>set=new HashSet<>();
            //Map<Long,Integer>map=new HashMap<>();
            //Map<Integer,List<Integer>>map=new HashMap<>();
            //TreeSet<Integer> set = new TreeSet<>();
            int n=in.nextInt();
            int arr[]=new int [n];
            long l=0,mid=0,r=0;
            int t=0;
            long res=0;
            for(int i=0;i<n;i++){
                arr[i]=in.nextInt();
            }

            for(int i=0;i<n;i++){
                if(arr[i]==1){
                    t++;
                    if(t==1)mid=i;
                }
                if(t==2){
                    r=i;
                    t=1;
                    //out.println(i+"" ""+l+"" ""+mid+"" ""+r);
                    res+=(mid-l+1)*(r-mid);
                    l=mid;
                }
            }
            if(arr[n-1]==1)r=n-1;
            else r=n;
            //out.println(r+"" ""+l+"" ""+mid+"" ""+r);
            res+=(mid-l+1)*(r-mid);
            out.println(res);
            
            
            



            
            T--;
        }
        out.flush();
        out.close();

    }
    static class Node{
        int x,y,dis;
        public Node(int x, int y,int dis) {
            this.x = x;
            this.y = y;
            this.dis=dis;
        }
    }

    static class in {
        private static final StreamTokenizer input = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));

        public static int nextInt() throws IOException {
            input.nextToken();
            return (int) input.nval;
        }

        public static long nextLong() throws IOException {
            input.nextToken();
            return (long) input.nval;
        }

        public static String next() throws IOException {
            input.nextToken();
            return input.sval;
        }

        public static double nextDouble() throws IOException {
            input.nextToken();
            return input.nval;
        }
    }
}"
51,D,Java,61796155,2023-04-07 19:59:06,谦虚的驼瑞驰胖乎乎,执行出错,"import java.io.*;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));

    public static void main(String[] args) throws IOException {

        int n = Integer.parseInt(br.readLine());
        String []s= br.readLine().split("" "");
        int N = 100010;
        int []a = new int[N];
        for(int i = 0; i < n; i++){
            a[i] = Integer.parseInt(s[i]);
        }
        int []l = new int[N], r = new int[N];
        int cnt = 0;
        for(int i = 0, b = 0; i < n ; i ++){
            if(a[i] == 0){
                b ++;
            }else {
                l[ ++ cnt] = b;
                b = 0;
            }
        }
        int t = cnt;
        for(int i = n-1 , b = 0; i >= 0; i --){
            if(a[i] == 0){
                b ++;
            }else {
                r[t --] =b;
                b = 0;
            }
        }
        int ans = 0;
        for(int i = 1; i <= cnt; i ++){
            ans += 1 + l[i] + r[i] + l[i] * r[i];
        }
        pw.println(ans);
        pw.close();
    }
}

"
52,D,Java,61796248,2023-04-07 19:59:44,人工智能3211江海洋,答案正确,"import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream){};
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
//        out.flush();
        out.close();
    }

    static class TaskA {

        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int[] a = new int[n+1];
            for (int i = 1; i <= n; i++) {
                a[i] = in.nextInt();
            }
            long l = 0,r = 0,id = -1;
            long ans = 0;
            for (int i = 1; i <= n; i++) {
                if(a[i]==0){
                    if(id==-1)
                        l++;
                    else
                        r++;
                }
                else {
                    ans++;
                    if(id==-1) {
                        id=1;
                    }
                    else {
//                        System.out.println(l+"" ""+r);
                        ans += l + r + (l * r);
                        l = r;
                        r = 0;
                    }
                }
            }
//            System.out.println(l+"" ""+r);
            ans+=l+r+(l*r);
            if(id==-1)
                System.out.println(0);
            else
                System.out.println(ans);





        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        boolean hasNext() {
            while (tokenizer == null || !tokenizer.hasMoreElements()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e) {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }

    }
}
"
53,D,Java,61796262,2023-04-07 19:59:49,谦虚的驼瑞驰胖乎乎,执行出错,"import java.io.*;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));

    public static void main(String[] args) throws IOException {

        int n = Integer.parseInt(br.readLine());
        String []s= br.readLine().split("" "");
        int N = 100010;
        int []a = new int[N];
        for(int i = 0; i < n; i++){
            a[i] = Integer.parseInt(s[i]);
        }
        int []l = new int[N], r = new int[N];
        int cnt = 0;
        for(int i = 0, b = 0; i < n ; i ++){
            if(a[i] == 0){
                b ++;
            }else {
                l[ ++ cnt] = b;
                b = 0;
            }
        }
        int t = cnt;
        for(int i = n-1 , b = 0; i >= 0; i --){
            if(a[i] == 0){
                b ++;
            }else {
                r[t --] =b;
                b = 0;
            }
        }
        long ans = 0;
        for(int i = 1; i <= cnt; i ++){
            ans += 1 + l[i] + r[i] + l[i] * r[i];
        }
        pw.println(ans);
        pw.close();
    }
}

"
54,D,Java,61796272,2023-04-07 19:59:55,欧克z,运行超时,"import java.util.HashMap;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        System.out.println(subarraySum(a, 1));

    }
    public static int subarraySum(int[] nums, int k) {
        int count = 0, pre = 0;
        HashMap< Integer, Integer > mp = new HashMap < > ();
        mp.put(0, 1);
        for (int i = 0; i < nums.length; i++) {
            pre += nums[i];
            if (mp.containsKey(pre - k)) {
                count += mp.get(pre - k);
            }
            mp.put(pre, mp.getOrDefault(pre, 0) + 1);
        }
        return count;
    }

}

"
55,D,Java,61796316,2023-04-07 20:00:10,谦虚的驼瑞驰胖乎乎,答案错误,"import java.io.*;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));

    public static void main(String[] args) throws IOException {

        int n = Integer.parseInt(br.readLine());
        String []s= br.readLine().split("" "");
        int N = 1000010;
        int []a = new int[N];
        for(int i = 0; i < n; i++){
            a[i] = Integer.parseInt(s[i]);
        }
        int []l = new int[N], r = new int[N];
        int cnt = 0;
        for(int i = 0, b = 0; i < n ; i ++){
            if(a[i] == 0){
                b ++;
            }else {
                l[ ++ cnt] = b;
                b = 0;
            }
        }
        int t = cnt;
        for(int i = n-1 , b = 0; i >= 0; i --){
            if(a[i] == 0){
                b ++;
            }else {
                r[t --] =b;
                b = 0;
            }
        }
        long ans = 0;
        for(int i = 1; i <= cnt; i ++){
            ans += 1 + l[i] + r[i] + l[i] * r[i];
        }
        pw.println(ans);
        pw.close();
    }
}

"
56,D,Java,61796342,2023-04-07 20:00:18,henuyzf,答案错误,"import java.util.*;

// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        // 注意 hasNext 和 hasNextLine 的区别
        int n = in.nextInt() ;
        int[] x = new int[n];
        int[] sum = new int[n];
        for(int i = 0 ; i < n;i++){
            x[i] = in.nextInt() ;
        }
        //
        int temp = 0;
       for(int i=0;i<n;i++)
         {
             temp = temp + x[i];
             sum[i] = temp;
         }
        //
        long  count = 0;
        HashMap<Integer,Integer> map = new HashMap<>() ;
        map.put(0,1);
        for (int i = 0; i< n;i++)
        {
            if (map.containsKey(1-sum[i]))
               count = count + map.get(1-sum[i]) ;
            map.put(sum[i] ,map.getOrDefault(sum[i],0)+1);
        
        }
        System.out.print(count);
    }
}"
57,D,Java,61796351,2023-04-07 20:00:22,rookie1号,答案错误,"
import java.io.*;
import java.math.*;
import java.util.*;

public class Main {
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
	static int dx[]= {-1,0,1, 0};
	static int dy[]= {0 ,1,0,-1};
    public static void main(String[] args) throws IOException {
        //int T=in.nextInt();
        int T=1;
        while(T>0){
            //String[] strs1 = re.readLine().split("" "");
            //int n=Integer.parseInt(strs1[0]);
            //String s=re.readLine();
            //char arr[]=s.toCharArray();

            //long[][] p = new long[n][2];//对 long 二维数组排序
            //Arrays.sort(p, (a, b) -> a[0] <= b[0] ? -1 : 1);
            //Set<Integer>set=new HashSet<>();
            //Map<Long,Integer>map=new HashMap<>();
            //Map<Integer,List<Integer>>map=new HashMap<>();
            //TreeSet<Integer> set = new TreeSet<>();
            int n=in.nextInt();
            int arr[]=new int [n];
            long l=0,mid=0,r=0;
            int t=0;
            long res=0;
            for(int i=0;i<n;i++){
                arr[i]=in.nextInt();
            }

            for(int i=0;i<n;i++){
                if(arr[i]==1){
                    t++;
                    if(t==1)mid=i;
                }
                if(t==2){
                    r=i;
                    t=1;
                    //out.println(i+"" ""+l+"" ""+mid+"" ""+r);
                    res+=(mid-l+1)*(r-mid);
                    l=mid;
                }
            }
            if(t!=0){
                if(arr[n-1]==1)r=n-1;
                else r=n;
                //out.println(r+"" ""+l+"" ""+mid+"" ""+r);
                res+=(mid-l+1)*(r-mid);
            }
            
            out.println(res);
            
            
            



            
            T--;
        }
        out.flush();
        out.close();

    }
    static class Node{
        int x,y,dis;
        public Node(int x, int y,int dis) {
            this.x = x;
            this.y = y;
            this.dis=dis;
        }
    }

    static class in {
        private static final StreamTokenizer input = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));

        public static int nextInt() throws IOException {
            input.nextToken();
            return (int) input.nval;
        }

        public static long nextLong() throws IOException {
            input.nextToken();
            return (long) input.nval;
        }

        public static String next() throws IOException {
            input.nextToken();
            return input.sval;
        }

        public static double nextDouble() throws IOException {
            input.nextToken();
            return input.nval;
        }
    }
}"
58,D,Java,61796550,2023-04-07 20:01:36,Leaves_XY,执行出错,"import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Main {
	static Scanner scanner=new Scanner(System.in);
	static StreamTokenizer cin=new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
	static PrintWriter cout=new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	static BufferedReader bf=new BufferedReader(new InputStreamReader(System.in));
	
	static final int N=1010,M=100010;
	
	static int n,k,m;
	static int a[]=new int[N];
	static int s[]=new int[N];
	static char g[][]=new char[N][N];
	static boolean st[][]=new boolean[N][N];
	

	public static void main(String args[]) throws IOException {
		n=scanner.nextInt();
		
		for(int i=1;i<=n;i++) {
			a[i]=scanner.nextInt();
			s[i]=s[i-1]+a[i];
			}
		int res=0;
//		System.out.println(111);
		for(int i=1;i<=n;i++) {
			int j=i;
			while(a[j]==0&&j<=n)j++;
			res+=j-i+1;
			i=j;			
		}
		
		System.out.println(res);
		
		
		
		
		
	}
}

class PII{
	int x,y;

	public PII(int x, int y) {
		super();
		this.x = x;
		this.y = y;
	}
	
}

"
59,D,Java,61796566,2023-04-07 20:01:47,Leaves_XY,执行出错,"import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Main {
	static Scanner scanner=new Scanner(System.in);
	static StreamTokenizer cin=new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
	static PrintWriter cout=new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	static BufferedReader bf=new BufferedReader(new InputStreamReader(System.in));
	
	static final int N=1000010,M=100010;
	
	static int n,k,m;
	static int a[]=new int[N];
	static int s[]=new int[N];
	static char g[][]=new char[N][N];
	static boolean st[][]=new boolean[N][N];
	

	public static void main(String args[]) throws IOException {
		n=scanner.nextInt();
		
		for(int i=1;i<=n;i++) {
			a[i]=scanner.nextInt();
			s[i]=s[i-1]+a[i];
			}
		int res=0;
//		System.out.println(111);
		for(int i=1;i<=n;i++) {
			int j=i;
			while(a[j]==0&&j<=n)j++;
			res+=j-i+1;
			i=j;			
		}
		
		System.out.println(res);
		
		
		
		
		
	}
}

class PII{
	int x,y;

	public PII(int x, int y) {
		super();
		this.x = x;
		this.y = y;
	}
	
}

"
60,D,Java,61796646,2023-04-07 20:02:26,Leaves_XY,执行出错,"import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Main {
	static Scanner scanner=new Scanner(System.in);
	static StreamTokenizer cin=new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
	static PrintWriter cout=new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	static BufferedReader bf=new BufferedReader(new InputStreamReader(System.in));
	
	static final int N=10000010,M=100010;
	
	static int n,k,m;
	static int a[]=new int[N];
	static int s[]=new int[N];
	static char g[][]=new char[N][N];
	static boolean st[][]=new boolean[N][N];
	

	public static void main(String args[]) throws IOException {
		n=scanner.nextInt();
		
		for(int i=1;i<=n;i++) {
			a[i]=scanner.nextInt();
			s[i]=s[i-1]+a[i];
			}
		int res=0;
//		System.out.println(111);
		for(int i=1;i<=n;i++) {
			int j=i;
			while(a[j]==0&&j<=n)j++;
			res+=j-i+1;
			i=j;			
		}
		
		System.out.println(res);
		
		
		
		
		
	}
}

class PII{
	int x,y;

	public PII(int x, int y) {
		super();
		this.x = x;
		this.y = y;
	}
	
}

"
61,D,Java,61796652,2023-04-07 20:02:33,准备进厂的托尼很喜欢溜溜球,答案错误,"import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;

public class Main {

	private static boolean is_one;
	private static int n, ans;
	private static String[] arrTemp;
	private static final int N = 1000010;
	private static int[] q = new int[N];
	private static int[] left_zero = new int[N];
	private static int[] right_zero = new int[N];
	private static final BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
	private static final BufferedWriter out = new BufferedWriter(new OutputStreamWriter(System.out));

	public static void main(String[] args) throws IOException {

		n = Integer.parseInt(in.readLine());

		arrTemp = in.readLine().split("" "");
		for (int i = 0; i < n; i++) {
			q[i] = Integer.parseInt(arrTemp[i]);
		}

		for (int i = 0; i < n; i++) {
			if (q[i] == 1) {
				ans += n - i;
				break;
			}
		}


		for (int i = n - 1; i >= 0; i--) {
			if (is_one && q[i] == 0) {
				ans++;
			}
			if (q[i] == 1) {
				is_one = true;
			}
		}

		int zero = 0;
		for (int i = 0; i < n; i++) { // 左边0
			if (q[i] == 0)
				zero++;
			else {
				left_zero[i] = zero;
				zero = 0;
			}
		}

		zero = 0;
		for (int i = n - 1; i > 0; i--) {
			if (q[i] == 0)
				zero++;
			else {
				right_zero[i] = zero;
				zero = 0;
			}
		}

		for (int i = 0; i < n; i++) {
			ans += (left_zero[i] * right_zero[i]);
		}

		out.write(ans + """");

		in.close();
		out.close();
	}

}
"
62,D,Java,61796710,2023-04-07 20:02:56,rookie1号,答案错误,"
import java.io.*;
import java.math.*;
import java.util.*;

public class Main {
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
	static int dx[]= {-1,0,1, 0};
	static int dy[]= {0 ,1,0,-1};
    public static void main(String[] args) throws IOException {
        //int T=in.nextInt();
        int T=1;
        while(T>0){
            //String[] strs1 = re.readLine().split("" "");
            //int n=Integer.parseInt(strs1[0]);
            //String s=re.readLine();
            //char arr[]=s.toCharArray();

            //long[][] p = new long[n][2];//对 long 二维数组排序
            //Arrays.sort(p, (a, b) -> a[0] <= b[0] ? -1 : 1);
            //Set<Integer>set=new HashSet<>();
            //Map<Long,Integer>map=new HashMap<>();
            //Map<Integer,List<Integer>>map=new HashMap<>();
            //TreeSet<Integer> set = new TreeSet<>();
            int n=in.nextInt();
            int arr[]=new int [n];
            long l=0,mid=0,r=0;
            int t=0;
            long res=0;
            for(int i=0;i<n;i++){
                arr[i]=in.nextInt();
            }
            int v=0;
            for(int i=0;i<n;i++){
                if(arr[i]==1){
                    t++;
                    if(t==1)mid=i;
                    
                }
                if(t==2){
                    r=i;
                    v++;
                    t=1;
                    //out.println(i+"" ""+l+"" ""+mid+"" ""+r);
                    res+=(mid-l+1)*(r-mid);
                    l=mid;
                    mid=r;
                }
            }
            if(t!=0){
                if(arr[n-1]==1)r=n-1;
                else r=n;
                //out.println(r+"" ""+l+"" ""+mid+"" ""+r);
                res+=(mid-l+1)*(r-mid);
            }
            
            out.println(res);
            
            
            



            
            T--;
        }
        out.flush();
        out.close();

    }
    static class Node{
        int x,y,dis;
        public Node(int x, int y,int dis) {
            this.x = x;
            this.y = y;
            this.dis=dis;
        }
    }

    static class in {
        private static final StreamTokenizer input = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));

        public static int nextInt() throws IOException {
            input.nextToken();
            return (int) input.nval;
        }

        public static long nextLong() throws IOException {
            input.nextToken();
            return (long) input.nval;
        }

        public static String next() throws IOException {
            input.nextToken();
            return input.sval;
        }

        public static double nextDouble() throws IOException {
            input.nextToken();
            return input.nval;
        }
    }
}"
63,D,Java,61796719,2023-04-07 20:02:59,Leaves_XY,执行出错,"import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Main {
	static Scanner scanner=new Scanner(System.in);
	static StreamTokenizer cin=new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
	static PrintWriter cout=new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	static BufferedReader bf=new BufferedReader(new InputStreamReader(System.in));
	
	static final int N=1010,M=100010;
	
	static int n,k,m;
	static int a[]=new int[N];
	static int s[]=new int[N];
	static char g[][]=new char[N][N];
	static boolean st[][]=new boolean[N][N];
	

	public static void main(String args[]) throws IOException {
		n=scanner.nextInt();
		
		for(int i=1;i<=n;i++) {
			a[i]=scanner.nextInt();
			s[i]=s[i-1]+a[i];
			}
		int res=0;
//		System.out.println(111);
		for(int i=1;i<=n;i++) {
			int j=i;
			while(j<=n&&a[j]==0)j++;
			res+=j-i+1;
			i=j;			
		}
		
		System.out.println(res);
		
		
		
		
		
	}
}

class PII{
	int x,y;

	public PII(int x, int y) {
		super();
		this.x = x;
		this.y = y;
	}
	
}

"
64,D,Java,61796775,2023-04-07 20:03:30,henuyzf,编译错误,"{""SPECIAL_TM_FH_MEMO_JSON_TAG"":""SPECIAL_TM_FH_MEMO_JSON_TAG"",""stderr"":""Main.java:24: error: ')' expected\n            if (map.containsKey(1-sum[i])\n                                         ^\n1 error""}

import java.util.*;

// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        // 注意 hasNext 和 hasNextLine 的区别
        int n = in.nextInt() ;
        int[] x = new int[n];
        int[] sum = new int[n+1];
        for(int i = 0 ; i < n;i++){
            x[i] = in.nextInt() ;
        }
        //
       sum[1]=x[0];
       for(int i =2 ; i<=n;i++)
        sum[i] =sum[i-1]+x[i-1];
        //
        long  count = 0;
        HashMap<Integer,Integer> map = new HashMap<>() ;
        map.put(0,1);
        for (int i = 1; i<= n;i++)
        {
            if (map.containsKey(1-sum[i])
               count = count + map.get(1-sum[i]) ;
            map.put(sum[i] ,map.getOrDefault(sum[i],0)+1);
        
        }
        System.out.print(count);
    }
}"
65,D,Java,61796780,2023-04-07 20:03:33,henuyzf,编译错误,"{""SPECIAL_TM_FH_MEMO_JSON_TAG"":""SPECIAL_TM_FH_MEMO_JSON_TAG"",""stderr"":""Main.java:24: error: ')' expected\n            if (map.containsKey(1-sum[i])\n                                         ^\n1 error""}

import java.util.*;

// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        // 注意 hasNext 和 hasNextLine 的区别
        int n = in.nextInt() ;
        int[] x = new int[n];
        int[] sum = new int[n+1];
        for(int i = 0 ; i < n;i++){
            x[i] = in.nextInt() ;
        }
        //
       sum[1]=x[0];
       for(int i =2 ; i<=n;i++)
        sum[i] =sum[i-1]+x[i-1];
        //
        long  count = 0;
        HashMap<Integer,Integer> map = new HashMap<>() ;
        map.put(0,1);
        for (int i = 1; i<= n;i++)
        {
            if (map.containsKey(1-sum[i])
               count = count + map.get(1-sum[i]) ;
            map.put(sum[i] ,map.getOrDefault(sum[i],0)+1);
        
        }
        System.out.print(count);
    }
}"
66,D,Java,61796806,2023-04-07 20:03:45,谦虚的驼瑞驰胖乎乎,执行出错,"import java.io.*;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));

    public static void main(String[] args) throws IOException {

        int n = Integer.parseInt(br.readLine());
        String []s= br.readLine().split("" "");
        int N = 100010;
        int []a = new int[N];
        for(int i = 0; i < n; i++){
            a[i] = Integer.parseInt(s[i]);
        }
        long ans = 0 ;
        for(int i = 0; i < n; i ++){
            if(a[i ] == 1){
                int l = 0,r = 0;
                int j = i - 1;
                while (j >= 0 ){
                    if(a[j] == 0) l ++;
                    if(a[j] == 1) break;
                    j --;
                }
                j = i + 1;
                while (j < n){
                    if(a[j] == 0) r ++;
                    if(a[j] == 1) break;
                    j ++;
                }
                ans += l + r + l * r + 1;
            }
        }
        pw.println(ans);
        pw.close();
    }
}

"
67,D,Java,61796817,2023-04-07 20:03:51,henuyzf,答案错误,"import java.util.*;

// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        // 注意 hasNext 和 hasNextLine 的区别
        int n = in.nextInt() ;
        int[] x = new int[n];
        int[] sum = new int[n+1];
        for(int i = 0 ; i < n;i++){
            x[i] = in.nextInt() ;
        }
        //
       sum[1]=x[0];
       for(int i =2 ; i<=n;i++)
        sum[i] =sum[i-1]+x[i-1];
        //
        long  count = 0;
        HashMap<Integer,Integer> map = new HashMap<>() ;
        map.put(0,1);
        for (int i = 1; i<= n;i++)
        {
            if (map.containsKey(1-sum[i]))
               count = count + map.get(1-sum[i]) ;
            map.put(sum[i] ,map.getOrDefault(sum[i],0)+1);
        
        }
        System.out.print(count);
    }
}"
68,D,Java,61796839,2023-04-07 20:04:02,Leaves_XY,执行出错,"import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Main {
	static Scanner scanner=new Scanner(System.in);
	static StreamTokenizer cin=new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
	static PrintWriter cout=new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	static BufferedReader bf=new BufferedReader(new InputStreamReader(System.in));
	
	static final int N=100000010,M=100010;
	
	static int n,k,m;
	static int a[]=new int[N];
	static int s[]=new int[N];
	static char g[][]=new char[N][N];
	static boolean st[][]=new boolean[N][N];
	

	public static void main(String args[]) throws IOException {
		n=scanner.nextInt();
		
		for(int i=1;i<=n;i++) {
			a[i]=scanner.nextInt();
			s[i]=s[i-1]+a[i];
			}
		int res=0;
//		System.out.println(111);
		for(int i=1;i<=n;i++) {
			int j=i;
			while(j<=n&&a[j]==0)j++;
			res+=j-i+1;
			i=j;			
		}
		
		System.out.println(res);
		
		
		
		
		
	}
}

class PII{
	int x,y;

	public PII(int x, int y) {
		super();
		this.x = x;
		this.y = y;
	}
	
}

"
69,D,Java,61796879,2023-04-07 20:04:22,Leaves_XY,编译错误,"{""SPECIAL_TM_FH_MEMO_JSON_TAG"":""SPECIAL_TM_FH_MEMO_JSON_TAG"",""stderr"":""Main.java:19: error: integer number too large: 100000000010\n\tstatic final int N=100000000010,M=100010;\n\t                   ^\n1 error""}

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Main {
	static Scanner scanner=new Scanner(System.in);
	static StreamTokenizer cin=new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
	static PrintWriter cout=new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	static BufferedReader bf=new BufferedReader(new InputStreamReader(System.in));
	
	static final int N=100000000010,M=100010;
	
	static int n,k,m;
	static int a[]=new int[N];
	static int s[]=new int[N];
	static char g[][]=new char[N][N];
	static boolean st[][]=new boolean[N][N];
	

	public static void main(String args[]) throws IOException {
		n=scanner.nextInt();
		
		for(int i=1;i<=n;i++) {
			a[i]=scanner.nextInt();
			s[i]=s[i-1]+a[i];
			}
		int res=0;
//		System.out.println(111);
		for(int i=1;i<=n;i++) {
			int j=i;
			while(j<=n&&a[j]==0)j++;
			res+=j-i+1;
			i=j;			
		}
		
		System.out.println(res);
		
		
		
		
		
	}
}

class PII{
	int x,y;

	public PII(int x, int y) {
		super();
		this.x = x;
		this.y = y;
	}
	
}

"
70,D,Java,61796883,2023-04-07 20:04:26,Leaves_XY,执行出错,"import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Main {
	static Scanner scanner=new Scanner(System.in);
	static StreamTokenizer cin=new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
	static PrintWriter cout=new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	static BufferedReader bf=new BufferedReader(new InputStreamReader(System.in));
	
	static final int N=1000000010,M=100010;
	
	static int n,k,m;
	static int a[]=new int[N];
	static int s[]=new int[N];
	static char g[][]=new char[N][N];
	static boolean st[][]=new boolean[N][N];
	

	public static void main(String args[]) throws IOException {
		n=scanner.nextInt();
		
		for(int i=1;i<=n;i++) {
			a[i]=scanner.nextInt();
			s[i]=s[i-1]+a[i];
			}
		int res=0;
//		System.out.println(111);
		for(int i=1;i<=n;i++) {
			int j=i;
			while(j<=n&&a[j]==0)j++;
			res+=j-i+1;
			i=j;			
		}
		
		System.out.println(res);
		
		
		
		
		
	}
}

class PII{
	int x,y;

	public PII(int x, int y) {
		super();
		this.x = x;
		this.y = y;
	}
	
}

"
71,D,Java,61796949,2023-04-07 20:04:55,谦虚的驼瑞驰胖乎乎,答案错误,"import java.io.*;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));

    public static void main(String[] args) throws IOException {

        int n = Integer.parseInt(br.readLine());
        String []s= br.readLine().split("" "");
        int N = 1000010;
        int []a = new int[N];
        for(int i = 0; i < n; i++){
            a[i] = Integer.parseInt(s[i]);
        }
        long ans = 0 ;
        for(int i = 0; i < n; i ++){
            if(a[i ] == 1){
                int l = 0,r = 0;
                int j = i - 1;
                while (j >= 0 ){
                    if(a[j] == 0) l ++;
                    if(a[j] == 1) break;
                    j --;
                }
                j = i + 1;
                while (j < n){
                    if(a[j] == 0) r ++;
                    if(a[j] == 1) break;
                    j ++;
                }
                ans += l + r + l * r + 1;
            }
        }
        pw.println(ans);
        pw.close();
    }
}

"
72,D,Java,61796994,2023-04-07 20:05:17,Leaves_XY,编译错误,"{""SPECIAL_TM_FH_MEMO_JSON_TAG"":""SPECIAL_TM_FH_MEMO_JSON_TAG"",""stderr"":""Main.java:31: error: cannot find symbol\n\t\t\ts[i]=s[i-1]+a[i];\n\t\t\t^\n  symbol:   variable s\n  location: class Main\nMain.java:31: error: cannot find symbol\n\t\t\ts[i]=s[i-1]+a[i];\n\t\t\t     ^\n  symbol:   variable s\n  location: class Main\n2 errors""}

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Main {
	static Scanner scanner=new Scanner(System.in);
	static StreamTokenizer cin=new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
	static PrintWriter cout=new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	static BufferedReader bf=new BufferedReader(new InputStreamReader(System.in));
	
	static final int N=1000000010,M=100010;
	
	static int n,k,m;
	static int a[]=new int[N];

	

	public static void main(String args[]) throws IOException {
		n=scanner.nextInt();
		
		for(int i=1;i<=n;i++) {
			a[i]=scanner.nextInt();
			s[i]=s[i-1]+a[i];
			}
		int res=0;
//		System.out.println(111);
		for(int i=1;i<=n;i++) {
			int j=i;
			while(j<=n&&a[j]==0)j++;
			res+=j-i+1;
			i=j;			
		}
		
		System.out.println(res);
		
		
		
		
		
	}
}

class PII{
	int x,y;

	public PII(int x, int y) {
		super();
		this.x = x;
		this.y = y;
	}
	
}

"
73,D,Java,61796996,2023-04-07 20:05:18,henuyzf,运行超时,"import java.util.*;

// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        // 注意 hasNext 和 hasNextLine 的区别
        int n = in.nextInt() ;
        int[] x = new int[n];
        int[] sum = new int[n+1];
        for(int i = 0 ; i < n;i++){
            x[i] = in.nextInt() ;
        }
        //
       sum[1]=x[0];
       for(int i =2 ; i<=n;i++)
        sum[i] =sum[i-1]+x[i-1];
        //
        long  count = 0;
        HashMap<Integer,Integer> map = new HashMap<>() ;
        map.put(0,1);
        for (int i = 1; i<= n;i++)
        {
            if (map.containsKey(1-sum[i]))
               count = count + map.get(1-sum[i]) ;
            map.put(sum[i] ,map.getOrDefault(sum[i],0)+1);
        
        }
        System.out.print(count);
    }
}"
74,D,Java,61797046,2023-04-07 20:05:44,Leaves_XY,执行出错,"import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Main {
	static Scanner scanner=new Scanner(System.in);
	static StreamTokenizer cin=new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
	static PrintWriter cout=new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	static BufferedReader bf=new BufferedReader(new InputStreamReader(System.in));
	
	static final int N=100010,M=100010;
	
	static int n,k,m;
	static int a[]=new int[N];

	

	public static void main(String args[]) throws IOException {
		n=scanner.nextInt();
		
		for(int i=1;i<=n;i++) {
			a[i]=scanner.nextInt();
		
			}
		int res=0;
//		System.out.println(111);
		for(int i=1;i<=n;i++) {
			int j=i;
			while(j<=n&&a[j]==0)j++;
//			System.out.println(""j:""+j);
			res+=j-i+1;
			i=j;			
		}
		
		System.out.println(res);
		
		
		
		
		
	}
}

class PII{
	int x,y;

	public PII(int x, int y) {
		super();
		this.x = x;
		this.y = y;
	}
	
}

"
75,D,Java,61797121,2023-04-07 20:06:15,悠然小白,答案正确,"import java.util.*;
import java.io.*;

public class Main {

    public static void main(String[] args) {

        Scanner in = new Scanner(new BufferedReader(new InputStreamReader(System.in)));
        PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));

        long n = in.nextLong();

        int[] nums = new int[(int)n];
        for (int i = 0; i < n; i++) {
            nums[i] = in.nextInt();
        }

        long ans = 0;
        long num = 1;
        List<Long> list = new ArrayList<>();
//        if (n == 1 && nums[0] == 1) {
//            list.add(1L);
//        }

        for (int i = 0; i < n; i++) {

            if (nums[i] == 0) {
                num++;
            }

            if (nums[i] == 1) {
                list.add((long)num);
                num = 1;
            }

            if (i == nums.length - 1) {
                list.add((long)num);
            }

        }

//         System.out.println(list);

        for (int i = 0; i < list.size() - 1; i++) {
            ans += list.get(i) * list.get(i + 1);
        }

        out.println(ans);


        out.flush();
    }

}
"
76,D,Java,61797138,2023-04-07 20:06:22,Leaves_XY,答案错误,"import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Main {
	static Scanner scanner=new Scanner(System.in);
	static StreamTokenizer cin=new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
	static PrintWriter cout=new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	static BufferedReader bf=new BufferedReader(new InputStreamReader(System.in));
	
	static final int N=10000010,M=100010;
	
	static int n,k,m;
	static int a[]=new int[N];

	

	public static void main(String args[]) throws IOException {
		n=scanner.nextInt();
		
		for(int i=1;i<=n;i++) {
			a[i]=scanner.nextInt();
		
			}
		int res=0;
//		System.out.println(111);
		for(int i=1;i<=n;i++) {
			int j=i;
			while(j<=n&&a[j]==0)j++;
//			System.out.println(""j:""+j);
			res+=j-i+1;
			i=j;			
		}
		
		System.out.println(res);
		
		
		
		
		
	}
}

class PII{
	int x,y;

	public PII(int x, int y) {
		super();
		this.x = x;
		this.y = y;
	}
	
}

"
77,D,Java,61797221,2023-04-07 20:06:57,牛客829798037号,运行超时,"

import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int []num=new int[n+1];
        for(int i=1;i<=n;i++){
            num[i]=sc.nextInt();
        }
        int res=0;
        for(int j=0;j<n;j++){
            int temp=0;
            for(int i=j+1;i<=n;i++){
                temp+=num[i];
                if(temp==1){
                    res++;
                }
                if(temp>1){
                    break;
                }
            }
        }
        System.out.println(res);
    }
}
"
78,D,Java,61797250,2023-04-07 20:07:13,Leaves_XY,答案错误,"import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Main {
	static Scanner scanner=new Scanner(System.in);
	static StreamTokenizer cin=new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
	static PrintWriter cout=new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	static BufferedReader bf=new BufferedReader(new InputStreamReader(System.in));
	
	static final int N=10000010,M=100010;
	
	static int n,k,m;
	static int a[]=new int[N];

	

	public static void main(String args[]) throws IOException {
		n=scanner.nextInt();
		
		for(int i=1;i<=n;i++) {
			a[i]=scanner.nextInt();
		
			}
		long res=0;
//		System.out.println(111);
		for(int i=1;i<=n;i++) {
			int j=i;
			while(j<=n&&a[j]==0)j++;
//			System.out.println(""j:""+j);
			res+=j-i+1;
			i=j;			
		}
		
		System.out.println(res);

	}
}

class PII{
	int x,y;

	public PII(int x, int y) {
		super();
		this.x = x;
		this.y = y;
	}
	
}

"
79,D,Java,61797281,2023-04-07 20:07:28,L-0720,执行出错,"import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] arr = new int[n];
        int[] idxs = new int[n];
        int len = 1;
        for (int i = 0; i < n; i++) {
            int num = scanner.nextInt();
            arr[i] = num;
            if (num == 1) idxs[len++] = i;
        }
        idxs[0] = -1;
        idxs[len++] = n;
        long sum = 0;
        for (int i = 1; i < len - 1; i++) {
            int a = idxs[i] - idxs[i-1] - 1;
            int b = idxs[i+1] - idxs[i] - 1;
            sum = (long) a + (long) b + (long) a * (long) b + sum + 1L;
        }
        System.out.println(sum);
    }

}"
80,D,Java,61797297,2023-04-07 20:07:37,智破云霄,答案正确,"import java.util.*;
import java.io.*;
public class Main {
	static long gcd(long a,long b)
	{
		return b==0?a:gcd(b,a%b);
	}
public static void main(String[] args) {
	
 InputReader in = new InputReader(System.in);
PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
		
			
			int n = in.nextInt();
			long ans= 0;
			int[] arr = new int[n];
			int[] l = new int[n];
			int[] r = new int[n];
			for(int i =  0;i < n;i ++) arr[i] = in.nextInt();
			int x = 0;
			int y = 0;
			for(int i = 0;i < n; i++)
			{
				if(arr[i]==0)
				{
					x ++;
				}
				else 
				{
					l[i]=x;
					x = 0;
				}
			}
			for(int i = n-1; i>= 0;i --)
			{
				if(arr[i]==0)
					y ++;
				else 
				{
					r[i] = y;
					y = 0;
				}
			}
			for(int i = 0; i< n; i++)
				if(arr[i]==1)
					ans += (long)(l[i]+1)*(r[i]+1);
			out.println(ans);
					
				
			
			
			
			
			
			
			
		

out.flush();

	
}
	
	
	
	
	



	
}





class InputReader {
    private final BufferedReader buf;
    private StringTokenizer tkl;

    public InputReader(InputStream is) {
        buf = new BufferedReader(new InputStreamReader(is));
    }

    public boolean hasNext() {
        try {
            while (tkl == null || !tkl.hasMoreElements()) tkl = new StringTokenizer(buf.readLine());
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public String next() {
        return hasNext() ? tkl.nextToken() : null;
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }
}
"
81,D,Java,61797369,2023-04-07 20:08:09,ssssse,答案错误,"import java.util.Arrays;
import java.util.Scanner;

public class Main {

    static int n,m;
////
////
    static int ans = -1;
//    static int max = 0;
    static int[][] kxy = new int[][]{{0,1},{1,0},{-1,0},{0,-1}};

//    static void dfs(int a,int b,char [][]mm){
//        ans=Math.max(ans,max);
////        System.out.println(""ans:   ""+ans);
//        for (int i = 0; i < 4; i++) {
//            int kx = a + kxy[i][0];
//            int ky = b + kxy[i][1];
//            if(kx>=0&&kx<n&&ky>=0&&ky<m&&mm[kx][ky]!='#'){
//                if(mm[kx][ky]=='!') {
//                    max++;
//                }
//                mm[kx][ky]='#';
//                dfs(kx,ky,mm);
//            }
//        }
//    }

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
//        n = in.nextInt();
//        m = in.nextInt();
//        char [][] map = new char[n][m];
//        int a = 0;
//        int b = 0;
//        for (int i = 0; i < n; i++) {
//            String s = in.next();
//            for (int j = 0; j < m; j++) {
//                map[i][j]=s.charAt(j);
//                if(map[i][j]=='@'){
//                    a=i;
//                    b=j;
//                }
//            }
//        }
//        while (true){
//            int aa = a;
//            int bb = b;
//            for (int i = 0; i < 4; i++) {
//                int kx = aa+kxy[i][0];
//                int ky = bb+kxy[i][1];
//                if(kx>=0&&kx<n&&ky>=0&&ky<m&&map[kx][ky]!='#'){
//                    if(map[kx][ky]=='!'){
//                        map[kx][ky]='.';
//                        ans++;
//                    }
//                    for (int j = kx-1; j >=0 ;j--) {
//                        if(map[j][ky]=='!'){
//                            map[j][ky]='.';
//                            ans++;
//                        }else if(map[j][ky]=='#'){
//                            break;
//                        }
//                    }
//                    for (int j = kx+1; j <=n ;j++) {
//                        if(map[j][ky]=='!'){
//                            map[j][ky]='.';
//                            ans++;
//                        }else if(map[j][ky]=='#'){
//                            break;
//                        }
//                    }
//                    for (int j = ky-1; j >= 0 ;j--) {
//                        if(map[kx][j]=='!'){
//                            map[kx][j]='.';
//                            ans++;
//                        }else if(map[kx][j]=='#'){
//                            break;
//                        }
//                    }
//                    for (int j = kx+1; j <= m ;j++) {
//                        if(map[kx][j]=='!'){
//                            map[kx][j]='.';
//                            ans++;
//                        }else if(map[kx][j]=='#'){
//                            break;
//                        }
//                    }
//                }
//            }
//        }
//        dfs(a,b,map);
//        System.out.println(ans);

        int n = in.nextInt();
        A []x= new A[n];
        for (int i = 0; i < n; i++) {
            x[i]= new A();
            x[i].a= in.nextInt();
        }
        int l=0;
        int r=-1;
        int f = 0;
        int a =0;
        for (int i = 0; i < n; i++) {

            if (x[i].a == 1 && f == 0) {
                f = 1;
                a = i;
            } else if (x[i].a == 1 && f == 1) {
                r = i;
                f = 0;
                x[a].l = l;
                x[a].r = r;
                l = a + 1;
            }

        }
        if(f==1){
            x[a].l=l;
            x[a].r=n-1;
        }
        long ans = 0;
        for (int i = 0; i < n; i++) {
            if(x[i].a==1){
                ans+= (long) (x[i].a - x[i].l + 1) *(x[i].r-x[i].a+1);
            }
        }
//        for (int i = 0; i < n; i++) {
//            System.out.println(x[i].a+"" l:""+x[i].l+"" r:""+x[i].r);
//        }
        System.out.println(ans);
    }
    static class A{
        int a,l,r;
    }
}"
82,D,Java,61797423,2023-04-07 20:08:39,L-0720,答案正确,"import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] arr = new int[n];
        int[] idxs = new int[n + 10];
        int len = 1;
        for (int i = 0; i < n; i++) {
            int num = scanner.nextInt();
            arr[i] = num;
            if (num == 1) idxs[len++] = i;
        }
        idxs[0] = -1;
        idxs[len++] = n;
        long sum = 0;
        for (int i = 1; i < len - 1; i++) {
            int a = idxs[i] - idxs[i-1] - 1;
            int b = idxs[i+1] - idxs[i] - 1;
            sum = (long) a + (long) b + (long) a * (long) b + sum + 1L;
        }
        System.out.println(sum);
    }

}"
83,D,Java,61797426,2023-04-07 20:08:41,henuyzf,答案错误,"import java.util.*;

// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        // 注意 hasNext 和 hasNextLine 的区别
        int n = in.nextInt() ;
        int[] x = new int[n];
        int[] sum = new int[n+1];
        for(int i = 0 ; i < n;i++){
            x[i] = in.nextInt() ;
        }
        //
       sum[1]=x[0];
       for(int i =2 ; i<=n;i++)
        sum[i] =sum[i-1]+x[i-1];
        //
        long  count = 0;
        HashMap<Integer,Integer> map = new HashMap<>() ;
        map.put(0,1);
        
        
        for (int i = 1; i<= n;i++)
        {
            if (map.containsKey(1-sum[i]))
               count = count + map.get(1-sum[i]) ;
            map.put(sum[i] ,map.getOrDefault(sum[i],0)+1);
        
        }
        System.out.print(count);
    }
}"
84,D,Java,61797453,2023-04-07 20:08:53,谦虚的驼瑞驰胖乎乎,答案错误,"import java.io.*;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));

    public static void main(String[] args) throws IOException {

        int n = Integer.parseInt(br.readLine());
        String []s= br.readLine().split("" "");
        int N = 1000010;
        int []a = new int[N];
        for(int i = 0; i < n; i++){
            a[i] = Integer.parseInt(s[i]);
        }
        int ans = 0 ;
        for(int i = 0; i < n; i ++){
            if(a[i ] == 1){
                int l = 0,r = 0;
                int j = i - 1;
                while (j >= 0 ){
                    if(a[j] == 0) l ++;
                    if(a[j] == 1) break;
                    j --;
                }
                j = i + 1;
                while (j < n){
                    if(a[j] == 0) r ++;
                    if(a[j] == 1) break;
                    j ++;
                }
                ans += l + r + l * r + 1;
            }
        }
        pw.println(ans);
        pw.close();
    }
}

"
85,D,Java,61797486,2023-04-07 20:09:09,kk129,答案错误,"import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int[] s = new int[n];
            int sum = 0;
            for (int i = 0; i < n; i++) {
                s[i] = in.nextInt();
                if(s[i]==1)
                    sum++;
            }
            int temp = 0;
            int t2 = 0;
            boolean flag = true;
            boolean f1 = false;
            for (int i = 0; i < n; i++) {
                if(s[i]==0){
                    temp++;
                }
                else {
                    if(flag){
                        if(f1)
                            sum+=temp*t2;
                        if(s[0]==0){
                            flag = false;
                            sum+=temp;
                        }
                        else {
                            sum+=temp*2;
                        }
                    }
                    if(i-1>=0&&i+1<n){
                        if(s[i-1]==0&&s[i+1]==0){
                            f1 = true;
                            t2 = temp;
                        }
                        else
                            f1 = false;
                    }
                    else
                        sum+=temp*2;
                    temp = 0;
                }
            }
            if(temp!=0) {
                sum += temp;
                if(f1)
                    sum+=temp*t2;
            }
            out.println(sum);
        }
    }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;
        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
86,D,Java,61797729,2023-04-07 20:11:11,kk129,答案错误,"import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int[] s = new int[n];
            int sum = 0;
            int a = 0;
            for (int i = 0; i < n; i++) {
                s[i] = in.nextInt();
                if(s[i]==1)
                    a++;
            }
            if(a==0)
                out.println(0);
            else {
                int temp = 0;
                int t2 = 0;
                boolean flag = true;
                boolean f1 = false;
                for (int i = 0; i < n; i++) {
                    if (s[i] == 0) {
                        temp++;
                    } else {
                        if (flag) {
                            if (f1)
                                sum += temp * t2;
                            if (s[0] == 0) {
                                flag = false;
                                sum += temp;
                            } else {
                                sum += temp * 2;
                            }
                        }
                        if (i - 1 >= 0 && i + 1 < n) {
                            if (s[i - 1] == 0 && s[i + 1] == 0) {
                                f1 = true;
                                t2 = temp;
                            } else
                                f1 = false;
                        } else
                            sum += temp * 2;
                        temp = 0;
                    }
                }
                if (temp != 0) {
                    sum += temp;
                    if (f1)
                        sum += temp * t2;
                }
                out.println(sum);
            }
        }
    }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;
        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
87,D,Java,61797911,2023-04-07 20:12:39,自由oVo,答案错误,"import java.util.*;

public class Main {
	public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] num = new int[n];
        for(int i = 0; i < n; i++) {
        	num[i] = sc.nextInt();
        }
        int[] sum = new int[n + 1];
        for(int i = 1; i <= n; i++)sum[i] = sum[i - 1] + num[i - 1];
        HashMap<Integer, Integer> map = new HashMap<>();
        map.put(0, 1);
        int ans = 0;
        for(int i = 1; i <= n; i++) {
        	if(map.containsKey(sum[i] - 1)) {
        		ans += map.get(sum[i] - 1);
        	}
        	map.put(sum[i], map.getOrDefault(sum[i], 0) + 1);
        }
        System.out.println(ans);
    }
}"
88,D,Java,61797961,2023-04-07 20:13:05,henuyzf,答案正确,"import java.util.*;

// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        // 注意 hasNext 和 hasNextLine 的区别
        int n = in.nextInt() ;
        int[] x = new int[n];
        int[] sum = new int[n+1];
        for(int i = 0 ; i < n;i++){
            x[i] = in.nextInt() ;
        }
        //
       sum[1]=x[0];
       for(int i =2 ; i<=n;i++)
        sum[i] =sum[i-1]+x[i-1];
        //
        long  count = 0;
        HashMap<Integer,Integer> map = new HashMap<>() ;
        map.put(0,1);
        
        
        for (int i = 1; i<= n;i++)
        {
            if (map.containsKey(sum[i]-1))
               count = count + map.get(sum[i]-1) ;
            map.put(sum[i] ,map.getOrDefault(sum[i],0)+1);
        
        }
        System.out.print(count);
    }
}"
89,D,Java,61797998,2023-04-07 20:13:26,kk129,答案错误,"import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int[] s = new int[n];

            int a = 0;
            for (int i = 0; i < n; i++) {
                s[i] = in.nextInt();
                if(s[i]==1)
                    a++;
            }
            if(a==0)
                out.println(0);
            else {
                int sum = a;
                int temp = 0;
                int t2 = 0;
                boolean flag = true;
                boolean f1 = false;
                for (int i = 0; i < n; i++) {
                    if (s[i] == 0) {
                        temp++;
                    } else {
                        if (flag) {
                            if (f1)
                                sum += temp * t2;
                            if (s[0] == 0) {
                                flag = false;
                                sum += temp;
                            } else {
                                sum += temp * 2;
                            }
                        }
                        if (i - 1 >= 0 && i + 1 < n) {
                            if (s[i - 1] == 0 && s[i + 1] == 0) {
                                f1 = true;
                                t2 = temp;
                            } else
                                f1 = false;
                        } else
                            sum += temp * 2;
                        temp = 0;
                    }
                }
                if (temp != 0) {
                    sum += temp;
                    if (f1)
                        sum += temp * t2;
                }
                out.println(sum);
            }
        }
    }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;
        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
90,D,Java,61798127,2023-04-07 20:14:27,kk129,答案错误,"import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int[] s = new int[n];
            int a = 0;
            for (int i = 0; i < n; i++) {
                s[i] = in.nextInt();
                if(s[i]==1)
                    a++;
            }
            if(a==0)
                out.println(0);
            else {
                long sum = a;
                long temp = 0;
                long t2 = 0;
                boolean flag = true;
                boolean f1 = false;
                for (int i = 0; i < n; i++) {
                    if (s[i] == 0) {
                        temp++;
                    } else {
                        if (flag) {
                            if (f1)
                                sum += temp * t2;
                            if (s[0] == 0) {
                                flag = false;
                                sum += temp;
                            } else {
                                sum += temp * 2;
                            }
                        }
                        if (i - 1 >= 0 && i + 1 < n) {
                            if (s[i - 1] == 0 && s[i + 1] == 0) {
                                f1 = true;
                                t2 = temp;
                            } else
                                f1 = false;
                        } else
                            sum += temp * 2;
                        temp = 0;
                    }
                }
                if (temp != 0) {
                    sum += temp;
                    if (f1)
                        sum += temp * t2;
                }
                out.println(sum);
            }
        }
    }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;
        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
91,D,Java,61798451,2023-04-07 20:16:55,rookie1号,答案正确,"
import java.io.*;
import java.math.*;
import java.util.*;

public class Main {
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
	static int dx[]= {-1,0,1, 0};
	static int dy[]= {0 ,1,0,-1};
    public static void main(String[] args) throws IOException {
        //int T=in.nextInt();
        int T=1;
        while(T>0){
            //String[] strs1 = re.readLine().split("" "");
            //int n=Integer.parseInt(strs1[0]);
            //String s=re.readLine();
            //char arr[]=s.toCharArray();

            //long[][] p = new long[n][2];//对 long 二维数组排序
            //Arrays.sort(p, (a, b) -> a[0] <= b[0] ? -1 : 1);
            //Set<Integer>set=new HashSet<>();
            //Map<Long,Integer>map=new HashMap<>();
            //Map<Integer,List<Integer>>map=new HashMap<>();
            //TreeSet<Integer> set = new TreeSet<>();
            int n=in.nextInt();
            int arr[]=new int [n];
            long l=0,mid=0,r=0;
            int t=0;
            long res=0;
            for(int i=0;i<n;i++){
                arr[i]=in.nextInt();
            }
            int v=0;
            for(int i=0;i<n;i++){
                if(arr[i]==1){
                    t++;
                    if(t==1)mid=i;
                    
                }
                if(t==2){
                    r=i;
                    v++;
                    t=1;
                    
                    res+=(mid-l+1)*(r-mid);
                    //out.println(i+"" ""+l+"" ""+mid+"" ""+r+"" ""+res);
                    
                    l=mid+1;
                    mid=r;
                }
            }
            if(t!=0){
                if(arr[n-1]==1)r=n;
                
                else r=n;
                //out.println(r+"" ""+l+"" ""+mid+"" ""+r);
                res+=(mid-l+1)*(r-mid);
            }
            
            
            out.println(res);
            
            
            



            
            T--;
        }
        out.flush();
        out.close();

    }
    static class Node{
        int x,y,dis;
        public Node(int x, int y,int dis) {
            this.x = x;
            this.y = y;
            this.dis=dis;
        }
    }

    static class in {
        private static final StreamTokenizer input = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));

        public static int nextInt() throws IOException {
            input.nextToken();
            return (int) input.nval;
        }

        public static long nextLong() throws IOException {
            input.nextToken();
            return (long) input.nval;
        }

        public static String next() throws IOException {
            input.nextToken();
            return input.sval;
        }

        public static double nextDouble() throws IOException {
            input.nextToken();
            return input.nval;
        }
    }
}"
92,D,Java,61798485,2023-04-07 20:17:10,wqz579,答案错误,"import java.util.*;
public class Main
{
    public static void main (String [] args)
    {
        Scanner in = new Scanner(System.in);
        while(in.hasNextInt())
        {
            int n=in.nextInt();
            int[] a=new int[n];
            int sum1=0;
            List<Integer> sum0=new ArrayList<>();
            int count=0;
            for(int i=0;i<n;i++)
            {
                a[i]=in.nextInt();
                if(a[i]==1)
                {
                    sum1++;
                    sum0.add(count);
                    count=0;
                    continue;
                }
                count++;
            }
            sum0.add(count);
            int size0=sum0.size();
            int result=sum1;
            for(int i=0;i<size0-1;i++)
            {
                result+=sum0.get(i)+sum0.get(i+1);
                result+=sum0.get(i)*sum0.get(i+1);
            }
            System.out.println(result);
        }
    }
}"
93,D,Java,61798516,2023-04-07 20:17:23,Tdexi,答案错误,"import java.util.*;

public class Main{
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int num = Integer.parseInt( in.nextLine());
        int[] arr = new int[num];
        int count = 0;
        while (count < num) {
            arr[count] = in.nextInt(); 
            count++;
        }
        
        int result = 0;
        int left = 0, right = 0;
        boolean flag = false;
        for (int i = 0; i < num; i++) {
            if (arr[i] == 0) {
                
                if (flag) {
                    right++;
                }
                else {
                    left++;
                }
            } else {
                result ++;
                if (!flag) {
                    flag = true;
                    result += left;
                }
                else {
                    result += 2*right + left*right;
                    left = right;
                    right = 0;
                }
            }
        }
        if (right > 0) {
            result += right + right * left;
        }
        System.out.println(result);
    }
}"
94,D,Java,61798530,2023-04-07 20:17:31,准备进厂的托尼很喜欢溜溜球,答案错误,"import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;

public class Main {

	private static boolean is_one;
	private static int n;
	private static long ans;
	private static String[] arrTemp;
	private static final int N = 1000010;
	private static int[] q = new int[N];
	private static int[] left_zero = new int[N];
	private static int[] right_zero = new int[N];
	private static final BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
	private static final BufferedWriter out = new BufferedWriter(new OutputStreamWriter(System.out));

	public static void main(String[] args) throws IOException {

		n = Integer.parseInt(in.readLine());

		arrTemp = in.readLine().split("" "");
		for (int i = 0; i < n; i++) {
			q[i] = Integer.parseInt(arrTemp[i]);
		}

		for (int i = 0; i < n; i++) {
			if (q[i] == 1) {
				ans += n - i;
				break;
			}
		}


		for (int i = n - 1; i >= 0; i--) {
			if (is_one && q[i] == 0) {
				ans++;
			}
			if (q[i] == 1) {
				is_one = true;
			}
		}

		int zero = 0;
		for (int i = 0; i < n; i++) { // 左边0
			if (q[i] == 0)
				zero++;
			else {
				left_zero[i] = zero;
				zero = 0;
			}
		}

		zero = 0;
		for (int i = n - 1; i > 0; i--) {
			if (q[i] == 0)
				zero++;
			else {
				right_zero[i] = zero;
				zero = 0;
			}
		}

		for (int i = 0; i < n; i++) {
			ans += (left_zero[i] * right_zero[i]);
		}

		out.write(ans + """");

		in.close();
		out.close();
	}

}
"
95,D,Java,61798634,2023-04-07 20:18:20,自由oVo,答案正确,"import java.util.*;

public class Main {
	public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] num = new int[n];
        for(int i = 0; i < n; i++) {
        	num[i] = sc.nextInt();
        }
        int[] sum = new int[n + 1];
        for(int i = 1; i <= n; i++)sum[i] = sum[i - 1] + num[i - 1];
        HashMap<Integer, Integer> map = new HashMap<>();
        map.put(0, 1);
        long ans = 0;
        for(int i = 1; i <= n; i++) {
        	if(map.containsKey(sum[i] - 1)) {
        		ans += map.get(sum[i] - 1);
        	}
        	map.put(sum[i], map.getOrDefault(sum[i], 0) + 1);
        }
        System.out.println(ans);
    }
}"
96,D,Java,61798638,2023-04-07 20:18:22,kk129,答案错误,"import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int[] s = new int[n];
            int a = 0;
            for (int i = 0; i < n; i++) {
                s[i] = in.nextInt();
                if(s[i]==1)
                    a++;
            }
            if(a==0)
                out.println(0);
            else {
                long sum = a;
                long temp = 0;
                long t2 = 0;
                boolean flag = true;
                boolean f1 = false;
                for (int i = 0; i < n; i++) {
                    if (s[i] == 0) {
                        temp++;
                    } else {
                        if (f1)
                        sum += temp * t2;
                        if (flag) {
                            if (s[0] == 0) {
                                sum += temp;
                            } else {
                                sum += temp * 2;
                            }
                            flag = false;
                        }
                        else
                            sum += temp*2;
                        if (i - 1 >= 0 && i + 1 < n) {
                            if (s[i - 1] == 0 && s[i + 1] == 0) {
                                f1 = true;
                                t2 = temp;
                            } else
                                f1 = false;
                        } else
                            sum += temp * 2;
                        temp = 0;
                    }
                }
                if (temp != 0) {
                    sum += temp;
                    if (f1)
                        sum += temp * t2;
                }
                out.println(sum);
            }
        }
    }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;
        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
97,D,Java,61798787,2023-04-07 20:19:38,小怂很怂,答案正确,"
import java.io.*;
import java.util.LinkedList;
import java.util.Queue;

/**
 * @ClassName 孤独区间
 * @Description TODO
 * @Author 小怂很怂
 * @Date 2023/4/7 19:32
 * @Version 1.0
 **/
public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(br);
    static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));

    public static void main(String[] args) throws Exception {
        int n=nextInt();
        int []f=new int[n+2];
        for (int i=1;i<=n;i++) f[i]=nextInt();
        f[0]=f[n+1]=1;
        int k=0,j=0,s=0;
        long res=0;
        for (int i=0;i<=n+1;i++){
            if (f[i]==1) s++;
            if (i!=0&&f[i]==1){
                if (i!=n+1) res+=i-j-1;
                if (s>=3) res+=(long)(i-j-1)*(j-k-1);
                k=j;
                j=i;
            }
        }
        j=n+1;
        for (int i=n+1;i>0;i--){
            if (f[i]==1&&i!=n+1){
                res+=j-i-1;
                j=i;
            }
        }
        for (int i=1;i<=n;i++) res+=f[i];
        pw.println(res);
        pw.flush();
    }

    public static int nextInt() throws Exception {//int型
        st.nextToken();
        return (int) st.nval;
    }

    public static long nextLong() throws Exception {//long型
        st.nextToken();
        return (long) st.nval;
    }
}
"
98,D,Java,61798807,2023-04-07 20:19:51,Tdexi,答案错误,"import java.util.*;

public class Main{
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int num = Integer.parseInt( in.nextLine());
        int[] arr = new int[num];
        int count = 0;
        while (count < num) {
            arr[count] = in.nextInt(); 
            count++;
        }
        
        int result = 0;
        int left = 0, right = 0;
        boolean flag = false;
        for (int i = 0; i < num; i++) {
            if (arr[i] == 0) {
                
                if (flag) {
                    right++;
                }
                else {
                    left++;
                }
            } else {
                result ++;
                if (!flag) {
                    flag = true;
                    result += left;
                }
                else {
                    result += 2*right + left*right;
                    left = right;
                    right = 0;
                }
            }
        }
        if (right > 0) {
            result += right + right * left;
        }
        System.out.println(result);
    }
}"
99,D,Java,61798897,2023-04-07 20:20:31,小陈同学。1,运行超时,"
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {
	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
		int n = Integer.valueOf(in.readLine());
		String[] s = in.readLine().split("" "");
		int[] a = new int[n+1];
		int temp = 0;
		int cnt = 0;
		int t0 = 0;
		for(int i = 1; i<n+1; i++) {
			a[i] = Integer.valueOf(s[i-1]);
		}
		for(int i = 1; i<n+1; i++) {
			temp = 0;
			for(int j = i; j<n+1; j++) {
				temp = temp+a[i];
				if(temp == 0)t0++;
				if(temp==1) {
					cnt++;
					cnt+=t0;
					t0 = 0;
				}
				if(temp>1)continue;
			}
		}
		System.out.println(cnt);
	}
}
"
100,D,Java,61798899,2023-04-07 20:20:32,_lwq_,执行出错,"import java.util.*;
import java.io.*;
public class Main{
    static int n,m,N = 100010;
    static Node[] tr = new Node[4*N];
    static int[] w = new int[N];
    
    
    static void pushup(int u){
        tr[u].sum =tr[u<<1].sum + tr[u<<1|1].sum;
    }
    
    static void build(int u, int l, int r){
        if(l==r) tr[u] = new Node(l,r,w[r]);
        else{
    		tr[u] = new Node(l,r,0);
            int mid = l+r>>1;
            build(u<<1, l, mid);
            build(u<<1|1, mid+1, r);
            pushup(u);
        }
    }
    
    static int query(int u, int l, int r){
        if(tr[u].l>=l&&tr[u].r<=r) return tr[u].sum;
        int mid = tr[u].r+tr[u].l>>1;
        int sum = 0;
        if(mid>=l) sum += query(u<<1,l,r);
        if(mid<r)  sum += query(u<<1|1,l, r);
        return sum;
    }
    
    static void modify(int u, int x, int v){
        if(tr[u].l==tr[u].r) tr[u].sum +=v;
        else{
            int mid = tr[u].l+tr[u].r>>1;
            if(x<=mid) modify(u<<1,x,v);
            else modify(u<<1|1,x,v);
            pushup(u);
        }
    }
    
    public static void main(String[] args) throws IOException{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter wt = new PrintWriter(new OutputStreamWriter(System.out));
        String[] s1 = br.readLine().split("" "");
        
        n = Integer.parseInt(s1[0]);
        String[] s2 = br.readLine().split("" "");
        for(int i =1;i<=n;i++) w[i] = Integer.parseInt(s2[i-1]);
        
        // 构建树状数组
        build(1,1,n);
        long res = 0;
        for(int i = 1;i<=n;i++){
            for(int j = i;j<=n;j++){
                if(query(1,i,j)==1) res++;
            }
        }    
            
        wt.println(res);
        wt.flush();
              
        
    }
}

class Node{
    int sum , l , r;
    public Node(int l, int r,int sum){
        this.l = l;
        this.r = r;
        this.sum = sum;
    }
}"
101,D,Java,61798914,2023-04-07 20:20:40,Mosyi.,答案错误,"import java.io.*;
import java.util.*;
import java.math.*;
public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
           int n = in.nextInt();
           int[] a = new int[n+1];
           int sum = 0;
           int f = 0;
           int l1 = 0;
           int l2 = 0;
            for (int i = 1; i <= n; i++) {
                a[i] = in.nextInt();
                if(a[i] == 1){
                    if(f == 1){
                        sum += l1*l2+l1+l2+1;
                        l1 = l2;
                        f = 0;
                    }
                    if(a[i+1] == 1){
                        sum += l1;
                    }else{
                        f = 1;
                    }
                    if(a[i-1] == 1){
                        l1 = 0;
                    }
                }else{
                    if(f == 0){
                        l1++;
                    }else{
                        l2++;
                    }
                }
            }
            if(f == 1){
                sum += l1*l2+l1+l2+1;
            }else{
                sum += l1;
            }
            out.println(sum);
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
102,D,Java,61798926,2023-04-07 20:20:45,_lwq_,运行超时,"import java.util.*;
import java.io.*;
public class Main{
    static int n,m,N = 1000010;
    static Node[] tr = new Node[4*N];
    static int[] w = new int[N];
    
    
    static void pushup(int u){
        tr[u].sum =tr[u<<1].sum + tr[u<<1|1].sum;
    }
    
    static void build(int u, int l, int r){
        if(l==r) tr[u] = new Node(l,r,w[r]);
        else{
    		tr[u] = new Node(l,r,0);
            int mid = l+r>>1;
            build(u<<1, l, mid);
            build(u<<1|1, mid+1, r);
            pushup(u);
        }
    }
    
    static int query(int u, int l, int r){
        if(tr[u].l>=l&&tr[u].r<=r) return tr[u].sum;
        int mid = tr[u].r+tr[u].l>>1;
        int sum = 0;
        if(mid>=l) sum += query(u<<1,l,r);
        if(mid<r)  sum += query(u<<1|1,l, r);
        return sum;
    }
    
    static void modify(int u, int x, int v){
        if(tr[u].l==tr[u].r) tr[u].sum +=v;
        else{
            int mid = tr[u].l+tr[u].r>>1;
            if(x<=mid) modify(u<<1,x,v);
            else modify(u<<1|1,x,v);
            pushup(u);
        }
    }
    
    public static void main(String[] args) throws IOException{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter wt = new PrintWriter(new OutputStreamWriter(System.out));
        String[] s1 = br.readLine().split("" "");
        
        n = Integer.parseInt(s1[0]);
        String[] s2 = br.readLine().split("" "");
        for(int i =1;i<=n;i++) w[i] = Integer.parseInt(s2[i-1]);
        
        // 构建树状数组
        build(1,1,n);
        long res = 0;
        for(int i = 1;i<=n;i++){
            for(int j = i;j<=n;j++){
                if(query(1,i,j)==1) res++;
            }
        }    
            
        wt.println(res);
        wt.flush();
              
        
    }
}

class Node{
    int sum , l , r;
    public Node(int l, int r,int sum){
        this.l = l;
        this.r = r;
        this.sum = sum;
    }
}"
103,D,Java,61798966,2023-04-07 20:21:07,牛客829798037号,执行出错,"

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        List<Integer>list=new ArrayList<>();
        int []num=new int[n+1];
        for(int i=1;i<=n;i++){
            num[i]=sc.nextInt();
            if(num[i]==1){
                list.add(i);
            }
        }
        int res=0;
        if(list.size()==1){
            res+=((list.get(0)-1+1)*(n-list.get(0)+1));
        }else if(list.size()>1) {
            for (int i = 0; i <= list.size() - 1; i++) {
                int ji=list.get(n);
                if (i == 0) {
                    res +=(ji-1+1)*(list.get(1)-ji);
                }else if(i==list.size()-1){
                    res+=(ji-list.get(i-1))*(n-ji+1);
                }else{
                    res+=(ji-list.get(i-1))*(list.get(i+1)-ji);
                }
            }
        }
        System.out.println(res);
    }
}
"
104,D,Java,61799001,2023-04-07 20:21:25,牛客824004940号,运行超时,"

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

/**
 * D
 * @author zxf
 * @date 2023/4/7 19:47
 * @version 1.0
 */
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] nums = new int[n];
        for (int i = 0;i < n;i++){
            nums[i] = sc.nextInt();
        }
        List<Integer> list = new ArrayList<>();
        boolean[] flag = new boolean[n];
        List<List<Integer>> res = new ArrayList<>();
        dfs(0,nums,list,flag,res);
//         for (List<Integer> re : res) {
//             System.out.println(""re = "" + re);
//         }
        System.out.println(res.size());
    }

    private static void dfs(int startIndex, int[] nums, List<Integer> list, boolean[] flag, List<List<Integer>> res) {

        if (check(list))  res.add(new ArrayList<>(list));
        for (int i = startIndex;i < nums.length;i++){
            if (flag[i]) continue;
//             if (check(list)) 
                
            flag[i] = true;
            list.add(nums[i]);
            dfs(i+1,nums,list,flag, res);
            list.remove(list.size()-1);
            flag[i] = false;
        }
    }

    private static boolean check(List<Integer> list){
        if (list == null || list.size() == 0)return false;
        int i1 = list.indexOf(1);
        int i2 = list.lastIndexOf(1);
        return i1== i2 && i1 != -1;        
    }
}

"
105,D,Java,61799003,2023-04-07 20:21:26,人工智能3221黄天鲁,运行超时,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner=new Scanner(System.in);
        int n= scanner.nextInt();
        int []a=new int[n];
        for (int i = 0; i < n; i++) {
            a[i]= scanner.nextInt();
        }
        int gs=0;
        int cs=0;
        int cs1=0;
        for (int i = 0; i < n; i++) {
            if(a[i]==1){
                gs++;
            }
            for (int j = i; j < n; j++) {
                cs=0;
                cs1=0;
                for (int k = i; k <j+1; k++) {
                    if(a[k]==1){
                        cs++;
                    }else {
                        cs1++;
                    }
                    if(cs>1){
                        break;
                    }
                    if(cs==1&&cs1>0){
                        gs++;
                    }
                }
            }
        }
        System.out.println(gs-1);
    }
}
"
106,D,Java,61799010,2023-04-07 20:21:33,Tdexi,答案错误,"import java.util.*;

public class Main{
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int num = Integer.parseInt( in.nextLine());
        int[] arr = new int[num];
        int count = 0;
        while (count < num) {
            arr[count] = in.nextInt(); 
            count++;
        }
        
        int result = 0;
        int left = 0, right = 0;
        boolean flag = false;
        for (int i = 0; i < num; i++) {
            if (arr[i] == 0) {
                
                if (flag) {
                    right++;
                }
                else {
                    left++;
                }
            } else {
                result ++;
                if (!flag) {
                    flag = true;
                    result += left;
                }
                else {
                    result += 2*right + left*right;
                    left = right;
                    right = 0;
                }
            }
        }
        if (right > 0) {
            if (left == 0) {
                result += right;
            }
            else {
                result += right + right * left;
            }
        }
        System.out.println(result);
    }
}"
107,D,Java,61799161,2023-04-07 20:22:45,Tdexi,答案错误,"import java.util.*;

public class Main{
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int num = Integer.parseInt( in.nextLine());
        int[] arr = new int[num];
        int count = 0;
        while (count < num) {
            arr[count] = in.nextInt(); 
            count++;
        }
        
        int result = 0;
        int left = 0, right = 0;
        boolean flag = false;
        for (int i = 0; i < num; i++) {
            if (arr[i] == 0) {
                
                if (flag) {
                    right++;
                }
                else {
                    left++;
                }
            } else {
                result ++;
                if (!flag) {
                    flag = true;
                    result += left;
                }
                else {
                    result += 2*right + left*right;
                    left = right;
                    right = 0;
                }
            }
        }
        if (flag == false) {
            result += left;
        }
        else if (right > 0) {
            if (left == 0) {
                result += right;
            }
            else {
                result += right + right * left;
            }
        }
        System.out.println(result);
    }
}"
108,D,Java,61799162,2023-04-07 20:22:45,小陈同学。1,运行超时,"
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {
	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
		int n = Integer.valueOf(in.readLine());
		String[] s = in.readLine().split("" "");
		int[] a = new int[n+1];
		int temp = 0;
		int cnt = 0;
		int t0 = 0;
		for(int i = 1; i<n+1; i++) {
			a[i] = Integer.valueOf(s[i-1]);
		}
		for(int i = 1; i<n+1; i++) {
			temp = 0;
			for(int j = i; j<n+1; j++) {
				temp = temp+a[i];
				if(temp == 0)t0++;
				if(temp==1) {
					cnt++;
					cnt+=t0;
					t0 = 0;
				}
				if(temp>1)break;
			}
		}
		System.out.println(cnt);
	}
}
"
109,D,Java,61799175,2023-04-07 20:22:52,牛客829798037号,答案错误,"

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        List<Integer>list=new ArrayList<>();
        int []num=new int[n+1];
        for(int i=1;i<=n;i++){
            num[i]=sc.nextInt();
            if(num[i]==1){
                list.add(i);
            }
        }
        int res=0;
        if(list.size()==1){
            res+=((list.get(0)-1+1)*(n-list.get(0)+1));
        }else if(list.size()>1) {
            for (int i = 0; i <= list.size() - 1; i++) {
                int ji=list.get(i);
                if (i == 0) {
                    res +=(ji-1+1)*(list.get(1)-ji);
                }else if(i==list.size()-1){
                    res+=(ji-list.get(i-1))*(n-ji+1);
                }else{
                    res+=(ji-list.get(i-1))*(list.get(i+1)-ji);
                }
            }
        }
        System.out.println(res);
    }
}
"
110,D,Java,61799371,2023-04-07 20:24:26,牛客824004940号,运行超时,"

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

/**
 * D
 * @author zxf
 * @date 2023/4/7 19:47
 * @version 1.0
 */
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] nums = new int[n];
        for (int i = 0;i < n;i++){
            nums[i] = sc.nextInt();
        }
        List<Integer> list = new ArrayList<>();
        boolean[] flag = new boolean[n];
        List<List<Integer>> res = new ArrayList<>();
        dfs(0,nums,list,flag,res);
//         for (List<Integer> re : res) {
//             System.out.println(""re = "" + re);
//         }
        System.out.println(res.size());
    }

    private static void dfs(int startIndex, int[] nums, List<Integer> list, boolean[] flag, List<List<Integer>> res) {

        if (check(list))  res.add(new ArrayList<>(list));
        for (int i = startIndex;i < nums.length;i++){
            if (flag[i]) continue;
//             if (check(list)) 
            if (count(list)) return;
            flag[i] = true;
            list.add(nums[i]);
            dfs(i+1,nums,list,flag, res);
            list.remove(list.size()-1);
            flag[i] = false;
        }
    }
private static boolean count(List<Integer> list) {
        int i1 = list.indexOf(1);
        int i2 = list.lastIndexOf(1);
        if (i1 == -1) return false;
        if (i1 == i2) return false;
        return true;
    }
    private static boolean check(List<Integer> list){
        if (list == null || list.size() == 0)return false;
        int i1 = list.indexOf(1);
        int i2 = list.lastIndexOf(1);
        return i1== i2 && i1 != -1;        
    }
}

"
111,D,Java,61799387,2023-04-07 20:24:36,准备进厂的托尼很喜欢溜溜球,答案错误,"import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;

public class Main {

	private static boolean is_one;
	private static int n;
	private static long ans;
	private static String[] arrTemp;
	private static final int N = 1000010;
	private static int[] q = new int[N];
	private static int[] left_zero = new int[N];
	private static int[] right_zero = new int[N];
	private static final BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
	private static final BufferedWriter out = new BufferedWriter(new OutputStreamWriter(System.out));

	public static void main(String[] args) throws IOException {

		n = Integer.parseInt(in.readLine());

		arrTemp = in.readLine().split("" "");
		for (int i = 0; i < n; i++) {
			q[i] = Integer.parseInt(arrTemp[i]);
		}

		int zero = 0;
		for (int i = 0; i < n; i++) { // 左边0
			if (q[i] == 0)
				zero++;
			else {
				left_zero[i] = zero;
				zero = 0;
			}
		}

		zero = 0;
		for (int i = n - 1; i > 0; i--) { // 右边0
			if (q[i] == 0)
				zero++;
			else {
				right_zero[i] = zero;
				zero = 0;
			}
		}

		for (int i = 0; i < n; i++) { // 1的数量
			if (q[i] == 1)
				ans++;
		}

		for (int i = 0; i < n; i++) { // 左边数
			if (is_one && q[i] == 0)
				ans++;
			if (q[i] == 1)
				is_one = true;
		}
		is_one = false;

		for (int i = n - 1; i >= 0; i--) {
			if (is_one && q[i] == 0)
				ans++;
			if (q[i] == 1)
				is_one = true;
		}

		for (int i = 0; i < n; i++) {
			ans += (left_zero[i] * right_zero[i]);
		}

		out.write(ans + """");

		in.close();
		out.close();
	}

}
"
112,D,Java,61799432,2023-04-07 20:24:54,给个AC吧,答案错误,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;

public class Main {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));

	static class sc {
		static StreamTokenizer in = new StreamTokenizer(br);

		static int nextInt() throws IOException {
			in.nextToken();
			return (int) in.nval;
		}
	}

	public static void main(String[] args) throws IOException {
		int n = sc.nextInt();
		int[] a = new int[n + 1];
		for (int i = 1; i <= n; i++) {
			a[i] = sc.nextInt();
		}
		for (int i = 1; i <= n; i++) {
			a[i] = a[i] + a[i - 1];
		}
		//System.out.println(Arrays.toString(a));
		long sum = 0;
		int[] tmp = new int[n + 1];
		tmp[0] = 1;
		for (int i = 1; i <= n; i++) {
			if (a[i] - 1 >= 0) {
				sum += tmp[a[i] - 1];
				tmp[a[i]]++;
			}
		}
		out.println(sum << 1);
		out.flush();
		out.close();
	}
}"
113,D,Java,61799548,2023-04-07 20:25:53,Tdexi,答案错误,"import java.util.*;

public class Main{
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int num = Integer.parseInt( in.nextLine());
        int[] arr = new int[num];
        int count = 0;
        while (count < num) {
            arr[count] = in.nextInt(); 
            count++;
        }
        
        int result = 0;
        int left = 0, right = 0;
        boolean flag = false;
        for (int i = 0; i < num; i++) {
            if (arr[i] == 0) {
                
                if (flag) {
                    right++;
                }
                else {
                    left++;
                }
            } else {
                result ++;
                if (!flag) {
                    flag = true;
                    result += left;
                }
                else {
                    result += 2*right + left*right;
                    left = right;
                    right = 0;
                }
            }
        }
        if (right > 0) {
            if (left == 0) {
                result += right;
            }
            else {
                result += right + right * left;
            }
        }
        System.out.println(result);
    }
}"
114,D,Java,61799619,2023-04-07 20:26:24,Mosyi.,答案错误,"import java.io.*;
import java.util.*;
import java.math.*;
public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
           int n = in.nextInt();
           int[] a = new int[n+1];
           int sum = 0;
           int f = 0;
           int l1 = 0;
           int l2 = 0;
            for (int i = 1; i <= n; i++) {
                a[i] = in.nextInt();
                if(a[i] == 1){
                    if(f == 1){
                        sum += l1*l2+l1+l2+1;
                        l1 = l2;
                        l2 = 0;
                        f = 0;
                    }
                    if(a[i+1] == 1){
                        sum += l1+1;
                    }else{
                        f = 1;
                    }
                    if(a[i-1] == 1 && a[i+1] == 1){
                        sum++;
                        l1 = 0;
                        l2 = 0;
                    }
                }else{
                    if(f == 0){
                        l1++;
                    }else{
                        l2++;
                    }
                }
            }
            if(f == 1){
                sum += l1*l2+l1+l2+1;
            }else{
                sum += l1;
            }
            out.println(sum);
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
115,D,Java,61799816,2023-04-07 20:28:07,kk129,答案正确,"import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int[] s = new int[n];
            int a = 0;
            for (int i = 0; i < n; i++) {
                s[i] = in.nextInt();
                if(s[i]==1)
                    a++;
            }
            if(a==0)
                out.println(0);
            else {
                long sum = a;
                long temp = 0;
                long t2 = 0;
                boolean flag = true;
                boolean f1 = false;
                for (int i = 0; i < n; i++) {
                    if (s[i] == 0) {
                        temp++;
                    } else {
//                        out.println(temp);
                        if (f1)
                        sum += temp * t2;
                        if (flag) {
                            if (s[0] == 0) {
                                sum += temp;
                            } else {
                                sum += temp * 2;
                            }
                            flag = false;
                        }
                        else {
                            if(i!=n-1)
                            sum += temp * 2;
                        }
                        if (i - 1 >= 0 && i + 1 < n) {
                            if (s[i - 1] == 0 && s[i + 1] == 0) {
                                f1 = true;
                                t2 = temp;
                            } else
                                f1 = false;
                        } else
                            sum += temp * 2;
                        temp = 0;
//                        out.println(sum);
                    }
                }
                if (temp != 0) {
                    sum += temp;
                    if (f1)
                        sum += temp * t2;
                }
                out.println(sum);
            }
        }
    }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;
        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
116,D,Java,61799908,2023-04-07 20:28:54,ssssse,答案正确,"import java.util.Arrays;
import java.util.Scanner;

public class Main {

    static int n,m;
////
////
    static int ans = -1;
//    static int max = 0;
    static int[][] kxy = new int[][]{{0,1},{1,0},{-1,0},{0,-1}};

//    static void dfs(int a,int b,char [][]mm){
//        ans=Math.max(ans,max);
////        System.out.println(""ans:   ""+ans);
//        for (int i = 0; i < 4; i++) {
//            int kx = a + kxy[i][0];
//            int ky = b + kxy[i][1];
//            if(kx>=0&&kx<n&&ky>=0&&ky<m&&mm[kx][ky]!='#'){
//                if(mm[kx][ky]=='!') {
//                    max++;
//                }
//                mm[kx][ky]='#';
//                dfs(kx,ky,mm);
//            }
//        }
//    }

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
//        n = in.nextInt();
//        m = in.nextInt();
//        char [][] map = new char[n][m];
//        int a = 0;
//        int b = 0;
//        for (int i = 0; i < n; i++) {
//            String s = in.next();
//            for (int j = 0; j < m; j++) {
//                map[i][j]=s.charAt(j);
//                if(map[i][j]=='@'){
//                    a=i;
//                    b=j;
//                }
//            }
//        }
//        while (true){
//            int aa = a;
//            int bb = b;
//            for (int i = 0; i < 4; i++) {
//                int kx = aa+kxy[i][0];
//                int ky = bb+kxy[i][1];
//                if(kx>=0&&kx<n&&ky>=0&&ky<m&&map[kx][ky]!='#'){
//                    if(map[kx][ky]=='!'){
//                        map[kx][ky]='.';
//                        ans++;
//                    }
//                    for (int j = kx-1; j >=0 ;j--) {
//                        if(map[j][ky]=='!'){
//                            map[j][ky]='.';
//                            ans++;
//                        }else if(map[j][ky]=='#'){
//                            break;
//                        }
//                    }
//                    for (int j = kx+1; j <=n ;j++) {
//                        if(map[j][ky]=='!'){
//                            map[j][ky]='.';
//                            ans++;
//                        }else if(map[j][ky]=='#'){
//                            break;
//                        }
//                    }
//                    for (int j = ky-1; j >= 0 ;j--) {
//                        if(map[kx][j]=='!'){
//                            map[kx][j]='.';
//                            ans++;
//                        }else if(map[kx][j]=='#'){
//                            break;
//                        }
//                    }
//                    for (int j = kx+1; j <= m ;j++) {
//                        if(map[kx][j]=='!'){
//                            map[kx][j]='.';
//                            ans++;
//                        }else if(map[kx][j]=='#'){
//                            break;
//                        }
//                    }
//                }
//            }
//        }
//        dfs(a,b,map);
//        System.out.println(ans);

        int n = in.nextInt();
        A[] x = new A[n];
        for (int i = 0; i < n; i++) {
            x[i] = new A();
            x[i].a = in.nextInt();
        }
        int l = 0;
        for (int i = 0; i < n; i++) {
          if(x[i].a==0){
              l++;
          }else {
              x[i].l=l+1;
              l=0;
          }
        }
        l=0;
        for (int i = n-1; i >= 0; i--) {
            if(x[i].a==0){
                l++;
            }else {
                x[i].r=l+1;
                l=0;
            }
        }
        long ans = 0;
        for (int i = 0; i < n; i++) {
            if (x[i].a == 1) {
                ans += (long) (x[i].l) * (x[i].r);
            }
        }
//        for (int i = 0; i < n; i++) {
//            System.out.println(x[i].a + "" l:"" + x[i].l + "" r:"" + x[i].r);
//        }
        System.out.println(ans);
    }
    static class A{
        int a,l,r;
    }
}"
117,D,Java,61799917,2023-04-07 20:28:59,小小小巨人,答案正确,"import java.io.*;
import java.math.*;
import java.util.*;
import java.util.Map.*;
/**
 * 
 * @author TCchen 
 */
public class Main {
	public static void main(String[]args) throws IOException {
		new Main().run();
	}
	File input=new File(""input.txt"");
	File output=new File(""output.txt"");
	void run() throws IOException{
		boolean debug=false;
//		debug=true;
		if(debug)new Solve().setIO(input, output).run();
		else new Solve().setIO(System.in,System.out).run();
	}
	class Solve extends ioTask{
		int n,m,k,i,j,len,p,l,r;
		void solve()throws IOException{
			n=in.in();
			Queue<Integer>q=new LinkedList<Integer>();
			int cnt=0;
			for(i=1;i<=n;i++) {
				if(in.in()==0)cnt++;
				else {
					q.add(cnt);
					cnt=0;
				}
			}
			q.add(cnt);
			int pre=q.poll();
			long ans=0;
			while(!q.isEmpty()) {
				cnt=q.poll();
				ans+=1l*(pre+1)*(cnt+1);
				pre=cnt;
			}
			out.println(ans);
		}
		int te;
		void run()throws IOException{
//			init();
			int t=1;
//			t=in.in();
			for(te=1;te<=t;te++) {
				solve();
//				out.flush();
			}
			out.close();
		}
//		long timeMillis;
//		void st() {
//			timeMillis=System.currentTimeMillis();
//		}
//		void ed() {
//			System.out.println((System.currentTimeMillis()-timeMillis)+""ms"");
//		}
	}
	class QIn{
		StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
		int in() throws IOException {
			st.nextToken();
			return (int)st.nval;
		}
		long inl() throws IOException {
			st.nextToken();
			return (long)st.nval;
		}
		double ind()throws IOException  {
			st.nextToken();
			return st.nval;
		}
		String ins() throws IOException {
			st.nextToken();
			return st.sval;
		}
	}
	class In{
		private StringTokenizer in=new StringTokenizer("""");
		private InputStream is;
		private BufferedReader br;
		public In(File file) throws IOException {
			is=new FileInputStream(file);
			init();
		}
		public In(InputStream is) throws IOException{
			this.is=is;
			init();
		}
		private void init() throws IOException {
			br=new BufferedReader(new InputStreamReader(is));
		}
		/**
		 * File and OJ only
		 */
		boolean hasNext() throws IOException {
			return in.hasMoreTokens()||br.ready();
		}
		String ins() throws IOException {
			while(!in.hasMoreTokens()) {
				in=new StringTokenizer(br.readLine());
			}
			return in.nextToken();
		}
		int in() throws IOException {
			return Integer.parseInt(ins());
		}
		long inl() throws IOException {
			return Long.parseLong(ins());
		}
		double ind() throws IOException {
			return Double.parseDouble(ins());
		}
		String line() throws IOException {
			return br.readLine();
		}
	}
	class Out{
		PrintWriter out;
		private OutputStream os;
		private void init() {
			out=new PrintWriter(new BufferedWriter(new OutputStreamWriter(os)));
		}
		public Out(File file) throws IOException {
			os=new FileOutputStream(file);
			init();
		}
		public Out(OutputStream os) throws IOException{
			this.os=os;
			init();
		}
	}
	abstract class ioTask{
		In in;
		PrintWriter out;
		public ioTask setIO(File in,File out) throws IOException{
			this.in=new In(in);
			this.out=new Out(out).out;
			return this;
		}
		public ioTask setIO(File in,OutputStream out) throws IOException{
			this.in=new In(in);
			this.out=new Out(out).out;
			return this;
		}
		public ioTask setIO(InputStream in,OutputStream out) throws IOException{
			this.in=new In(in);
			this.out=new Out(out).out;
			return this;
		}
		public ioTask setIO(InputStream in,File out) throws IOException{
			this.in=new In(in);
			this.out=new Out(out).out;
			return this;
		}
		void run()throws IOException{}
	}
}"
118,D,Java,61799969,2023-04-07 20:29:22,KY.cj,答案正确,"
import java.io.*;
import java.util.*;

public class Main {
    static int n;
    static StreamTokenizer st=new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
    public static void main(String[] args) throws IOException {
        n=nextInt();
        long sum=0,z=0,y=0,f=0;
        for (int i = 0; i <n ; i++) {
            int a=nextInt();
            if(a==1&&f!=0){
                sum=sum+z+y+z*y+1;
                z=y;
                y=0;
            }else if(a==1){
                f=1;
                z=y;
                y=0;
            }else y++;
        }
        if(f==0) System.out.println(0);
        else System.out.println(sum+z+y+z*y+1);
    }

    private static int nextInt() throws IOException {
        st.nextToken();
        return (int)st.nval;
    }
}
"
119,D,Java,61800018,2023-04-07 20:29:45,牛客829798037号,答案错误,"

import java.util.Scanner;
import java.util.Stack;

public class Main {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        Stack<Integer> stack=new Stack<>();
        int []num=new int[n+1];
        for(int i=1;i<=n;i++){
            num[i]=sc.nextInt();

            if(num[i]==1){
                stack.add(i);
            }
        }
        int res=0;
        int la=n+1;
        while(!stack.isEmpty()){
            int temp=stack.pop();
            if(!stack.isEmpty()){
                res+=(la-temp)*(temp-stack.peek());
            }else{
                res+=(la-temp)*(temp-0);
            }
            la=temp;
        }
        System.out.println(res);
    }
}
"
120,D,Java,61800051,2023-04-07 20:30:05,Tdexi,答案错误,"import java.util.*;

public class Main{
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int num = Integer.parseInt( in.nextLine());
        byte[] arr = new byte[num];
        int count = 0;
        while (count < num) {
            arr[count] = in.nextByte(); 
            count++;
        }
        
        int result = 0;
        int left = 0, right = 0;
        boolean flag = false;
        for (int i = 0; i < num; i++) {
            if (arr[i] == 0) {
                
                if (flag) {
                    right++;
                }
                else {
                    left++;
                }
            } else {
                result ++;
                if (!flag) {
                    flag = true;
                    result += left;
                }
                else {
                    result += 2*right + left*right;
                    left = right;
                    right = 0;
                }
            }
        }
        if (right > 0) {
            if (left == 0) {
                result += right;
            }
            else {
                result += right + right * left;
            }
        }
        System.out.println(result);
    }
}"
121,D,Java,61800108,2023-04-07 20:30:33,准备进厂的托尼很喜欢溜溜球,答案正确,"import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;

public class Main {

	private static boolean is_one;
	private static int n;
	private static long ans;
	private static String[] arrTemp;
	private static final int N = 1000010;
	private static int[] q = new int[N];
	private static long[] left_zero = new long[N];
	private static long[] right_zero = new long[N];
	private static final BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
	private static final BufferedWriter out = new BufferedWriter(new OutputStreamWriter(System.out));

	public static void main(String[] args) throws IOException {

		n = Integer.parseInt(in.readLine());

		arrTemp = in.readLine().split("" "");
		for (int i = 0; i < n; i++) {
			q[i] = Integer.parseInt(arrTemp[i]);
		}

		int zero = 0;
		for (int i = 0; i < n; i++) { // 左边0
			if (q[i] == 0)
				zero++;
			else {
				left_zero[i] = zero;
				zero = 0;
			}
		}

		zero = 0;
		for (int i = n - 1; i > 0; i--) { // 右边0
			if (q[i] == 0)
				zero++;
			else {
				right_zero[i] = zero;
				zero = 0;
			}
		}

		for (int i = 0; i < n; i++) { // 1的数量
			if (q[i] == 1)
				ans++;
		}

		for (int i = 0; i < n; i++) { // 左边数
			if (is_one && q[i] == 0)
				ans++;
			if (q[i] == 1)
				is_one = true;
		}
		is_one = false;

		for (int i = n - 1; i >= 0; i--) {
			if (is_one && q[i] == 0)
				ans++;
			if (q[i] == 1)
				is_one = true;
		}

		for (int i = 0; i < n; i++) {
			ans += (left_zero[i] * right_zero[i]);
		}

		out.write(ans + """");

		in.close();
		out.close();
	}

}
"
122,D,Java,61800138,2023-04-07 20:30:49,霖酱,答案错误,"import java.util.*;
import java.math.*;
import java.io.*;

public class Main {
    
    static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter out = new PrintWriter(new BufferedWriter(
        new OutputStreamWriter(System.out)));

    public static void main(String[] args) throws Exception{
        
        int n = read()[0];
        int[] a = read();
        
        int[] r = new int[n];
        for (int i = n - 1; i >= 1; i--) {
            if (a[i] == 0) r[i - 1] = r[i] + 1;
            else r[i - 1] = 0;
        }
        
        int cnt = a[0] == 1 ? r[0] : 0;
        Long ans = 0l;
        for (int i = 0; i < n; i++) {
            if (a[i] == 0) cnt++;
            else {
                if (cnt > 0) {
                    ans += 1l * (cnt + 1) * (r[i] + 1);
                }
                cnt = 0;
            }
        }
        if (cnt > 0 && a[n - 1] == 1) ans += cnt;
        
        out.print(ans);
        
        out.flush();
        in.close();
    } 
    
    static int[] read() throws Exception {
        String[] param = in.readLine().split("" "");
        int[] res = new int[param.length];
        for (int i = 0; i < param.length; i++) res[i] = Integer.parseInt(param[i]);
        return res;
    }
}
"
123,D,Java,61800219,2023-04-07 20:31:34,霖酱,答案错误,"import java.util.*;
import java.math.*;
import java.io.*;

public class Main {
    
    static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter out = new PrintWriter(new BufferedWriter(
        new OutputStreamWriter(System.out)));

    public static void main(String[] args) throws Exception{
        
        int n = read()[0];
        int[] a = read();
        
        int[] r = new int[n];
        for (int i = n - 1; i >= 1; i--) {
            if (a[i] == 0) r[i - 1] = r[i] + 1;
            else r[i - 1] = 0;
        }
        
        int cnt = 0;
        Long ans = a[0] == 1 ? r[0] : 0l;
        for (int i = 0; i < n; i++) {
            if (a[i] == 0) cnt++;
            else {
                if (cnt > 0) {
                    ans += 1l * (cnt + 1) * (r[i] + 1);
                }
                cnt = 0;
            }
        }
        if (cnt > 0 && a[n - 1] == 1) ans += cnt;
        
        out.print(ans);
        
        out.flush();
        in.close();
    } 
    
    static int[] read() throws Exception {
        String[] param = in.readLine().split("" "");
        int[] res = new int[param.length];
        for (int i = 0; i < param.length; i++) res[i] = Integer.parseInt(param[i]);
        return res;
    }
}
"
124,D,Java,61800231,2023-04-07 20:31:41,给个AC吧,答案错误,"
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;

public class Main {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));

	static class sc {
		static StreamTokenizer in = new StreamTokenizer(br);

		static int nextInt() throws IOException {
			in.nextToken();
			return (int) in.nval;
		}
	}

	public static void main(String[] args) throws IOException {
		int n = sc.nextInt();
		int[] a = new int[n + 1];
		for (int i = 1; i <= n; i++) {
			a[i] = sc.nextInt();
		}
		for (int i = 1; i <= n; i++) {
			a[i] = a[i] + a[i - 1];
		}
//		System.out.println(Arrays.toString(a));
		long sum = 0;
		int[] tmp = new int[n + 1];
		tmp[0] = 1;
		for (int i = 1; i <= n; i++) {
			sum += tmp[a[i]];
			tmp[a[i]]++;
		}
		out.println(sum << 1);
		out.flush();
		out.close();
	}
}
"
125,D,Java,61800294,2023-04-07 20:32:07,霖酱,答案错误,"import java.util.*;
import java.math.*;
import java.io.*;

public class Main {
    
    static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter out = new PrintWriter(new BufferedWriter(
        new OutputStreamWriter(System.out)));

    public static void main(String[] args) throws Exception{
        
        int n = read()[0];
        int[] a = read();
        
        int[] r = new int[n];
        for (int i = n - 1; i >= 1; i--) {
            if (a[i] == 0) r[i - 1] = r[i] + 1;
            else r[i - 1] = 0;
        }
        
        int cnt = 0;
        Long ans = a[0] == 1 ? r[0] : 0l;
        for (int i = 0; i < n; i++) {
            if (a[i] == 0) cnt++;
            else {
                if (cnt > 0) {
                    ans += 1l * (cnt + 1) * (r[i] + 1);
                }
                cnt = 0;
            }
        }
        
        out.print(ans);
        
        out.flush();
        in.close();
    } 
    
    static int[] read() throws Exception {
        String[] param = in.readLine().split("" "");
        int[] res = new int[param.length];
        for (int i = 0; i < param.length; i++) res[i] = Integer.parseInt(param[i]);
        return res;
    }
}
"
126,D,Java,61800345,2023-04-07 20:32:28,霖酱,答案错误,"import java.util.*;
import java.math.*;
import java.io.*;

public class Main {
    
    static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter out = new PrintWriter(new BufferedWriter(
        new OutputStreamWriter(System.out)));

    public static void main(String[] args) throws Exception{
        
        int n = read()[0];
        int[] a = read();
        
        int[] r = new int[n];
        for (int i = n - 1; i >= 1; i--) {
            if (a[i] == 0) r[i - 1] = r[i] + 1;
            else r[i - 1] = 0;
        }
        
        int cnt = 0;
        Long ans = 0l;
        for (int i = 0; i < n; i++) {
            if (a[i] == 0) cnt++;
            else {
                if (cnt > 0) {
                    ans += 1l * (cnt + 1) * (r[i] + 1);
                }
                cnt = 0;
            }
        }
        
        out.print(ans);
        
        out.flush();
        in.close();
    } 
    
    static int[] read() throws Exception {
        String[] param = in.readLine().split("" "");
        int[] res = new int[param.length];
        for (int i = 0; i < param.length; i++) res[i] = Integer.parseInt(param[i]);
        return res;
    }
}
"
127,D,Java,61800401,2023-04-07 20:32:59,霖酱,答案正确,"import java.util.*;
import java.math.*;
import java.io.*;

public class Main {
    
    static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter out = new PrintWriter(new BufferedWriter(
        new OutputStreamWriter(System.out)));

    public static void main(String[] args) throws Exception{
        
        int n = read()[0];
        int[] a = read();
        
        int[] r = new int[n];
        for (int i = n - 1; i >= 1; i--) {
            if (a[i] == 0) r[i - 1] = r[i] + 1;
            else r[i - 1] = 0;
        }
        
        int cnt = 0;
        Long ans = 0l;
        for (int i = 0; i < n; i++) {
            if (a[i] == 0) cnt++;
            else {
                    ans += 1l * (cnt + 1) * (r[i] + 1);
                cnt = 0;
            }
        }
        
        out.print(ans);
        
        out.flush();
        in.close();
    } 
    
    static int[] read() throws Exception {
        String[] param = in.readLine().split("" "");
        int[] res = new int[param.length];
        for (int i = 0; i < param.length; i++) res[i] = Integer.parseInt(param[i]);
        return res;
    }
}
"
128,D,Java,61800571,2023-04-07 20:34:25,牛客829798037号,答案正确,"

import java.util.Scanner;
import java.util.Stack;

public class Main {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        Stack<Integer> stack=new Stack<>();
        int []num=new int[n+1];
        for(int i=1;i<=n;i++){
            num[i]=sc.nextInt();
            if(num[i]==1){
                stack.add(i);
            }
        }
        long res=0;
        int la=n+1;
        while(!stack.isEmpty()){
            int temp=stack.pop();
            if(!stack.isEmpty()){
                res+= (long) (la - temp) *(temp-stack.peek());
            }else{
                res+= (long) (la - temp) *(temp-0);
            }
            la=temp;
        }
        System.out.println(res);
    }
}
"
129,D,Java,61800688,2023-04-07 20:35:18,Mosyi.,答案错误,"import java.io.*;
import java.util.*;
import java.math.*;
public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
           int n = in.nextInt();
           int[] a = new int[n+1];
           int sum = 0;
           int f = 0;
           int l1 = 0;
           int l2 = 0;
            for (int i = 1; i <= n; i++) {
                a[i] = in.nextInt();
                if(a[i] == 1){
                    if(f == 1){
                        sum += l1*l2+l1+l2+1;
                        l1 = l2;
                        l2 = 0;
                        f = 0;
                    }
                    if(i+1 <= n && a[i+1] == 1){
                        sum += l1+1;
                    }else{
                        f = 1;
                    }
                    if(i+1 <= n && i-1 >= 1 && a[i-1] == 1 && a[i+1] == 1){
                        sum++;
                        l1 = 0;
                        l2 = 0;
                    }
                }else{
                    if(f == 0){
                        l1++;
                    }else{
                        l2++;
                    }
                }
            }
            if(a[n] == 0) {
                if (f == 1) {
                    sum += l1 * l2 + l1 + l2 + 1;
                } else {
                    sum += l1 + 1;
                }
            }else{
                if(a[n-1] == 0){
                    sum += l1 + 1;
                }else{
                    sum++;
                }
            }
            out.println(sum);
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
130,D,Java,61800807,2023-04-07 20:36:31,giao1,答案错误,"import java.util.*;
import java.io.*;

public class Main{
    public static void main(String[] args) throws IOException {
        initReader();
        StringBuilder sb = new StringBuilder();
        Queue<Integer> ve = new LinkedList<>();
        int n = nextInt();
        int[] a = new int[n+1];
        int res = 0;
        for(int i = 1;i<=n;i++){
            int x = nextInt();
            sb.append(x);
            a[i] = x;
            if(x==1){
                res++;
                ve.add(i);
            }
        }
        while(!ve.isEmpty()){
            int mid = ve.poll();
            int l = mid-1,r=mid+1;
            while(l>0||r<=n){
                if(l>0&&r<=n&&a[l]==a[r]&&a[r]==0){
                    res+=3;
                    l--;
                    r++;
                    //System.out.println(l+"" ""+r);
                }else if(l>0&&a[l]==0){
                    if(mid+1<=n&&a[mid+1]==0)res+=2;
                    else res++;
                    l--;
                }else if(r<=n&&a[r]==0){
                    if(mid-1>0&&a[mid-1]==0)res+=2;
                    else res++;
                    r++;
                }else{
                    break;
                }
            }
        }
        pw.println(res);
        pw.close();
    }
    static BufferedReader reader;
    static StringTokenizer tokenizer;
    static PrintWriter pw;

    public static void initReader() throws IOException {
        reader = new BufferedReader(new InputStreamReader(System.in));
        tokenizer = new StringTokenizer("""");
        pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
    }


    public static boolean hasNext() {
        try {
            while (!tokenizer.hasMoreTokens()) {
                tokenizer = new StringTokenizer(reader.readLine());
            }
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public static String next() throws IOException {
        while (!tokenizer.hasMoreTokens()) {
            tokenizer = new StringTokenizer(reader.readLine());
        }
        return tokenizer.nextToken();
    }

    public static String nextLine() {
        try {
            return reader.readLine();
        } catch (Exception e) {
            return null;
        }
    }

    public static int nextInt() throws IOException {
        return Integer.parseInt(next());
    }

    public static long nextLong() throws IOException {
        return Long.parseLong(next());
    }

    public static double nextDouble() throws IOException {
        return Double.parseDouble(next());
    }

    public static char nextChar() throws IOException {
        return next().charAt(0);
    }
}"
131,D,Java,61800908,2023-04-07 20:37:32,山东协和学院_张福旭,答案错误,"import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
    static Read sc=new Read(System.in);
    static PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
    public static void main(String[] args) {
        int n=sc.nextInt();
        int[] a=new int[n+1];
        for(int i=1;i<=n;i++){
            a[i]=sc.nextInt();
        }
        long ans=0;
        for(int i=1;i<=n;i++){
            if (a[i]==1){
                int l=i-1,r=i+1;
                while (l>0&&a[l]==0) l--;
                while(r<=n&&a[r]==0) r++;
                ans+=(r-l-1)+(i-l-1)*(r-i-1);
            }
        }
        out.println(ans);
        out.flush();
    }
    static class Read {
        BufferedReader br;
        StringTokenizer st;

        public Read(InputStream in) {
            br = new BufferedReader(new InputStreamReader(in), 16384);
            eat("""");
        }

        public void eat(String s) {
            st = new StringTokenizer(s);
        }

        public String nextLine() {
            try {
                return br.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        public boolean hasNext() {
            while (!st.hasMoreTokens()) {
                String s = nextLine();
                if (s == null)
                    return false;
                eat(s);
            }
            return true;
        }

        public String next() {
            hasNext();
            return st.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }
    }
}"
132,D,Java,61800940,2023-04-07 20:37:47,wqz579,答案错误,"import java.util.*;
public class Main
{
    public static void main (String [] args)
    {
        Scanner in = new Scanner(System.in);
        while(in.hasNextInt())
        {
            int n=in.nextInt();
            int[] a=new int[n];
            int sum1=0;
            List<Integer> sum0=new ArrayList<>();
            int count=0;
            for(int i=0;i<n;i++)
            {
                a[i]=in.nextInt();
                if(a[i]==1)
                {
                    sum1++;
                    sum0.add(count);
                    count=0;
                    continue;
                }
                count++;
            }
            sum0.add(count);
            int size0=sum0.size();
            int result=sum1; 
            for(int i=0;i<size0-1;i++)
            {
                result+=sum0.get(i)+sum0.get(i+1);
                result+=sum0.get(i)*sum0.get(i+1);
            }
            System.out.println(result);
        }
    }
}"
133,D,Java,61801041,2023-04-07 20:38:41,牛客225545702号,答案错误,"import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        System.out.println(countSubsequences(a));  
    }
    public static int countSubsequences(int[] sequence) {
        // initialize the answer to 0
        int answer = 0;
        // get the length of the sequence
        int n = sequence.length;
        // loop through all possible bitmaps from 1 to 2^n - 1
        for (int bitmap = 1; bitmap < (1 << n); bitmap++) {
            // initialize the sum of the subsequence to 0
            int sum = 0;
            // loop through each bit of the bitmap
            for (int i = 0; i < n; i++) {
                // if the i-th bit is 1, add the corresponding element of the sequence to the sum
                if ((bitmap & (1 << i)) != 0) {
                    sum += sequence[i];
                }
            }
            // if the sum is 1, increment the answer
            if (sum == 1) {
                answer++;
            }
        }
        // return the answer
        return answer;
    }

}"
134,D,Java,61801085,2023-04-07 20:39:02,牛客815947679号,答案错误,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.nio.channels.AcceptPendingException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Queue;
import java.util.Scanner;
import java.util.Stack;

public class Main {
 public static void main(String[] args) throws IOException, ParseException {
  BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
  int n = Integer.parseInt(br.readLine());
  String[] temp = br.readLine().split("" "");
  int[] num = new int[n];
  for (int i = 0; i < num.length; i++) {
   num[i] = Integer.parseInt(temp[i]);
  }
  System.out.println(subarraySum(num, 1));
 }

 public static int subarraySum(int[] nums, int k) {
  int n = nums.length, ans = 0;
  int[] sum = new int[n + 10];
  for (int i = 1; i <= n; i++)
   sum[i] = sum[i - 1] + nums[i - 1];
  Map<Integer, Integer> map = new HashMap<>();
  map.put(0, 1);
  for (int i = 1; i <= n; i++) {
   int t = sum[i], d = t - k;
   ans += map.getOrDefault(d, 0);
   map.put(t, map.getOrDefault(t, 0) + 1);
  }
  return ans;
 }
}"
135,D,Java,61801086,2023-04-07 20:39:03,wxyyds,答案正确,"import java.io.*;
import java.util.*;
public class Main 
{
	static final int N=1000010;
	static int[] a=new int[N];
	static int[] s=new int[N];
	static boolean[] st=new boolean[N];
	static long sum;
	static BufferedReader in=new BufferedReader(new InputStreamReader(System.in));
	static PrintWriter out=new PrintWriter(new OutputStreamWriter(System.out));
	public static void main(String[] args) throws IOException 
	{
		int n=Integer.parseInt(in.readLine());
		String[] sp=in.readLine().split("" "");
		for(int i=1;i<=n;i++)
		{
			a[i]=Integer.parseInt(sp[i-1]);
			s[i]=s[i-1]+a[i];
		}
		int flag=0;
		for(int i=1,j=1;i<=n;i++)
		{
			if(a[i]==1) flag=i;
			while(s[i]-s[j-1]>1)
			{
				j++;
			}
			if(s[i]-s[j-1]==1) 
			{
				sum+=(flag-j+1);
			}
			
		}
		out.print(sum);
		out.flush();
	}
	
}"
136,D,Java,61801096,2023-04-07 20:39:07,小陈同学。1,答案错误,"
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {
	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
		int n = Integer.valueOf(in.readLine());
		String[] s = in.readLine().split("" "");
		int[] a = new int[n+1];
		int[] num = new int[n+1];
		int len = 0;
		int cnt = 0;
		int l = 0;
		int r = 0;
		for(int i = 1; i<n+1; i++) {
			a[i] = Integer.valueOf(s[i-1]);
			if(a[i]==1)num[len++] = i;
		}
		for(int i = 0; i<len; i++) {
			//中间
			cnt++;
			//左边
			for(int j = num[i]-1; j>=1; j--) {
				if(a[j]==1)break;
				l++;
			}
			//右边
			for(int j = num[i]+1; j<n+1; j++) {
				if(a[j]==1)break;
				r++;
			}
			//汇总
			cnt+=l+r+l*r;
			l = 0;
			r = 0;
		}
		System.out.println(cnt);
	}
}
"
137,D,Java,61801124,2023-04-07 20:39:20,Tdexi,答案错误,"import java.util.*;

public class Main{
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int num = Integer.parseInt( in.nextLine());
        byte[] arr = new byte[num];
        int count = 0;
        while (count < num) {
            arr[count] = in.nextByte(); 
            count++;
        }
        if (num == 0) {
            System.out.println(""0"");
        }
        int result = 0;
        int left = 0, right = 0;
        boolean flag = false;
        for (int i = 0; i < num; i++) {
            if (arr[i] == 0) {
                
                if (flag) {
                    right++;
                }
                else {
                    left++;
                }
            } else {
                result ++;
                if (!flag) {
                    flag = true;
                    result += left;
                }
                else {
                    result += 2*right + left*right;
                    left = right;
                    right = 0;
                }
            }
        }
        if (right > 0) {
            if (left == 0) {
                result += right;
            }
            else {
                result += right + right * left;
            }
        }
        System.out.println(result);
    }
}"
138,D,Java,61801336,2023-04-07 20:41:20,浮水3000,答案错误,"import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        for(int i=0;i<n;i++){
            a[i] = in.nextInt();
        }
        int left0 = 0,right0 = 0;
        int x = 0, y = 0;
        int count = 0;
        for(int i=0;i<n;i++){
            int temp = 0;
            if(a[i] == 1){
                x = i;y = i;
                while(x>0){
                    if(a[x-1]==0){
                        left0++;
                    }else{
                        break;
                    }
                    x--;
                }
                while(y<n-1){
                    if(a[y+1]==0){
                        right0++;
                    }else{
                        break;
                    }
                    y++;
                }
                if(left0!=0 && right0!=0){
                    temp = left0+1+right0*2;
                    count+=temp;
                }
                if(left0==0 || right0==0){
                    temp = left0+1+right0;
                    count+=temp;
                }
                left0 = 0;
                right0 = 0;
            }
        }
        System.out.println(count);
    }
}"
139,D,Java,61801338,2023-04-07 20:41:20,Tdexi,编译错误,"{""SPECIAL_TM_FH_MEMO_JSON_TAG"":""SPECIAL_TM_FH_MEMO_JSON_TAG"",""stderr"":""Main.java:42: error: 'else' without 'if'\n            else {\n            ^\n1 error""}

import java.util.*;

public class Main{
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int num = Integer.parseInt( in.nextLine());
        byte[] arr = new byte[num];
        int count = 0;
        while (count < num) {
            arr[count] = in.nextByte(); 
            count++;
        }
        if (num == 0) {
            System.out.println(""0"");
        }
        int result = 0;
        int left = 0, right = 0;
        boolean flag = false;
        for (int i = 0; i < num; i++) {
            if (arr[i] == 0) {
                
                if (flag) {
                    right++;
                }
                else {
                    left++;
                }
            } else {
                result ++;
                if (!flag) {
                    flag = true;
                    result += left;
                }
                else {
                    result += 2*right + left*right;
                    left = right;
                    right = 0;
                }
            }
        }
        if (right > 0) {
            else {
                result += right + right * left;
            }
        }
        System.out.println(result);
    }
}"
140,D,Java,61801356,2023-04-07 20:41:30,Tdexi,答案错误,"import java.util.*;

public class Main{
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int num = Integer.parseInt( in.nextLine());
        byte[] arr = new byte[num];
        int count = 0;
        while (count < num) {
            arr[count] = in.nextByte(); 
            count++;
        }
        if (num == 0) {
            System.out.println(""0"");
        }
        int result = 0;
        int left = 0, right = 0;
        boolean flag = false;
        for (int i = 0; i < num; i++) {
            if (arr[i] == 0) {
                
                if (flag) {
                    right++;
                }
                else {
                    left++;
                }
            } else {
                result ++;
                if (!flag) {
                    flag = true;
                    result += left;
                }
                else {
                    result += 2*right + left*right;
                    left = right;
                    right = 0;
                }
            }
        }
        if (right > 0) {
            
                result += right + right * left;
            
        }
        System.out.println(result);
    }
}"
141,D,Java,61801466,2023-04-07 20:42:32,牛客824004940号,运行超时,"import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

/**
 * D
 * @author zxf
 * @date 2023/4/7 19:47
 * @version 1.0
 */
public class Main {
public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] nums = new int[n];
        for (int i = 0;i < n;i++){
            nums[i] = sc.nextInt();
        }
        List<Integer> list = new ArrayList<>();
       int flag = 0;
       int ans = 0;
        List<List<Integer>> res = new ArrayList<>();
        for (int i = 0;i < nums.length;i++){
            flag = 0;
            for (int j = i;j < nums.length;j++){
                if (flag == 1){
                    if (nums[j] == 1){
                        break;
                    }
                    ans++;
                }else{
                    if (nums[j] == 1){
                        flag = 1;
                        ans++;
                    }
                }
            }
        }
        System.out.println(ans);
    }
}"
142,D,Java,61801482,2023-04-07 20:42:41,huvz,答案错误,"

import java.io.*;
import java.math.BigInteger;
import java.util.*;

public class Main {
    //static Read in = new Read();

    //static AWriter out = new AWriter();
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    static Scanner in = new Scanner(System.in);

    public static boolean[]  prime= new boolean[4];
    public static List<Integer> list = new ArrayList<>();
    static  int n,m;
    static int ix,iy;
    static  int cnt=0;
     static char[][] a;
    static boolean[][] tur;
    public static void solve() throws IOException {

        n = in.nextInt();
        int [] a = new int[n];
        List<Integer> list = new ArrayList<>();
        list.add(-1);
        for(int i=0;i<n;i++)
        {
            a[i]=in.nextInt();
            if(a[i]==1) list.add(i);
        }
        list.add(n);
        long sum=0;
        for(int i=1;i<list.size()-1;i++){
            long left =  list.get(i)-list.get(i-1)-1;
            long rigth = list.get(i+1)-list.get(i)-1;
            sum += rigth + left+rigth*left+sum+1L;
        }
        System.out.println(sum);
    }

    public static boolean isPrime(int n){
        while(n>0)
        {
            int t = n%10;

            if(prime[t])return false;
            n/=10;
        }
        return true;
    }

    public static void shai(int n){
        for(int i=2;i<=n;i++)
        {
            if(!prime[i])
            {
                list.add(i);
                for(int j=i+i;j<n;j+=i){
                    prime[j]=true;
                }
            }
        }

    }
    public static void main(String[] arg) throws Exception {
        int t=1;

        //Scanner in = new Scanner(System.in);
        //t = in.nextInt();
        while(t-->0)
        {
            solve();
        }

    }

    static class Read{
        static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        static StreamTokenizer st = new StreamTokenizer(br);
        static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));
        public int nextInt() throws IOException {
            st.nextToken();
            return (int) st.nval;
        }
        public Long nextLong() throws IOException {
            st.nextToken();
            return (long) st.nval;
        }
        public String next() throws IOException{
            st.nextToken();
            return st.sval;
        }
        // 若需要nextDouble等方法，请自行调用Double.parseDouble包装
    }
    static class AWriter implements Closeable {
        private BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(System.out));
        public void print(Object object) throws IOException {
            writer.write(object.toString());
        }
        public void println(Object object) throws IOException {
            writer.write(object.toString());
            writer.write(System.lineSeparator());
        }
        @Override
        public void close() throws IOException {
            writer.close();
        }
    }

}"
143,D,Java,61801529,2023-04-07 20:43:04,Mosyi.,答案错误,"import java.io.*;
import java.util.*;
import java.math.*;
public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
           int n = in.nextInt();
           int[] a = new int[n+1];
           int sum = 0;
           int f = 0;
           int l1 = 0;
           int l2 = 0;
           int ff = 0;
            for (int i = 1; i <= n; i++) {
                a[i] = in.nextInt();
                if(a[i] == 1){
                    if(i == 1){
                        ff = 1;
                    }else {
                        if (ff == 1) {
                            sum += l1 + 1;
                            ff = 0;
                        }
                        if (f == 1) {
                            sum += l1 * l2 + l1 + l2 + 1;
                            l1 = l2;
                            l2 = 0;
                            f = 0;
                        }
                        if (i + 1 <= n && a[i + 1] == 1) {
                            sum += l1 + 1;
                        } else {
                            f = 1;
                        }
                        if (i + 1 <= n && i - 1 >= 1 && a[i - 1] == 1 && a[i + 1] == 1) {
                            sum++;
                            l1 = 0;
                            l2 = 0;
                        }
                    }
                }else{
                    if(f == 0){
                        l1++;
                    }else{
                        l2++;
                    }
                }
            }
            if(a[n] == 0) {
                if (f == 1) {
                    sum += l1 * l2 + l1 + l2 + 1;
                } else {
                    sum += l1 + 1;
                }
            }else{
                if(a[n-1] == 0){
                    sum += l1 + 1;
                }else{
                    sum++;
                }
                if(ff == 1){
                    sum += l1+1;
                }
            }
            out.println(sum);
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
144,D,Java,61801619,2023-04-07 20:43:47,小陈同学。1,答案错误,"
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {
	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
		int n = Integer.valueOf(in.readLine());
		String[] s = in.readLine().split("" "");
		int[] a = new int[n+1];
		int[] num = new int[n+1];
		int len = 0;
		long cnt = 0;
		int l = 0;
		int r = 0;
		for(int i = 1; i<n+1; i++) {
			a[i] = Integer.valueOf(s[i-1]);
			if(a[i]==1)num[len++] = i;
		}
		for(int i = 0; i<len; i++) {
			//中间
			cnt++;
			//左边
			for(int j = num[i]-1; j>=1; j--) {
				if(a[j]==1)break;
				l++;
			}
			//右边
			for(int j = num[i]+1; j<n+1; j++) {
				if(a[j]==1)break;
				r++;
			}
			//汇总
			cnt+=l+r+l*r;
			l = 0;
			r = 0;
		}
		System.out.println(cnt);
	}
}
"
145,D,Java,61801630,2023-04-07 20:43:51,wqz579,答案正确,"import java.util.*;
public class Main
{
    public static void main (String [] args)
    {
        Scanner in = new Scanner(System.in);
        while(in.hasNextInt())
        {
            int n=in.nextInt();
            int[] a=new int[n];
            int sum1=0;
            List<Integer> sum0=new ArrayList<>();
            int count=0;
            for(int i=0;i<n;i++)
            {
                a[i]=in.nextInt();
                if(a[i]==1)
                {
                    sum1++;
                    sum0.add(count);
                    count=0;
                    continue;
                }
                count++;
            }
            sum0.add(count);
            int size0=sum0.size();
            long result=sum1; 
            for(int i=0;i<size0-1;i++)
            {
                result+=sum0.get(i)+sum0.get(i+1);
                result+=(long)sum0.get(i)*sum0.get(i+1);
            }
            System.out.println(result);
        }
    }
}"
146,D,Java,61801654,2023-04-07 20:44:03,Mosyi.,答案错误,"import java.io.*;
import java.util.*;
import java.math.*;
public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
           int n = in.nextInt();
           int[] a = new int[n+1];
           int sum = 0;
           int f = 0;
           int l1 = 0;
           int l2 = 0;
           int ff = 0;
           int p = 0;
            for (int i = 1; i <= n; i++) {
                a[i] = in.nextInt();
                if(a[i] == 1){
                    p = 1;
                    if(i == 1){
                        ff = 1;
                    }else {
                        if (ff == 1) {
                            sum += l1 + 1;
                            ff = 0;
                        }
                        if (f == 1) {
                            sum += l1 * l2 + l1 + l2 + 1;
                            l1 = l2;
                            l2 = 0;
                            f = 0;
                        }
                        if (i + 1 <= n && a[i + 1] == 1) {
                            sum += l1 + 1;
                        } else {
                            f = 1;
                        }
                        if (i + 1 <= n && i - 1 >= 1 && a[i - 1] == 1 && a[i + 1] == 1) {
                            sum++;
                            l1 = 0;
                            l2 = 0;
                        }
                    }
                }else{
                    if(f == 0){
                        l1++;
                    }else{
                        l2++;
                    }
                }
            }
            if(a[n] == 0) {
                if(p != 0) {
                    if (f == 1) {
                        sum += l1 * l2 + l1 + l2 + 1;
                    } else {
                        sum += l1 + 1;
                    }
                }
            }else{
                if(a[n-1] == 0){
                    sum += l1 + 1;
                }else{
                    sum++;
                }
                if(ff == 1){
                    sum += l1+1;
                }
            }
            out.println(sum);
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
147,D,Java,61801764,2023-04-07 20:45:03,Tdexi,答案正确,"import java.util.*;

public class Main{
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int num = Integer.parseInt( in.nextLine());
        byte[] arr = new byte[num];
        int count = 0;
        while (count < num) {
            arr[count] = in.nextByte(); 
            count++;
        }
        if (num == 0) {
            System.out.println(""0"");
        }
        long result = 0;
        long left = 0, right = 0;
        boolean flag = false;
        for (int i = 0; i < num; i++) {
            if (arr[i] == 0) {
                
                if (flag) {
                    right++;
                }
                else {
                    left++;
                }
            } else {
                result ++;
                if (!flag) {
                    flag = true;
                    result += left;
                }
                else {
                    result += 2*right + left*right;
                    left = right;
                    right = 0;
                }
            }
        }
        if (right > 0) {
            
                result += right + right * left;
            
        }
        System.out.println(result);
    }
}"
148,D,Java,61801777,2023-04-07 20:45:08,huvz,答案错误,"

import java.io.*;
import java.math.BigInteger;
import java.util.*;

public class Main {
    //static Read in = new Read();

    //static AWriter out = new AWriter();
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    static Scanner in = new Scanner(System.in);

    public static boolean[]  prime= new boolean[4];
    public static List<Integer> list = new ArrayList<>();
    static  int n,m;
    static int ix,iy;
    static  int cnt=0;
     static char[][] a;
    static boolean[][] tur;
    public static void solve() throws IOException {

        n = in.nextInt();
        int [] a = new int[n];
        List<Integer> list = new ArrayList<>();
        list.add(-1);
        for(int i=0;i<n;i++)
        {
            a[i]=in.nextInt();
            if(a[i]==1) list.add(i);
        }
        list.add(n);
        long sum=0;
        for(int i=1;i<list.size()-1;i++){
            int left =  list.get(i)-list.get(i-1)-1;
            int rigth = list.get(i+1)-list.get(i)-1;
            sum +=(long) rigth + (long)left+(long)rigth*(long)left+sum+1L;
        }
        System.out.println(sum);
    }
    public static void main(String[] arg) throws Exception {
        int t=1;

        //Scanner in = new Scanner(System.in);
        //t = in.nextInt();
        while(t-->0)
        {
            solve();
        }

    }

    static class Read{
        static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        static StreamTokenizer st = new StreamTokenizer(br);
        static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));
        public int nextInt() throws IOException {
            st.nextToken();
            return (int) st.nval;
        }
        public Long nextLong() throws IOException {
            st.nextToken();
            return (long) st.nval;
        }
        public String next() throws IOException{
            st.nextToken();
            return st.sval;
        }
        // 若需要nextDouble等方法，请自行调用Double.parseDouble包装
    }
    static class AWriter implements Closeable {
        private BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(System.out));
        public void print(Object object) throws IOException {
            writer.write(object.toString());
        }
        public void println(Object object) throws IOException {
            writer.write(object.toString());
            writer.write(System.lineSeparator());
        }
        @Override
        public void close() throws IOException {
            writer.close();
        }
    }

}"
149,D,Java,61801934,2023-04-07 20:46:26,山东协和学院_张福旭,答案错误,"import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
    static Read sc=new Read(System.in);
    static PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
    public static void main(String[] args) {
        int n=sc.nextInt();
        int[] a=new int[1000005];
        for(int i=1;i<=n;i++){
            a[i]=sc.nextInt();
        }
        a[0]=1;
        a[n+1]=1;
        long ans=0;
        for(int i=1;i<=n;i++){
            if (a[i]==1){
                int l=i-1,r=i+1;
                while (a[l]==0) l--;
                while(a[r]==0) r++;
                l=i-l-1;
                r=r-i-1;
                //out.println(l+"" ""+r);
                ans+=(l+r+1)+(l*r);
            }
        }
        out.println(ans);
        out.flush();
    }
    static class Read {
        BufferedReader br;
        StringTokenizer st;

        public Read(InputStream in) {
            br = new BufferedReader(new InputStreamReader(in), 16384);
            eat("""");
        }

        public void eat(String s) {
            st = new StringTokenizer(s);
        }

        public String nextLine() {
            try {
                return br.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        public boolean hasNext() {
            while (!st.hasMoreTokens()) {
                String s = nextLine();
                if (s == null)
                    return false;
                eat(s);
            }
            return true;
        }

        public String next() {
            hasNext();
            return st.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }
    }
}"
150,D,Java,61801978,2023-04-07 20:46:49,山东协和学院_张福旭,答案错误,"import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
    static Read sc=new Read(System.in);
    static PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
    public static void main(String[] args) {
        int n=sc.nextInt();
        int[] a=new int[1000005];
        for(int i=1;i<=n;i++){
            a[i]=sc.nextInt();
        }
        a[0]=1;
        a[n+1]=1;
        long ans=0;
        for(int i=1;i<=n;i++){
            if (a[i]==1){
                int l=i-1,r=i+1;
                while (a[l]==0) l--;
                while(a[r]==0) r++;
                l=i-l-1;
                r=r-i-1;
                //out.println(l+"" ""+r);
                ans+=(l+r+1)+(long)(l*r);
            }
        }
        out.println(ans);
        out.flush();
    }
    static class Read {
        BufferedReader br;
        StringTokenizer st;

        public Read(InputStream in) {
            br = new BufferedReader(new InputStreamReader(in), 16384);
            eat("""");
        }

        public void eat(String s) {
            st = new StringTokenizer(s);
        }

        public String nextLine() {
            try {
                return br.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        public boolean hasNext() {
            while (!st.hasMoreTokens()) {
                String s = nextLine();
                if (s == null)
                    return false;
                eat(s);
            }
            return true;
        }

        public String next() {
            hasNext();
            return st.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }
    }
}"
151,D,Java,61802153,2023-04-07 20:48:20,牛客225545702号,答案错误,"import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        System.out.println(countSubsequences(a));  
    }
    public static int countSubsequences(int[] sequence) {
        
        int answer = 0;
        
        int n = sequence.length;
        
        for (int bitmap = 1; bitmap < (1 << n); bitmap++) {
        
            int sum = 0;
    
            for (int i = 0; i < n; i++) {
     
                if ((bitmap & (1 << i)) != 0) {
                    sum += sequence[i];
                }
            }
 
            if (sum == 1) {
                answer++;
            }
        }

        return answer;
    }

}"
152,D,Java,61802297,2023-04-07 20:49:35,huvz,答案正确,"

import java.io.*;
import java.math.BigInteger;
import java.util.*;

public class Main {
    //static Read in = new Read();

    //static AWriter out = new AWriter();
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    static Scanner in = new Scanner(System.in);

    public static boolean[]  prime= new boolean[4];
    public static List<Integer> list = new ArrayList<>();
    static  int n,m;
    static int ix,iy;
    static  int cnt=0;
     static char[][] a;
    static boolean[][] tur;
    public static void solve() throws IOException {

        n = in.nextInt();
        int [] a = new int[n];
        List<Integer> list = new ArrayList<>();
        list.add(-1);
        for(int i=0;i<n;i++)
        {
            a[i]=in.nextInt();
            if(a[i]==1) list.add(i);
        }
        list.add(n);
        long sum=0;
        for(int i=1;i<list.size()-1;i++){
            int left =  list.get(i)-list.get(i-1)-1;
            int rigth = list.get(i+1)-list.get(i)-1;
            sum =(long) rigth + (long)left+(long)rigth*(long)left+sum+1L;
        }
        System.out.println(sum);
    }

    public static boolean isPrime(int n){
        while(n>0)
        {
            int t = n%10;

            if(prime[t])return false;
            n/=10;
        }
        return true;
    }

    public static void shai(int n){
        for(int i=2;i<=n;i++)
        {
            if(!prime[i])
            {
                list.add(i);
                for(int j=i+i;j<n;j+=i){
                    prime[j]=true;
                }
            }
        }

    }
    public static void main(String[] arg) throws Exception {
        int t=1;

        //Scanner in = new Scanner(System.in);
        //t = in.nextInt();
        while(t-->0)
        {
            solve();
        }

    }

    static class Read{
        static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        static StreamTokenizer st = new StreamTokenizer(br);
        static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));
        public int nextInt() throws IOException {
            st.nextToken();
            return (int) st.nval;
        }
        public Long nextLong() throws IOException {
            st.nextToken();
            return (long) st.nval;
        }
        public String next() throws IOException{
            st.nextToken();
            return st.sval;
        }
        // 若需要nextDouble等方法，请自行调用Double.parseDouble包装
    }
    static class AWriter implements Closeable {
        private BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(System.out));
        public void print(Object object) throws IOException {
            writer.write(object.toString());
        }
        public void println(Object object) throws IOException {
            writer.write(object.toString());
            writer.write(System.lineSeparator());
        }
        @Override
        public void close() throws IOException {
            writer.close();
        }
    }

}"
153,D,Java,61802646,2023-04-07 20:52:19,牛客890338089号,答案错误,"import java.util.Scanner;

// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] num = new int[n];
        for(int i = 0;i<n;i++){
            num[i] = in.nextInt();
        }
        int count = 0;
        for(int i = 0;i<n;i++){
            if(num[i] == 1){
                count++;
                int left = i,right=i;
                while(left>=0&&right<n){
                    int flag1 = 0,flag2= 0; 
                    if(left-1>=0){
                        if(num[left-1]==0){
                            count++;
                            flag1=1;
                        }
                    }
                    if(right+1<=n-1){
                        if(num[right+1]==0){
                            count++;
                            flag2 =1;
                        }
                    }
                    if(flag1==1&&flag2==1){
                        count++;
                        right++;
                        left--;
                        continue;
                    }else if(flag1==1&&flag2==0){
                        left--;
                        continue;
                    }else if(flag2==1&&flag1==0){
                        right++;
                        continue;
                    }
                    break;
                    
                }
            }
        }
        System.out.println(count);
    }

}"
154,D,Java,61802670,2023-04-07 20:52:35,Mosyi.,答案错误,"import java.io.*;
import java.util.*;
import java.math.*;
public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
           int n = in.nextInt();
           int[] a = new int[n+1];
           int sum = 0;
           int f = 0;
           int l1 = 0;
           int l2 = 0;
           int ff = 0;
           int p = 0;
            for (int i = 1; i <= n; i++) {
                a[i] = in.nextInt();
                if(a[i] == 1){
                    p = 1;
                    if(i == 1){
                        ff = 1;
                    }else {
                        if (ff == 1) {
                            sum += l1 + 1;
                            ff = 0;
                        }
                        if (f == 1) {
                            sum += l1 * l2 + l1 + l2 + 1;
                            l1 = l2;
                            l2 = 0;
                            f = 0;
                        }
                        if (i + 1 <= n && a[i + 1] == 1) {
                            sum += l1 + 1;
                        } else {
                            f = 1;
                        }
                        if (i + 1 <= n && i - 1 >= 1 && a[i - 1] == 1 && a[i + 1] == 1) {
                            sum++;
                            l1 = 0;
                            l2 = 0;
                        }
                    }
                }else{
                    if(f == 0){
                        l1++;
                    }else{
                        l2++;
                    }
                }
            }
            if(a[n] == 0) {
                if(p != 0) {
                    if (f == 1) {
                        sum += l1 * l2 + l1 + l2 + 1;
                    } else {
                        sum += l1 + 1;
                    }
                }
            }else{
                if(a[n-1] == 0){
                    sum += l1 + 1;
                }else{
                    sum++;
                }
                if(ff == 1){
                    sum += l1+1;
                }
            }
            out.println(sum);
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
155,D,Java,61802691,2023-04-07 20:52:44,牛客225545702号,答案错误,"import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
   
        Scanner sc = new Scanner(System.in);
   
        int n = sc.nextInt();
      
        int[] a = new int[n];
     
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
  
        sc.close();

        System.out.println(solve(a));
    }


    public static int solve(int[] a) {

        int ans = 0;
    
        for (int i = 0; i < a.length; i++) {
       
            if (a[i] == 1) {
       
                int left = i;
                int right = i;
      
                while (left > 0 && a[left - 1] == 0) {
                    left--;
                }
    
                while (right < a.length - 1 && a[right + 1] == 0) {
                    right++;
                }

                ans += right - left + 1;
            }
        }

        return ans;
    }
}"
156,D,Java,61802816,2023-04-07 20:53:39,牛客225545702号,答案错误,"import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
   
        Scanner sc = new Scanner(System.in);
   
        int n = sc.nextInt();
      
        int[] a = new int[n];
     
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
  
        sc.close();

        System.out.println(solve(a));
    }


    public static int solve(int[] a) {

        int ans = 0;
    
        for (int i = 0; i < a.length; i++) {
       
            if (a[i] == 1) {
       
                int left = i;
                int right = i;
      
                while (left > 0 && a[left - 1] == 0) {
                    left--;
                }
    
                while (right < a.length - 1 && a[right + 1] == 0) {
                    right++;
                }

                ans += right - left + 1;
            }
        }

        return ++ans;
    }
}"
157,D,Java,61802823,2023-04-07 20:53:44,山东协和学院_张福旭,答案正确,"import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
    static Read sc=new Read(System.in);
    static PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
    public static void main(String[] args) {
        int n=sc.nextInt();
        int[] a=new int[1000005];
        for(int i=1;i<=n;i++){
            a[i]=sc.nextInt();
        }
        a[0]=1;
        a[n+1]=1;
        long ans=0;
        for(int i=1;i<=n;i++){
            if (a[i]==1){
                int l=i-1,r=i+1;
                while(a[l]==0) l--;
                while(a[r]==0) r++;
                l=i-l-1;
                r=r-i-1;
                //out.println(l+"" ""+r);
                ans=ans+(l+r+1)+((long)l*(long)r);
            }
        }
        out.println(ans);
        out.flush();
    }
    static class Read {
        BufferedReader br;
        StringTokenizer st;

        public Read(InputStream in) {
            br = new BufferedReader(new InputStreamReader(in), 16384);
            eat("""");
        }

        public void eat(String s) {
            st = new StringTokenizer(s);
        }

        public String nextLine() {
            try {
                return br.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        public boolean hasNext() {
            while (!st.hasMoreTokens()) {
                String s = nextLine();
                if (s == null)
                    return false;
                eat(s);
            }
            return true;
        }

        public String next() {
            hasNext();
            return st.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }
    }
}"
158,D,Java,61803015,2023-04-07 20:55:12,牛客225545702号,答案错误,"import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
   
        Scanner sc = new Scanner(System.in);
   
        int n = sc.nextInt();
      
        int[] a = new int[n];
     
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
  
        sc.close();

        System.out.println(solve(a));
    }


    public static int solve(int[] a) {

        int ans = 0;
    
        for (int i = 0; i < a.length; i++) {
       
            if (a[i] == 1) {
       
                int left = i;
                int right = i;
      
                while (left > 0 && a[left - 1] == 0) {
                    left--;
                }
    
                while (right < a.length - 1 && a[right + 1] == 0) {
                    right++;
                }

                ans += right - left + 1;
            }
            ans++;
        }

        return ans;
    }
}"
159,D,Java,61803078,2023-04-07 20:55:51,浮水3000,答案错误,"import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        for(int i=0;i<n;i++){
            a[i] = in.nextInt();
        }
        int left0 = 0,right0 = 0;
        int x = 0, y = 0;
        int count = 0;
        for(int i=0;i<n;i++){
            int temp = 0;
            if(a[i] == 1){
                x = i;y = i;
                while(x>0){
                    if(a[x-1]==0){
                        left0++;
                    }else{
                        break;
                    }
                    x--;
                }
                while(y<n-1){
                    if(a[y+1]==0){
                        right0++;
                    }else{
                        break;
                    }
                    y++;
                }
                if(left0!=0 && right0!=0){
                    temp = left0+1+right0*2;
                }
                if(left0==0 || right0==0){
                    temp = left0+1+right0;
                }
                count+=temp;
                left0 = 0;
                right0 = 0;
            }
        }
        System.out.println(count);
    }
}"
160,D,Java,61803105,2023-04-07 20:56:01,诚挚的乔治,执行出错,"import java.security.spec.RSAOtherPrimeInfo;
import java.util.ArrayList;
import java.util.Scanner;
/**
 * Created by IntelliJ IDEA.
 * User: zm
 * Date: 2023/4/6
 */
public class Main {
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);

        int n = scan.nextInt();
        int[] array = new int[n + 1];
        for(int i = 1; i <= n; i++){
            array[i] = scan.nextInt();
        }

        int fast = 1;int slow = 1;
        int res = 0;
        while(array[fast] != 1){
            fast++;
        }
        fast++;
        int temp = 0;
        while(slow != n){
            if(fast == n + 1)break;
            while(array[fast] != 1){
                fast++;
                if(fast == n + 1)break;
            }
            if(fast == n + 1)break;
            int tag = fast - slow;
            res += tag;
            while(slow != fast){
                    slow++;
                    if(array[slow] == 1 && slow != fast){
                        temp = slow;
                    }
            }
            slow = temp + 1;
            fast++;
        }
        res += n - slow + 2;
        System.out.println(res);

    }
}

"
161,D,Java,61803119,2023-04-07 20:56:05,栗子ing,答案错误,"import java.util.*;

public class Main{
    static int N = 1000010;
    static int n;
    static int[] a = new int[N];
    static int[] b = new int[N];
    public static void main(String[] args){
        Scanner scan = new Scanner(System.in);
        n = scan.nextInt();
        int cnt = 0;
        b[0] = 0;
        for (int i = 1; i <= n; i ++){
            a[i] = scan.nextInt();
            if (a[i] == 1) b[++cnt] = i;
        }
        b[0] = 0;
        b[cnt + 1] = n + 1;
        int res = 0;
        for (int i = 1; i <= cnt; i ++){
            int l = b[i] - b[i - 1];
            int r = b[i + 1] - b[i];
//             if (l - 1 > 0) l -= 1;
//             if (r - 1 > 0) r -= 1;
            res += l * r;
        }
        System.out.println(res);
    }
}"
162,D,Java,61803199,2023-04-07 20:56:45,ecjtu20-软工6-刘腾,运行超时,"import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;

public class Main {
	static BufferedReader bReader=new BufferedReader(new InputStreamReader(System.in));
	static BufferedWriter bWriter=new BufferedWriter(new OutputStreamWriter(System.out));
	
	public static void main(String[] args) throws IOException {
		int count=0;
		
		int n=Integer.valueOf(bReader.readLine());
		
		int arr[]=new int[n+1];
		
		String inpL=bReader.readLine();
		String[] inpRs= inpL.split("" "");
		for(int i=1;i<=n;i++) {
			arr[i]=Integer.valueOf(inpRs[i-1]);
		}
		
		for(int l=1;l<=n;l++) {
			boolean flag=false;
			for(int r=l;r<=n;r++) {
				if(!flag&&arr[r]==0) continue;
				else if (!flag&&arr[r]==1) {
					count++;
					flag=true;
				}else if(flag&&arr[r]==0) {
					count++;
				}else {
					break;
				}
			}
		}
	
		
		bWriter.write(count+"" "");
		bReader.close();
		bWriter.close();
	}
}
"
163,D,Java,61803294,2023-04-07 20:57:30,栗子ing,答案正确,"import java.util.*;

public class Main{
    static int N = 1000010;
    static int n;
    static int[] a = new int[N];
    static int[] b = new int[N];
    public static void main(String[] args){
        Scanner scan = new Scanner(System.in);
        n = scan.nextInt();
        int cnt = 0;
        b[0] = 0;
        for (int i = 1; i <= n; i ++){
            a[i] = scan.nextInt();
            if (a[i] == 1) b[++cnt] = i;
        }
        b[0] = 0;
        b[cnt + 1] = n + 1;
        long res = 0;
        for (int i = 1; i <= cnt; i ++){
            int l = b[i] - b[i - 1];
            int r = b[i + 1] - b[i];
//             if (l - 1 > 0) l -= 1;
//             if (r - 1 > 0) r -= 1;
            res += (long)l * r;
        }
        System.out.println(res);
    }
}"
164,D,Java,61803881,2023-04-07 21:01:22,小陈同学。1,答案错误,"
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {
	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
		int n = Integer.valueOf(in.readLine());
		String[] s = in.readLine().split("" "");
		int[] a = new int[n+1];
		int[] num = new int[n+1];
		int len = 0;
		long cnt = 0;
		int l = 0;
		int r = 0;
		for(int i = 1; i<n+1; i++) {
			a[i] = Integer.valueOf(s[i-1]);
			if(a[i]==1)num[len++] = i;
		}
		for(int i = 0; i<len; i++) {
			//中间
			cnt++;
			//左边
			for(int j = num[i]-1; j>=1; j--) {
				if(a[j]==1)break;
				l++;
			}
			//右边
			for(int j = num[i]+1; j<n+1; j++) {
				if(a[j]==1)break;
				r++;
			}
			//汇总
			cnt+=l+r+l*r;
			l = 0;
			r = 0;
		}
		System.out.println(cnt);
	}
}
"
165,D,Java,61804094,2023-04-07 21:03:38,浮水3000,答案错误,"import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        for(int i=0;i<n;i++){
            a[i] = in.nextInt();
        }
        int left0 = 0,right0 = 0;
        int x = 0, y = 0;
        long count = 0;
        for(int i=0;i<n;i++){
            int temp = 0;
            if(a[i] == 1){
                x = i;
                y = i;
                while(x>0){
                    if(a[x-1]==0){
                        left0++;
                    }else{
                        break;
                    }
                    x--;
                }
                while(y<n-1){
                    if(a[y+1]==0){
                        right0++;
                    }else{
                        break;
                    }
                    y++;
                }
                if(left0!=0 && right0!=0){
                    temp = left0+1+right0*2;
                }
                if(left0==0 || right0==0){
                    temp = left0+1+right0;
                }
                count+=temp;
                left0 = 0;
                right0 = 0;
            }
        }
        System.out.println(count);
    }
}"
166,D,Java,61804492,2023-04-07 21:08:38,ecjtu20-软工6-刘腾,运行超时,"import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;

public class Main {
	static BufferedReader bReader=new BufferedReader(new InputStreamReader(System.in));
	static BufferedWriter bWriter=new BufferedWriter(new OutputStreamWriter(System.out));
	
	public static void main(String[] args) throws IOException {
		int count=0;
		
		int n=Integer.valueOf(bReader.readLine());
		
		int arr[]=new int[n+1];
		
		String inpL=bReader.readLine();
		String[] inpRs= inpL.split("" "");
		for(int i=1;i<=n;i++) {
			arr[i]=Integer.valueOf(inpRs[i-1]);
		}
		
		for(int l=1;l<=n;l++) {
			boolean flag=false;
			for(int r=l;r<=n;r++) {
				if(!flag&&arr[r]==0) continue;
				else if (!flag&&arr[r]==1) {
					count++;
					flag=true;
				}else if(flag&&arr[r]==0) {
					count++;
				}else {
					break;
				}
			}
		}
	
		
		bWriter.write(count+"" "");
		bReader.close();
		bWriter.close();
	}
}
"
167,D,Java,61804786,2023-04-07 21:12:42,_lwq_,答案错误,"import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.*;

public class Main{
	public static void main(String[] args){
		QuickInput in = new  QuickInput();
		PrintWriter out = new PrintWriter(System.out);
		
        int N = 1000010;
        int n = in.nextInt();
        int[] a = new int[N];
        int[] b = new int[N];
        int[] l = new int[N];
        int[] r = new int[N];
        
        for(int i = 0;i<n;i++) a[i] = in.nextInt();
        int cnt = 1;
        // 统计1的个数
        for(int i = 0;i<n;i++)
            if(a[i]==1) 
                b[cnt++] = i;

            
        // 1前0的个数
        for(int i = 1;i<cnt;i++){
            int t = 0;
            int idx = b[i];
            
            while(idx-1>=0&&a[idx-1]==0){
                t++;
                idx--;
            } 
            
            l[i] = t;
            //out.println(l[i]);
        }
            
        // 1后前0的个数
        for(int i = 1;i<cnt;i++){
            int t = 0;
            int idx = b[i];
            
            while(idx+1<n&&a[idx+1]==0){
                t++;
                idx++;
            } 
            
            r[i] = t;
            //out.println(r[i]);
        }
        long res = 0;
        for(int i = 1;i<cnt;i++){
            res += 1+l[i]+r[i]+l[i]*r[i];
        }
        System.out.println(res);
        
        
		//in.nextInt().....
		//out.println().....
		
		out.close();//不关闭，就会有些数据留在缓冲区
	}
}


class  QuickInput
{
    BufferedReader buf;
    StringTokenizer tok;
     QuickInput(){
        buf = new BufferedReader(new InputStreamReader(System.in));
    }
    boolean hasNext(){
        while(tok == null || !tok.hasMoreElements()){
            try{
                tok = new StringTokenizer(buf.readLine());
            }catch(Exception e){
                return false;
            }
        }
        return true;
    }
    String next(){
        if(hasNext()) return tok.nextToken();
        return null;
    }
    int nextInt(){
        return Integer.parseInt(next());
    }
    long nextLong(){
        return Long.parseLong(next());
    }
    double nextDouble(){
        return Double.parseDouble(next());
    }
    BigInteger nextBigInteger(){
        return new BigInteger(next());
    }
    BigDecimal nextBigDecimal(){
        return new BigDecimal(next());
    }
}"
168,D,Java,61804845,2023-04-07 21:13:25,牛客619370913号,执行出错,"
import java.math.BigInteger;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {

        BigInteger ans=new BigInteger(""0"");
        int n;

        Scanner in =new Scanner(System.in);
        int i,t,cnt=0;
        n=in.nextInt();
        BigInteger[] pos=new BigInteger[1000005];
        for(i=1;i<=n;i++)
        {
            t= in.nextInt();
            if(t==1)
            {
                pos[cnt]=BigInteger.valueOf(i);
                cnt++;
            }
        }
        if(cnt==1)
        {
            System.out.println(pos[0].multiply(BigInteger.valueOf(n+1).subtract(pos[0])));
        }
        else{
            ans=ans.add(pos[0].multiply(pos[1].subtract(pos[0])));
            for(i=1;i<=n;i++)
            {
                ans=ans.add(pos[i].subtract(pos[i-1].add(BigInteger.ONE)).multiply(pos[i+1].subtract(pos[i].add(BigInteger.ONE))));

            }
            ans=ans.add(pos[cnt-1].subtract(pos[cnt-2]).multiply(BigInteger.valueOf(n+1).subtract(pos[cnt-1])));
            System.out.println(ans);
        }








    }


}"
169,D,Java,61804910,2023-04-07 21:14:04,欧克z,答案错误,"import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        Map<Integer, Integer> map = new HashMap<>();
        long res = 0;
        int s = 0;
        map.put(0, 1);
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
            s += a[i];
            res += map.get(s - a[i]);
            map.put(s, map.getOrDefault(s, 0) + 1);
        }
        System.out.println(res);
    }
   

}

"
170,D,Java,61804983,2023-04-07 21:14:57,不上紫不该名,执行出错,"//import com.sun.source.tree.Tree;

import java.io.*;
import java.util.*;
public class Main {
    private static long mode = 1_000_000_000+7;
    private static long INF = Long.MAX_VALUE;
  //  private static ArrayList<Character> ans = new ArrayList<Character>();
    static int maxn=200000+100;
    public static FastReader in = new FastReader();
    public static Utility util = new Utility();
  //  Queue<Integer> q=new LinkedList<Integer>();
 //   Vector vt[]=new Vector[maxn];
    static long dp[]=new long[maxn];
    static Vector vt[]=new Vector[maxn];
    static int n,m,ans,sum;
    static int b[]=new int[maxn];
    static int f[]=new int[maxn];
    static long pre[]=new long[maxn];
    static String str=new String();
    static int k;
    static int a[]=new int[1100];
    static Boolean vis[][]=new Boolean[1100][1100];
    static int dx[]={0,0,1,-1};
    static int dy[]={1,-1,0,0};
    static long le[]=new long[1000009];
    static long ri[]=new long[1000009];
    static int sx=0,sy=0;
    public static void main (String [] args) {
        //try {
        //BufferedReader f = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter out = new PrintWriter(System.out);
        // HashMap<Integer,Vector> mp = new HashMap<Integer,Vector>();
        //BufferedReader f = new BufferedReader(new FileReader(""input.in""));
        //PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(""output.out"")));
        int t = 1;
       // t = in.nextInt();
       // init();
        while (t > 0) {
            t--;
            long ans=0;
            n=in.nextInt();
            for(int i=1;i<=n;i++)
            {
                a[i]=in.nextInt();
            }
            le[0]=0;
            for(int i=1;i<=n;i++)
            {
                le[i]=le[i-1];
                if(a[i]==1)
                    le[i]=i;
            }
            ri[n+1]=n+1;
            for(int i=n;i>=1;i--)
            {
                ri[i]=ri[i+1];
                if(a[i]==1)
                    ri[i]=i;
            }
            for(int i=n;i>=1;i--)
            {
                if(a[i]==0)
                    continue;
                long l=le[i-1],r=ri[i+1];
                ans+=(i-l)*(r-i);
            }
            System.out.print(ans);


        }/////////////////////////
    }

    static void init()
    {
        int tt=1;
    }

    static long abs(long x)
    {
        if(x<=0)
            return (-1)*x;
        return x;
    }
    static int abs(int x)
    {
        if(x<=0)
            return (-1)*x;
        return x;
    }




    public static int log2(int N)
    {
        int result = (int)(Math.log(N) / Math.log(2));

        return result;
    }
    public static int lowbit(int x)
    {
        return x&(-x);
    }

    static int max(int a,int b)
    {
        return Math.max(a,b);
    }
    static long max(long a,long b)
    {
        return Math.max(a,b);
    }
    static int min(int a,int b)
    {
        return Math.min(a,b);
    }
    static long min(long a,long b)
    {
        return Math.min(a,b);
    }

    public static long gcd(long a, long b) {
        if (b==0) return a;
        return gcd(b,a%b);
    }
    public static long lcm(long a,long b) {
        long gcd = gcd(a,b);
        return (a*b)/gcd;
    }
   /* public static int[] inp(BufferedReader f, int n){
        try {
            StringTokenizer st = new StringTokenizer(f.readLine());
            int[] out = new int[n];
            for(int i=0;i<n;++i)
                out[i]=Integer.parseInt(st.nextToken());
            return out;
        }catch(Exception e){
            return new int[]{0, 0};
        }
    }
    public static String inp(BufferedReader f,boolean b){
        try {
            return f.readLine();
        }catch(Exception e){
            return """";
        }
    }*/
    public static void out(PrintWriter out,String s) {
       out.print(s);
    }
    public static void nl() {
        System.out.print(""\n"");
    }
    public static void out(PrintWriter out,int[] a) {
        for(int i=0;i<a.length;++i) out.print(a[i]+"" "");

    }
    public static void out(PrintWriter out,long[] a) {
        for(int i=0;i<a.length;++i) out.print(a[i]+"" "");

    }
    public static void out(PrintWriter out,int n) {
        out.println(n);
    }
    public static void out(PrintWriter out,long n) {
        out.println(n);
    }
    public static void sort(int[] a){
        int n = a.length;
        ArrayList<Integer> b = new ArrayList<Integer>();
        for(int i:a)b.add(i);
        Collections.sort(b);
        for(int i=0;i<n;++i){
            a[i]=b.get(i);
        }
    }public static void sort(long[] a){
        int n = a.length;
        ArrayList<Long> b = new ArrayList<Long>();
        for(Long i:a)b.add(i);
        Collections.sort(b);
        for(int i=0;i<n;++i){
            a[i]=b.get(i);
        }
    }
    public static int lower_bound(int[]a,int n,int tar) {
        int k = -1;
        for(int b=n/2;b>=1;b/=2)
            while(k+b<n&&a[k+b]<tar) k+=b;
        return k+1;
    }
    public static int upper_bound(ArrayList<Integer> a,int n,int tar) {
        int k = 0;
        for(int b = n/2; b>=1; b/=2)
            while(k+b<n&&a.get(k+b)<=tar) k+=b;
        return k;
    }
    static class Pair
    {
        int a;
        int b;
        Pair(int a, int b)
        {
            this.a = a;
            this.b = b;
        }
        public void b(int nv){
            b=nv;
        }
        public void a(int nk){
            a=nk;
        }
    }
    static class FastReader{

        BufferedReader br;

        StringTokenizer st;

        public FastReader(){
            br=new BufferedReader(new InputStreamReader(System.in));
        }

        String next(){
            while(st==null || !st.hasMoreTokens()){
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt(){
            return Integer.parseInt(next());
        }

        long nextLong(){
            return Long.parseLong(next());
        }

        double nextDouble(){
            return Double.parseDouble(next());
        }

        String nextLine(){
            String str="""";
            try {
                str=br.readLine().trim();
            } catch (Exception e) {
                e.printStackTrace();
            }
            return str;
        }



    }
    static class Utility{

        int[] createIntArray(){

            String s = in.nextLine();

            return Arrays.stream( s.split("" "") )
                    .mapToInt( Integer::parseInt )
                    .toArray();


        }

        int[] createIntArray(int n){

            int[] arr = new int[n];
            for(int i=0; i<n; i++) arr[i] = in.nextInt();


            return arr;


        }

        int[] createSortedIntArray(int n){

            int [] arr = createIntArray(n);
            Arrays.sort( arr );

            return arr;
        }

        int[][] create2DArray( int n , int m ){

            int[][] arr = new int[n][m];
            for(int i=0; i<n; i++)
                arr[i] = createIntArray( m );

            return arr;



        }

        < T > String joinArray( T[] arr , String s ){

            StringBuilder sb = new StringBuilder("""");

            for(int i=0; i<arr.length; i++)
                sb.append( arr[i] + s  );

            return sb.toString();
        }

        <T> String  joinList(List<T> arr, String s ){

            StringBuilder sb = new StringBuilder("""");

            for(int i=0; i<arr.size(); i++)
                sb.append( arr.get(i) + s  );

            return sb.toString();
        }

    }
}"
171,D,Java,61805013,2023-04-07 21:15:20,不上紫不该名,答案正确,"//import com.sun.source.tree.Tree;

import java.io.*;
import java.util.*;
public class Main {
    private static long mode = 1_000_000_000+7;
    private static long INF = Long.MAX_VALUE;
  //  private static ArrayList<Character> ans = new ArrayList<Character>();
    static int maxn=200000+100;
    public static FastReader in = new FastReader();
    public static Utility util = new Utility();
  //  Queue<Integer> q=new LinkedList<Integer>();
 //   Vector vt[]=new Vector[maxn];
    static long dp[]=new long[maxn];
    static Vector vt[]=new Vector[maxn];
    static int n,m,ans,sum;
    static int b[]=new int[maxn];
    static int f[]=new int[maxn];
    static long pre[]=new long[maxn];
    static String str=new String();
    static int k;
    static int a[]=new int[1000009];
    static Boolean vis[][]=new Boolean[1100][1100];
    static int dx[]={0,0,1,-1};
    static int dy[]={1,-1,0,0};
    static long le[]=new long[1000009];
    static long ri[]=new long[1000009];
    static int sx=0,sy=0;
    public static void main (String [] args) {
        //try {
        //BufferedReader f = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter out = new PrintWriter(System.out);
        // HashMap<Integer,Vector> mp = new HashMap<Integer,Vector>();
        //BufferedReader f = new BufferedReader(new FileReader(""input.in""));
        //PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(""output.out"")));
        int t = 1;
       // t = in.nextInt();
       // init();
        while (t > 0) {
            t--;
            long ans=0;
            n=in.nextInt();
            for(int i=1;i<=n;i++)
            {
                a[i]=in.nextInt();
            }
            le[0]=0;
            for(int i=1;i<=n;i++)
            {
                le[i]=le[i-1];
                if(a[i]==1)
                    le[i]=i;
            }
            ri[n+1]=n+1;
            for(int i=n;i>=1;i--)
            {
                ri[i]=ri[i+1];
                if(a[i]==1)
                    ri[i]=i;
            }
            for(int i=n;i>=1;i--)
            {
                if(a[i]==0)
                    continue;
                long l=le[i-1],r=ri[i+1];
                ans+=(i-l)*(r-i);
            }
            System.out.print(ans);


        }/////////////////////////
    }

    static void init()
    {
        int tt=1;
    }

    static long abs(long x)
    {
        if(x<=0)
            return (-1)*x;
        return x;
    }
    static int abs(int x)
    {
        if(x<=0)
            return (-1)*x;
        return x;
    }




    public static int log2(int N)
    {
        int result = (int)(Math.log(N) / Math.log(2));

        return result;
    }
    public static int lowbit(int x)
    {
        return x&(-x);
    }

    static int max(int a,int b)
    {
        return Math.max(a,b);
    }
    static long max(long a,long b)
    {
        return Math.max(a,b);
    }
    static int min(int a,int b)
    {
        return Math.min(a,b);
    }
    static long min(long a,long b)
    {
        return Math.min(a,b);
    }

    public static long gcd(long a, long b) {
        if (b==0) return a;
        return gcd(b,a%b);
    }
    public static long lcm(long a,long b) {
        long gcd = gcd(a,b);
        return (a*b)/gcd;
    }
   /* public static int[] inp(BufferedReader f, int n){
        try {
            StringTokenizer st = new StringTokenizer(f.readLine());
            int[] out = new int[n];
            for(int i=0;i<n;++i)
                out[i]=Integer.parseInt(st.nextToken());
            return out;
        }catch(Exception e){
            return new int[]{0, 0};
        }
    }
    public static String inp(BufferedReader f,boolean b){
        try {
            return f.readLine();
        }catch(Exception e){
            return """";
        }
    }*/
    public static void out(PrintWriter out,String s) {
       out.print(s);
    }
    public static void nl() {
        System.out.print(""\n"");
    }
    public static void out(PrintWriter out,int[] a) {
        for(int i=0;i<a.length;++i) out.print(a[i]+"" "");

    }
    public static void out(PrintWriter out,long[] a) {
        for(int i=0;i<a.length;++i) out.print(a[i]+"" "");

    }
    public static void out(PrintWriter out,int n) {
        out.println(n);
    }
    public static void out(PrintWriter out,long n) {
        out.println(n);
    }
    public static void sort(int[] a){
        int n = a.length;
        ArrayList<Integer> b = new ArrayList<Integer>();
        for(int i:a)b.add(i);
        Collections.sort(b);
        for(int i=0;i<n;++i){
            a[i]=b.get(i);
        }
    }public static void sort(long[] a){
        int n = a.length;
        ArrayList<Long> b = new ArrayList<Long>();
        for(Long i:a)b.add(i);
        Collections.sort(b);
        for(int i=0;i<n;++i){
            a[i]=b.get(i);
        }
    }
    public static int lower_bound(int[]a,int n,int tar) {
        int k = -1;
        for(int b=n/2;b>=1;b/=2)
            while(k+b<n&&a[k+b]<tar) k+=b;
        return k+1;
    }
    public static int upper_bound(ArrayList<Integer> a,int n,int tar) {
        int k = 0;
        for(int b = n/2; b>=1; b/=2)
            while(k+b<n&&a.get(k+b)<=tar) k+=b;
        return k;
    }
    static class Pair
    {
        int a;
        int b;
        Pair(int a, int b)
        {
            this.a = a;
            this.b = b;
        }
        public void b(int nv){
            b=nv;
        }
        public void a(int nk){
            a=nk;
        }
    }
    static class FastReader{

        BufferedReader br;

        StringTokenizer st;

        public FastReader(){
            br=new BufferedReader(new InputStreamReader(System.in));
        }

        String next(){
            while(st==null || !st.hasMoreTokens()){
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt(){
            return Integer.parseInt(next());
        }

        long nextLong(){
            return Long.parseLong(next());
        }

        double nextDouble(){
            return Double.parseDouble(next());
        }

        String nextLine(){
            String str="""";
            try {
                str=br.readLine().trim();
            } catch (Exception e) {
                e.printStackTrace();
            }
            return str;
        }



    }
    static class Utility{

        int[] createIntArray(){

            String s = in.nextLine();

            return Arrays.stream( s.split("" "") )
                    .mapToInt( Integer::parseInt )
                    .toArray();


        }

        int[] createIntArray(int n){

            int[] arr = new int[n];
            for(int i=0; i<n; i++) arr[i] = in.nextInt();


            return arr;


        }

        int[] createSortedIntArray(int n){

            int [] arr = createIntArray(n);
            Arrays.sort( arr );

            return arr;
        }

        int[][] create2DArray( int n , int m ){

            int[][] arr = new int[n][m];
            for(int i=0; i<n; i++)
                arr[i] = createIntArray( m );

            return arr;



        }

        < T > String joinArray( T[] arr , String s ){

            StringBuilder sb = new StringBuilder("""");

            for(int i=0; i<arr.length; i++)
                sb.append( arr[i] + s  );

            return sb.toString();
        }

        <T> String  joinList(List<T> arr, String s ){

            StringBuilder sb = new StringBuilder("""");

            for(int i=0; i<arr.size(); i++)
                sb.append( arr.get(i) + s  );

            return sb.toString();
        }

    }
}"
172,D,Java,61805359,2023-04-07 21:21:33,lllcey,编译错误,"{""SPECIAL_TM_FH_MEMO_JSON_TAG"":""SPECIAL_TM_FH_MEMO_JSON_TAG"",""stderr"":""Main.java:8: error: cannot find symbol\n        HashMap<Integer, Integer> map = new HashMap<>(Map.of(0, 1));\n                                                         ^\n  symbol:   method of(int,int)\n  location: interface Map\n1 error""}

import java.io.*;
import java.util.*;

public class Main implements Runnable {
    private void solve() throws IOException {
        int n = nextInt();

        HashMap<Integer, Integer> map = new HashMap<>(Map.of(0, 1));

        long ans = 0;
        int s = 0;

        for (int i = 0; i < n; i++) {
            int x = nextInt();
            s += x;
            ans += map.getOrDefault(s - 1, 0);
            map.put(s, map.getOrDefault(s, 0) + 1);
        }

        writer.println(ans);
    }

    public static void main(String[] args) {
        new Main().run();
    }

    public BufferedReader reader;
    public StringTokenizer tokenizer;
    public PrintWriter writer;

    @Override
    public void run() {
        try {
            reader = new BufferedReader(new InputStreamReader(System.in));
            tokenizer = null;
            writer = new PrintWriter(System.out);
            int t = 1;
//            int t = nextInt();
            while (t-- > 0) {
                solve();
            }
            reader.close();
            writer.close();
        } catch (Exception e) {
            e.printStackTrace();
            System.exit(1);
        }
    }

    public String nextLine() throws IOException {
        return reader.readLine();
    }

    public String nextToken() throws IOException {
        while (tokenizer == null || !tokenizer.hasMoreTokens()) {
            tokenizer = new StringTokenizer(reader.readLine());
        }
        return tokenizer.nextToken();
    }

    public int nextInt() throws IOException {
        return Integer.parseInt(nextToken());
    }
}"
173,D,Java,61805491,2023-04-07 21:23:53,欧克z,运行超时,"import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        System.out.println(subarraySum(a, 1));
    }
    public static int subarraySum(int[] nums, int k) {
        int count = 0, pre = 0;
        HashMap < Integer, Integer > mp = new HashMap < > ();
        mp.put(0, 1);
        for (int i = 0; i < nums.length; i++) {
            pre += nums[i];
            if (mp.containsKey(pre - k)) {
                count += mp.get(pre - k);
            }
            mp.put(pre, mp.getOrDefault(pre, 0) + 1);
        }
        return count;
    }

}

"
174,D,Java,61805854,2023-04-07 21:31:08,Aysy,答案正确,"

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.*;


public class Main {

    static char[][] arr;
    static int cnt = 0;
    static int n;
    static int m;
    static boolean[][] vis;

    public static void main(String[] args) {
        int n = in.nextInt();
        List<Integer> list = new ArrayList<>();
        int[] arr = new int[n + 1];
        int c = 0;
        for (int i = 1; i <= n; i++) {
            arr[i] = in.nextInt();
            if (arr[i] == 1) {
                list.add(c);
                c = 0;
            } else {
                c++;
            }
        }
        list.add(c);
        long ans = 0;
        for (int i = 0; i < list.size() - 1; i++) {
            int x = list.get(i) + 1;
            int y = list.get(i + 1) + 1;
            ans += (long) x * y;
        }
        System.out.println(ans);


    }

//    private static void dfs1(int i1, int j1) {
//        if (i1 < 0 || i1 >= n || j1 < 0 || j1 >= m) {
//            return;
//        }
//        if(vis[i1][j1])return ;
//        vis[i1][j1]=true;
//        if (arr[i1][j1] == '#') return;
//        if (arr[i1][j1] == '!') cnt++;
//        dfs1(i1 - 1, j1);
//        dfs1(i1 + 1, j1);
//        dfs1(i1, j1 - 1);
//        dfs1(i1, j1 + 1);
//    }


//    private static void dfs(int i) {
//        if (i >= n) {
//            cnt++;
//            return;
//        }
//        for (int j = 0; j < n; j++) {
//            if (!check(i, j)) continue;
//            arr[i][j] = true;
//            dfs(i + 1);
//            arr[i][j] = false;
//        }
//    }


//    private static boolean check(int i, int j) {
//        for (int i1 = i - 1; i1 >= 0; i1--) {
//            if (arr[i1][j]) return false;
//        }
//        for (int i1 = i - 1, j1 = j - 1; i1 >= 0 && j1 >= 0; i1--, j1--) {
//            if (arr[i1][j1]) return false;
//        }
//        for (int i1 = i - 1, j1 = j + 1; i1 >= 0 && j1 < n; i1--, j1++) {
//            if (arr[i1][j1]) return false;
//        }
//        return true;
//    }


    public static int gcd(int a, int b) {
        return b == 0 ? a : gcd(b, a % b);
    }


    static IR in = new IR();
    static PrintWriter out = new PrintWriter(System.out);

    static class IR {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public IR() {
            reader = new BufferedReader(new InputStreamReader(System.in), 32768);
            tokenizer = null;
        }

        public String nextLine() {
            String s = """";
            try {
                s = reader.readLine();
            } catch (IOException e) {
                throw new RuntimeException(e);
            }
            return s;

        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }
    }
}
"
175,D,Java,61805892,2023-04-07 21:31:56,欧克z,答案错误,"


import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());
        String[] sp = br.readLine().split("" "");
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = Integer.parseInt(sp[i]);
        }
        System.out.println(subarraySum(a, 1));
    }
    public static int subarraySum(int[] nums, int k) {
        int count = 0, pre = 0;
        HashMap < Integer, Integer > mp = new HashMap < > ();
        mp.put(0, 1);
        for (int i = 0; i < nums.length; i++) {
            pre += nums[i];
            if (mp.containsKey(pre - k)) {
                count += mp.get(pre - k);
            }
            mp.put(pre, mp.getOrDefault(pre, 0) + 1);
        }
        return count;
    }

}



"
176,D,Java,61806054,2023-04-07 21:35:24,肿么肥四.,答案错误,"import java.io.*;

public class Main {
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    static long[] pos = new long[1000010];
    static int p;

    public static void main(String[] args) throws Exception {
        Read sc = new Read();
        long t = sc.nextInt();
        long[] ans = new long[(int) t];
        for (long i = 0; i < t; i++) {
            ans[(int) i] = sc.nextInt();
        }
        for (long i = 0; i < t; i++) {
            if(ans[(int) i]==1) pos[p++]=i;
        }
        pos[p]=0;
        pos[p+1]=t+1;
        long sum = 0;
        for (long i = 1; i <= p; i++) {
            sum+= (-pos[(int) (i - 1)] * pos[(int) (i + 1)]);
        }
        out.println(Math.abs(sum));

        out.flush();
    }
}

class Read {
    StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));

    public int nextInt() throws Exception {
        st.nextToken();
        return (int) st.nval;
    }
}"
177,D,Java,61806070,2023-04-07 21:35:42,肿么肥四.,答案错误,"import java.io.*;

public class Main {
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    static long[] pos = new long[1000010];
    static int p;

    public static void main(String[] args) throws Exception {
        Read sc = new Read();
        long t = sc.nextInt();
        long[] ans = new long[(int) t];
        for (long i = 0; i < t; i++) {
            ans[(int) i] = sc.nextInt();
        }
        for (long i = 0; i < t; i++) {
            if(ans[(int) i]==1) pos[p++]=i;
        }
        pos[p]=0;
        pos[p+1]=t;
        long sum = 0;
        for (long i = 1; i <= p; i++) {
            sum+= (-pos[(int) (i - 1)] * pos[(int) (i + 1)]);
        }
        out.println(Math.abs(sum));

        out.flush();
    }
}

class Read {
    StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));

    public int nextInt() throws Exception {
        st.nextToken();
        return (int) st.nval;
    }
}"
178,D,Java,61806133,2023-04-07 21:38:16,欧克z,答案正确,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());
        String[] sp = br.readLine().split("" "");
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = Integer.parseInt(sp[i]);
        }
        System.out.println(subarraySum(a, 1));
    }
    public static long subarraySum(int[] nums, int k) {
        long count = 0;
        int pre = 0;
        HashMap < Integer, Integer > mp = new HashMap < > ();
        mp.put(0, 1);
        for (int i = 0; i < nums.length; i++) {
            pre += nums[i];
            if (mp.containsKey(pre - k)) {
                count += mp.get(pre - k);
            }
            mp.put(pre, mp.getOrDefault(pre, 0) + 1);
        }
        return count;
    }

}



"
179,D,Java,61806244,2023-04-07 21:41:43,牛客890338089号,答案错误,"import java.util.Scanner;

// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] num = new int[n];
        for(int i = 0;i<n;i++){
            num[i] = in.nextInt();
        }
        int count = 0;
        for(int i =0;i<n;i++){
            if(num[i]==1){
                count++;
                count += dfs(num,i,i,count);
            }
            
        }
        
        System.out.println(count);
    }
    public static int dfs(int[] num,int left,int right,int count){
        if(left<0||right>=num.length){
            return count;
        }
        if(left>0){
            if(num[left-1]==0){
                count++;
                dfs(num,left-1,right,count);
            }
        }
        if(right+1<=num.length-1){
            if(num[right+1]==0){
                count++;
                dfs(num,left,right+1,count);
            }
        }
        return count;
    }

}"
180,D,Java,61806367,2023-04-07 21:45:48,牛客890338089号,答案错误,"import java.util.Scanner;

// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] num = new int[n];
        for(int i = 0;i<n;i++){
            num[i] = in.nextInt();
        }
        int count = 0;
        for(int i =0;i<n;i++){
            if(num[i]==1){
                count++;
                count += dfs(num,i,i,count);
            }
            
        }
        
        System.out.println(count);
    }
    public static int dfs(int[] num,int left,int right,int count){
        if(left<0||right>=num.length){
            return count;
        }
        int flag1 = 0,flag2 = 0;
        if(left>0){
            if(num[left-1]==0){
                flag1 = 1;
                
            }
        }
        if(right+1<=num.length-1){
            if(num[right+1]==0){
                flag2=1;

            }
        }
        if(flag1==1&&flag2==1){
            count +=2;
            dfs(num,left-1,right+1,count);
        }else if(flag1==1&&flag2==0){
            count++;
            dfs(num,left-1,right,count);
        }else if(flag2==1&&flag1==0){
            count++;
            dfs(num,left,right+1,count);
        }
        return count;
    }

}"
181,D,Java,61806443,2023-04-07 21:47:58,牛客890338089号,答案错误,"import java.util.Scanner;

// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] num = new int[n];
        for(int i = 0;i<n;i++){
            num[i] = in.nextInt();
        }
        int count = 0;
        for(int i =0;i<n;i++){
            if(num[i]==1){
                count++;
                count += dfs(num,i,i,count);
            }
            
        }
        
        System.out.println(count);
    }
    public static int dfs(int[] num,int left,int right,int count){
        if(left<0||right>=num.length){
            return count;
        }
        int flag1 = 0,flag2 = 0;
        if(left>0){
            if(num[left-1]==0){
                flag1 = 1;
                
            }
        }
        if(right+1<=num.length-1){
            if(num[right+1]==0){
                flag2=1;

            }
        }
        if(flag1==1&&flag2==1){
            count +=2;
            dfs(num,left-1,right+1,count);
        }else if(flag1==1&&flag2==0){
            count++;
            dfs(num,left-1,right,count);
        }else if(flag2==1&&flag1==0){
            count++;
            dfs(num,left,right+1,count);
        }
        return count;
    }

}"
182,D,Java,61806685,2023-04-07 21:56:24,SDTBU_LH,答案正确,"import java.util.*;

public class Main{
    static int N = 1000010;
    static int n;
    static int[] a = new int[N];
    static int[] b = new int[N];
    public static void main(String[] args){
        Scanner scan = new Scanner(System.in);
        n = scan.nextInt();
        int cnt = 0;
        b[0] = 0;
        for (int i = 1; i <= n; i ++){
            a[i] = scan.nextInt();
            if (a[i] == 1) b[++cnt] = i;
        }
        b[0] = 0;
        b[cnt + 1] = n + 1;
        long res = 0;
        for (int i = 1; i <= cnt; i ++){
            int l = b[i] - b[i - 1];
            int r = b[i + 1] - b[i];

            
            res += (long)l * r;
        }
        System.out.println(res);
    }
}"
183,D,Java,61806764,2023-04-07 21:58:54,蜉蝣~,运行超时,"
import java.util.*;
public class Main {
    static Scanner sc=new Scanner(System.in);
    public static void main(String[] args) {
        int n= sc.nextInt();
        int []num=new int[n];
        List<Integer> list=new ArrayList<>();
        for(int i=0;i<n;i++) {
            num[i]= sc.nextInt();
            if(num[i]==1)list.add(i);
        }
        int ans=0;
        for(int i=0;i<list.size();i++){
            int start=list.get(i);
            int end;
            if(i!=list.size()-1) end=list.get(i+1)-1;
            else end=n-1;
            ans+=end-start+1;
        }
        for(int i=0;i<list.size();i++){
            int end=list.get(i);
            int start=0;
            if(i!=0)start=list.get(i-1)+1;
            else start=0;
            ans+=end-start;
        }
        for(int i=0;i<list.size();i++){
            int start=0;
            if(i==0) start=0;
            else start=list.get(i-1)+1;
            int end=0;
            if(i==list.size()-1) end=n-1;
            else end=list.get(i+1)-1;
            if(start==list.get(i)||end==list.get(i)) continue;
            ans+=(list.get(i)-start)*(end-list.get(i));
        }
        System.out.println(ans);
    }
}"
184,D,Java,61806984,2023-04-07 22:06:43,cyclingle,运行超时,"	import java.io.BufferedReader;

import java.io.IOException;
import java.io.InputStreamReader;
import java.io.StreamTokenizer;
import java.lang.reflect.Array;
import java.math.BigDecimal;
import java.util.*;
import java.util.function.LongFunction;
import java.util.stream.Collectors;

import javax.swing.plaf.basic.BasicInternalFrameTitlePane.MaximizeAction;
import javax.swing.plaf.synth.SynthTabbedPaneUI;

import java.text.DateFormatSymbols;
import java.util.*;
public class Main {
          
          public static int gcd(int x,int y)
          {
              if(x==0) return y;
              else return gcd(y%x,x);
          }
        //static int a[]=new int[20];
        static List<Integer> list[]=new LinkedList[100006];
        static char a[][]=new char[2000][2000];
        static int sum[][]=new int[1000][1000];
        static int get(int x1,int y1,int x2,int y2)
        {
        	return sum[x2][y2]+sum[x1-1][y1-1]-sum[x2][y1-1]-sum[x1-1][y2];
        }
        static boolean check(int x)
        {
        	String reString=Integer.toString(x);
        	for(int i=1;i<reString.length();i++)
        	{
        		if(reString.charAt(i)<reString.charAt(i-1))
        		{
        			return false;
        		}
        	}
        	return true;
        }
        static boolean compare(String g1,String g2)
        {
        	if(g1.length()<g2.length()) return false;
        	else if(g1.length()>g2.length()) return true;
        	for(int i=0;i<g1.length();i++)
        	{
        		int x=g1.charAt(i)-'0';int y=g2.charAt(i)-'0';
        		if(x<y) return false;
        		else if(x>y) return true;
        	}
        	return true;
        }
        static int mod=1000000007;
     public static void main(String args[])throws IOException{
            Scanner scanner=new Scanner(System.in);
            //System.out.println((long)(100000*100000));
            int n=scanner.nextInt();
               List<Integer> list=new LinkedList<Integer>();
               long ans=0l;
               for(int i=1;i<=n;i++)
               {
            	   int x=scanner.nextInt();
            	   if(x==1) list.add(i);
               }
               for(int i=0;i<list.size();i++)
               {
            	   if(i==list.size()-1)
            	   {
            		   //System.out.println(""!!!"");
            		   int l=0;
            		   if(i!=0) l=list.get(i-1);
            		   ans+=(long)(list.get(i)-l)*(n-list.get(i)+1);
            	   }
            	   else {
            		   int l=0;
					if(i!=0) l=list.get(i-1);
					ans+=(long)(list.get(i)-l)*(list.get(i+1)-list.get(i));
				  }
               }
               System.out.println(ans);
            }
     
     
     
     public static class node {
         int x,y;
        node(int x,int y) {
            this.x=x;
            this.y=y;
            
        }
    }
         
    }"
185,D,Java,61807037,2023-04-07 22:09:05,cyclingle,运行超时,"	import java.io.BufferedReader;

import java.io.IOException;
import java.io.InputStreamReader;
import java.io.StreamTokenizer;
import java.lang.reflect.Array;
import java.math.BigDecimal;
import java.util.*;
import java.util.function.LongFunction;
import java.util.stream.Collectors;

import javax.swing.plaf.basic.BasicInternalFrameTitlePane.MaximizeAction;
import javax.swing.plaf.synth.SynthTabbedPaneUI;

import java.text.DateFormatSymbols;
import java.util.*;
public class Main {
          
          public static int gcd(int x,int y)
          {
              if(x==0) return y;
              else return gcd(y%x,x);
          }
        //static int a[]=new int[20];
        static List<Integer> list[]=new LinkedList[100006];
        static char a[][]=new char[2000][2000];
        static int sum[][]=new int[1000][1000];
        static int get(int x1,int y1,int x2,int y2)
        {
        	return sum[x2][y2]+sum[x1-1][y1-1]-sum[x2][y1-1]-sum[x1-1][y2];
        }
        static boolean check(int x)
        {
        	String reString=Integer.toString(x);
        	for(int i=1;i<reString.length();i++)
        	{
        		if(reString.charAt(i)<reString.charAt(i-1))
        		{
        			return false;
        		}
        	}
        	return true;
        }
        static boolean compare(String g1,String g2)
        {
        	if(g1.length()<g2.length()) return false;
        	else if(g1.length()>g2.length()) return true;
        	for(int i=0;i<g1.length();i++)
        	{
        		int x=g1.charAt(i)-'0';int y=g2.charAt(i)-'0';
        		if(x<y) return false;
        		else if(x>y) return true;
        	}
        	return true;
        }
        static int mod=1000000007;
     public static void main(String args[])throws IOException{
            //Scanner scanner=new Scanner(System.in);
    	 StreamTokenizer scanner=new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
            //System.out.println((long)(100000*100000));
    	 scanner.nextToken();
            int n=(int)(scanner.nval);
               List<Integer> list=new LinkedList<Integer>();
               long ans=0l;
               for(int i=1;i<=n;i++)
               {
            	   scanner.nextToken();
            	   int x=(int)(scanner.nval);
            	   if(x==1) list.add(i);
               }
               for(int i=0;i<list.size();i++)
               {
            	   if(i==list.size()-1)
            	   {
            		   //System.out.println(""!!!"");
            		   int l=0;
            		   if(i!=0) l=list.get(i-1);
            		   ans+=(long)(list.get(i)-l)*(n-list.get(i)+1);
            	   }
            	   else {
            		   int l=0;
					if(i!=0) l=list.get(i-1);
					ans+=(long)(list.get(i)-l)*(list.get(i+1)-list.get(i));
				  }
               }
               System.out.println(ans);
            }
     
     
     
     public static class node {
         int x,y;
        node(int x,int y) {
            this.x=x;
            this.y=y;
            
        }
    }
         
    }"
186,D,Java,61807474,2023-04-07 22:27:10,cyclingle,运行超时,"	import java.io.BufferedReader;

import java.io.IOException;
import java.io.InputStreamReader;
import java.io.StreamTokenizer;
import java.lang.reflect.Array;
import java.math.BigDecimal;
import java.util.*;
import java.util.function.LongFunction;
import java.util.stream.Collectors;

import javax.swing.plaf.basic.BasicInternalFrameTitlePane.MaximizeAction;
import javax.swing.plaf.synth.SynthTabbedPaneUI;

import java.text.DateFormatSymbols;
import java.util.*;
public class Main {
          
          public static int gcd(int x,int y)
          {
              if(x==0) return y;
              else return gcd(y%x,x);
          }
        //static int a[]=new int[20];
        static List<Integer> list[]=new LinkedList[100006];
        static char a[][]=new char[2000][2000];
        static int sum[][]=new int[1000][1000];
        static int get(int x1,int y1,int x2,int y2)
        {
        	return sum[x2][y2]+sum[x1-1][y1-1]-sum[x2][y1-1]-sum[x1-1][y2];
        }
        static boolean check(int x)
        {
        	String reString=Integer.toString(x);
        	for(int i=1;i<reString.length();i++)
        	{
        		if(reString.charAt(i)<reString.charAt(i-1))
        		{
        			return false;
        		}
        	}
        	return true;
        }
        static boolean compare(String g1,String g2)
        {
        	if(g1.length()<g2.length()) return false;
        	else if(g1.length()>g2.length()) return true;
        	for(int i=0;i<g1.length();i++)
        	{
        		int x=g1.charAt(i)-'0';int y=g2.charAt(i)-'0';
        		if(x<y) return false;
        		else if(x>y) return true;
        	}
        	return true;
        }
        static int mod=1000000007;
     public static void main(String args[])throws IOException{
            //Scanner scanner=new Scanner(System.in);
    	// StreamTokenizer scanner=new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
            //System.out.println((long)(100000*100000));
    	 //scanner.nextToken();
    	 BufferedReader scanner=new BufferedReader(new InputStreamReader(System.in));
            int n=Integer.parseInt(scanner.readLine());
               List<Integer> list=new LinkedList<Integer>();
               String aaString[]=scanner.readLine().split("" "");
               long ans=0l;
               for(int i=0;i<n;i++)
               {
            	   //scanner.nextToken();
            	   if(aaString[i].equals(""1"")) list.add(i+1);
               }
               for(int i=0;i<list.size();i++)
               {
            	   if(i==list.size()-1)
            	   {
            		   //System.out.println(""!!!"");
            		   int l=0;
            		   if(i!=0) l=list.get(i-1);
            		   ans+=(long)(list.get(i)-l)*(n-list.get(i)+1);
            	   }
            	   else {
            		   int l=0;
					if(i!=0) l=list.get(i-1);
					ans+=(long)(list.get(i)-l)*(list.get(i+1)-list.get(i));
				  }
               }
               System.out.println(ans);
            }
     
     
     
     public static class node {
         int x,y;
        node(int x,int y) {
            this.x=x;
            this.y=y;
            
        }
    }
         
    }"
187,D,Java,61807775,2023-04-07 22:41:41,cyclingle,执行出错,"	import java.io.BufferedReader;

import java.io.IOException;
import java.io.InputStreamReader;
import java.io.StreamTokenizer;
import java.lang.reflect.Array;
import java.math.BigDecimal;
import java.util.*;
import java.util.function.LongFunction;
import java.util.stream.Collectors;

import javax.swing.plaf.basic.BasicInternalFrameTitlePane.MaximizeAction;
import javax.swing.plaf.synth.SynthTabbedPaneUI;

import java.text.DateFormatSymbols;
import java.util.*;
public class Main {
          
          public static int gcd(int x,int y)
          {
              if(x==0) return y;
              else return gcd(y%x,x);
          }
        //static int a[]=new int[20];
        static List<Integer> list[]=new LinkedList[100006];
        static char a[][]=new char[2000][2000];
        static int sum[][]=new int[1000][1000];
        static int get(int x1,int y1,int x2,int y2)
        {
        	return sum[x2][y2]+sum[x1-1][y1-1]-sum[x2][y1-1]-sum[x1-1][y2];
        }
        static boolean check(int x)
        {
        	String reString=Integer.toString(x);
        	for(int i=1;i<reString.length();i++)
        	{
        		if(reString.charAt(i)<reString.charAt(i-1))
        		{
        			return false;
        		}
        	}
        	return true;
        }
        static boolean compare(String g1,String g2)
        {
        	if(g1.length()<g2.length()) return false;
        	else if(g1.length()>g2.length()) return true;
        	for(int i=0;i<g1.length();i++)
        	{
        		int x=g1.charAt(i)-'0';int y=g2.charAt(i)-'0';
        		if(x<y) return false;
        		else if(x>y) return true;
        	}
        	return true;
        }
        static int mod=1000000007;
     public static void main(String args[])throws IOException{
            //Scanner scanner=new Scanner(System.in);
    	// StreamTokenizer scanner=new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
            //System.out.println((long)(100000*100000));
    	 //scanner.nextToken();
    	 BufferedReader scanner=new BufferedReader(new InputStreamReader(System.in));
            int n=Integer.parseInt(scanner.readLine());
               List<Integer> list=new LinkedList<Integer>();
               String aaString[]=scanner.readLine().split("" "");
               int pos[]=new int [100007];
               int cnt=0;
               long ans=0l;
               for(int i=0;i<n;i++)
               {
            	   //scanner.nextToken();
            	   if(aaString[i].equals(""1"")) pos[cnt++]=i+1;
               }
               for(int i=0;i<cnt;i++)
               {
            	   if(i==cnt-1)
            	   {
            		   //System.out.println(""!!!"");
            		   int l=0;
            		   if(i!=0) l=pos[i-1];
            		   ans+=(long)(pos[i]-l)*(n-pos[i]+1);
            	   }
            	   else {
            		   int l=0;
					if(i!=0) l=pos[i-1];
					ans+=(long)(pos[i]-l)*(pos[i+1]-pos[i]);
				  }
               }
               System.out.println(ans);
            }
     
     
     
     public static class node {
         int x,y;
        node(int x,int y) {
            this.x=x;
            this.y=y;
            
        }
    }
         
    }"
188,D,Java,61807787,2023-04-07 22:42:13,cyclingle,答案正确,"	import java.io.BufferedReader;

import java.io.IOException;
import java.io.InputStreamReader;
import java.io.StreamTokenizer;
import java.lang.reflect.Array;
import java.math.BigDecimal;
import java.util.*;
import java.util.function.LongFunction;
import java.util.stream.Collectors;

import javax.swing.plaf.basic.BasicInternalFrameTitlePane.MaximizeAction;
import javax.swing.plaf.synth.SynthTabbedPaneUI;

import java.text.DateFormatSymbols;
import java.util.*;
public class Main {
          
          public static int gcd(int x,int y)
          {
              if(x==0) return y;
              else return gcd(y%x,x);
          }
        //static int a[]=new int[20];
        static List<Integer> list[]=new LinkedList[100006];
        static char a[][]=new char[2000][2000];
        static int sum[][]=new int[1000][1000];
        static int get(int x1,int y1,int x2,int y2)
        {
        	return sum[x2][y2]+sum[x1-1][y1-1]-sum[x2][y1-1]-sum[x1-1][y2];
        }
        static boolean check(int x)
        {
        	String reString=Integer.toString(x);
        	for(int i=1;i<reString.length();i++)
        	{
        		if(reString.charAt(i)<reString.charAt(i-1))
        		{
        			return false;
        		}
        	}
        	return true;
        }
        static boolean compare(String g1,String g2)
        {
        	if(g1.length()<g2.length()) return false;
        	else if(g1.length()>g2.length()) return true;
        	for(int i=0;i<g1.length();i++)
        	{
        		int x=g1.charAt(i)-'0';int y=g2.charAt(i)-'0';
        		if(x<y) return false;
        		else if(x>y) return true;
        	}
        	return true;
        }
        static int mod=1000000007;
     public static void main(String args[])throws IOException{
            //Scanner scanner=new Scanner(System.in);
    	// StreamTokenizer scanner=new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
            //System.out.println((long)(100000*100000));
    	 //scanner.nextToken();
    	 BufferedReader scanner=new BufferedReader(new InputStreamReader(System.in));
            int n=Integer.parseInt(scanner.readLine());
               List<Integer> list=new LinkedList<Integer>();
               String aaString[]=scanner.readLine().split("" "");
               int pos[]=new int [1000007];
               int cnt=0;
               long ans=0l;
               for(int i=0;i<n;i++)
               {
            	   //scanner.nextToken();
            	   if(aaString[i].equals(""1"")) pos[cnt++]=i+1;
               }
               for(int i=0;i<cnt;i++)
               {
            	   if(i==cnt-1)
            	   {
            		   //System.out.println(""!!!"");
            		   int l=0;
            		   if(i!=0) l=pos[i-1];
            		   ans+=(long)(pos[i]-l)*(n-pos[i]+1);
            	   }
            	   else {
            		   int l=0;
					if(i!=0) l=pos[i-1];
					ans+=(long)(pos[i]-l)*(pos[i+1]-pos[i]);
				  }
               }
               System.out.println(ans);
            }
     
     
     
     public static class node {
         int x,y;
        node(int x,int y) {
            this.x=x;
            this.y=y;
            
        }
    }
         
    }"
189,D,Java,61809337,2023-04-08 08:02:23,Mosyi.,执行出错,"import java.io.*;
import java.util.*;
import java.math.*;
public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
           int n = in.nextInt();
           int sum = 0;
           int[] a = new int[n+1];
           int[] b = new int[n+1];
           b[0] = 0;
            for (int i = 1; i <= n; i++) {
                a[i] = in.nextInt();
                if(a[i] == 1){
                    b[++sum] = i;
                }
            }
            b[0] = 0;
            b[sum + 1] = n+1;
            long res = 0;
            for (int i = 1; i <= sum; i++) {
                int l = b[i] - b[i-1];
                int r = b[i+1] - b[i];
                res += (long)l*r;
            }
            out.println(res);
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
190,D,Java,61809339,2023-04-08 08:03:12,Mosyi.,答案正确,"import java.io.*;
import java.util.*;
import java.math.*;
public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
           int n = in.nextInt();
           int sum = 0;
           int[] a = new int[1000010];
           int[] b = new int[1000010];
           b[0] = 0;
            for (int i = 1; i <= n; i++) {
                a[i] = in.nextInt();
                if(a[i] == 1){
                    b[++sum] = i;
                }
            }
            b[0] = 0;
            b[sum + 1] = n+1;
            long res = 0;
            for (int i = 1; i <= sum; i++) {
                int l = b[i] - b[i-1];
                int r = b[i+1] - b[i];
                res += (long)l*r;
            }
            out.println(res);
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
191,D,Java,61812219,2023-04-08 14:24:29,尖齿柠檬鲨,答案错误,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] nums = new int[n];
        int result = 0;
        for (int i = 0; i < n; i++) {
            nums[i] = in.nextInt();
        }
        for (int i = 0; i < n; i++) {
            if (nums[i] == 1) {
                result += getAloneCount(i, nums);
            }
        }
        System.out.println(result);
    }

    private static int getAloneCount(int index, int[] nums) {
        int count = 1;
        for (int left = index - 1; left >= 0; left--) {
            if (nums[left] == 0) {
                count += 1;
            } else {
                break;
            }
        }
        for (int right = index + 1; right < nums.length; right++) {
            if (nums[right] == 0) {
                count += 1;
            } else {
                break;
            }
        }
        for (int left = index - 1, right = index + 1; left >= 0 && right < nums.length; left--, right++) {
            if (nums[left] == 0 && nums[right] == 0) {
                count += 1;
            } else {
                break;
            }
        }
        return count;
    }
}"
192,D,Java,61812401,2023-04-08 14:44:14,尖齿柠檬鲨,答案错误,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] nums = new int[n];
        int result = 0;
        for (int i = 0; i < n; i++) {
            nums[i] = in.nextInt();
        }
        for (int i = 0; i < n; i++) {
            if (nums[i] == 1) {
                result += getAloneCount(i, nums);
            }
        }
        System.out.println(result);
    }

    private static int getAloneCount(int index, int[] nums) {
        int count = 1;
        int left = index - 1;
        int leftCount = 0;
        for (; left >= 0 && nums[left] == 0; left--) leftCount++;
        count += leftCount;
        for (int right = index + 1; right < nums.length && nums[right] == 0; right++) {
            count += (1 + leftCount);
        }
        return count;
    }
}"
193,D,Java,61812486,2023-04-08 14:52:36,尖齿柠檬鲨,答案正确,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] nums = new int[n];
        for (int i = 0; i < n; i++) {
            nums[i] = in.nextInt();
        }
        long result = 0L;
        for (int i = 0; i < n; i++) {
            if (nums[i] == 1) {
                result += getAloneCount(i, nums);
            }
        }
        System.out.println(result);
    }

    private static long getAloneCount(int index, int[] nums) {
        long count = 1L;
        int left = index - 1;
        long leftCount = 0L;
        for (; left >= 0 && nums[left] == 0; left--) leftCount++;
        count += leftCount;
        for (int right = index + 1; right < nums.length && nums[right] == 0; right++) {
            count += (1 + leftCount);
        }
        return count;
    }
}"
194,D,Java,61820236,2023-04-09 10:41:05,牛客846475265号,答案错误,"import java.util.*;
public class Main {
    static int N = 1000010;
    public static void main(String[] args) {
        int ans = 0;
        Scanner cin = new Scanner(System.in);
        int n = cin.nextInt();
        int[] a = new int[N];
        for (int i = 1; i <= n; i++) {
            a[i] = cin.nextInt();
            a[i] += a[i-1];
        }
        for (int i = 1; i < n; i++) {
            int l = i;
            int r = n;
            while (l < r) {
                int mid = l + r >> 1;   
                if (a[mid] - a[i-1] > 0) {
                    r = mid;
                } else {
                    l = mid + 1;
                }
            }
            int t = l;
            r = n;
            while (l < r) {
                int mid = l + r + 1 >> 1;
                if (a[mid] - a[i-1] <= 1) {
                    l = mid;
                } else {
                    r = mid - 1;
                }
            }
          
            ans += l - t + 1;   
        }
        System.out.println(ans);
    }
}"
195,D,Java,61820266,2023-04-09 10:42:02,牛客846475265号,答案错误,"import java.util.*;
public class Main {
    static int N = 1000010;
    public static void main(String[] args) {
        int ans = 0;
        Scanner cin = new Scanner(System.in);
        int n = cin.nextInt();
        int[] a = new int[N];
        for (int i = 1; i <= n; i++) {
            a[i] = cin.nextInt();
            a[i] += a[i-1];
        }
        for (int i = 1; i < n; i++) {
            int l = i;
            int r = n;
            while (l < r) {
                int mid = l + r >> 1;   
                if (a[mid] - a[i-1] > 0) {
                    r = mid;
                } else {
                    l = mid + 1;
                }
            }
            int t = l;
            r = n;
            while (l < r) {
                int mid = l + r + 1 >> 1;
                if (a[mid] - a[i-1] <= 1) {
                    l = mid;
                } else {
                    r = mid - 1;
                }
            }
          
            ans += l - t + 1;   
        }
        System.out.println(ans);
    }
}"
196,D,Java,61820277,2023-04-09 10:42:20,牛客846475265号,答案错误,"import java.util.*;
public class Main {
    static int N = 1000010;
    public static void main(String[] args) {
        int ans = 0;
        Scanner cin = new Scanner(System.in);
        int n = cin.nextInt();
        int[] a = new int[N];
        for (int i = 1; i <= n; i++) {
            a[i] = cin.nextInt();
            a[i] += a[i-1];
        }
        for (int i = 1; i <= n; i++) {
            int l = i;
            int r = n;
            while (l < r) {
                int mid = l + r >> 1;   
                if (a[mid] - a[i-1] > 0) {
                    r = mid;
                } else {
                    l = mid + 1;
                }
            }
            int t = l;
            r = n;
            while (l < r) {
                int mid = l + r + 1 >> 1;
                if (a[mid] - a[i-1] <= 1) {
                    l = mid;
                } else {
                    r = mid - 1;
                }
            }
          
            ans += l - t + 1;   
        }
        System.out.println(ans);
    }
}"
197,D,Java,61820387,2023-04-09 10:47:17,牛客846475265号,答案错误,"import java.util.*;
public class Main {
    static int N = 1000010;
    public static void main(String[] args) {
        int ans = 0;
        Scanner cin = new Scanner(System.in);
        int n = cin.nextInt();
        int[] a = new int[N];
        for (int i = 1; i <= n; i++) {
            a[i] = cin.nextInt();
            a[i] += a[i-1];
        }
        for (int i = 1; i < n; i++) {
            int l = i;
            int r = n;
            while (l < r) {
                int mid = l + r >> 1;   
                if (a[mid] - a[i-1] > 0) {
                    r = mid;
                } else {
                    l = mid + 1;
                }
            }
            int t = l;
            r = n;
            while (l < r) {
                int mid = l + r + 1 >> 1;
                if (a[mid] - a[i-1] <= 1) {
                    l = mid;
                } else {
                    r = mid - 1;
                }
            }
          
            ans += l - t + 1;   
        }
        System.out.println(ans);
    }
}"
198,D,Java,61829810,2023-04-09 19:20:23,牛客846475265号,答案错误,"import java.util.*;
public class Main {
    static int N = 1000010;
    public static void main(String[] args) {
        int ans = 0;
        Scanner cin = new Scanner(System.in);
        int n = cin.nextInt();
        int[] a = new int[N];
        for (int i = 1; i <= n; i++) {
            a[i] = cin.nextInt();
            a[i] += a[i-1];
        }
        for (int i = 1; i <= n; i++) {
            int l = i;
            int r = n;
            while (l < r) {
                int mid = l + r >> 1;   
                if (a[mid] - a[i-1] > 0) {
                    r = mid;
                } else {
                    l = mid + 1;
                }
            }
            int t = l;
            r = n;
            while (l < r) {
                int mid = l + r + 1 >> 1;
                if (a[mid] - a[i-1] <= 1) {
                    l = mid;
                } else {
                    r = mid - 1;
                }
            }
            ans += l - t + 1;   
        }
        System.out.println(ans);
    }
}"
199,D,Java,61830512,2023-04-09 19:53:09,牛客846475265号,答案错误,"import java.util.*;
public class Main {
    static int N = 1000010;
    static int[] a = new int[N];
    static int idx = 1;
    public static void main(String[] args) {
        Scanner cin = new Scanner(System.in);
        int n = cin.nextInt();
        for (int i = 1; i <= n; i++) {
            int val = cin.nextInt();
            if (val == 1) {
                a[idx++] = i;
            }
        }
        a[0] = 0;
        a[idx] = n+1;
        long ans = 0;
        for (int i = 1; i < idx; i++) {
         
            ans += (a[i] - a[i-1]) * (a[i+1]-a[i]);
        }
        
        System.out.println(ans);
      
        
    }  
}"
