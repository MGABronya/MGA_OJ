,index,languageName,submissionId,submitTime,userName,statusMessage,code
0,C,Java,61790215,2023-04-07 19:16:49,zzl064,答案正确,"import java.util.*;

public class Main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt(), m = sc.nextInt();
        String[] grid = new String[n];
        for(int i = 0; i < n; ++i){
            grid[i] = sc.next();
        }
        int[] p = null;
        for(int i = 0; i < n; ++i){
            for(int j = 0; j < m; ++j){
                if(grid[i].charAt(j) == '@'){
                    p = new int[]{i, j};
                }
            }
        }
        Queue<int[]> q = new ArrayDeque<>();
        q.add(p);
        boolean[][] vis = new boolean[n][m];
        vis[p[0]][p[1]] = true;
        int[] dx = {0, 1, 0, -1}, dy = {1, 0, -1, 0};
        int cnt = 0;
        while(!q.isEmpty()){
            int[] cur = q.poll();
            if(grid[cur[0]].charAt(cur[1]) == '!') cnt++;
            for(int i = 0; i < 4; ++i){
                int x = cur[0] + dx[i], y = cur[1] + dy[i];
                if(x < 0 || x == n || y < 0 || y == m || vis[x][y] || grid[x].charAt(y) == '#') continue;
                vis[x][y] = true;
                q.add(new int[]{x, y});
            }
        }
        System.out.println(cnt);
    }
}"
1,C,Java,61790408,2023-04-07 19:17:54,迷你滨,答案正确,"import java.io.*;
import java.util.*;
import java.math.*;
//An apple a day

public class Main{
	static int maxn = 200005,n,m;
	static long INF = (long)1e18,ans = 0,mod = (int)1e9+7;
	static Scanner sc = new Scanner (System.in);
	static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st  =new StreamTokenizer(bf);
    static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));
    public static void main(String[]args) throws IOException{
    	int T = 1;
    	//T = Integer.parseInt(S());
        
    	while(T-->0) solve();
    	//while(st.nextToken() != st.TT_EOF) {
    		//n = (int)st.nval;solve();
    	//}
        pw.flush();
    }
    static final int I() throws IOException {
    	st.nextToken();
    	return (int)st.nval;
    }
    
    static String S() throws IOException{
    	String res = bf.readLine();
    	while(res.equals("""")) res = bf.readLine();
    	return res;
    }
    
    static char[][]g;
    
    static boolean f[][] = new boolean [1004][1005];
    
    static void bfs(int s,int t) {
    	int X[] = {0,0,1,-1};
    	int Y[] = {1,-1,0,0};
    	Queue<Integer> q = new LinkedList<>();
    	q.add(s*10000+t);
    	while(!q.isEmpty()) {
    		int a = q.poll();
    		int x = a/10000, y =a%10000;
    		if(f[x][y]) continue;
    		f[x][y] = true;
    		if(g[x][y] == '!')ans++;
    		for(int i=0;i<4;i++) {
    			int nx = x + X[i];
    			int ny = Y[i]+ y;
    			if(nx>=1 && nx <=m && ny >=1 && ny <=n && !f[nx][ny] && g[nx][ny]!='#')
    				q.add(nx*10000+ny);
    		}
    	}
    }
    
    static void solve() throws IOException{
    	n=I();m=I();
    	g = new char[n+5][m+5];
    	int s=0,t=0;
    	for(int i=1;i<=n;i++) {
    		g[i] = (""!""+S()).toCharArray();
    		for(int j=1;j<=m;j++)
    			if(g[i][j] == '@') {
    				s=i;t=j;break;
    			}
    	}
    	bfs(s,t);
    	pw.println(ans);
    }
}
"
2,C,Java,61790525,2023-04-07 19:18:35,Eunoiay,答案正确,"import static java.lang.Math.*;
import java.util.*;
import java.io.*;

public class Main {
    private static FastReader sc = new FastReader();
    private static PrintWriter pw = new PrintWriter(System.out);
    
    static final int N = 1010;
    static char[][] g = new char[N][];
    static boolean[][] st = new boolean[N][N];
    static int n, m;
    
    static int[] dx = {0, 1, 0, -1}, dy = {1, 0, -1, 0};
    
    public static void main(String[] args) throws IOException {
        solve();
        pw.close();
    }
    
    public static void solve() {
        n = sc.nextInt();
        m = sc.nextInt();
        
        for (int i = 0; i < n; i++) g[i] = sc.next().toCharArray();
        
        int sx = 0, sy = 0;
        for (int i = 0; i < n; i++)
            for (int j = 0; j < m; j++)
                if (g[i][j] == '@') {
                    sx = i; sy = j;
                    break;
                }
        
        int res = bfs(sx, sy);
        pw.println(res);
    }
    
    public static int bfs(int sx, int sy) {
        Queue<Pair> q = new LinkedList<>();
        q.offer(new Pair(sx, sy));
        st[sx][sy] = true;
        
        int res = 0;
        while (!q.isEmpty()) {
            Pair t = q.poll();
            
            for (int i = 0; i < 4; i++) {
                int x = t.x + dx[i], y = t.y + dy[i];
                if (x < 0 || x >= n || y < 0 || y >= m || st[x][y]) continue;
                if (g[x][y] == '#') continue;
                
                st[x][y] = true;
                if (g[x][y] == '!') res++;
                q.offer(new Pair(x, y));
            }
        }
        
        return res;
    }
    
    public static class Pair {
        int x, y;
        Pair(int x, int y) {
            this.x = x;
            this.y = y;
        }
    }
    
    private static class FastReader {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st;
        
        String next() {
            while (st == null || !st.hasMoreElements()) {
                try { 
                    st = new StringTokenizer(br.readLine()); 
                    
                } catch (IOException e) {
                    e.printStackTrace(); 
                }
            }
            return st.nextToken();
        }
        
        int nextInt() {
            return Integer.parseInt(next());
        }
        
        long nextLong() {
            return Long.parseLong(next());
        }
        
        double nextDouble() {
            return Double.parseDouble(next());
        }
        
        String nextLine() {
            String line = null;
            try {
                line = br.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            
            return line;
        }
        
        boolean hasNext() {
            if (st == null || !st.hasMoreElements()) {
                try {
                    String in = br.readLine();
                    if (in == null) return false;
                    st = new StringTokenizer(in);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            return true;
        }
    }
}"
3,C,Java,61790573,2023-04-07 19:18:49,RDeAmor,编译错误,"{""SPECIAL_TM_FH_MEMO_JSON_TAG"":""SPECIAL_TM_FH_MEMO_JSON_TAG"",""stderr"":""Main.java:9: error: illegal start of expression\n        for(int i = 0; i <)\n                          ^\nMain.java:10: error: illegal start of expression\n    }\n    ^\nMain.java:10: error: ')' expected\n    }\n     ^\nMain.java:11: error: illegal start of statement\n}\n ^\n4 errors""}

import java.util.*;

public class Main {
    public static void main(String args[]) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        char[][] mat = new char[n][m];
        for(int i = 0; i <)
    }
}"
4,C,Java,61790676,2023-04-07 19:19:31,牛客765377204号,答案错误,"

import java.util.*;

public class Main {

    static Scanner in = new Scanner(System.in);
    static int[] dx = {1, -1, 0, 0};
    static int[] dy = {0, 0, -1, 1};
    static boolean[][] st;
    static int n, m;
    static char[][] grid;

    public static void dfs(int i, int j) {
        if (i < 0 || i >= n || j < 0 || j >= m || grid[i][j] == '#') return;
        grid[i][j] = '#';
        for (int k = 0; k < 4; k++) {
            dfs(i + dx[k], j + dy[k]);
        }
    }

    public static void main(String[] args) {
        n = in.nextInt();
        m = in.nextInt();
        grid = new char[n][m];
        for (int i = 0; i < n; i++) {
           grid[i]=in.next().toCharArray();
        }
        int ans=0;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]=='!'){
                  dfs(i,j);
                  ans++;
                }
            }
        }
        System.out.println(ans);
    }
}
"
5,C,Java,61790960,2023-04-07 19:21:31,悠然小白,答案正确,"import java.util.*;
import java.io.*;

public class Main {

    static int ans = 0;
    static int[] posX = {-1, 1, 0, 0};
    static int[] posY = {0, 0, -1, 1};

    public static void main(String[] args) {

        Scanner in = new Scanner(new BufferedReader(new InputStreamReader(System.in)));
        PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));

        ans = 0;
        int n = in.nextInt();
        int m = in.nextInt();
        int x = 0;
        int y = 0;
        int[][] nums = new int[n][m];
        for (int i = 0; i < n; i++) {
            String s1 = in.next();
            for (int j = 0; j < s1.length(); j++) {
                if (s1.charAt(j) == '.') {
                    nums[i][j] = 1;
                } else if (s1.charAt(j) == '#') {
                    nums[i][j] = 2;
                } else if (s1.charAt(j) == '!') {
                    nums[i][j] = 3;
                } else {
                    nums[i][j] = 1;
                    x = i;
                    y = j;
                }
            }
        }
        dfs(nums, x, y);
        out.println(ans);

        out.flush();
    }

    private static void dfs(int[][] nums, int x, int y) {
        if (0 <= x && x < nums.length && 0 <= y && y < nums[0].length) {
            if (nums[x][y] == 1 || nums[x][y] == 3) {
                if (nums[x][y] == 3) {
                    ans++;
                }
                nums[x][y] = -1;
                for (int i = 0; i < posX.length; i++) {
                    dfs(nums, x + posX[i], y + posY[i]);
                }
                
            }
            
            
        }
    }

}
"
6,C,Java,61791013,2023-04-07 19:21:56,牛客765377204号,答案正确,"
import java.util.*;

public class Main {

    static Scanner in = new Scanner(System.in);
    static int[] dx = {1, -1, 0, 0};
    static int[] dy = {0, 0, -1, 1};
    static boolean[][] st;
    static int n, m;
    static char[][] grid;
    static int ans = 0;

    public static void dfs(int i, int j) {
        if (i < 0 || i >= n || j < 0 || j >= m || grid[i][j] == '#') return;
        if (grid[i][j] == '!') ans++;
        grid[i][j] = '#';
        for (int k = 0; k < 4; k++) {
            dfs(i + dx[k], j + dy[k]);
        }
    }

    public static void main(String[] args) {
        n = in.nextInt();
        m = in.nextInt();
        grid = new char[n][m];
        for (int i = 0; i < n; i++) {
            grid[i] = in.next().toCharArray();
        }

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (grid[i][j] == '@') {
                    dfs(i, j);
                }
            }
        }
        System.out.println(ans);
    }
}
"
7,C,Java,61791016,2023-04-07 19:21:58,陈力明,运行超时,"


import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.lang.invoke.MethodHandles;
import java.util.*;



import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
 
public class Main{
 
private static final boolean String = false;
static int []f;
//static int []f2;
static int []size;
//static int []size2;
//static int []a=new int [500001];
static int max=Integer.MAX_VALUE;

static Set<Long>set=new HashSet<>();
static int k;
static long mod= 998244353;
static int res=0;
static int n,m;
static int x1,y1;
 static List<Integer>[]ans;
 static char [][]c;

static int[] dx = {-1, 0, 1, 0}, dy = {0, 1, 0, -1};
	public static void main(String []args) {
		MyScanner s=new MyScanner();
		PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
	
		int n=s.nextInt();
		int m=s.nextInt();
		char  [][]f=new char[n][m];
		for(int i=0;i<n;i++)
		{
			f[i]=s.next().toCharArray();
		}
			int x=0,y=0;
			for(int i=0;i<n;i++)
			{
				for(int j=0;j<m;j++)
				{
					if(f[i][j]=='@')
					{
						x=i;y=j;
					}
				}
			}
			int [] []v=new int [n][m];
			dfs(x,y,f,v);
			out.println(res);
		
		

	out.close();
	}
	public static void dfs(int x,int y,char [][]f,int [][]v)
	{
		v[x][y]=1;
		if(f[x][y]=='!')res++;
		for(int i=0;i<4;i++)
		{
			int x1=x+dx[i];
			int y1=y+dy[i];
			if(x1<0||x1>=f.length||y1<0||y1>=f[0].length||v[x1][y1]==1||f[x1][y1]=='#')continue;
			dfs(x1,y1,f,v);
		}
	}
	public static long shuwei(int i,int  mask,boolean limitnums,boolean isnum,char []c,long [][]dp)
	{
		if(i==c.length)
			return isnum?1:0;
					
	
	if(!limitnums&&isnum&&dp[i][mask]!=-1)
		return dp[i][mask];
	long res=0;
	if(!isnum)
	{
		res=shuwei(i+1,mask,false,false,c,dp);
	}
	int up=limitnums?c[i]-'0':9;
	for(int d=isnum?0:1;d<=up;++d)
	{
		 if((mask>>d&1)==0)
			 res+=shuwei(i+1,mask,limitnums&&d==up,true,c,dp);
	}
	if(!limitnums&&isnum)
		dp[i][mask]=res;
	return res;
}
	
     


	public static boolean is(char []c)
	{
		int l=0;
		int r=c.length-1;
		while(l<r)
		{
			if(c[l]!=c[r])return false;
			l++;r--;
		}
		return true;
	}
	public static void swap (int l,int r,int []f)
	{
		if(l>=f.length||r>=f.length)return;
		int tt=f[l];
		f[l]=f[r];
		f[r]=tt;
		
	}
	
public static void reverse(int []a)
{
	int l=0,r=a.length-1;
	while(l<r)
	{
		int t=a[l];
		a[l]=a[r];
		a[r]=t;
		l++;r--;
	}
}
	public static long sum (int x,long mod)
	{
		
	long sum=1;
		for(int i = 2; i * i <= x; ++i){
			long temp = 1;
			if(x % i == 0){
				long j = i;
				while(x % i == 0){
					temp += j;
					j *= i;
					x /= i;
				}
				sum = (sum * temp) % mod;
			}

	
	}
		if(x > 1) sum = (sum * (1 + x)) % mod;
		return sum;
	}
	  public  static long Mode(long a,  long b, long mode)
	  {
	  	 long sum = 1;
	  	a = a % mode;
	   
	  	while (b > 0) {
	  		if (b % 2 == 1)		//判断是否是奇数，是奇数的话将多出来的数事先乘如sum
	  			sum = (sum * a) % mode;
	   
	  		b /= 2;
	  		a = (a * a) % mode;// 不断的两两合并再取模，减小a和b的规模
	  	}
	  	return sum;
	  }
	public static long is(int mid,long []f,int d)
	{
		long ans=0;
		for(int i=0;i<d;i++)
		{
			
			int   k=i%mid;
			if(k>f.length-1)continue;
			ans+=f[f.length-k-1];
		}
		return ans;
	}
	
	public static boolean is(String a,String b)
	{
		for(int i=0;i<=b.length()-a.length();i++)
		{
			if(b.substring(i,i+a.length()).equals(a))
				return true;
		}
		return false;
		
	}
	
	
	  public static boolean is(int  n) {
		    if (n <= 3) {
		        return n > 1;
		    }
		    // 只有6x-1和6x+1的数才有可能是质数
		    if (n % 6 != 1 && n % 6 != 5) {
		        return false;
		    }
		    // 判断这些数能否被小于sqrt(n)的奇数整除
		    int sqrt = (int) Math.sqrt(n);
		    for (int i = 5; i <= sqrt; i += 6) {
		        if (n % i == 0 || n % (i + 2) == 0) {
		            return false;
		        }
		    }
		    return true;
		}



public static int find (int []father,int x) {
		if(x!=father[x])
			x=find(father,father[x]);
		return father[x];
	}
public static void union(int []father,int x,int y,int []size) {
	x=find(father,x);
	y=find(father,y);
	if(x==y)
		return ;
	if(size[x]<size[y]) {
		 int tem=x;
         x=y;
         y=tem;
	}
	father[y]=x;
	size[x]+=size[y];
return ;
}
		
					
public static void shufu(int []f) {
		for(int i=0;i<f.length;i++) {
			int k=(int)(Math.random()*(f.length));
			int t=f[k];
			
			f[k]=f[0];
			f[0]=t;
			
		}
	}
public static void shufu1(long []f) {
	for(int i=0;i<f.length;i++) {
		int k=(int)(Math.random()*(f.length));
		long t=f[k];
		f[k]=f[0];
		f[0]=t;
	}
}
public  static int  gcd(int x,int y) {
		return y==0?x:gcd(y,x%y);
	}
 
 
public  static int  lcm(int x,int y) {
		
		return x*y/gcd(x,y);
}
		
	
	
		
		
	
	
		
	
/*					
public static void buildertree(int k,int l,int r) {
		if(l==r)
		{
			f[k]=a[l];
			return ;
		}
		int m=l+r>>1;
		buildertree(k+k,l,m);
		buildertree(k+k+1,m+1,r);
		f[k]=	
	
	}
public static	void update(int u,int l,int r,int x,int c)
{
    if(l==x && r==x)
    {
        f[u]=c;
        return;
    }
    int mid=l+r>>1;
    if(x<=mid)update(u<<1,l,mid,x,c);
    else if(x>=mid+1)update(u<<1|1,mid+1,r,x,c);
   	f[u]=Math.max(f[u+u], f[u+u+1]);
}
	
public static int query(int k,int l,int r,int x,int y) {
		if(x==l&&y==r) {
			return f[k];
		}
		int m=l+r>>1;
		if(y<=m) {
			return query(k+k,l,m,x,y);
		}
		else if(x>m)return query(k+k+1,m+1,r,x,y);
		else  {
			int i=query(k+k,l,m,x,m),j=query(k+k+1,m+1,r,m+1,y);
		return Math.max(j, Math.max(i+j, i));
		
		}
	}
	
public static void calc(int k,int l,int r,int x,int z) {
 
			f[k]+=z;
			if(l==r) {
				return ;
			}
			int m=l+r>>1;
    		if(x<=m)
    			calc(k+k,l,m,x,z);
    		else calc(k+k+1,m+1,r,x,z);
			
			
		}
	
				
			
 
		*/
		
				
	
			
	
			
	
 
	public static class MyScanner {
	    BufferedReader br;
	    StringTokenizer st;
	 
	    public MyScanner() {
	      try {
	        final String USERDIR = System.getProperty(""user.dir"");
	        String cname = MethodHandles.lookup().lookupClass().getCanonicalName().replace("".MyScanner"", """");
	        cname = cname.lastIndexOf('.') > 0 ? cname.substring(cname.lastIndexOf('.') + 1) : cname;
	        final File fin = new File(USERDIR + ""/io/c"" + cname.substring(1,5) + ""/"" + cname + "".in"");
	        br = new BufferedReader(new InputStreamReader(fin.exists()
	            ? new FileInputStream(fin) : System.in));
	      } catch (Exception e) {
	        br = new BufferedReader(new InputStreamReader(System.in));
	      }
	    }
	 
	    public String next() {
	      try {
	        while (st == null || !st.hasMoreElements()) {
	          st = new StringTokenizer(br.readLine());
	        }
	        return st.nextToken();
	      } catch (Exception e) {
	        throw new RuntimeException(e);
	      }
	    }
	 
	    public int nextInt() {
	      return Integer.parseInt(next());
	    }
	 
	    public long nextLong() {
	      return Long.parseLong(next());
	    }
	  }
	
		}"
8,C,Java,61791071,2023-04-07 19:22:23,北-北瓜,答案正确,"import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n= in.nextInt();
            int m= in.nextInt();
            int[][]dt=new int[n+2][m+2];

            int[]xx={0,0,-1,1};
            int[]yy={-1,1,0,0};
            Queue<A>bfs=new ArrayDeque<>();
            for (int i = 1; i <=n; i++) {
                String s= in.next();
                for (int j = 1; j <=m; j++) {
                    if (s.charAt(j-1)=='#')dt[i][j]=-1;
                    else if (s.charAt(j-1)=='!')dt[i][j]=1;
                    else if (s.charAt(j-1)=='@'){
                        bfs.add(new A(i,j));
                    }
                    else dt[i][j]=2;
                }
            }
            int sum=0;

            while (!bfs.isEmpty()){
                A a=bfs.poll();
                for (int i = 0; i <4; i++) {
                    int x = a.x + xx[i];
                    int y = a.y + yy[i];
                    if (dt[x][y] > 0) {
                        if (dt[x][y] == 1) sum++;
                        dt[x][y] = -1;
                        bfs.add(new A(x, y));
                    }
                }
            }
            System.out.println(sum);


        }
        class A{
            int x,y;

            public A(int x, int y) {
                this.x = x;
                this.y = y;
            }
        }
    }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;
        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}
"
9,C,Java,61791227,2023-04-07 19:23:18,人工智能3211江海洋,答案正确,"import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream){};
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
//        out.flush();
        out.close();
    }

    static class TaskA {
        int n,m,sx,sy;
        int[] ax = {-1,0,1,0};
        int[] ay = {0,1,0,-1};
        char[][] map;
        int[][] vis = new int[1010][1010];
        boolean pd(int x,int y){
            if(x>=1&&x<=n&&y>=1&&y<=m) return true;
            return false;
        }
        Deque<Node> q = new ArrayDeque<>();
        int ans = 0;
        void bfs(){
            while (!q.isEmpty()){
                Node now = q.poll();
                for (int i = 0; i < 4; i++) {
                    int nx = now.x+ax[i];
                    int ny = now.y+ay[i];
                    if(!pd(nx,ny)||vis[nx][ny]==1||map[nx][ny]=='#') continue;
                    vis[nx][ny]=1;
                    if(map[nx][ny]=='!') ans++;
                    q.offer(new Node(nx,ny));
                }
            }


        }
        class  Node{
            int x,y;

            public Node(int x, int y) {
                this.x = x;
                this.y = y;
            }
        }
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            n = in.nextInt();
            m = in.nextInt();
            map = new char[n+1][m+1];
            for (int i = 1; i <= n; i++) {
                String s = in.next();
                for (int j = 1; j <= m; j++) {
                    map[i][j] = s.charAt(j-1);
                    if(map[i][j]=='@'){
                        sx = i;sy = j;
                    }
                }
            }
            vis[sx][sy]=1;
            q.offer(new Node(sx,sy));
            bfs();
            System.out.println(ans);





        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        boolean hasNext() {
            while (tokenizer == null || !tokenizer.hasMoreElements()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e) {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }

    }
}
"
10,C,Java,61791240,2023-04-07 19:23:25,陈力明,运行超时,"


import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.lang.invoke.MethodHandles;
import java.util.*;



import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
 
public class Main{
 
private static final boolean String = false;
static int []f;
//static int []f2;
static int []size;
//static int []size2;
//static int []a=new int [500001];
static int max=Integer.MAX_VALUE;

static Set<Long>set=new HashSet<>();
static int k;
static long mod= 998244353;
static int res=0;
static int n,m;
static int x1,y1;
 static List<Integer>[]ans;
 static char [][]c;

static int[] dx = {-1, 0, 1, 0}, dy = {0, 1, 0, -1};
	public static void main(String []args) {
		MyScanner s=new MyScanner();
		PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
	
		int n=s.nextInt();
		int m=s.nextInt();
		char  [][]f=new char[n][m];
		for(int i=0;i<n;i++)
		{
			f[i]=s.next().toCharArray();
		}
			int x=0,y=0;
			for(int i=0;i<n;i++)
			{
				for(int j=0;j<m;j++)
				{
					if(f[i][j]=='@')
					{
						x=i;y=j;
					}
				}
			}
			int [] []v=new int [n][m];
            v[x][y]=1;
			dfs(x,y,f,v);
			out.println(res);
		
		

	out.close();
	}
	public static void dfs(int x,int y,char [][]f,int [][]v)
	{
		
		if(f[x][y]=='!')res++;
		for(int i=0;i<4;i++)
		{
			int x1=x+dx[i];
			int y1=y+dy[i];
			if(x1<0||x1>=f.length||y1<0||y1>=f[0].length||v[x1][y1]==1||f[x1][y1]=='#')continue;
            v[x1][y1]=1;
			dfs(x1,y1,f,v);
		}
	}
	public static long shuwei(int i,int  mask,boolean limitnums,boolean isnum,char []c,long [][]dp)
	{
		if(i==c.length)
			return isnum?1:0;
					
	
	if(!limitnums&&isnum&&dp[i][mask]!=-1)
		return dp[i][mask];
	long res=0;
	if(!isnum)
	{
		res=shuwei(i+1,mask,false,false,c,dp);
	}
	int up=limitnums?c[i]-'0':9;
	for(int d=isnum?0:1;d<=up;++d)
	{
		 if((mask>>d&1)==0)
			 res+=shuwei(i+1,mask,limitnums&&d==up,true,c,dp);
	}
	if(!limitnums&&isnum)
		dp[i][mask]=res;
	return res;
}
	
     


	public static boolean is(char []c)
	{
		int l=0;
		int r=c.length-1;
		while(l<r)
		{
			if(c[l]!=c[r])return false;
			l++;r--;
		}
		return true;
	}
	public static void swap (int l,int r,int []f)
	{
		if(l>=f.length||r>=f.length)return;
		int tt=f[l];
		f[l]=f[r];
		f[r]=tt;
		
	}
	
public static void reverse(int []a)
{
	int l=0,r=a.length-1;
	while(l<r)
	{
		int t=a[l];
		a[l]=a[r];
		a[r]=t;
		l++;r--;
	}
}
	public static long sum (int x,long mod)
	{
		
	long sum=1;
		for(int i = 2; i * i <= x; ++i){
			long temp = 1;
			if(x % i == 0){
				long j = i;
				while(x % i == 0){
					temp += j;
					j *= i;
					x /= i;
				}
				sum = (sum * temp) % mod;
			}

	
	}
		if(x > 1) sum = (sum * (1 + x)) % mod;
		return sum;
	}
	  public  static long Mode(long a,  long b, long mode)
	  {
	  	 long sum = 1;
	  	a = a % mode;
	   
	  	while (b > 0) {
	  		if (b % 2 == 1)		//判断是否是奇数，是奇数的话将多出来的数事先乘如sum
	  			sum = (sum * a) % mode;
	   
	  		b /= 2;
	  		a = (a * a) % mode;// 不断的两两合并再取模，减小a和b的规模
	  	}
	  	return sum;
	  }
	public static long is(int mid,long []f,int d)
	{
		long ans=0;
		for(int i=0;i<d;i++)
		{
			
			int   k=i%mid;
			if(k>f.length-1)continue;
			ans+=f[f.length-k-1];
		}
		return ans;
	}
	
	public static boolean is(String a,String b)
	{
		for(int i=0;i<=b.length()-a.length();i++)
		{
			if(b.substring(i,i+a.length()).equals(a))
				return true;
		}
		return false;
		
	}
	
	
	  public static boolean is(int  n) {
		    if (n <= 3) {
		        return n > 1;
		    }
		    // 只有6x-1和6x+1的数才有可能是质数
		    if (n % 6 != 1 && n % 6 != 5) {
		        return false;
		    }
		    // 判断这些数能否被小于sqrt(n)的奇数整除
		    int sqrt = (int) Math.sqrt(n);
		    for (int i = 5; i <= sqrt; i += 6) {
		        if (n % i == 0 || n % (i + 2) == 0) {
		            return false;
		        }
		    }
		    return true;
		}



public static int find (int []father,int x) {
		if(x!=father[x])
			x=find(father,father[x]);
		return father[x];
	}
public static void union(int []father,int x,int y,int []size) {
	x=find(father,x);
	y=find(father,y);
	if(x==y)
		return ;
	if(size[x]<size[y]) {
		 int tem=x;
         x=y;
         y=tem;
	}
	father[y]=x;
	size[x]+=size[y];
return ;
}
		
					
public static void shufu(int []f) {
		for(int i=0;i<f.length;i++) {
			int k=(int)(Math.random()*(f.length));
			int t=f[k];
			
			f[k]=f[0];
			f[0]=t;
			
		}
	}
public static void shufu1(long []f) {
	for(int i=0;i<f.length;i++) {
		int k=(int)(Math.random()*(f.length));
		long t=f[k];
		f[k]=f[0];
		f[0]=t;
	}
}
public  static int  gcd(int x,int y) {
		return y==0?x:gcd(y,x%y);
	}
 
 
public  static int  lcm(int x,int y) {
		
		return x*y/gcd(x,y);
}
		
	
	
		
		
	
	
		
	
/*					
public static void buildertree(int k,int l,int r) {
		if(l==r)
		{
			f[k]=a[l];
			return ;
		}
		int m=l+r>>1;
		buildertree(k+k,l,m);
		buildertree(k+k+1,m+1,r);
		f[k]=	
	
	}
public static	void update(int u,int l,int r,int x,int c)
{
    if(l==x && r==x)
    {
        f[u]=c;
        return;
    }
    int mid=l+r>>1;
    if(x<=mid)update(u<<1,l,mid,x,c);
    else if(x>=mid+1)update(u<<1|1,mid+1,r,x,c);
   	f[u]=Math.max(f[u+u], f[u+u+1]);
}
	
public static int query(int k,int l,int r,int x,int y) {
		if(x==l&&y==r) {
			return f[k];
		}
		int m=l+r>>1;
		if(y<=m) {
			return query(k+k,l,m,x,y);
		}
		else if(x>m)return query(k+k+1,m+1,r,x,y);
		else  {
			int i=query(k+k,l,m,x,m),j=query(k+k+1,m+1,r,m+1,y);
		return Math.max(j, Math.max(i+j, i));
		
		}
	}
	
public static void calc(int k,int l,int r,int x,int z) {
 
			f[k]+=z;
			if(l==r) {
				return ;
			}
			int m=l+r>>1;
    		if(x<=m)
    			calc(k+k,l,m,x,z);
    		else calc(k+k+1,m+1,r,x,z);
			
			
		}
	
				
			
 
		*/
		
				
	
			
	
			
	
 
	public static class MyScanner {
	    BufferedReader br;
	    StringTokenizer st;
	 
	    public MyScanner() {
	      try {
	        final String USERDIR = System.getProperty(""user.dir"");
	        String cname = MethodHandles.lookup().lookupClass().getCanonicalName().replace("".MyScanner"", """");
	        cname = cname.lastIndexOf('.') > 0 ? cname.substring(cname.lastIndexOf('.') + 1) : cname;
	        final File fin = new File(USERDIR + ""/io/c"" + cname.substring(1,5) + ""/"" + cname + "".in"");
	        br = new BufferedReader(new InputStreamReader(fin.exists()
	            ? new FileInputStream(fin) : System.in));
	      } catch (Exception e) {
	        br = new BufferedReader(new InputStreamReader(System.in));
	      }
	    }
	 
	    public String next() {
	      try {
	        while (st == null || !st.hasMoreElements()) {
	          st = new StringTokenizer(br.readLine());
	        }
	        return st.nextToken();
	      } catch (Exception e) {
	        throw new RuntimeException(e);
	      }
	    }
	 
	    public int nextInt() {
	      return Integer.parseInt(next());
	    }
	 
	    public long nextLong() {
	      return Long.parseLong(next());
	    }
	  }
	
		}"
11,C,Java,61791479,2023-04-07 19:25:06,可爱抱抱呀😥,答案正确,"//Java快读快写模板，不定时更新优化内容
//@可爱抱抱呀
import java.util.*;
import java.io.*;
import java.math.*;
import java.text.*;
public class Main{
    public static void main(String args[]) throws IOException{
        Read sc=new Read();
        int n=sc.nextInt();
        int move[][]={{1,0},{-1,0},{0,1},{0,-1}};
        int m=sc.nextInt();
        char ch[][]=new char[n][];
        int a=-1,b=-1;
        for(int i=0;i<n;i++){
            ch[i]=sc.next().toCharArray();
            for(int j=0;j<m;j++){
                if(ch[i][j]=='@'){
                    a=i;
                    b=j;
                }
            }
        }
        Queue<int[]> q=new LinkedList<>();
        q.add(new int[]{a,b});
        ch[a][b]='#';
        int ans=0;
        while(!q.isEmpty()){
            int p[]=q.poll();
            for(int mo[]:move){
                int x=p[0]+mo[0],y=p[1]+mo[1];
                if(x==n||x<0||y>=m||y<0||ch[x][y]=='#'){
                    continue;
                }
                if(ch[x][y]=='!'){
                    ans++;
                }
                ch[x][y]='#';
                q.add(new int[]{x,y});
            }
        }
        sc.println(ans);
        //sc.print(0);
        sc.bw.flush();
        sc.bw.close();
    }
}
//记住看数字范围，需要开long吗，需要用BigInteger吗，需要手动处理字符串吗，复杂度数量级控制在1e7或者以下了吗
//开数组的数据范围最高不能超过1e7，数据范围再大就要用哈希表离散化了
//基本数据类型不能自定义sort排序，二维数组就可以了，顺序排序的时候是小减大，注意返回值应该是int
class Read{
    BufferedReader bf;
    StringTokenizer st;
    BufferedWriter bw;
    public Read(){
        bf=new BufferedReader(new InputStreamReader(System.in));
        st=new StringTokenizer("""");
        bw=new BufferedWriter(new OutputStreamWriter(System.out));
        //什么时候才能持续稳定ak力扣、AcWing呢？
        //什么时候才能ak cf的div2，div1呢？才能打div2不计rating呢？
        //什么时候才能ak  abc  不计rating呢？当然arc不计分更好
        //什么时候才能ak 牛客练习赛不计rating呢?
    }
    public String nextLine() throws IOException{
        return bf.readLine();
    }
    public String next() throws IOException{
        while(!st.hasMoreTokens()){
            st=new StringTokenizer(bf.readLine());
        }
        return st.nextToken();
    }
    public char nextChar() throws IOException{
        //确定下一个token只有一个字符的时候再用
        return next().charAt(0);
    }
    public int nextInt() throws IOException{
        return Integer.parseInt(next());
    }
    public long nextLong() throws IOException{
        return Long.parseLong(next());
    }
    public double nextDouble() throws IOException{
        return Double.parseDouble(next());
    }
    public float nextFloat() throws IOException{
        return Float.parseFloat(next());
    }
    public byte nextByte() throws IOException{
        return Byte.parseByte(next());
    }
    public short nextShort() throws IOException{
        return Short.parseShort(next());
    }
    public BigInteger nextBigInteger() throws IOException{
        return new BigInteger(next());
    }
    public void println(int a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(int a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(String a) throws IOException{
        bw.write(a);
        bw.newLine();
        return;
    }
    public void print(String a) throws IOException{
        bw.write(a);
        return;
    }
    public void println(long a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(long a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(double a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(double a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void print(BigInteger a) throws IOException{
        bw.write(a.toString());
        return;
    }
    public void print(char a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(char a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
}"
12,C,Java,61791536,2023-04-07 19:25:30,rookie1号,答案正确,"
import java.io.*;
import java.util.*;
public class Main {
    public static int gcd(int a, int b) {
        if (a < 0 || b < 0) {     //求最大公因数
            return -1; // 数学上不考虑负数的约数
        }
        if (b == 0) {
            return a;
        }
        return a % b == 0 ? b : gcd(b, a % b);
    }
    public static int lcm(int m, int n) { //求最小公倍数
        int mn = m * n;
        return mn / gcd(m, n);
    }
    	static int dx[]= {-1,0,1, 0};
	static int dy[]= {0 ,1,0,-1};
    static PrintWriter out = new PrintWriter(System.out);
    static Scanner in = new Scanner(System.in);
    static BufferedReader re = new BufferedReader(new InputStreamReader(System.in));
    static BufferedWriter wr = new BufferedWriter(new OutputStreamWriter(System.out));
    //String[] strs = re.readLine().split("" ""); int a = Integer.parseInt(strs[0]);
    public static void main(String[] args) throws IOException {
        PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
        //String[] strs = re.readLine().split("" "");
        //int T=Integer.parseInt(strs[0]);
        
        //int T=in.nextInt();
        int T=1;
        while(T>0){
            //String[] strs1 = re.readLine().split("" "");
            //int n=Integer.parseInt(strs1[0]);
            //String s=re.readLine();
            //char arr[]=s.toCharArray();

            //long[][] p = new long[n][2];//对 long 二维数组排序
            //Arrays.sort(p, (a, b) -> a[0] <= b[0] ? -1 : 1);
            //Set<Integer>set=new HashSet<>();
            //Map<Long,Integer>map=new HashMap<>();
            //Map<Integer,List<Integer>>map=new HashMap<>();
            //TreeSet<Integer> set = new TreeSet<>();
            //int max=0;int min=2100000000;
            int n=in.nextInt();
            int m=in.nextInt();
            char arr[][]=new char [n][m];
            for(int i=0;i<n;i++){
                String s=in.next();
                arr[i]=s.toCharArray();
            }
            int xx=0;int yy=0;
            for(int i=0;i<n;i++){
                for(int j=0;j<m;j++){
                    if(arr[i][j]=='@'){
                        xx=i;
                        yy=j;
                    }
                }
            }
            int vis[][]=new int [n][m];
            int ans[][]=new int [n][m];
            int max=0;
            
 
            Queue<Node> q=new LinkedList<>();
            q.offer(new Node(xx,yy,0));
            vis[xx][yy]=1;
            //int sum=0;
            while(!q.isEmpty() ) {
                Node a=q.poll();
                //out.println(a.x+"" ""+a.y+"" ""+a.dis);
                for(int qq=0;qq<4;qq++) {
                    int x=a.x+dx[qq];
                    int y=a.y+dy[qq];
                    if(x>=0 && x<n && y>=0 && y<m &&vis[x][y]==0&&arr[x][y]!='#') {
                        vis[x][y]=1;
                        if(arr[x][y]=='!'){
                            max++;
                        }
                        q.offer(new Node(x,y,a.dis));
                    }
                }
            }
                    
                
            
            out.println(max);
            
            
            T--;
        }
        out.flush();
    }
    static class Node{
        int x,y,dis;
        public Node(int x, int y,int dis) {
            this.x = x;
            this.y = y;
            this.dis=dis;
        }
    }
}"
13,C,Java,61791589,2023-04-07 19:25:52,人工智能3212卢明涛,答案错误,"import java.util.LinkedList;
import java.util.Queue;
import java.io.*;
import java.util.*;
import java.math.*;
public class Main {
    static InputStream inputStream = System.in;
    static OutputStream outputStream = System.out;
    static InputReader in = new InputReader(inputStream);
    static PrintWriter out = new PrintWriter(outputStream);
    public static void main(String[] args) {
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {

        static int yanx[] = new int[30];
        static int yany[] = new int[30];

        static int yanname[] = new int[30];
        static int yanwei[][] = new int[30][6];
        static char map[][] = new char[301][301];

        static int n = 0;
        static int m = 0;
        static int yan = 0;

        static int jue = 0;
        static int sum =0;
        static void dfs(){
            if (sum==0){
                jue = 1;
                for (int i=1;i<=n;i++){
                    for (int j=1;j<=m;j++){
                        out.print(map[i][j]);
                    }
                    out.println();
                }
                return;
            }
            if (jue==0) {
                for (int i = 1; i <= yan; i++) {
                    for (int j = 1; j <= 4; j++) {
                        if (j == 1) {
                            int f = 0;
                            int x = yanx[i] - yanwei[i][1] - 1;
                            int start = yany[i] - yanwei[i][3];
                            int end = yany[i] + yanwei[i][4];
                            if (x >= 1 && x <= m) {
                                for (int j1 = start; j1 <= end; j1++) {
                                    if (map[j1][x] != '.') {
                                        f = 1;
                                        break;
                                    }
                                }
                                if (f == 0) {
                                    yanwei[i][1]++;
                                    for (int j1 = start; j1 <= end; j1++) {
                                        map[j1][x] = (char) yanname[i];
                                    }
                                    sum = sum-(end-start+1);
                                    dfs();
                                    for (int j1 = start; j1 <= end; j1++) {
                                        map[j1][x] = '.';
                                    }
                                    yanwei[i][1]--;
                                    sum = sum+(end-start+1);
                                }
                            }
                        } else if (j == 2) {
                            int f = 0;
                            int x = yanx[i] + yanwei[i][2] + 1;
                            int start = yany[i] - yanwei[i][3];
                            int end = yany[i] + yanwei[i][4];
                            if (x >= 1 && x <= m) {
//                        f = 0;
                                for (int j1 = start; j1 <= end; j1++) {
                                    if (map[j1][x] != '.') {
                                        f = 1;
                                        break;
                                    }
                                }
                                if (f == 0) {
                                    yanwei[i][2]++;
                                    for (int j1 = start; j1 <= end; j1++) {
                                        map[j1][x] = (char) yanname[i];
                                    }
                                    sum = sum-(end-start+1);
                                    dfs();
                                    for (int j1 = start; j1 <= end; j1++) {
                                        map[j1][x] = '.';
                                    }
                                    yanwei[i][2]--;
                                    sum = sum+(end-start+1);
                                }
                            }
                        } else if (j == 3) {
                            int f = 0;
                            int y = yany[i] - yanwei[i][3] - 1;
                            int start = yanx[i] - yanwei[i][1];
                            int end = yanx[i] + yanwei[i][2];
                            if (y >= 1 && y <= n) {
//                        f = 0;
                                for (int j1 = start; j1 <= end; j1++) {
                                    if (map[y][j1] != '.') {
                                        f = 1;
                                        break;
                                    }
                                }
                                if (f == 0) {
                                    yanwei[i][3]++;
                                    for (int j1 = start; j1 <= end; j1++) {
                                        map[y][j1] = (char) yanname[i];
                                    }
                                    sum = sum-(end-start+1);
                                    dfs();
                                    for (int j1 = start; j1 <= end; j1++) {
                                        map[y][j1] = '.';
                                    }
                                    yanwei[i][3]--;
                                    sum = sum+(end-start+1);
                                }
                            }
                        } else {
                            int f = 0;
                            int y = yany[i] + yanwei[i][4] + 1;
                            int start = yanx[i] - yanwei[i][1];
                            int end = yanx[i] + yanwei[i][2];
                            if (y >= 1 && y <= n) {
//                        f = 0;
                                for (int j1 = start; j1 <= end; j1++) {
                                    if (map[y][j1] != '.') {
                                        f = 1;
                                        break;
                                    }
                                }
                                if (f == 0) {
                                    yanwei[i][4]++;
                                    for (int j1 = start; j1 <= end; j1++) {
                                        map[y][j1] = (char) yanname[i];
                                    }
                                    sum = sum-(end-start+1);
                                    dfs();
                                    for (int j1 = start; j1 <= end; j1++) {
                                        map[y][j1] = '.';
                                    }
                                    yanwei[i][4]--;
                                    sum = sum+(end-start+1);
                                }
                            }
                        }
                    }
                }
            }
        }
        LinkedList<Integer> dep = new LinkedList<>();
        boolean[]vis;

        public void solve(int testNumber, InputReader in, PrintWriter out) {
//            int sum = 0;
            int n = in.nextInt();
            int m = in.nextInt();
            int map[][] = new int[n+1][m+1];
            int huo[][] = new int[n+1][m+1];
            int shao[][] = new int[n+1][m+1];
            int xindix[] = new int[n*m+3];
            int xindiy[] = new int[n*m+3];
            int sum = 1;
            int newdi = 1;
            for (int i=1;i<=n; i++){
                String s = in.next();
                for (int j=1;j<=m; j++){
                    if (s.charAt(j-1)=='.'){
                        map[i][j] =1;
                    }
                    else if (s.charAt(j-1)=='#'){
                        map[i][j] = 2;
                        shao[i][j]=-1;
                    }
                    else if (s.charAt(j-1) == '!') {
                        map[i][j] = 3;

                    }
                    else if (s.charAt(j) == 'a') {
                        map[i][j]=4;
                        shao[i][j]++;
                        xindix[sum] = i;
                        xindiy[sum]  = j;
                    }
                }
            }
            while (sum>0){
                int fsum = 0;
                int fxindix[] = new int[n*m+3];
                int fxindiy[] = new int[n*m+3];
                for (int i=1;i<=sum;i++){
                    int x = xindix[i];
                    int y = xindiy[i];
                    for (int j=x-1;j>=1;j--){
                        if (shao[j][y]==0){
                            fsum++;
                            fxindix[fsum] = j;
                            fxindiy[fsum] = y;
                            shao[j][y] = 1;
                        }
                        else {
                            break;
                        }
                    }
                    for (int j=x+1;j<=n;j++){
                        if (shao[j][y]==0){
                            fsum++;
                            fxindix[fsum] = j;
                            fxindiy[fsum] = y;
                            shao[j][y] = 1;
                        }
                        else{
                            break;
                        }
                    }
                    for (int j=y+1;j<=m;j++){
                        if (shao[x][j]==0){
                            fsum++;
                            fxindix[fsum] = x;
                            fxindiy[fsum] = j;
                            shao[x][j] = 1;
                        }
                        else {
                            break;
                        }
                    }
                    for (int j=y-1;j>=1;j--){
                        if (shao[x][j]==0){
                            fsum++;
                            fxindix[fsum] = x;
                            fxindiy[fsum] = j;
                            shao[x][j] = 1;
                        }
                        else {
                            break;
                        }
                    }
                }
                sum = fsum;
                for (int i=1;i<=sum; i++){
                    xindix[i] = fxindix[i];
                    xindiy[i] = fxindiy[i];
                }
            }
            int fu = 0;
            for (int i=1;i<=n; i++){
                for (int j = 1; j <= m; j++) {
                    if (map[i][j]==3 && shao[i][j]==1){
                        fu++;
                    }
                }
            }
            out.println(fu);
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        boolean hasNext() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e) {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }

    }
}
"
14,C,Java,61791709,2023-04-07 19:26:52,牛客399999999999号,答案正确,"//package com.company;
import javax.rmi.ssl.SslRMIClientSocketFactory;
import java.io.IOException;
import java.util.*;
import java.util.regex.Matcher;

public class Main
{
    static Scanner cin =new Scanner(System.in);
    static int n,m;
    static char c[][]=new char[1100][1100];
    static boolean vis[][]= new boolean[1100][1100];
    static int dx[]={0,1,0,-1,0};
    static int dy[]={0,0,1,0,-1};
    static boolean check(int x,int y)
    {
        if(x<=0||x>n||y<=0||y>m||vis[x][y]||c[x][y]=='#')
            return false;
        return true;
    }
    static int BFS(int x,int y)
    {
        int res=0;
        Queue<Pair> q=new LinkedList<>();
        q.add(new Pair(x,y));
        while(!q.isEmpty())
        {
            Pair now = q.poll();
            if(vis[now.x][now.y])
                continue;
            if(c[now.x][now.y]=='!')
                res++;
            vis[now.x][now.y]=true;
            for(int i=1;i<=4;i++)
            {
                x=now.x+dx[i];
                y=now.y+dy[i];
                if(check(x,y))
                {
                    q.add(new Pair(x,y));
                }
            }
        }
        return res;
    }
    public static void main(String[] args) throws IOException
    {
        n=cin.nextInt();
        m=cin.nextInt();
        int posx=0,posy=0;
        for(int i=1;i<=n;i++)
        {
            String s=cin.next();
            for(int j=1;j<=m;j++)
            {
                c[i][j]=s.charAt(j-1);
                if(c[i][j]=='@')
                {
                    posx=i;posy=j;
                }
            }
        }
        int ans=BFS(posx,posy);
        System.out.println(ans);
    }
}
class Pair implements Comparable<Pair>
{
    int x,y;
    Pair(int x,int y)
    {
        this.x=x;
        this.y=y;
    }
    @Override
    public int compareTo(Pair o) {
        return this.y - o.y;
    }
}"
15,C,Java,61791722,2023-04-07 19:26:59,小怂很怂,答案正确,"
import java.io.*;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

/**
 * @ClassName 超级泡泡堂
 * @Description TODO
 * @Author 小怂很怂
 * @Date 2023/4/7 19:11
 * @Version 1.0
 **/
public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st = new StreamTokenizer(br);
    static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));
    static int n,m,ax,ay,count=0;
    static int []xy=new int[]{1,0,-1,0};
    static int []yx=new int[]{0,1,0,-1};
    static char [][]f;
    static int [][]p;
    public static void main(String[] args) throws Exception {
        n=nextInt();
        m=nextInt();
        f=new char[n][m];
        p=new int[n][m];;
        for (int i=0;i<n;i++){
            String ss=br.readLine();
            for (int j=0;j<m;j++){
                f[i][j]=ss.charAt(j);
                if (ss.charAt(j)=='@'){
                    ax=i;
                    ay=j;
                }
            }
        }
        bfs();
        pw.println(count);
        pw.flush();
    }
    public static void bfs(){
        Queue<Integer>qx=new LinkedList<>();
        Queue<Integer>qy=new LinkedList<>();
        qx.add(ax);
        qy.add(ay);
        p[ax][ay]=1;
        while (!qx.isEmpty()){
            int x=qx.poll(),y= qy.poll();
            for (int i=0;i<4;i++){
                int a=x+xy[i],b=y+yx[i];
                if (pd(a,b)){
                    qx.add(a);
                    qy.add(b);
                    p[a][b]=1;
                    if (f[a][b]=='!') count++;
                }

            }
        }
    }
    public static boolean pd(int a,int b){
        return a >= 0 && a < n && b >= 0 && b < m && f[a][b] != '#' && p[a][b] == 0;
    }
    public static int nextInt() throws Exception {//int型
        st.nextToken();
        return (int) st.nval;
    }

    public static long nextLong() throws Exception {//long型
        st.nextToken();
        return (long) st.nval;
    }
}
"
16,C,Java,61791861,2023-04-07 19:27:59,陈力明,答案正确,"


import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.lang.invoke.MethodHandles;
import java.util.*;



import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
 
public class Main{
 
private static final boolean String = false;
static int []f;
//static int []f2;
static int []size;
//static int []size2;
//static int []a=new int [500001];
static int max=Integer.MAX_VALUE;

static Set<Long>set=new HashSet<>();
static int k;
static long mod= 998244353;
static int res=0;
static int n,m;
static int x1,y1;
 static List<Integer>[]ans;
 static char [][]c;

static int[] dx = {-1, 0, 1, 0}, dy = {0, 1, 0, -1};
	public static void main(String []args) {
		MyScanner s=new MyScanner();
		PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
	
		int n=s.nextInt();
		int m=s.nextInt();
		char  [][]f=new char[n][m];
		for(int i=0;i<n;i++)
		{
			f[i]=s.next().toCharArray();
		}
			int x=0,y=0;
			for(int i=0;i<n;i++)
			{
				for(int j=0;j<m;j++)
				{
					if(f[i][j]=='@')
					{
						x=i;y=j;
					}
				}
			}
			int [] []v=new int [n][m];
            v[x][y]=1;
		Queue<int []>q=new LinkedList<>();
        q.add(new int []{x,y});
        while(!q.isEmpty())
        {
            int []a=q.poll();
            if(f[a[0]][a[1]]=='!')res++;
            for(int i=0;i<4;i++)
            {
                int x1=a[0]+dx[i];
                int y1=a[1]+dy[i];
                if(x1<0||x1>=n||y1<0||y1>=m||v[x1][y1]==1||f[x1][y1]=='#')continue;
                     v[x1][y1]=1;
                    q.add(new int []{x1,y1});
                   
                
            }
        }
        out.println(res);
		
		

	out.close();
	}
	
	public static long shuwei(int i,int  mask,boolean limitnums,boolean isnum,char []c,long [][]dp)
	{
		if(i==c.length)
			return isnum?1:0;
					
	
	if(!limitnums&&isnum&&dp[i][mask]!=-1)
		return dp[i][mask];
	long res=0;
	if(!isnum)
	{
		res=shuwei(i+1,mask,false,false,c,dp);
	}
	int up=limitnums?c[i]-'0':9;
	for(int d=isnum?0:1;d<=up;++d)
	{
		 if((mask>>d&1)==0)
			 res+=shuwei(i+1,mask,limitnums&&d==up,true,c,dp);
	}
	if(!limitnums&&isnum)
		dp[i][mask]=res;
	return res;
}
	
     


	public static boolean is(char []c)
	{
		int l=0;
		int r=c.length-1;
		while(l<r)
		{
			if(c[l]!=c[r])return false;
			l++;r--;
		}
		return true;
	}
	public static void swap (int l,int r,int []f)
	{
		if(l>=f.length||r>=f.length)return;
		int tt=f[l];
		f[l]=f[r];
		f[r]=tt;
		
	}
	
public static void reverse(int []a)
{
	int l=0,r=a.length-1;
	while(l<r)
	{
		int t=a[l];
		a[l]=a[r];
		a[r]=t;
		l++;r--;
	}
}
	public static long sum (int x,long mod)
	{
		
	long sum=1;
		for(int i = 2; i * i <= x; ++i){
			long temp = 1;
			if(x % i == 0){
				long j = i;
				while(x % i == 0){
					temp += j;
					j *= i;
					x /= i;
				}
				sum = (sum * temp) % mod;
			}

	
	}
		if(x > 1) sum = (sum * (1 + x)) % mod;
		return sum;
	}
	  public  static long Mode(long a,  long b, long mode)
	  {
	  	 long sum = 1;
	  	a = a % mode;
	   
	  	while (b > 0) {
	  		if (b % 2 == 1)		//判断是否是奇数，是奇数的话将多出来的数事先乘如sum
	  			sum = (sum * a) % mode;
	   
	  		b /= 2;
	  		a = (a * a) % mode;// 不断的两两合并再取模，减小a和b的规模
	  	}
	  	return sum;
	  }
	public static long is(int mid,long []f,int d)
	{
		long ans=0;
		for(int i=0;i<d;i++)
		{
			
			int   k=i%mid;
			if(k>f.length-1)continue;
			ans+=f[f.length-k-1];
		}
		return ans;
	}
	
	public static boolean is(String a,String b)
	{
		for(int i=0;i<=b.length()-a.length();i++)
		{
			if(b.substring(i,i+a.length()).equals(a))
				return true;
		}
		return false;
		
	}
	
	
	  public static boolean is(int  n) {
		    if (n <= 3) {
		        return n > 1;
		    }
		    // 只有6x-1和6x+1的数才有可能是质数
		    if (n % 6 != 1 && n % 6 != 5) {
		        return false;
		    }
		    // 判断这些数能否被小于sqrt(n)的奇数整除
		    int sqrt = (int) Math.sqrt(n);
		    for (int i = 5; i <= sqrt; i += 6) {
		        if (n % i == 0 || n % (i + 2) == 0) {
		            return false;
		        }
		    }
		    return true;
		}



public static int find (int []father,int x) {
		if(x!=father[x])
			x=find(father,father[x]);
		return father[x];
	}
public static void union(int []father,int x,int y,int []size) {
	x=find(father,x);
	y=find(father,y);
	if(x==y)
		return ;
	if(size[x]<size[y]) {
		 int tem=x;
         x=y;
         y=tem;
	}
	father[y]=x;
	size[x]+=size[y];
return ;
}
		
					
public static void shufu(int []f) {
		for(int i=0;i<f.length;i++) {
			int k=(int)(Math.random()*(f.length));
			int t=f[k];
			
			f[k]=f[0];
			f[0]=t;
			
		}
	}
public static void shufu1(long []f) {
	for(int i=0;i<f.length;i++) {
		int k=(int)(Math.random()*(f.length));
		long t=f[k];
		f[k]=f[0];
		f[0]=t;
	}
}
public  static int  gcd(int x,int y) {
		return y==0?x:gcd(y,x%y);
	}
 
 
public  static int  lcm(int x,int y) {
		
		return x*y/gcd(x,y);
}
		
	
	
		
		
	
	
		
	
/*					
public static void buildertree(int k,int l,int r) {
		if(l==r)
		{
			f[k]=a[l];
			return ;
		}
		int m=l+r>>1;
		buildertree(k+k,l,m);
		buildertree(k+k+1,m+1,r);
		f[k]=	
	
	}
public static	void update(int u,int l,int r,int x,int c)
{
    if(l==x && r==x)
    {
        f[u]=c;
        return;
    }
    int mid=l+r>>1;
    if(x<=mid)update(u<<1,l,mid,x,c);
    else if(x>=mid+1)update(u<<1|1,mid+1,r,x,c);
   	f[u]=Math.max(f[u+u], f[u+u+1]);
}
	
public static int query(int k,int l,int r,int x,int y) {
		if(x==l&&y==r) {
			return f[k];
		}
		int m=l+r>>1;
		if(y<=m) {
			return query(k+k,l,m,x,y);
		}
		else if(x>m)return query(k+k+1,m+1,r,x,y);
		else  {
			int i=query(k+k,l,m,x,m),j=query(k+k+1,m+1,r,m+1,y);
		return Math.max(j, Math.max(i+j, i));
		
		}
	}
	
public static void calc(int k,int l,int r,int x,int z) {
 
			f[k]+=z;
			if(l==r) {
				return ;
			}
			int m=l+r>>1;
    		if(x<=m)
    			calc(k+k,l,m,x,z);
    		else calc(k+k+1,m+1,r,x,z);
			
			
		}
	
				
			
 
		*/
		
				
	
			
	
			
	
 
	public static class MyScanner {
	    BufferedReader br;
	    StringTokenizer st;
	 
	    public MyScanner() {
	      try {
	        final String USERDIR = System.getProperty(""user.dir"");
	        String cname = MethodHandles.lookup().lookupClass().getCanonicalName().replace("".MyScanner"", """");
	        cname = cname.lastIndexOf('.') > 0 ? cname.substring(cname.lastIndexOf('.') + 1) : cname;
	        final File fin = new File(USERDIR + ""/io/c"" + cname.substring(1,5) + ""/"" + cname + "".in"");
	        br = new BufferedReader(new InputStreamReader(fin.exists()
	            ? new FileInputStream(fin) : System.in));
	      } catch (Exception e) {
	        br = new BufferedReader(new InputStreamReader(System.in));
	      }
	    }
	 
	    public String next() {
	      try {
	        while (st == null || !st.hasMoreElements()) {
	          st = new StringTokenizer(br.readLine());
	        }
	        return st.nextToken();
	      } catch (Exception e) {
	        throw new RuntimeException(e);
	      }
	    }
	 
	    public int nextInt() {
	      return Integer.parseInt(next());
	    }
	 
	    public long nextLong() {
	      return Long.parseLong(next());
	    }
	  }
	
		}"
17,C,Java,61792213,2023-04-07 19:30:27,准备进厂的托尼很喜欢溜溜球,答案正确,"import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.LinkedList;
import java.util.Queue;

public class Main {

	private static int n, m, sx, sy, ans;
	private static String str = """";
	private static String[] arrTemp;
	private static char[] charTemp;
	private static final int N = 1010;
	private static final int[] dx = { 0, -1, 0, 1 }, dy = { -1, 0, 1, 0 };
	private static boolean[][] st = new boolean[N][N];
	private static char[][] g = new char[N][N];
	private static final BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
	private static final BufferedWriter out = new BufferedWriter(new OutputStreamWriter(System.out));

	public static void main(String[] args) throws IOException {

		arrTemp = in.readLine().split("" "");
		n = Integer.parseInt(arrTemp[0]);
		m = Integer.parseInt(arrTemp[1]);

		for (int i = 0; i < n; i++) {
			str = in.readLine();
			for (int j = 0; j < m; j++) {
				char t = str.charAt(j);
				g[i][j] = t;
				if (t == '@') {
					sx = i;
					sy = j;
				}
			}
		}

		bfs(sx, sy);

		out.write(ans + """");
		out.newLine();

		in.close();
		out.close();
	}

	private static void bfs(int sx, int sy) {

		Queue<Point> queue = new LinkedList<Point>();
		queue.offer(new Point(sx, sy));
		st[sx][sy] = true;

		while (!queue.isEmpty()) {

			Point t = queue.poll();

			for (int i = 0; i < 4; i++) {
				int a = t.x + dx[i], b = t.y + dy[i];
				if (a < 0 || b < 0 || a >= n || b >= m)
					continue;
				if (st[a][b] || g[a][b] == '#')
					continue;
				if (g[a][b] == '!')
					ans++;
				st[a][b] = true;
				queue.offer(new Point(a, b));
			}

		}

	}

}

class Point {
	int x, y;

	public Point(int x, int y) {
		this.x = x;
		this.y = y;
	}
}
"
18,C,Java,61792223,2023-04-07 19:30:30,RDeAmor,答案正确,"import java.util.*;

public class Main {
    static int row, col;
    static boolean[][] vis;
    static int ans = 0;
    static char[][] mat;
    public static void main(String args[]) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        mat = new char[n][m];
        vis = new boolean[n][m];
        for(int i = 0; i < n; i++) {
            String str = in.next();
            for(int j = 0; j < m; j++)
                mat[i][j] = str.charAt(j);
        }
        row = n; col = m;
        for(int i = 0; i < n; i++) {
            for(int j = 0; j < m; j++) {
                if(mat[i][j] == '@')
                    dfs(i, j);
            }
        }
        System.out.println(ans);
    }
    public static void dfs(int x, int y) {
        if(x < 0 || x >= row || y < 0 || y >= col || vis[x][y] || mat[x][y]=='#')
            return ;
        if(mat[x][y] == '!') ans++;
        vis[x][y] = true;
        dfs(x + 1, y);
        dfs(x, y + 1);
        dfs(x - 1, y);
        dfs(x, y - 1);
    }
}"
19,C,Java,61792245,2023-04-07 19:30:36,人工智能3212卢明涛,答案错误,"import java.util.LinkedList;
import java.util.Queue;
import java.io.*;
import java.util.*;
import java.math.*;
public class Main {
    static InputStream inputStream = System.in;
    static OutputStream outputStream = System.out;
    static InputReader in = new InputReader(inputStream);
    static PrintWriter out = new PrintWriter(outputStream);
    public static void main(String[] args) {
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {

        static int yanx[] = new int[30];
        static int yany[] = new int[30];

        static int yanname[] = new int[30];
        static int yanwei[][] = new int[30][6];
        static char map[][] = new char[301][301];

        static int n = 0;
        static int m = 0;
        static int yan = 0;

        static int jue = 0;
        static int sum =0;
        static void dfs(){
            if (sum==0){
                jue = 1;
                for (int i=1;i<=n;i++){
                    for (int j=1;j<=m;j++){
                        out.print(map[i][j]);
                    }
                    out.println();
                }
                return;
            }
            if (jue==0) {
                for (int i = 1; i <= yan; i++) {
                    for (int j = 1; j <= 4; j++) {
                        if (j == 1) {
                            int f = 0;
                            int x = yanx[i] - yanwei[i][1] - 1;
                            int start = yany[i] - yanwei[i][3];
                            int end = yany[i] + yanwei[i][4];
                            if (x >= 1 && x <= m) {
                                for (int j1 = start; j1 <= end; j1++) {
                                    if (map[j1][x] != '.') {
                                        f = 1;
                                        break;
                                    }
                                }
                                if (f == 0) {
                                    yanwei[i][1]++;
                                    for (int j1 = start; j1 <= end; j1++) {
                                        map[j1][x] = (char) yanname[i];
                                    }
                                    sum = sum-(end-start+1);
                                    dfs();
                                    for (int j1 = start; j1 <= end; j1++) {
                                        map[j1][x] = '.';
                                    }
                                    yanwei[i][1]--;
                                    sum = sum+(end-start+1);
                                }
                            }
                        } else if (j == 2) {
                            int f = 0;
                            int x = yanx[i] + yanwei[i][2] + 1;
                            int start = yany[i] - yanwei[i][3];
                            int end = yany[i] + yanwei[i][4];
                            if (x >= 1 && x <= m) {
//                        f = 0;
                                for (int j1 = start; j1 <= end; j1++) {
                                    if (map[j1][x] != '.') {
                                        f = 1;
                                        break;
                                    }
                                }
                                if (f == 0) {
                                    yanwei[i][2]++;
                                    for (int j1 = start; j1 <= end; j1++) {
                                        map[j1][x] = (char) yanname[i];
                                    }
                                    sum = sum-(end-start+1);
                                    dfs();
                                    for (int j1 = start; j1 <= end; j1++) {
                                        map[j1][x] = '.';
                                    }
                                    yanwei[i][2]--;
                                    sum = sum+(end-start+1);
                                }
                            }
                        } else if (j == 3) {
                            int f = 0;
                            int y = yany[i] - yanwei[i][3] - 1;
                            int start = yanx[i] - yanwei[i][1];
                            int end = yanx[i] + yanwei[i][2];
                            if (y >= 1 && y <= n) {
//                        f = 0;
                                for (int j1 = start; j1 <= end; j1++) {
                                    if (map[y][j1] != '.') {
                                        f = 1;
                                        break;
                                    }
                                }
                                if (f == 0) {
                                    yanwei[i][3]++;
                                    for (int j1 = start; j1 <= end; j1++) {
                                        map[y][j1] = (char) yanname[i];
                                    }
                                    sum = sum-(end-start+1);
                                    dfs();
                                    for (int j1 = start; j1 <= end; j1++) {
                                        map[y][j1] = '.';
                                    }
                                    yanwei[i][3]--;
                                    sum = sum+(end-start+1);
                                }
                            }
                        } else {
                            int f = 0;
                            int y = yany[i] + yanwei[i][4] + 1;
                            int start = yanx[i] - yanwei[i][1];
                            int end = yanx[i] + yanwei[i][2];
                            if (y >= 1 && y <= n) {
//                        f = 0;
                                for (int j1 = start; j1 <= end; j1++) {
                                    if (map[y][j1] != '.') {
                                        f = 1;
                                        break;
                                    }
                                }
                                if (f == 0) {
                                    yanwei[i][4]++;
                                    for (int j1 = start; j1 <= end; j1++) {
                                        map[y][j1] = (char) yanname[i];
                                    }
                                    sum = sum-(end-start+1);
                                    dfs();
                                    for (int j1 = start; j1 <= end; j1++) {
                                        map[y][j1] = '.';
                                    }
                                    yanwei[i][4]--;
                                    sum = sum+(end-start+1);
                                }
                            }
                        }
                    }
                }
            }
        }
        LinkedList<Integer> dep = new LinkedList<>();
        boolean[]vis;

        public void solve(int testNumber, InputReader in, PrintWriter out) {
//            int sum = 0;
            int n = in.nextInt();
            int m = in.nextInt();
            int map[][] = new int[n+1][m+1];
            int huo[][] = new int[n+1][m+1];
            int shao[][] = new int[n+1][m+1];
            int xindix[] = new int[n*m+3];
            int xindiy[] = new int[n*m+3];
            int sum = 1;
            int newdi = 1;
            for (int i=1;i<=n; i++){
                String s = in.next();
                for (int j=1;j<=m; j++){
                    if (s.charAt(j-1)=='.'){
                        map[i][j] =1;
                    }
                    else if (s.charAt(j-1)=='#'){
                        map[i][j] = 2;
                        shao[i][j]=-1;
                    }
                    else if (s.charAt(j-1) == '!') {
                        map[i][j] = 3;

                    }
                    else if (s.charAt(j) == '@') {
                        map[i][j]=4;
                        shao[i][j]++;
                        xindix[sum] = i;
                        xindiy[sum]  = j;
                    }
                }
            }
            while (sum>0){
                int fsum = 0;
                int fxindix[] = new int[n*m+3];
                int fxindiy[] = new int[n*m+3];
                for (int i=1;i<=sum;i++){
                    int x = xindix[i];
                    int y = xindiy[i];
                    for (int j=x-1;j>=1;j--){
                        if (shao[j][y]==0){
                            fsum++;
                            fxindix[fsum] = j;
                            fxindiy[fsum] = y;
                            shao[j][y] = 1;
                        }
                        else {
                            break;
                        }
                    }
                    for (int j=x+1;j<=n;j++){
                        if (shao[j][y]==0){
                            fsum++;
                            fxindix[fsum] = j;
                            fxindiy[fsum] = y;
                            shao[j][y] = 1;
                        }
                        else{
                            break;
                        }
                    }
                    for (int j=y+1;j<=m;j++){
                        if (shao[x][j]==0){
                            fsum++;
                            fxindix[fsum] = x;
                            fxindiy[fsum] = j;
                            shao[x][j] = 1;
                        }
                        else {
                            break;
                        }
                    }
                    for (int j=y-1;j>=1;j--){
                        if (shao[x][j]==0){
                            fsum++;
                            fxindix[fsum] = x;
                            fxindiy[fsum] = j;
                            shao[x][j] = 1;
                        }
                        else {
                            break;
                        }
                    }
                }
                sum = fsum;
                for (int i=1;i<=sum; i++){
                    xindix[i] = fxindix[i];
                    xindiy[i] = fxindiy[i];
                }
            }
            int fu = 0;
            for (int i=1;i<=n; i++){
                for (int j = 1; j <= m; j++) {
                    if (map[i][j]==3 && shao[i][j]==1){
                        fu++;
                    }
                }
            }
            out.println(fu);
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        boolean hasNext() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e) {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }

    }
}
"
20,C,Java,61792248,2023-04-07 19:30:37,孔老大,答案正确,"import java.io.*;
import java.util.*;

public class Main {

    static Scanner sc;
    static PrintWriter pw;

    public static void main(String[] args) throws IOException {
        sc = new Scanner(System.in);
        pw = new PrintWriter(System.out);
        solve();
        pw.close();
    }

    static int[] dx = {0, 0, 1, -1};
    static int[] dy = {1, -1, 0, 0};

    public static void solve() throws IOException {
        int n = sc.nextInt();
        int m = sc.nextInt();
        char[][] chars = new char[n][m];
        boolean[][] vis = new boolean[n][m];
        Queue<int[]> queue = new LinkedList<>();
        for (int i = 0; i < n; i++) {
            String s = sc.next();
            chars[i] = s.toCharArray();
            for (int j = 0; j < s.length(); j++) {
                if (chars[i][j] == '@') {
                    queue.add(new int[]{i, j});
                    vis[i][j] = true;
                }
            }
        }
        int ret = 0;
        while (!queue.isEmpty()) {
            int[] now = queue.poll();
            for (int i = 0; i < 4; i++) {
                int nx = now[0] + dx[i];
                int ny = now[1] + dy[i];
                if (nx >= 0 && nx < n && ny >= 0 && ny < m && !vis[nx][ny] && chars[nx][ny] != '#') {
                    if (chars[nx][ny] == '!') {
                        ret++;
                    }
                    vis[nx][ny] = true;
                    queue.add(new int[]{nx, ny});
                }
            }
        }
        pw.println(ret);
    }


    static class Scanner {
        BufferedReader br;
        StringTokenizer st;

        public Scanner(InputStream s) {
            br = new BufferedReader(new InputStreamReader(s));
        }

        public Scanner(FileReader f) {
            br = new BufferedReader(f);
        }

        public String next() throws IOException {
            while (st == null || !st.hasMoreTokens())
                st = new StringTokenizer(br.readLine());
            return st.nextToken();
        }

        public int nextInt() throws IOException {
            return Integer.parseInt(next());
        }

        public long nextLong() throws IOException {
            return Long.parseLong(next());
        }

        public double nextDouble() throws IOException {
            return Double.parseDouble(next());
        }

        public int[] nextIntArr(int n) throws IOException {
            int[] arr = new int[n];
            for (int i = 0; i < n; i++) {
                arr[i] = Integer.parseInt(next());
            }
            return arr;
        }

    }
}"
21,C,Java,61792524,2023-04-07 19:32:31,牛客418895276号,答案正确,"import java.util.*;

// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        // 注意 hasNext 和 hasNextLine 的区别
        
        int n = in.nextInt();
        int m = in.nextInt();
        String[] arr = new String[n];
        for(int i=0;i<n;i++) {
            arr[i] = in.next();
        }
        int ans=0;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
               if(arr[i].charAt(j)=='@'){
                   ans = Math.max(bfs(arr,n,m,i,j),ans);
                   break;
               }
            }
        }
        System.out.println(ans);
    }
    public static int[] dx = {0,0,1,-1};
    public static int[] dy = {1,-1,0,0};
    public static int bfs(String[] arr,int n,int m,int sx,int sy){
        int ans = 0;
        Queue<Integer> qq = new LinkedList<>();
        BitSet bs = new BitSet();
        qq.offer(sx*m+sy);
        while(!qq.isEmpty()){
            Integer cur = qq.poll();
            int x = cur/m;
            int y = cur%m;
            if(arr[x].charAt(y)=='!') {
                //System.out.println(x+""-""+y);
                ans++;
            }
            for(int i=0;i<4;i++){
                int nx = x+dx[i];
                int ny = y+dy[i];
                if(nx>=0 && ny>=0 && nx < n && ny < m && !bs.get(nx*m+ny) 
                   && arr[nx].charAt(ny)!='#'){
                    qq.offer(nx*m+ny);
                    bs.set(nx*m+ny,true);
                }
            }
            
        }
        return ans;
    }
    
}"
22,C,Java,61792798,2023-04-07 19:34:45,wkkwmm,答案正确,"


import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
    	int vis[][];
    	char map[][];
    	int go[][]= {{1,0},{-1,0},{0,1},{0,-1}};
    	int sum=0,x1=0,y1=0,n=0,m=0;
    	void dfs(int x3,int y3) {
    		if(map[x3][y3]=='!') {
    			sum++;
    		}
    		for(int i=0;i<4;i++) {
    			
    				int x2=x3+go[i][0];
    				int y2=y3+go[i][1];
    				if(x2>=1&&x2<=n&&y2>=1&&y2<=m&&vis[x2][y2]==0) {
    					if(map[x2][y2]!='#') {
    						vis[x2][y2]=1;
    						dfs(x2,y2);
    					}
    				}
    			
    		}
    	}
        public void solve(int testNumber, InputReader in, PrintWriter out) {           
          n=in.nextInt();
          m=in.nextInt();
          vis=new int[n+1][m+1];
          map=new char [n+1][m+1];
          for(int i=1;i<=n;i++) {
        	  String s=in.next();
        	  for(int j=1;j<=m;j++) {
        		  char x=s.charAt(j-1);
        		  map[i][j]=x;
        		  if(x=='@') {
        			  x1=i;
        			  y1=j;
        		  }
        	  }
          }
          vis[x1][y1]=1;
          dfs(x1,y1);
          out.println(sum);
        }
    }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
23,C,Java,61792953,2023-04-07 19:35:56,人工智能3212卢明涛,答案错误,"import java.util.LinkedList;
import java.util.Queue;
import java.io.*;
import java.util.*;
import java.math.*;
public class Main {
    static InputStream inputStream = System.in;
    static OutputStream outputStream = System.out;
    static InputReader in = new InputReader(inputStream);
    static PrintWriter out = new PrintWriter(outputStream);
    public static void main(String[] args) {
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {

        static int yanx[] = new int[30];
        static int yany[] = new int[30];

        static int yanname[] = new int[30];
        static int yanwei[][] = new int[30][6];
        static int map[][] = new int[1001][1001];
        int huo[][] = new int[1001][1001];
        static int shao[][] = new int[1001][1001];

        int sum = 1;
        int newdi = 1;

        static int n = 0;
        static int m = 0;
        static int yan = 0;

        static int jue = 0;



        static void dfs(int x,int y){

                if (x+1<=n && shao[x+1][y] == 0){
                    shao[x+1][y]++;
                    dfs(x+1,y);
                }
                if (x-1>=1 && shao[x-1][y]==0){
                    shao[x-1][y]=1;
                    dfs(x-1,y);
                }
                if (y+1<=m && shao[x][y+1]==0){
                    shao[x][y+1]=1;
                    dfs(x,y+1);
                }
                if (y-1>=1 && shao[x][y-1]==0){
                shao[x][y-1]=1;
                dfs(x,y-1);
            }
        }
        LinkedList<Integer> dep = new LinkedList<>();
        boolean[]vis;

        public void solve(int testNumber, InputReader in, PrintWriter out) {
//            int sum = 0;
             n = in.nextInt();
             m = in.nextInt();
            int sx =0;
            int xy = 0;
            for (int i=1;i<=n; i++){
                String s = in.next();
                for (int j=1;j<=m; j++){
                    if (s.charAt(j-1)=='.'){
                        map[i][j] =1;
                    }
                    else if (s.charAt(j-1)=='#'){
                        map[i][j] = 2;
                        shao[i][j]=-1;
                    }
                    else if (s.charAt(j-1) == '!') {
                        map[i][j] = 3;

                    }
                    else if (s.charAt(j) == '@') {
                        map[i][j]=4;
                        shao[i][j]++;
                        sx = i;
                        xy = j;
                    }
                }
            }
            dfs(sx,xy);
            int du=0;
            for (int i=1;i<=n; i++){
                for (int j = 1; j <= m; j++) {
                    if (map[i][j]==3 && shao[i][j]==1){
                        du++;
                    }
                }
            }
            out.println(du);
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        boolean hasNext() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e) {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }

    }
}
"
24,C,Java,61793091,2023-04-07 19:36:54,Leaves_XY,答案正确,"import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Main {
	static Scanner scanner=new Scanner(System.in);
	static StreamTokenizer cin=new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
	static PrintWriter cout=new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	static BufferedReader bf=new BufferedReader(new InputStreamReader(System.in));
	
	static final int N=1010,M=100010;
	
	static int n,k,m;
	static int a[][]=new int[N][N];
	static char g[][]=new char[N][N];
	static boolean st[][]=new boolean[N][N];
	
	static int bfs(PII s) {
		Queue<PII> queue=new LinkedList<PII>();
		queue.add(s);
		int res=0;
		int[] dx= {0,0,1,-1},dy= {1,-1,0,0};
		
		while(!queue.isEmpty()) {
			PII t=queue.poll();
//			System.out.println(""t:""+t.x+"" ""+t.y);
			for(int i=0;i<4;i++) {
				int a=t.x+dx[i],b=t.y+dy[i];
				if(a<0||a>=n||b<0||b>=m||g[a][b]=='#'||st[a][b])continue;
				st[a][b]=true;
//				System.out.println(""a:""+a+"" b:""+b);
				if(g[a][b]=='!')res++;
				queue.add(new PII(a, b));		
			}
		}
		return res;
	}
	
	public static void main(String args[]) throws IOException {
		n=scanner.nextInt();
		m=scanner.nextInt();
		
		for(int i=0;i<n;i++) {		
			String string=scanner.next();
			g[i]=string.toCharArray();			
		}
		PII start=null;
		for(int i=0;i<n;i++)
			for(int j=0;j<m;j++) {
				if(g[i][j]=='@')start=new PII(i, j);
			}
//		System.out.println(""start:""+start.x+"" ""+start.y);
//		
//		for(int i=0;i<n;i++) {
//			for(int j=0;j<m;j++) 
//				System.out.print(g[i][j]);
//			System.out.println();
//		}
		
		
		System.out.println(bfs(start));
		
	}
}

class PII{
	int x,y;

	public PII(int x, int y) {
		super();
		this.x = x;
		this.y = y;
	}
	
}

"
25,C,Java,61793244,2023-04-07 19:37:51,人工智能3212卢明涛,答案错误,"import java.util.LinkedList;
import java.util.Queue;
import java.io.*;
import java.util.*;
import java.math.*;
public class Main {
    static InputStream inputStream = System.in;
    static OutputStream outputStream = System.out;
    static InputReader in = new InputReader(inputStream);
    static PrintWriter out = new PrintWriter(outputStream);
    public static void main(String[] args) {
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {

        static int yanx[] = new int[30];
        static int yany[] = new int[30];

        static int yanname[] = new int[30];
        static int yanwei[][] = new int[30][6];
        static int map[][] = new int[1001][1001];
        int huo[][] = new int[1001][1001];
        static int shao[][] = new int[1001][1001];

        int sum = 1;
        int newdi = 1;

        static int n = 0;
        static int m = 0;
        static int yan = 0;

        static int jue = 0;



        static void dfs(int x,int y){

                if (x+1<=n && shao[x+1][y] == 0){
                    shao[x+1][y]++;
                    dfs(x+1,y);
                }
                if (x-1>=1 && shao[x-1][y]==0){
                    shao[x-1][y]=1;
                    dfs(x-1,y);
                }
                if (y+1<=m && shao[x][y+1]==0){
                    shao[x][y+1]=1;
                    dfs(x,y+1);
                }
                if (y-1>=1 && shao[x][y-1]==0){
                    shao[x][y-1]=1;
                    dfs(x,y-1);
                }
        }
        LinkedList<Integer> dep = new LinkedList<>();
        boolean[]vis;

        public void solve(int testNumber, InputReader in, PrintWriter out) {
//            int sum = 0;
             n = in.nextInt();
             m = in.nextInt();
            int sx =0;
            int xy = 0;
            for (int i=1;i<=n; i++){
                String s = in.next();
                for (int j=1;j<=m; j++){
                    if (s.charAt(j-1)=='.'){
                        map[i][j] =1;
                        shao[i][j] = 0;
                    }
                    else if (s.charAt(j-1)=='#'){
                        map[i][j] = 2;
                        shao[i][j]=-1;
                    }
                    else if (s.charAt(j-1) == '!') {
                        map[i][j] = 3;
                        shao[i][j] = 0;
                    }
                    else if (s.charAt(j) == '@') {
                        map[i][j]=4;
                        shao[i][j] = 0;
                        sx = i;
                        xy = j;
                    }
                }
            }
            dfs(sx,xy);
            int du=0;
            for (int i=1;i<=n; i++){
                for (int j = 1; j <= m; j++) {
                    if (map[i][j]==3 && shao[i][j]==1){
                        du++;
                    }
                }
            }
            out.println(du);
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        boolean hasNext() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e) {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }

    }
}
"
26,C,Java,61793325,2023-04-07 19:38:24,谦虚的驼瑞驰胖乎乎,答案正确,"import java.io.*;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));
    static int N = 1010;
    static char [][]g = new char[N][N];
    static int n,m , ans;
    static boolean [][]st = new boolean[N][N];
    static int []dx = {0,1,0,-1},dy = {1,0,-1,0};
    static int bfs(int sx,int sy){
        Queue <int []> queue = new LinkedList<>();
        queue.add(new int []{sx,sy});
        st[sx][sy] = true;
        int res = 0;
        if(g[sx][sy] == '!') res ++;
        while (!queue.isEmpty()){
            int  []t = queue.poll();
            int a = t[0], b = t[1];
            for(int i = 0 ; i< 4; i ++){
                int x = a + dx[i] ;
                int y = b + dy[i];
                if(x < 0 || x >= n || y < 0 || y >= m || g[x][y] == '#' || st[x][y]) continue;
                queue.add(new int[]{x,y});
                st[x][y] = true;
                if(g[x][y] == '!') res ++;
            }
        }
        return res;

    }
    public static void main(String[] args) throws IOException {
        String []s= br.readLine().split("" "");
        n = Integer.parseInt(s[0]); m = Integer.parseInt(s[1]);

        for(int i = 0; i < n; i ++){
            String s1 = br.readLine();
            g[i] = s1.toCharArray();
        }
        int x = 0, y = 0;
        for(int i = 0; i < n; i ++){
            for(int j = 0 ; j < m; j ++){
                if(g[i][j] == '@'){
                    x = i;y = j;
                    break;
                }
            }
        }
        ans = bfs(x,y);
        pw.println(ans);

        pw.close();
    }
}

"
27,C,Java,61793331,2023-04-07 19:38:25,人工智能3212卢明涛,答案正确,"import java.util.LinkedList;
import java.util.Queue;
import java.io.*;
import java.util.*;
import java.math.*;
public class Main {
    static InputStream inputStream = System.in;
    static OutputStream outputStream = System.out;
    static InputReader in = new InputReader(inputStream);
    static PrintWriter out = new PrintWriter(outputStream);
    public static void main(String[] args) {
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {

        static int yanx[] = new int[30];
        static int yany[] = new int[30];

        static int yanname[] = new int[30];
        static int yanwei[][] = new int[30][6];
        static int map[][] = new int[1001][1001];
        int huo[][] = new int[1001][1001];
        static int shao[][] = new int[1001][1001];

        int sum = 1;
        int newdi = 1;

        static int n = 0;
        static int m = 0;
        static int yan = 0;

        static int jue = 0;



        static void dfs(int x,int y){

                if (x+1<=n && shao[x+1][y] == 0){
                    shao[x+1][y]++;
                    dfs(x+1,y);
                }
                if (x-1>=1 && shao[x-1][y]==0){
                    shao[x-1][y]=1;
                    dfs(x-1,y);
                }
                if (y+1<=m && shao[x][y+1]==0){
                    shao[x][y+1]=1;
                    dfs(x,y+1);
                }
                if (y-1>=1 && shao[x][y-1]==0){
                    shao[x][y-1]=1;
                    dfs(x,y-1);
                }
        }
        LinkedList<Integer> dep = new LinkedList<>();
        boolean[]vis;

        public void solve(int testNumber, InputReader in, PrintWriter out) {
//            int sum = 0;
             n = in.nextInt();
             m = in.nextInt();
            int sx =0;
            int xy = 0;
            for (int i=1;i<=n; i++){
                String s = in.next();
                for (int j=1;j<=m; j++){
                    if (s.charAt(j-1)=='.'){
                        map[i][j] =1;
                        shao[i][j] = 0;
                    }
                    else if (s.charAt(j-1)=='#'){
                        map[i][j] = 2;
                        shao[i][j]=-1;
                    }
                    else if (s.charAt(j-1) == '!') {
                        map[i][j] = 3;
                        shao[i][j] = 0;
                    }
                    else if (s.charAt(j-1) == '@') {
                        map[i][j]=4;
                        shao[i][j] = 1;
                        sx = i;
                        xy = j;
                    }
                }
            }
            dfs(sx,xy);
            int du=0;
            for (int i=1;i<=n; i++){
                for (int j = 1; j <= m; j++) {
                    if (map[i][j]==3 && shao[i][j]==1){
                        du++;
                    }
                }
            }
            out.println(du);
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        boolean hasNext() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e) {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }

    }
}
"
28,C,Java,61793409,2023-04-07 19:38:57,人工智能3212卢明涛,答案正确,"import java.util.LinkedList;
import java.util.Queue;
import java.io.*;
import java.util.*;
import java.math.*;
public class Main {
    static InputStream inputStream = System.in;
    static OutputStream outputStream = System.out;
    static InputReader in = new InputReader(inputStream);
    static PrintWriter out = new PrintWriter(outputStream);
    public static void main(String[] args) {
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {

        static int yanx[] = new int[30];
        static int yany[] = new int[30];

        static int yanname[] = new int[30];
        static int yanwei[][] = new int[30][6];
        static char map[][] = new char[301][301];

        static int n = 0;
        static int m = 0;
        static int yan = 0;

        static int jue = 0;
        static int sum =0;
        static void dfs(){
            if (sum==0){
                jue = 1;
                for (int i=1;i<=n;i++){
                    for (int j=1;j<=m;j++){
                        out.print(map[i][j]);
                    }
                    out.println();
                }
                return;
            }
            if (jue==0) {
                for (int i = 1; i <= yan; i++) {
                    for (int j = 1; j <= 4; j++) {
                        if (j == 1) {
                            int f = 0;
                            int x = yanx[i] - yanwei[i][1] - 1;
                            int start = yany[i] - yanwei[i][3];
                            int end = yany[i] + yanwei[i][4];
                            if (x >= 1 && x <= m) {
                                for (int j1 = start; j1 <= end; j1++) {
                                    if (map[j1][x] != '.') {
                                        f = 1;
                                        break;
                                    }
                                }
                                if (f == 0) {
                                    yanwei[i][1]++;
                                    for (int j1 = start; j1 <= end; j1++) {
                                        map[j1][x] = (char) yanname[i];
                                    }
                                    sum = sum-(end-start+1);
                                    dfs();
                                    for (int j1 = start; j1 <= end; j1++) {
                                        map[j1][x] = '.';
                                    }
                                    yanwei[i][1]--;
                                    sum = sum+(end-start+1);
                                }
                            }
                        } else if (j == 2) {
                            int f = 0;
                            int x = yanx[i] + yanwei[i][2] + 1;
                            int start = yany[i] - yanwei[i][3];
                            int end = yany[i] + yanwei[i][4];
                            if (x >= 1 && x <= m) {
//                        f = 0;
                                for (int j1 = start; j1 <= end; j1++) {
                                    if (map[j1][x] != '.') {
                                        f = 1;
                                        break;
                                    }
                                }
                                if (f == 0) {
                                    yanwei[i][2]++;
                                    for (int j1 = start; j1 <= end; j1++) {
                                        map[j1][x] = (char) yanname[i];
                                    }
                                    sum = sum-(end-start+1);
                                    dfs();
                                    for (int j1 = start; j1 <= end; j1++) {
                                        map[j1][x] = '.';
                                    }
                                    yanwei[i][2]--;
                                    sum = sum+(end-start+1);
                                }
                            }
                        } else if (j == 3) {
                            int f = 0;
                            int y = yany[i] - yanwei[i][3] - 1;
                            int start = yanx[i] - yanwei[i][1];
                            int end = yanx[i] + yanwei[i][2];
                            if (y >= 1 && y <= n) {
//                        f = 0;
                                for (int j1 = start; j1 <= end; j1++) {
                                    if (map[y][j1] != '.') {
                                        f = 1;
                                        break;
                                    }
                                }
                                if (f == 0) {
                                    yanwei[i][3]++;
                                    for (int j1 = start; j1 <= end; j1++) {
                                        map[y][j1] = (char) yanname[i];
                                    }
                                    sum = sum-(end-start+1);
                                    dfs();
                                    for (int j1 = start; j1 <= end; j1++) {
                                        map[y][j1] = '.';
                                    }
                                    yanwei[i][3]--;
                                    sum = sum+(end-start+1);
                                }
                            }
                        } else {
                            int f = 0;
                            int y = yany[i] + yanwei[i][4] + 1;
                            int start = yanx[i] - yanwei[i][1];
                            int end = yanx[i] + yanwei[i][2];
                            if (y >= 1 && y <= n) {
//                        f = 0;
                                for (int j1 = start; j1 <= end; j1++) {
                                    if (map[y][j1] != '.') {
                                        f = 1;
                                        break;
                                    }
                                }
                                if (f == 0) {
                                    yanwei[i][4]++;
                                    for (int j1 = start; j1 <= end; j1++) {
                                        map[y][j1] = (char) yanname[i];
                                    }
                                    sum = sum-(end-start+1);
                                    dfs();
                                    for (int j1 = start; j1 <= end; j1++) {
                                        map[y][j1] = '.';
                                    }
                                    yanwei[i][4]--;
                                    sum = sum+(end-start+1);
                                }
                            }
                        }
                    }
                }
            }
        }
        LinkedList<Integer> dep = new LinkedList<>();
        boolean[]vis;

        public void solve(int testNumber, InputReader in, PrintWriter out) {
//            int sum = 0;
            int n = in.nextInt();
            int m = in.nextInt();
            int map[][] = new int[n+1][m+1];
            int huo[][] = new int[n+1][m+1];
            int shao[][] = new int[n+1][m+1];
            int xindix[] = new int[n*m+3];
            int xindiy[] = new int[n*m+3];
            int sum = 1;
            int newdi = 1;
            for (int i=1;i<=n; i++){
                String s = in.next();
                for (int j=1;j<=m; j++){
                    if (s.charAt(j-1)=='.'){
                        map[i][j] =1;
                    }
                    else if (s.charAt(j-1)=='#'){
                        map[i][j] = 2;
                        shao[i][j]=-1;
                    }
                    else if (s.charAt(j-1) == '!') {
                        map[i][j] = 3;

                    }
                    else if (s.charAt(j-1) == '@') {
                        map[i][j]=4;
                        shao[i][j]++;
                        xindix[sum] = i;
                        xindiy[sum]  = j;
                    }
                }
            }
            while (sum>0){
                int fsum = 0;
                int fxindix[] = new int[n*m+3];
                int fxindiy[] = new int[n*m+3];
                for (int i=1;i<=sum;i++){
                    int x = xindix[i];
                    int y = xindiy[i];
                    for (int j=x-1;j>=1;j--){
                        if (shao[j][y]==0){
                            fsum++;
                            fxindix[fsum] = j;
                            fxindiy[fsum] = y;
                            shao[j][y] = 1;
                        }
                        else {
                            break;
                        }
                    }
                    for (int j=x+1;j<=n;j++){
                        if (shao[j][y]==0){
                            fsum++;
                            fxindix[fsum] = j;
                            fxindiy[fsum] = y;
                            shao[j][y] = 1;
                        }
                        else{
                            break;
                        }
                    }
                    for (int j=y+1;j<=m;j++){
                        if (shao[x][j]==0){
                            fsum++;
                            fxindix[fsum] = x;
                            fxindiy[fsum] = j;
                            shao[x][j] = 1;
                        }
                        else {
                            break;
                        }
                    }
                    for (int j=y-1;j>=1;j--){
                        if (shao[x][j]==0){
                            fsum++;
                            fxindix[fsum] = x;
                            fxindiy[fsum] = j;
                            shao[x][j] = 1;
                        }
                        else {
                            break;
                        }
                    }
                }
                sum = fsum;
                for (int i=1;i<=sum; i++){
                    xindix[i] = fxindix[i];
                    xindiy[i] = fxindiy[i];
                }
            }
            int fu = 0;
            for (int i=1;i<=n; i++){
                for (int j = 1; j <= m; j++) {
                    if (map[i][j]==3 && shao[i][j]==1){
                        fu++;
                    }
                }
            }
            out.println(fu);
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        boolean hasNext() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e) {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }

    }
}
"
29,C,Java,61793411,2023-04-07 19:38:59,ssssse,运行超时,"import java.util.Arrays;
import java.util.Scanner;

public class Main {

    static int n,m;
//
//
    static int ans = -1;
    static int max = 0;
    static int[][] kxy = new int[][]{{0,1},{1,0},{-1,0},{0,-1}};

    static void dfs(int a,int b,char [][]mm){
        ans=Math.max(ans,max);
//        System.out.println(""ans:   ""+ans);
        for (int i = 0; i < 4; i++) {
            int kx = a + kxy[i][0];
            int ky = b + kxy[i][1];
            if(kx>=0&&kx<n&&ky>=0&&ky<m&&mm[kx][ky]!='#'){
                if(mm[kx][ky]=='!') {
                    max++;
                }
                mm[kx][ky]='#';
                dfs(kx,ky,mm);
            }
        }
    }

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        n = in.nextInt();
        m = in.nextInt();
        char [][] map = new char[n][m];
        int a = 0;
        int b = 0;
        for (int i = 0; i < n; i++) {
            String s = in.next();
            for (int j = 0; j < m; j++) {
                map[i][j]=s.charAt(j);
                if(map[i][j]=='@'){
                    a=i;
                    b=j;
                }
            }
        }
//        while (true){
//            int aa = a;
//            int bb = b;
//            for (int i = 0; i < 4; i++) {
//                int kx = aa+kxy[i][0];
//                int ky = bb+kxy[i][1];
//                if(kx>=0&&kx<n&&ky>=0&&ky<m&&map[kx][ky]!='#'){
//
//                }
//            }
//        }
        dfs(a,b,map);
        System.out.println(ans);

    }
}"
30,C,Java,61793449,2023-04-07 19:39:15,kk129,答案正确,"import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        int n,m;
        char[][] map;
        boolean[][] vis;
        int sum;
        int[][] next = {{1,0},{-1,0},{0,1},{0,-1}};
        int dfs(int x,int y){
            for (int i = 0; i < 4; i++) {
                int tx = x + next[i][0];
                int ty = y + next[i][1];
                if(tx>=0&&ty>=0&&tx<n&&ty<m){
                    if(map[tx][ty]!='#'&&!vis[tx][ty]){
//                        System.out.println(tx+"" ""+ty);
                        if(map[tx][ty]=='!'){
                            sum++;
//                            System.out.println(tx+"" ""+ty);
                        }
                        vis[tx][ty] = true;
                        dfs(tx,ty);
//                        vis[tx][ty] = false;
                    }
                }
            }
//            System.out.println();
            return sum;
        }
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            n = in.nextInt();
            m = in.nextInt();
            map = new char[n][m];
            vis = new boolean[n][m];
            int x = 0,y = 0;
            for (int i = 0; i < n; i++) {
                String str = in.next();
                for (int j = 0; j < m; j++) {
                    map[i][j] = str.charAt(j);
                    if(map[i][j]=='@'){
                        x = i;
                        y = j;
                    }
                }
            }
            out.println(dfs(x,y));
        }
    }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;
        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
31,C,Java,61793656,2023-04-07 19:40:48,牛客829798037号,答案错误,"

import java.util.Scanner;

public class Main {
    static char[][] num;
    static int sum=0,n,m;
    static int[][]step={{1,0},{0,1},{-1,0},{0,-1}};
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt(); m = sc.nextInt();
        num = new char[n + 1][m + 1];
        for (int i = 1; i <= n; i++) {
            String temp=sc.next();
            for (int j = 1; j <= m; j++) {
                num[i][j] = temp.charAt(j-1);
                if(num[i][j]!='#'){
                    sum++;
                }
            }
        }
        int res=0;
        for(int i=1;i<=n&&sum!=0;i++){
            for(int j=1;j<=m;j++){
                if(num[i][j]!='1'&&num[i][j]!='#'){
                    res++;
                    bfs(i,j);
                    if(sum==0){
                        break;
                    }
                }
            }
        }
        System.out.println(res);
    }
    public static void bfs(int i, int j){
        if(num[i][j]=='1'||num[i][j]=='#'){
            return;
        }
        sum--;
        num[i][j]='1';
        for(int q=0;q<=3;q++){
            int a=i+step[q][0],b=j+step[q][1];
            if(a>=1&&a<=n&&b>=1&&b<=m){
                bfs(a,b);
            }
        }
    }
}
"
32,C,Java,61794068,2023-04-07 19:43:45,L-0720,答案正确,"import java.util.*;

public class Main {

    static int[] toi = {-1, 1, 0, 0};
    static int[] toj = {0, 0, -1, 1};
    static int n;
    static int m;
    static char[][] arr;
    static boolean[][] isTrue;
    static int cnt = 0;
    
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String[] split = scanner.nextLine().split("" "");
        n = Integer.parseInt(split[0]);
        m = Integer.parseInt(split[1]);
        arr = new char[n][];
        isTrue = new boolean[n][m];
        int x = 0;
        int y = 0;
        for (int i = 0; i < n; i++) {
            String s = scanner.nextLine();
            arr[i] = s.toCharArray();
            int idx = s.indexOf(""@"");
            if (idx != -1) {
                x = i;
                y = idx;
            }
        }
        dfs(x, y);
        System.out.println(cnt);
    }

    public static void dfs(int i, int j) {
        isTrue[i][j] = true;
        if (arr[i][j] == '!') cnt++;
        for (int k = 0; k < 4; k++) {
            int ii = i + toi[k];
            int jj = j + toj[k];
            if (ii >= 0 && ii < n && jj >= 0 && jj < m && !isTrue[ii][jj]) {
                if (arr[ii][jj] != '#') dfs(ii, jj);
            }
        }
    }

}"
33,C,Java,61794298,2023-04-07 19:45:30,giao1,答案正确,"import java.util.*;

public class Main{
    
    static int N =1010,M = 1010,n,m,cnt;
    static char[][] map = new char[N][M];
    static boolean[][] st = new boolean[N][M];
    public static void main(String[] args){
        Scanner cin = new Scanner(System.in);
        n = cin.nextInt();
        m = cin.nextInt();
        int basex = 0,basey=0;
        for(int i = 1;i<=n;i++){
            String s = cin.next();
            for(int j = 1;j<=m;j++){
                map[i][j] = s.charAt(j-1);
                if(map[i][j]=='@'){
                    basex = i;
                    basey = j;
                }
            }
        }
        int res = dfs(basex,basey);
        System.out.println(res);
    }
    static int dfs(int x,int y){
        if(x<=0||y<=0||y>m||x>n) return 0;
        if(map[x][y]=='#') return 0;
        if(st[x][y]) return 0;
        st[x][y] = true;
        if(map[x][y]=='!'){
            cnt++;
        }
        if(x+1<=n)dfs(x+1,y);
        if(x-1>0)dfs(x-1,y);
        if(y-1>0)dfs(x,y-1);
        if(y+1<=m)dfs(x,y+1);
        return cnt;
    }
}"
34,C,Java,61794338,2023-04-07 19:45:47,山东协和学院_张福旭,答案错误,"import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
    static Read sc=new Read(System.in);
    static PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
    static int[][] f=new int[1005][1005];
    static char[][] ch=new char[1005][1005];
    static boolean[][] bool=new boolean[1005][1005];
    static int[][] d={{1,0},{0,1},{-1,0},{0,-1}};
    static int n,m;
    public static void main(String[] args) {
        n=sc.nextInt();
        m=sc.nextInt();
        for(int i=1;i<=n;i++) {
            String s = sc.next();
            for (int j = 0; j < s.length(); j++) {
                ch[i][j + 1] = s.charAt(j);
                //out.print(ch[i][j+1]);
            }
            //out.println();
        }
        int ans=0;
        for(int i=1;i<=n;i++){
            for(int j=1;j<=m;j++)
                if(ch[i][j]=='.')
                    ans=Math.max(ans,dfs(i,j));
        }
        out.println(ans);
        out.flush();
    }
    public static int dfs(int a,int b){
        if(f[a][b]!=0) return f[a][b];
        for(int k=0;k<4;k++) {
            int x = a + d[k][0];
            int y = b + d[k][1];
            if (x>0 && y>0 && x<=n && y<=m && ch[x][y] != '#'&&!bool[x][y]){
                int cnt=0;
                if (ch[x][y] == '!')  cnt=1;
                bool[x][y]=true;
                    f[a][b]=Math.max(f[a][b],dfs(x,y)+cnt);
                    bool[x][y]=false;
            }
        }
        return f[a][b];
    }
    static class Read {
        BufferedReader br;
        StringTokenizer st;

        public Read(InputStream in) {
            br = new BufferedReader(new InputStreamReader(in), 16384);
            eat("""");
        }

        public void eat(String s) {
            st = new StringTokenizer(s);
        }

        public String nextLine() {
            try {
                return br.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        public boolean hasNext() {
            while (!st.hasMoreTokens()) {
                String s = nextLine();
                if (s == null)
                    return false;
                eat(s);
            }
            return true;
        }

        public String next() {
            hasNext();
            return st.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }
    }
}"
35,C,Java,61794466,2023-04-07 19:46:42,Mosyi.,答案正确,"import java.io.*;
import java.util.*;
import java.math.*;
public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        int sum = 0;
        int n,m;
        int xx,yy;
        int[][] aa;
        private void dfs(char[][] a,int x,int y){
                if(x-1 >= 0 && aa[x-1][y] == 0){
                    if(a[x-1][y] == '!') {
                        sum++;
                        aa[x-1][y] = 1;
                        dfs(a,x-1,y);
                    }else if(a[x-1][y] == '.' || a[x-1][y] == '@'){
                        aa[x-1][y] = 1;
                        dfs(a,x-1,y);
                    }
                }
                if(x+1 < n && aa[x+1][y] == 0){
                    if(a[x+1][y] == '!') {
                        sum++;
                        aa[x+1][y] = 1;
                        dfs(a,x+1,y);
                    }else if(a[x+1][y] == '.' || a[x+1][y] == '@'){
                        aa[x+1][y] = 1;
                        dfs(a,x+1,y);
                    }
                }
                if(y-1 >= 0 && aa[x][y-1] == 0){
                    if(a[x][y-1] == '!') {
                        sum++;
                        aa[x][y-1] = 1;
                        dfs(a,x,y-1);
                    }else if(a[x][y-1] == '.' || a[x][y-1] == '@'){
                        aa[x][y-1] = 1;
                        dfs(a,x,y-1);
                    }
                }
                if(y+1 < m && aa[x][y+1] == 0){
                    if(a[x][y+1] == '!') {
                        sum++;
                        aa[x][y+1] = 1;
                        dfs(a,x,y+1);
                    }else if(a[x][y+1] == '.' || a[x][y+1] == '@'){
                        aa[x][y+1] = 1;
                        dfs(a,x,y+1);
                    }
                }
        }
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            n = in.nextInt();
            m = in.nextInt();
            char[][] a = new char[n][m];
            aa = new int[n][m];
            for (int i = 0; i < n; i++) {
                String s = in.next();
                for (int j = 0; j < m; j++) {
                    a[i][j] = s.charAt(j);
                    aa[i][j] = 0;
                    if(a[i][j] == '@'){
                        xx = i;
                        yy = j;
                    }
                }
            }
            dfs(a,xx,yy);
            out.println(sum);
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
36,C,Java,61794531,2023-04-07 19:47:17,TuWangren123,运行超时,"import java.util.Scanner;

public class Main {
    static int n;
    static int m;
    static int res = 0;
    static char[][] a;
    static int[][] v;
    static int[][] move = {
        { -1, 0 },
        { 0, 1 },
        { 1, 0 },
        { 0, -1 }
    };
    
    static void dfs(int x, int y) {
        if (a[x][y] == '#' || v[x][y] == 1) {
            return;
        }
        v[x][y] = 1;
        if (a[x][y] == '!') {
            res++;
        }
        
        for (int i = 0; i < 4; i++) {
            int ix = x + move[i][0];
            int iy = y + move[i][1];
            if (ix >= 0 && ix < n
                && iy >= 0 && iy < m
                && v[ix][iy] == 0) {
                dfs(ix, iy);
            }
        }
    }
    
    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        n = s.nextInt();
        m = s.nextInt();
        a = new char[n][m];
        int x = -1, y = -1;
        for (int i = 0; i < n; i++) {
            String str = s.next();
            for (int j = 0; j < m; j++) {
                a[i][j] = str.charAt(j);
                if (a[i][j] == '@') {
                    x = i;
                    y = j;
                }
            }
        }
        v = new int[n][m];
        dfs(x, y);
        System.out.println(res);
    }
}"
37,C,Java,61794665,2023-04-07 19:48:13,牛客829798037号,答案错误,"

import java.util.HashSet;
import java.util.Scanner;

public class Main {
    static char[][] num;
    static int sum=0,n,m,res=0;
    static HashSet<Integer>gg=new HashSet<>();
    static int[][]step={{1,0},{0,1},{-1,0},{0,-1}};
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt(); m = sc.nextInt();
        num = new char[n + 1][m + 1];
        for (int i = 1; i <= n; i++) {
            String temp=sc.next();
            for (int j = 1; j <= m; j++) {
                num[i][j] = temp.charAt(j-1);
                if(num[i][j]!='#'){
                    sum++;
                }
            }
        }
        int res=0;
        for(int i=1;i<=n&&sum!=0;i++){
            for(int j=1;j<=m;j++){
                if(num[i][j]!='1'&&num[i][j]!='#'){
                    bfs(i,j,res++);
                    if(sum==0){
                        break;
                    }
                }
            }
        }
        System.out.println(gg.size());
    }
    public static void bfs(int i, int j,int res){
        if(num[i][j]=='1'||num[i][j]=='#'){
            return;
        }
        sum--;
        if(num[i][j]=='!'){
            gg.add(res);
        }
        num[i][j]='1';
        for(int q=0;q<=3;q++){
            int a=i+step[q][0],b=j+step[q][1];
            if(a>=1&&a<=n&&b>=1&&b<=m){
                bfs(a,b,res);
            }
        }
    }
}
"
38,C,Java,61795359,2023-04-07 19:53:08,牛客829798037号,运行超时,"

import java.util.HashSet;
import java.util.Scanner;

public class Main {
    static char[][] num;
    static int n,m,res=0;
    static int[][]step={{1,0},{0,1},{-1,0},{0,-1}};
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt(); m = sc.nextInt();
        num = new char[n + 1][m + 1];
        for (int i = 1; i <= n; i++) {
            String temp=sc.next();
            for (int j = 1; j <= m; j++) {
                num[i][j] = temp.charAt(j-1);
            }
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<=m;j++){
                if(num[i][j]=='@'){
                    bfs(i,j);
                }
            }
        }
        System.out.println(res);
    }
    public static void bfs(int i, int j){
        if(num[i][j]=='1'||num[i][j]=='#'){
            return;
        }
        if(num[i][j]=='!'){
            res++;
        }
        num[i][j]='1';
        for(int q=0;q<=3;q++){
            int a=i+step[q][0],b=j+step[q][1];
            if(a>=1&&a<=n&&b>=1&&b<=m){
                bfs(a,b);
            }
        }
    }
}
"
39,C,Java,61795368,2023-04-07 19:53:12,_lwq_,答案正确,"import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.*;

public class Main{
    static int n, m, N = 1010;
    static char[][] g = new char[N][N];
    static PII star ;
    static int[] dx = new int[]{0,-1,0,1};
    static int[] dy = new int[]{1,0,-1,0};
    static boolean[][] st = new boolean[N][N];
    static PII[] q = new PII[N*N];
    
    static int bfs(){
        int d = 0;
        int hh = 0, tt = -1;
        q[++tt] = star;
        st[star.x][star.y] = true;
        while(hh<=tt){
            PII t = q[hh++];
            
            for(int i = 0;i<4;i++){
                int x = t.x+dx[i];
                int y = t.y + dy[i];
                if(x>=n||x<0||y>=m||y<0) continue;
                if(g[x][y]=='#') continue;
                if(st[x][y]) continue;
                if(g[x][y]=='!') d++;
                st[x][y] = true;
                q[++tt] = new PII(x,y);
            }
        }
        return d;
    }
    
	public static void main(String[] args){
		QuickInput in = new  QuickInput();
		PrintWriter out = new PrintWriter(System.out);
		
        n = in.nextInt();
        m = in.nextInt();
        
        for(int i = 0;i<n;i++)  g[i] = in.next().toCharArray();
        
        for(int i = 0;i<n;i++){
            for(int j = 0;j<m;j++){
                if(g[i][j]=='@') star = new PII(i,j);        
            }
        }
        
        out.print(bfs());
		//in.nextInt().....
		//out.println().....
		
		out.close();//不关闭，就会有些数据留在缓冲区
	}
}


class  QuickInput
{
    BufferedReader buf;
    StringTokenizer tok;
     QuickInput(){
        buf = new BufferedReader(new InputStreamReader(System.in));
    }
    boolean hasNext(){
        while(tok == null || !tok.hasMoreElements()){
            try{
                tok = new StringTokenizer(buf.readLine());
            }catch(Exception e){
                return false;
            }
        }
        return true;
    }
    String next(){
        if(hasNext()) return tok.nextToken();
        return null;
    }
    int nextInt(){
        return Integer.parseInt(next());
    }
    long nextLong(){
        return Long.parseLong(next());
    }
    double nextDouble(){
        return Double.parseDouble(next());
    }
    BigInteger nextBigInteger(){
        return new BigInteger(next());
    }
    BigDecimal nextBigDecimal(){
        return new BigDecimal(next());
    }
}

class PII{
    int x, y;
    public PII(int x , int y){
        this.x = x;
        this.y = y;
    }
}"
40,C,Java,61795439,2023-04-07 19:53:41,牛客829798037号,运行超时,"

import java.util.HashSet;
import java.util.Scanner;

public class Main {
    static char[][] num;
    static int n,m,res=0;
    static int[][]step={{1,0},{0,1},{-1,0},{0,-1}};
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt(); m = sc.nextInt();
        num = new char[n + 1][m + 1];
        for (int i = 1; i <= n; i++) {
            String temp=sc.next();
            for (int j = 1; j <= m; j++) {
                num[i][j] = temp.charAt(j-1);
            }
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<=m;j++){
                if(num[i][j]=='@'){
                    bfs(i,j);
                    break;
                }
            }
        }
        System.out.println(res);
    }
    public static void bfs(int i, int j){
        if(num[i][j]=='1'||num[i][j]=='#'){
            return;
        }
        if(num[i][j]=='!'){
            res++;
        }
        num[i][j]='1';
        for(int q=0;q<=3;q++){
            int a=i+step[q][0],b=j+step[q][1];
            if(a>=1&&a<=n&&b>=1&&b<=m){
                bfs(a,b);
            }
        }
    }
}
"
41,C,Java,61795526,2023-04-07 19:54:14,Tdexi,运行超时,"import java.util.*;

public class Main{ 
    public static void main(String[] args) {
        class Point{
            public int x;
            public int y;
            public Point(int i, int j) {
                x = i;
                y = j;
            }
        } 
        Scanner in = new Scanner(System.in);
        String[] firstLine = in.nextLine().split("" "");
        int n = Integer.parseInt(firstLine[0]);
        int m = Integer.parseInt(firstLine[1]);
        int [][] flags = new int[n][m];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                flags[i][j] = 0;
            }
        }
        
        char[][] matrix = new char[n][m];
        int count = 0;
        while (in.hasNextLine()) {
            matrix[count] = in.nextLine().toCharArray();
            count++;
        }
        int x = 0, y = 0;
        for (int i = 0; i < n; i++) {
            for (int j  = 0; j < m; j++) {
                if (matrix[i][j] == '@') {
                    x = i;
                    y = j;
                }
            }
        }
        flags[x][y] = 1;
        LinkedList<Point> queue = new LinkedList<>();
        queue.offer(new Point(x,y));
        while (!queue.isEmpty()) {
            Point cur = queue.poll();
            flags[cur.x][cur.y] = 1;
            if (cur.x+1 < n && flags[cur.x+1][cur.y] == 0 && (matrix[cur.x+1][cur.y]=='.' || matrix[cur.x+1][cur.y] == '!')) {
                queue.offer(new Point(cur.x + 1, cur.y));
            }
            if (cur.y+1 < m && flags[cur.x][cur.y+1] == 0 && (matrix[cur.x][cur.y+1]=='.' || matrix[cur.x][cur.y+1] == '!')) {
                queue.offer(new Point(cur.x, cur.y + 1));
            }
            if (cur.x-1 >= 0 && flags[cur.x-1][cur.y] == 0 && (matrix[cur.x-1][cur.y]=='.' || matrix[cur.x-1][cur.y] == '!')) {
                queue.offer(new Point(cur.x - 1, cur.y));
            }
            if (cur.y-1 >= 0 &&flags[cur.x][cur.y-1] == 0 && (matrix[cur.x][cur.y-1]=='.' || matrix[cur.x][cur.y-1] == '!')) {
                queue.offer(new Point(cur.x, cur.y - 1));
            }
        }
        int result = 0;
        for (int i = 0; i < n; i++) {
            for (int j  = 0; j < m; j++) {
                if (matrix[i][j] == '!' && flags[i][j] == 1) {
                    result++;
                }
            }
        }
        System.out.println(result);
    }
}"
42,C,Java,61795535,2023-04-07 19:54:18,自由oVo,执行出错,"import java.util.*;

public class Main {
	static int[] x = {0, 0, -1, 1};
	static int[] y = {1, -1, 0, 0};
	static boolean[][] b;
	static int ans = 0;
	static int m1, n1;
	public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int m = sc.nextInt(); int n = sc.nextInt();
        b = new boolean[m][n];
        m1 = m; n1 = n;
        char[][] c = new char[m][n];
        int i1 = -1, j1 = -1;
        for(int i = 0; i < m; i++) {
        	c[i] = sc.next().toCharArray();
        	for(int j = 0; j < 4; j++) {
        		if(c[i][j] == '@') {
        			i1 = i; j1 = j;
        		}
        	}
        }
        b[i1][j1] = true;
        dfs(i1, j1, c);
        System.out.println(ans);
    }
	public static void dfs(int i, int j, char[][] c) {
		for(int k = 0; k < 4; k++) {
			int i1 = i + x[k];
			int j1 = j + y[k];
			if(i1 < 0 || j1 < 0 || i1 >= m1 || j1 >= n1)continue;
			if(b[i1][j1] || c[i1][j1] == '#')continue;
			b[i1][j1] = true;
			if(c[i1][j1] == '!')ans++;
			dfs(i1, j1, c);
		}
	}
}"
43,C,Java,61795573,2023-04-07 19:54:35,//zk,答案错误,"import java.util.Scanner;

public class Main {
    static char[][] arr;
    static boolean[][] hasMove;
    static int res = 0;

    static int n;
    static int m;


    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        n = scanner.nextInt();
        m = scanner.nextInt();
        arr = new char[n][m];
        hasMove = new boolean[n][m];
        int x = 0;
        int y = 0;
        for (int i = 0; i < n; i++) {
            String s = scanner.next();
            arr[i] = s.toCharArray();
            if (s.contains(""@"")) {
                x = i;
                for (int j = 0; j < s.length(); j++) {
                    if (s.charAt(j) == '@') {
                        y = j;
                        break;
                    }
                }
            }
        }
        bfs(x, y);
        System.out.println(res);
    }

    private static void bfs(int x, int y) {
        if (!hasMove[x][y] && arr[x][y] != '#') {
            hasMove[x][y] = true;
            if (arr[x][y] == '!') {
                res++;
            }
        } else {
            return;
        }
        if (x > 0 && x < n - 1) {
            bfs(x + 1, y);
            bfs(x - 1, y);
        }
        if (y > 0 && y < m - 1) {
            bfs(x, y + 1);
            bfs(x, y - 1);
        }
    }
}
"
44,C,Java,61795634,2023-04-07 19:55:06,牛客829798037号,运行超时,"

import java.util.HashSet;
import java.util.Scanner;

public class Main {
    static char[][] num;
    static int n,m,res=0;
    static int[][]step={{1,0},{0,1},{-1,0},{0,-1}};
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt(); m = sc.nextInt();
        num = new char[n + 1][m + 1];
        for (int i = 1; i <= n; i++) {
            String temp=sc.next();
            for (int j = 1; j <= m; j++) {
                num[i][j] = temp.charAt(j-1);
            }
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<=m;j++){
                if(num[i][j]=='@'){
                    bfs(i,j);
                    break;
                }
            }
        }
        System.out.println(res);
    }
    public static void bfs(int i, int j){
        if(num[i][j]=='1'||num[i][j]=='#'){
            return;
        }
        if(num[i][j]=='!'){
            res++;
        }
        num[i][j]='1';
        for(int q=0;q<=3;q++){
            int a=i+step[q][0],b=j+step[q][1];
            if(a>=1&&a<=n&&b>=1&&b<=m){
                bfs(a,b);
            }
        }
    }
}
"
45,C,Java,61795637,2023-04-07 19:55:07,山东协和学院_张福旭,答案错误,"import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
    static Read sc=new Read(System.in);
    static PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
    static char[][] ch=new char[1005][1005];
    static boolean[][] bool=new boolean[1005][1005];
    static int[][] d={{1,0},{0,1},{-1,0},{0,-1}};
    static int n,m;
    public static void main(String[] args) {
        n=sc.nextInt();
        m=sc.nextInt();
        for(int i=1;i<=n;i++) {
            String s = sc.next();
            for (int j = 0; j < s.length(); j++) {
                ch[i][j + 1] = s.charAt(j);
                //out.print(ch[i][j+1]);
            }
            //out.println();
        }
        int ans=0;
        for(int i=1;i<=n;i++){
            for (int j=1;j<=m;j++){
                if(ch[i][j]=='.'&&!bool[i][j]){
                    ans= Math.max(ans,bfs(i,j));
                }
            }
        }
        out.println(ans);
        out.flush();
    }
    public static int bfs(int i,int j){
        Queue<int[]> q=new LinkedList<>();
        q.offer(new int[]{i,j});
        int ans=0;
        while (!q.isEmpty()){
            int[] index=q.poll();
            for(int k=0;k<4;k++){
                int x=index[0]+d[k][0];
                int y=index[1]+d[k][1];
                if (x>0 && y>0 && x<=n && y<=m && ch[x][y] != '#'&&!bool[x][y]){
                    if(ch[x][y]=='!') ans++;
                    bool[x][y]=true;
                    q.offer(new int[]{x,y});
                }
            }
        }
        return ans;
    }
    static class Read {
        BufferedReader br;
        StringTokenizer st;

        public Read(InputStream in) {
            br = new BufferedReader(new InputStreamReader(in), 16384);
            eat("""");
        }

        public void eat(String s) {
            st = new StringTokenizer(s);
        }

        public String nextLine() {
            try {
                return br.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        public boolean hasNext() {
            while (!st.hasMoreTokens()) {
                String s = nextLine();
                if (s == null)
                    return false;
                eat(s);
            }
            return true;
        }

        public String next() {
            hasNext();
            return st.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }
    }
}"
46,C,Java,61795778,2023-04-07 19:56:09,牛客829798037号,运行超时,"

import java.util.HashSet;
import java.util.Scanner;

public class Main {
    static char[][] num;
    static int n,m,res=0;
    static int[][]step={{1,0},{0,1},{-1,0},{0,-1}};
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt(); m = sc.nextInt();
        num = new char[n + 1][m + 1];
        for (int i = 1; i <= n; i++) {
            String temp=sc.next();
            for (int j = 1; j <= m; j++) {
                num[i][j] = temp.charAt(j-1);
            }
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<=m;j++){
                if(num[i][j]=='@'){
                    bfs(i,j);
                    break;
                }
            }
        }
        System.out.println(res);
    }
    public static void bfs(int i, int j){
        if(num[i][j]=='1'||num[i][j]=='#'){
            return;
        }
        if(num[i][j]=='!'){
            res++;
        }
        num[i][j]='1';
        for(int q=0;q<=3;q++){
            int a=i+step[q][0],b=j+step[q][1];
            if(a>=1&&a<=n&&b>=1&&b<=m){
                bfs(a,b);
            }
        }
    }
}
"
47,C,Java,61795835,2023-04-07 19:56:39,Tdexi,运行超时,"import java.util.*;

public class Main{ 
    public static void main(String[] args) {
        class Point{
            public int x;
            public int y;
            public Point(int i, int j) {
                x = i;
                y = j;
            }
        } 
        Scanner in = new Scanner(System.in);
        String[] firstLine = in.nextLine().split("" "");
        int n = Integer.parseInt(firstLine[0]);
        int m = Integer.parseInt(firstLine[1]);
        int [][] flags = new int[n][m];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                flags[i][j] = 0;
            }
        }
        
        char[][] matrix = new char[n][m];
        int count = 0;
        while (in.hasNextLine()) {
            matrix[count] = in.nextLine().toCharArray();
            count++;
        }
        int x = 0, y = 0;
        for (int i = 0; i < n; i++) {
            for (int j  = 0; j < m; j++) {
                if (matrix[i][j] == '@') {
                    x = i;
                    y = j;
                }
            }
        }
        flags[x][y] = 1;
        LinkedList<Point> queue = new LinkedList<>();
        queue.offer(new Point(x,y));
        while (!queue.isEmpty()) {
            Point cur = queue.poll();
            flags[cur.x][cur.y] = 1;
            if (cur.x+1 < n && flags[cur.x+1][cur.y] == 0 && (matrix[cur.x+1][cur.y]=='.' || matrix[cur.x+1][cur.y] == '!')) {
                queue.offer(new Point(cur.x + 1, cur.y));
            }
            if (cur.y+1 < m && flags[cur.x][cur.y+1] == 0 && (matrix[cur.x][cur.y+1]=='.' || matrix[cur.x][cur.y+1] == '!')) {
                queue.offer(new Point(cur.x, cur.y + 1));
            }
            if (cur.x-1 >= 0 && flags[cur.x-1][cur.y] == 0 && (matrix[cur.x-1][cur.y]=='.' || matrix[cur.x-1][cur.y] == '!')) {
                queue.offer(new Point(cur.x - 1, cur.y));
            }
            if (cur.y-1 >= 0 &&flags[cur.x][cur.y-1] == 0 && (matrix[cur.x][cur.y-1]=='.' || matrix[cur.x][cur.y-1] == '!')) {
                queue.offer(new Point(cur.x, cur.y - 1));
            }
            
        }
        int result = 0;
        for (int i = 0; i < n; i++) {
            for (int j  = 0; j < m; j++) {
                if (matrix[i][j] == '!' && flags[i][j] == 1) {
                    result++;
                }
            }
        }
        System.out.println(result);
    }
}"
48,C,Java,61795944,2023-04-07 19:57:31,牛客829798037号,运行超时,"

import java.util.HashSet;
import java.util.Scanner;

public class Main {
    static char[][] num;
    static int n,m,res=0;
    static int[][]step={{1,0},{0,1},{-1,0},{0,-1}};
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt(); m = sc.nextInt();
        num = new char[n + 1][m + 1];
        for (int i = 1; i <= n; i++) {
            String temp=sc.next();
            for (int j = 1; j <= m; j++) {
                num[i][j] = temp.charAt(j-1);
            }
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<=m;j++){
                if(num[i][j]=='@'){
                    bfs(i,j);
                    break;
                }
            }
        }
        System.out.println(res);
    }
    public static void bfs(int i, int j){
        if(num[i][j]=='1'||num[i][j]=='#'){
            return;
        }
        if(num[i][j]=='!'){
            res++;
        }
        num[i][j]='1';
        for(int q=0;q<=3;q++){
            int a=i+step[q][0],b=j+step[q][1];
            if(a>=1&&a<=n&&b>=1&&b<=m){
                bfs(a,b);
            }
        }
    }
}
"
49,C,Java,61796017,2023-04-07 19:58:01,wxyyds,答案错误,"import java.io.*;
import java.util.*;
public class Main 
{
	static final int N=1010;
	static char[][] g=new char[N][N];
	static boolean[][] st=new boolean[N][N];
	static int[] dx= {0,0,1,-1},dy= {1,-1,0,0};
	static int n,m;
	static long ans;
	static Queue<int[]> que=new LinkedList<>();
	static BufferedReader in=new BufferedReader(new InputStreamReader(System.in));
	static PrintWriter out=new PrintWriter(new OutputStreamWriter(System.out));
	public static void main(String[] args) throws IOException 
	{
		String[] nm=in.readLine().split("" "");
		n=Integer.parseInt(nm[0]);m=Integer.parseInt(nm[1]);
		
		for(int i=1;i<=n;i++)
		{
			String sp="" ""+in.readLine();
			g[i]=sp.toCharArray();
		}
		for(int i=1;i<=n;i++)
		{
			for(int j=1;j<=m;j++)
			{
				if(g[i][j]=='@') g[i][j]='.';
				if(!st[i][j]&&g[i][j]!='#')
				{
					bfs(i,j);
					ans++;
				}
			}
		}
		out.print(ans);
		out.flush();
	}
	static void bfs(int aa,int bb)
	{
		que.clear();
		que.add(new int[] {aa,bb});
		while(!que.isEmpty())
		{
			int arr[]=que.poll();
			int a=arr[0],b=arr[1];
			for(int i=0;i<4;i++)
			{
				int x=a+dx[i],y=b+dy[i];
				if(x>=1&&y>=1&&x<=n&&y<=m&&g[x][y]!='#'&&!st[x][y])
				{
					st[x][y]=true;
					que.add(new int[] {x,y});
				}
			}
		}
	}
}"
50,C,Java,61796321,2023-04-07 20:00:13,//zk,答案正确,"import java.util.Scanner;

public class Main {
    static char[][] arr;
    static boolean[][] hasMove;
    static int res = 0;

    static int n;
    static int m;


    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        n = scanner.nextInt();
        m = scanner.nextInt();
        arr = new char[n][m];
        hasMove = new boolean[n][m];
        int x = 0;
        int y = 0;
        for (int i = 0; i < n; i++) {
            String s = scanner.next();
            arr[i] = s.toCharArray();
            if (s.contains(""@"")) {
                x = i;
                for (int j = 0; j < s.length(); j++) {
                    if (s.charAt(j) == '@') {
                        y = j;
                        break;
                    }
                }
            }
        }
        bfs(x, y);
        System.out.println(res);
    }

    private static void bfs(int x, int y) {
        if (!hasMove[x][y] && arr[x][y] != '#') {
            hasMove[x][y] = true;
            if (arr[x][y] == '!') {
                res++;
            }
        } else {
            return;
        }
        if (x > 0) {
            bfs(x - 1, y);
        }
        if (x < n - 1) {
            bfs(x + 1, y);
        }
        if (y > 0) {
            bfs(x, y - 1);
        }
        if (y < m - 1) {
            bfs(x, y + 1);
        }
    }
}"
51,C,Java,61796429,2023-04-07 20:00:52,山东协和学院_张福旭,答案正确,"import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
    static Read sc=new Read(System.in);
    static PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
    static char[][] ch=new char[1005][1005];
    static boolean[][] bool=new boolean[1005][1005];
    static int[][] d={{1,0},{0,1},{-1,0},{0,-1}};
    static int n,m;
    public static void main(String[] args) {
        n=sc.nextInt();
        m=sc.nextInt();
        int a=0,b=0;
        for(int i=1;i<=n;i++) {
            String s = sc.next();
            for (int j = 0; j < s.length(); j++) {
                ch[i][j + 1] = s.charAt(j);
                if (s.charAt(j)=='@'){
                    a=i;
                    b=j+1;
                }
                //out.print(ch[i][j+1]);
            }
            //out.println();
        }
        out.println(bfs(a,b));
        out.flush();
    }
    public static int bfs(int i,int j){
        Queue<int[]> q=new LinkedList<>();
        q.offer(new int[]{i,j});
        int ans=0;
        while (!q.isEmpty()){
            int[] index=q.poll();
            for(int k=0;k<4;k++){
                int x=index[0]+d[k][0];
                int y=index[1]+d[k][1];
                if (x>0 && y>0 && x<=n && y<=m && ch[x][y] != '#'&&!bool[x][y]){
                    if(ch[x][y]=='!') ans++;
                    bool[x][y]=true;
                    q.offer(new int[]{x,y});
                }
            }
        }
        return ans;
    }
    static class Read {
        BufferedReader br;
        StringTokenizer st;

        public Read(InputStream in) {
            br = new BufferedReader(new InputStreamReader(in), 16384);
            eat("""");
        }

        public void eat(String s) {
            st = new StringTokenizer(s);
        }

        public String nextLine() {
            try {
                return br.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        public boolean hasNext() {
            while (!st.hasMoreTokens()) {
                String s = nextLine();
                if (s == null)
                    return false;
                eat(s);
            }
            return true;
        }

        public String next() {
            hasNext();
            return st.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }
    }
}"
52,C,Java,61796602,2023-04-07 20:02:06,自由oVo,答案正确,"import java.util.*;

public class Main {
	static int[] x = {0, 0, -1, 1};
	static int[] y = {1, -1, 0, 0};
	static boolean[][] b;
	static int ans = 0;
	static int m1, n1;
	public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int m = sc.nextInt(); int n = sc.nextInt();
        b = new boolean[m][n];
        m1 = m; n1 = n;
        char[][] c = new char[m][n];
        int i1 = -1, j1 = -1;
        for(int i = 0; i < m; i++) {
        	c[i] = sc.next().toCharArray();
        	for(int j = 0; j < n; j++) {
        		if(c[i][j] == '@') {
        			i1 = i; j1 = j;
        		}
        	}
        }
        if(i1 != -1 && j1 != -1) {
        	b[i1][j1] = true;
        	dfs(i1, j1, c);
        }
        System.out.println(ans);
    }
	public static void dfs(int i, int j, char[][] c) {
		for(int k = 0; k < 4; k++) {
			int i1 = i + x[k];
			int j1 = j + y[k];
			if(i1 < 0 || j1 < 0 || i1 >= m1 || j1 >= n1)continue;
			if(b[i1][j1] || c[i1][j1] == '#')continue;
			b[i1][j1] = true;
			if(c[i1][j1] == '!')ans++;
			dfs(i1, j1, c);
		}
	}
}"
53,C,Java,61796620,2023-04-07 20:02:14,山东协和学院_张福旭,答案错误,"import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
    static Read sc=new Read(System.in);
    static PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
    static int[][] f=new int[1005][1005];
    static char[][] ch=new char[1005][1005];
    static boolean[][] bool=new boolean[1005][1005];
    static int[][] d={{1,0},{0,1},{-1,0},{0,-1}};
    static int n,m;
    public static void main(String[] args) {
        n=sc.nextInt();
        m=sc.nextInt();
        int a=0,b=0;
        for(int i=1;i<=n;i++) {
            String s = sc.next();
            for (int j = 0; j < s.length(); j++) {
                ch[i][j + 1] = s.charAt(j);
                if (s.charAt(j)=='@'){
                    a=i;
                    b=j+1;
                }
                //out.print(ch[i][j+1]);
            }
            //out.println();
        }
        out.println(dfs(a,b));
        out.flush();
    }
    public static int dfs(int a,int b){
        if(f[a][b]!=0) return f[a][b];
        for(int k=0;k<4;k++) {
            int x = a + d[k][0];
            int y = b + d[k][1];
            if (x>0 && y>0 && x<=n && y<=m && ch[x][y] != '#'&&!bool[x][y]){
                int cnt=0;
                if (ch[x][y] == '!')  cnt=1;
                bool[x][y]=true;
                f[a][b]=Math.max(f[a][b],dfs(x,y)+cnt);
                bool[x][y]=false;
            }
        }
        return f[a][b];
    }
    static class Read {
        BufferedReader br;
        StringTokenizer st;

        public Read(InputStream in) {
            br = new BufferedReader(new InputStreamReader(in), 16384);
            eat("""");
        }

        public void eat(String s) {
            st = new StringTokenizer(s);
        }

        public String nextLine() {
            try {
                return br.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        public boolean hasNext() {
            while (!st.hasMoreTokens()) {
                String s = nextLine();
                if (s == null)
                    return false;
                eat(s);
            }
            return true;
        }

        public String next() {
            hasNext();
            return st.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }
    }
}"
54,C,Java,61796757,2023-04-07 20:03:22,小陈同学。1,答案正确,"
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;

public class Main {
	static int n, m;
	static char[][] map;
	static int[][] next = {{1,0},{0,1},{0,-1},{-1,0}};
	static int[][] is;
	static int cnt = 0;
	static int a,b;
	public static void main(String[] args) throws IOException {
		BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
		String[] s = in.readLine().split("" "");
		n = Integer.valueOf(s[0]);
		m = Integer.valueOf(s[1]);
		map = new char[n][m];
		is = new int[n][m];
		for(int i = 0; i<n; i++) {
			char[] c = in.readLine().toCharArray();
			for(int j = 0; j<m; j++) {
				map[i][j] = c[j];
				if('@'==c[j]) {
					a = i;
					b = j;
				}
			}
		}
		bfs();
		System.out.println(cnt);
	}
	static void bfs() {
		Queue<Node> list = new LinkedList<>();
		list.add(new Node(a,b));
		is[a][b] = 1;
		while(!list.isEmpty()) {
			Node now = list.poll();
			int x = now.x;
			int y = now.y;
			for(int i = 0; i<4; i++) {
				int xx = x+next[i][0];
				int yy = y+next[i][1];
				if(check(xx,yy)&&is[xx][yy]==0&&map[xx][yy]!='#') {
					list.add(new Node(xx,yy));
					is[xx][yy] = 1;
					if(map[xx][yy]=='!')cnt++;
				}
			}
		}
	}
	private static boolean check(int xx, int yy) {
		return xx>=0&&yy>=0&&xx<n&&yy<m;
	}
	static class Node{
		int x;
		int y;
		public Node(int x, int y) {
			super();
			this.x = x;
			this.y = y;
		}
	}
}
"
55,C,Java,61796858,2023-04-07 20:04:10,牛客225545702号,答案错误,"
import java.util.*;
public class Main {
    static int n,m;
    static int[][] dist;
    static int[][] cnt;
    static char[][] map;
    static int[] dx = {0,0,-1,1};
    static int[] dy = {-1,1,0,0};
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt();
        m = sc.nextInt();
        dist = new int[n][m];
        cnt = new int[n][m];
        map = new char[n][m];
        int sx=0,sy=0;
        for(int i=0;i<n;i++){
            String s = sc.next();
            for(int j=0;j<m;j++){
                map[i][j] = s.charAt(j);
                if(map[i][j]=='@'){
                    sx=i;
                    sy=j;
                }
            }
        }
        bfs(sx,sy);
        int ans=0;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(map[i][j]=='!'){
                    ans=Math.max(ans,cnt[i][j]);
                }
            }
        }
        System.out.println(++ans);
    }
    public static void bfs(int sx,int sy){
        Queue<Integer> qx = new LinkedList<>();
        Queue<Integer> qy = new LinkedList<>();
        qx.offer(sx);
        qy.offer(sy);
        dist[sx][sy]=0;
        cnt[sx][sy]=0;
        while(!qx.isEmpty()){
            int x=qx.poll();
            int y=qy.poll();
            for(int i=0;i<4;i++){
                int nx=x+dx[i];
                int ny=y+dy[i];
                if(nx>=0&&nx<n&&ny>=0&&ny<m&&map[nx][ny]!='#'&&dist[nx][ny]==0){
                    dist[nx][ny]=dist[x][y]+1;
                    cnt[nx][ny]=cnt[x][y]+(map[nx][ny]=='!'?1:0);
                    qx.offer(nx);
                    qy.offer(ny);
                }
            }
        }
    }
}"
56,C,Java,61796881,2023-04-07 20:04:23,wxyyds,答案正确,"import java.io.*;
import java.util.*;
public class Main 
{
	static final int N=1010;
	static char[][] g=new char[N][N];
	static boolean[][] st=new boolean[N][N];
	static int[] dx= {0,0,1,-1},dy= {1,-1,0,0};
	static int n,m;
	static long ans;
	static Queue<int[]> que=new LinkedList<>();
	static BufferedReader in=new BufferedReader(new InputStreamReader(System.in));
	static PrintWriter out=new PrintWriter(new OutputStreamWriter(System.out));
	public static void main(String[] args) throws IOException 
	{
		String[] nm=in.readLine().split("" "");
		n=Integer.parseInt(nm[0]);m=Integer.parseInt(nm[1]);
		
		for(int i=1;i<=n;i++)
		{
			String sp="" ""+in.readLine();
			g[i]=sp.toCharArray();
		}
		for(int i=1;i<=n;i++)
		{
			for(int j=1;j<=m;j++)
			{
				if(g[i][j]=='@')
				{
					bfs(i,j);
				}
			}
		}
		out.print(ans);
		out.flush();
	}
	static void bfs(int aa,int bb)
	{
		que.clear();
		que.add(new int[] {aa,bb});
		st[aa][bb]=true;
		while(!que.isEmpty())
		{
			int arr[]=que.poll();
			int a=arr[0],b=arr[1];
			for(int i=0;i<4;i++)
			{
				int x=a+dx[i],y=b+dy[i];
				if(x>=1&&y>=1&&x<=n&&y<=m&&g[x][y]!='#'&&!st[x][y])
				{
					st[x][y]=true;
					que.add(new int[] {x,y});
					if(g[x][y]=='!')ans++;
				}
			}
		}
	}
}"
57,C,Java,61797022,2023-04-07 20:05:29,232132323,运行超时,"import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        char [][] a;
        boolean [][] flag;
        int n,m;

        int count = 0;
        boolean check(int c,int b){
            if (c >= 0 && c < n && b >= 0 && b < m && !flag[c][b])
                return true;
            return false;
        }
        int [][] move = {{0,1},{1,0},{-1,0},{0,-1}};
        void dfs(int x,int y){
            flag[x][y] = true;
            if (a[x][y] == '!')
                count++;
            if (a[x][y] != '#') {
                for (int i = 0; i < 4; i++) {
                    int xx = x + move[i][0];
                    int yy = y + move[i][1];
                    if (check(xx,yy))
                        dfs(xx,yy);
                }
            }
        }
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            n = in.nextInt();
            m = in.nextInt();
            a = new char[n][m];
            flag = new boolean[n][m];
            int x = 0;
            int y = 0;
            for (int i = 0; i < n; i++) {
                String s = in.next();
                a[i] = s.toCharArray();
                if (s.contains(""@"")){
                    x = i;
                    y = s.indexOf(""@"");
                }
            }
            dfs(x,y);
            out.println(count);
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }

    }
}"
58,C,Java,61797160,2023-04-07 20:06:32,牛客595843183号,运行超时,"import java.util.*;
import java.io.*;

public class Main {
    
    private static final int[][] dirs = {{-1, 0}, {1, 0}, {0, -1}, {0, 1}};

    public static void main(String[] args) throws IOException{
        int n = FastReadWriteUtil.nextInt();
        int m = FastReadWriteUtil.nextInt();
        char[][] mapArr = new char[n][m];

        for (int i = 0; i < n; i++) {
            String s = FastReadWriteUtil.nextLine();
            for (int j = 0; j < m; j++) {
                mapArr[i][j] = s.charAt(j);
            }
        }


        int ans = 0;
        for (int i = 0; i < mapArr.length; i++) {
            for (int j = 0; j < mapArr[0].length; j++) {
                if (mapArr[i][j] == '@') {
                    int ans1 = getAns(mapArr, i, j);
                    ans = Math.max(ans, ans1);
                    System.out.println(ans);
                    break;
                }
            }
        }


    }

    public static int getAns(char[][] mapArr, int row, int col) {
        int ans = 0;
        Deque<Node> charQueue = new ArrayDeque<>();
        Node node1 = new Node(row, col);
        charQueue.addLast(node1);
        while (!charQueue.isEmpty()) {
            Node node = charQueue.pollFirst();
            int x = node.x;
            int y = node.y;
            if(mapArr[x][y] == '!') {
                ans++;
            }
            mapArr[x][y] = '-';
            for (int i = 0; i < dirs.length; i++) {
                int newX = x + dirs[i][0];
                int newY = y + dirs[i][1];
                if (newX >= 0 && newX < mapArr.length && newY >= 0 && newY < mapArr[0].length) {
                    if (mapArr[newX][newY] != '#' && mapArr[newX][newY] != '-') {
                        Node node2 = new Node(newX, newY);
                        charQueue.add(node2);
                    }
                }
            }
        }
        return ans;
    }

    static class Node {
        public int x;
        public int y;
        public Node(){}
        public Node(int x, int y) {
            this.x = x;
            this.y = y;
        }
    }
    
    
    static class FastReadWriteUtil {

        private static final BufferedReader BR = new BufferedReader(new InputStreamReader(System.in));
        private static final StreamTokenizer ST = new StreamTokenizer(BR);
        private static final PrintWriter OUT = new PrintWriter(new BufferedOutputStream(System.out));

        public static int nextInt() throws IOException {
            ST.nextToken();
            return (int) ST.nval;
        }

        public static long nextLong() throws IOException {
            ST.nextToken();
            return (long) ST.nval;
        }

        public static double nextDouble() throws IOException {
            ST.nextToken();
            return ST.nval;
        }

        /**
         * 不推荐st.sval读取字符串的方法。st.sval方法只能读取字母，不能读取数字与特殊字符
         * 推荐使用此方法
         */
        public static String nextLine() throws IOException {
            return BR.readLine();
        }

        public static void print(Object obj) {
            OUT.print(obj);
            OUT.flush();
        }

        public static void println(Object obj) {
            OUT.println(obj);
            OUT.flush();
        }
    }
}"
59,C,Java,61797217,2023-04-07 20:06:54,牛客829798037号,运行超时,"

import java.util.HashSet;
import java.util.Scanner;

public class Main {
    static char[][] num;
    static int n,m,res=0;
    static int[][]step={{1,0},{0,1},{-1,0},{0,-1}};
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt(); m = sc.nextInt();
        num = new char[n + 1][m + 1];
        for (int i = 1; i <= n; i++) {
            String temp=sc.next();
            for (int j = 1; j <= m; j++) {
                num[i][j] = temp.charAt(j-1);
            }
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<=m;j++){
                if(num[i][j]=='@'){
                    bfs(i,j);
                    break;
                }
            }
        }
        System.out.println(res);
    }
    public static void bfs(int i, int j){
        if(num[i][j]=='1'||num[i][j]=='#'){
            return;
        }
        if(num[i][j]=='!'){
            res++;
        }
        num[i][j]='1';
        for(int q=0;q<=3;q++){
            int a=i+step[q][0],b=j+step[q][1];
            if(a>=1&&a<=n&&b>=1&&b<=m){
                bfs(a,b);
            }
        }
    }
}
"
60,C,Java,61797285,2023-04-07 20:07:30,牛客829798037号,运行超时,"

import java.util.HashSet;
import java.util.Scanner;

public class Main {
    static char[][] num;
    static int n,m,res=0;
    static int[][]step={{1,0},{0,1},{-1,0},{0,-1}};
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt(); m = sc.nextInt();
        num = new char[n + 1][m + 1];
        for (int i = 1; i <= n; i++) {
            String temp=sc.next();
            for (int j = 1; j <= m; j++) {
                num[i][j] = temp.charAt(j-1);
            }
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<=m;j++){
                if(num[i][j]=='@'){
                    bfs(i,j);
                    break;
                }
            }
        }
        System.out.println(res);
    }
    public static void bfs(int i, int j){
        if(num[i][j]=='1'||num[i][j]=='#'){
            return;
        }
        if(num[i][j]=='!'){
            res++;
        }
        num[i][j]='1';
        for(int q=0;q<=3;q++){
            int a=i+step[q][0],b=j+step[q][1];
            if(a>=1&&a<=n&&b>=1&&b<=m){
                bfs(a,b);
            }
        }
    }
}
"
61,C,Java,61797336,2023-04-07 20:07:56,232132323,答案正确,"import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        char [][] a;
        boolean [][] flag;
        int n,m;

        int count = 0;
        boolean check(int c,int b){
            if (c >= 0 && c < n && b >= 0 && b < m && !flag[c][b] && a[c][b] != '#')
                return true;
            return false;
        }
        int [][] move = {{0,1},{1,0},{-1,0},{0,-1}};
        void dfs(int x,int y){
            flag[x][y] = true;
            if (a[x][y] == '!')
                count++;
            for (int i = 0; i < 4; i++) {
                int xx = x + move[i][0];
                int yy = y + move[i][1];
                if (check(xx,yy))
                    dfs(xx,yy);
            }

        }
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            n = in.nextInt();
            m = in.nextInt();
            a = new char[n][m];
            flag = new boolean[n][m];
            int x = 0;
            int y = 0;
            for (int i = 0; i < n; i++) {
                String s = in.next();
                a[i] = s.toCharArray();
                if (s.contains(""@"")){
                    x = i;
                    y = s.indexOf(""@"");
                }
            }
            dfs(x,y);
            out.println(count);
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }

    }
}"
62,C,Java,61797467,2023-04-07 20:08:57,牛客595843183号,运行超时,"import java.util.*;
import java.io.*;

public class Main {
    
    private static final int[][] dirs = {{-1, 0}, {1, 0}, {0, -1}, {0, 1}};

    public static void main(String[] args) throws IOException{
        int n = FastReadWriteUtil.nextInt();
        int m = FastReadWriteUtil.nextInt();
        char[][] mapArr = new char[n][m];
        
        int r = 0;
        int c = 0;
        for (int i = 0; i < n; i++) {
            String s = FastReadWriteUtil.nextLine();
            for (int j = 0; j < m; j++) {
                mapArr[i][j] = s.charAt(j);
                if (mapArr[i][j] == '@') {
                    r = i;
                    c = j;
                }
            }
        }


        int ans = getAns(mapArr, c, r);
        System.out.println(ans);


    }

    public static int getAns(char[][] mapArr, int row, int col) {
        int ans = 0;
        Deque<Node> charQueue = new ArrayDeque<>();
        Node node1 = new Node(row, col);
        charQueue.addLast(node1);
        while (!charQueue.isEmpty()) {
            Node node = charQueue.pollFirst();
            int x = node.x;
            int y = node.y;
            if(mapArr[x][y] == '!') {
                ans++;
            }
            mapArr[x][y] = '-';
            for (int i = 0; i < dirs.length; i++) {
                int newX = x + dirs[i][0];
                int newY = y + dirs[i][1];
                if (newX >= 0 && newX < mapArr.length && newY >= 0 && newY < mapArr[0].length) {
                    if (mapArr[newX][newY] != '#' && mapArr[newX][newY] != '-') {
                        Node node2 = new Node(newX, newY);
                        charQueue.add(node2);
                    }
                }
            }
        }
        return ans;
    }

    static class Node {
        public int x;
        public int y;
        public Node(){}
        public Node(int x, int y) {
            this.x = x;
            this.y = y;
        }
    }
    
    
    static class FastReadWriteUtil {

        private static final BufferedReader BR = new BufferedReader(new InputStreamReader(System.in));
        private static final StreamTokenizer ST = new StreamTokenizer(BR);
        private static final PrintWriter OUT = new PrintWriter(new BufferedOutputStream(System.out));

        public static int nextInt() throws IOException {
            ST.nextToken();
            return (int) ST.nval;
        }

        public static long nextLong() throws IOException {
            ST.nextToken();
            return (long) ST.nval;
        }

        public static double nextDouble() throws IOException {
            ST.nextToken();
            return ST.nval;
        }

        /**
         * 不推荐st.sval读取字符串的方法。st.sval方法只能读取字母，不能读取数字与特殊字符
         * 推荐使用此方法
         */
        public static String nextLine() throws IOException {
            return BR.readLine();
        }

        public static void print(Object obj) {
            OUT.print(obj);
            OUT.flush();
        }

        public static void println(Object obj) {
            OUT.println(obj);
            OUT.flush();
        }
    }
}"
63,C,Java,61797642,2023-04-07 20:10:27,牛客225545702号,答案错误,"
import java.util.*;
public class Main {
    static int n,m;
    static int[][] dist;
    static int[][] cnt;
    static char[][] map;
    static int[] dx = {0,0,-1,1};
    static int[] dy = {-1,1,0,0};
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt();
        m = sc.nextInt();
        dist = new int[n][m];
        cnt = new int[n][m];
        map = new char[n][m];
        int sx=0,sy=0;
        for(int i=0;i<n;i++){
            String s = sc.next();
            for(int j=0;j<m;j++){
                map[i][j] = s.charAt(j);
                if(map[i][j]=='@'){
                    sx=i;
                    sy=j;
                }
            }
        }
        bfs(sx,sy);
        int ans=0;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(map[i][j]=='!'){
                    ans=Math.max(ans,cnt[i][j]);
                }
            }
        }
        System.out.println(++ans);
    }
    public static void bfs(int sx,int sy){
        Queue<Integer> qx = new LinkedList<>();
        Queue<Integer> qy = new LinkedList<>();
        qx.offer(sx);
        qy.offer(sy);
        dist[sx][sy]=0;
        cnt[sx][sy]=0;
        while(!qx.isEmpty()){
            int x=qx.poll();
            int y=qy.poll();
            for(int i=0;i<4;i++){
                int nx=x+dx[i];
                int ny=y+dy[i];
                if(nx>=0&&nx<n&&ny>=0&&ny<m&&map[nx][ny]!='#'&&dist[nx][ny]==0){
                    dist[nx][ny]=dist[x][y]+1;
                    cnt[nx][ny]=cnt[x][y]+(map[nx][ny]=='!'?1:0);
                    qx.offer(nx);
                    qy.offer(ny);
                }
            }
        }
    }
}"
64,C,Java,61797674,2023-04-07 20:10:47,牛客815947679号,答案错误,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.nio.channels.AcceptPendingException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Queue;
import java.util.Scanner;
import java.util.Stack;

public class Main {
 public static void main(String[] args) throws IOException, ParseException {
  BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
  String[] temp = br.readLine().split("" "");
  int n = Integer.parseInt(temp[0]);
  int m = Integer.parseInt(temp[1]);
  char[][] num = new char[n][m];
  for (int i = 0; i < n; i++) {
   String t = br.readLine();
   for (int j = 0; j < m; j++) {
    if (t.charAt(j) == '!' || t.charAt(j) == '.'||t.charAt(j) == '@') {
     num[i][j] = '1';
    }
    if (t.charAt(j) == '#' ) {
     num[i][j] = '0';
    }
   }
  }
  System.out.println(numIslands(num));
 }

 public static int numIslands(char[][] grid) {
  if (grid == null || grid.length == 0)
   return 0;
  int res = 0;
  for (int i = 0; i < grid.length; i++) {
   for (int j = 0; j < grid[0].length; j++) {
    if (grid[i][j] == '1') {
     res++;
     dfs(grid, i, j);
    }
   }
  }
  return res;
 }

 public static void dfs(char[][] grid, int i, int j) {
  if (i < 0 || i >= grid.length || j < 0 || j >= grid[0].length || grid[i][j] == '0') {
   return;
  }
  grid[i][j] = '0';
  dfs(grid, i + 1, j);
  dfs(grid, i - 1, j);
  dfs(grid, i, j + 1);
  dfs(grid, i, j - 1);
 }

}"
65,C,Java,61797881,2023-04-07 20:12:25,牛客595843183号,运行超时,"import java.util.*;
import java.io.*;

public class Main {
    
    private static final int[][] dirs = {{-1, 0}, {1, 0}, {0, -1}, {0, 1}};

    public static void main(String[] args) throws IOException{
        int n = FastReadWriteUtil.nextInt();
        int m = FastReadWriteUtil.nextInt();
        char[][] mapArr = new char[n][m];
        
        int r = 0;
        int c = 0;
        for (int i = 0; i < n; i++) {
            String s = FastReadWriteUtil.nextLine();
            for (int j = 0; j < m; j++) {
                mapArr[i][j] = s.charAt(j);
                if (mapArr[i][j] == '@') {
                    r = i;
                    c = j;
                }
            }
        }


        int ans = getAns(mapArr, r, c);
        System.out.println(ans);


    }

    public static int getAns(char[][] mapArr, int row, int col) {
        int ans = 0;
        Deque<Node> charQueue = new ArrayDeque<>();
        Node node1 = new Node(row, col);
        charQueue.addLast(node1);
        while (!charQueue.isEmpty()) {
            Node node = charQueue.pollFirst();
            int x = node.x;
            int y = node.y;
            if(mapArr[x][y] == '!') {
                ans++;
            }
            mapArr[x][y] = '-';
            for (int i = 0; i < dirs.length; i++) {
                int newX = x + dirs[i][0];
                int newY = y + dirs[i][1];
                if (newX >= 0 && newX < mapArr.length && newY >= 0 && newY < mapArr[0].length) {
                    if (mapArr[newX][newY] != '#' && mapArr[newX][newY] != '-') {
                        Node node2 = new Node(newX, newY);
                        charQueue.add(node2);
                    }
                }
            }
        }
        return ans;
    }

    static class Node {
        public int x;
        public int y;
        public Node(){}
        public Node(int x, int y) {
            this.x = x;
            this.y = y;
        }
    }
    
    
    static class FastReadWriteUtil {

        private static final BufferedReader BR = new BufferedReader(new InputStreamReader(System.in));
        private static final StreamTokenizer ST = new StreamTokenizer(BR);
        private static final PrintWriter OUT = new PrintWriter(new BufferedOutputStream(System.out));

        public static int nextInt() throws IOException {
            ST.nextToken();
            return (int) ST.nval;
        }

        public static long nextLong() throws IOException {
            ST.nextToken();
            return (long) ST.nval;
        }

        public static double nextDouble() throws IOException {
            ST.nextToken();
            return ST.nval;
        }

        /**
         * 不推荐st.sval读取字符串的方法。st.sval方法只能读取字母，不能读取数字与特殊字符
         * 推荐使用此方法
         */
        public static String nextLine() throws IOException {
            return BR.readLine();
        }

        public static void print(Object obj) {
            OUT.print(obj);
            OUT.flush();
        }

        public static void println(Object obj) {
            OUT.println(obj);
            OUT.flush();
        }
    }
}"
66,C,Java,61798478,2023-04-07 20:17:08,KY.cj,答案正确,"
import java.io.*;
import java.util.*;

public class Main {
    static int n,m;
    static StreamTokenizer st=new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
    public static void main(String[] args) throws IOException {
        Scanner sc=new Scanner(System.in);
        n=sc.nextInt();
        m=sc.nextInt();
        char a[][]=new char[n+2][m+2];
        boolean c[][]=new boolean[n+2][m+2];
        int x=0,y=0;
        Queue<zb>queue=new LinkedList<>();
        for (int i = 1; i <= n; i++) {
            Arrays.fill(c[i],false);
            String b=sc.next();
            for (int j = 1; j <=m ; j++) {
                a[i][j]=b.charAt(j-1);
                if(a[i][j]=='@'){
                    x=i;
                    y=j;
                    queue.offer(new zb(x,y));
                    c[i][j]=true;
                }
                if(a[i][j]=='#'){
                    c[i][j]=true;
                }
            }

        }
//        for (int i = 1; i <= n; i++) {
//            for (int j = 1; j <=m ; j++) System.out.print(c[i][j]+"" "");
//            System.out.println();
//        }
        int ans=0,nx,ny;
        int zx[]={1,-1,0,0};
        int zy[]={0,0,-1,1};
        int T=100;
        while (!queue.isEmpty()){
            zb b=queue.poll();
            int newx=b.x;
            int newy=b.y;
            for (int i = 0; i < 4; i++) {
                nx=newx+zx[i];
                ny=newy+zy[i];
                if(nx>=1&&nx<=n&&ny>=1&&ny<=m){
                    if(!c[nx][ny]){
                        queue.offer(new zb(nx,ny));
                        c[nx][ny]=true;
                        if(a[nx][ny]=='!')ans++;
                    }

                }
            }
//            for (zb i:queue) {
//                System.out.print(""(""+i.x+"" ""+i.y+"")---"");
//            }
//            System.out.println();
        }
        System.out.println(ans);
//        for (int i = 1; i <= n; i++) {
//            for (int j = 1; j <=m ; j++) System.out.print(c[i][j]+"" "");
//            System.out.println();
//        }
    }
}
class zb{
    int x,y;
    zb(int a,int b){
        this.x=a;
        this.y=b;
    }
}
"
67,C,Java,61798656,2023-04-07 20:18:33,凯撒Katharsis,答案正确,"import java.io.*;
import java.util.*;

public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

    public static void main(String[] args) throws Exception {
        String str[] = br.readLine().split("" "");

        int n = Integer.parseInt(str[0]), m = Integer.parseInt(str[1]);

        int ans = 0;
        char g[][] = new char[n][m + 1];
        boolean st[][] = new boolean[n][m + 1];

        int start[] = new int[]{0, 0};
        for(int i = 0; i < n; i ++ ) {
            String s = br.readLine();
            for(int j = 0; j < m; j ++ ) {
                g[i][j] = s.charAt(j);
                if(g[i][j] == '@') start = new int[]{i, j};
            }
        }

        Queue<int[]> q = new LinkedList<>();
        q.add(start);

        while(!q.isEmpty()) {
            int t[] = q.poll();

            if(st[t[0]][t[1]]) continue;
            st[t[0]][t[1]] = true;
            if(g[t[0]][t[1]] == '!') ans ++ ;

            int dx[] = new int[]{0, 1, 0, -1}, dy[] = new int[]{1, 0, -1, 0};
            for(int i = 0; i < 4; i ++ ) {
                int x = dx[i] + t[0], y = dy[i] + t[1];
                if(x >= 0 && x < n && y >= 0 && y < m && g[x][y] != '#' && !st[x][y]) {
                    q.add(new int[]{x, y});
                }
            }
        }

        bw.write(ans + ""\n"");
        bw.flush();
    }
}"
68,C,Java,61799095,2023-04-07 20:22:14,栗子ing,答案正确,"import java.util.*;

public class Main{
    static int N = 1010;
    static int n, m, res, sx, sy;
    static char[][] g = new char[N][N];
    static boolean[][] st = new boolean[N][N];
    static int[] dx = {-1, 0, 1, 0};
    static int[] dy = {0, 1, 0 ,-1};
    public static void bfs(){
        Queue<PII> q = new LinkedList<>();
        q.add(new PII(sx, sy));
        st[sx][sy] = true;
        while (q.size() != 0){
            PII t = q.poll();
            int x = t.x, y =  t.y;
            for (int i = 0; i < 4; i ++){
                int a = x + dx[i];
                int b = y + dy[i];
                if (a < 1 || a > n || b < 1 || b > m) continue;
                if (st[a][b]) continue;
                if (g[a][b] == '#') continue;
                if (g[a][b] == '!') res ++;
                    
                q.add(new PII(a, b));
                st[a][b] = true;
            }
        }
    }
    
    public static void main(String[] args){
        Scanner scan = new Scanner(System.in);
        n = scan.nextInt();
        m = scan.nextInt();
        for (int i = 1; i <= n; i ++){
            String str = scan.next();
            for(int j = 1; j <= m; j ++){
                g[i][j] = str.charAt(j - 1);
                if (g[i][j] == '@'){
                    sx = i;
                    sy = j;
                }
            }
        }
        
        bfs();
        System.out.println(res);
    }
}
class PII {
    int x, y;
    public PII(int x, int y){
        this.x = x;
        this.y = y;
    }
}"
69,C,Java,61799560,2023-04-07 20:25:58,智破云霄,执行出错,"import java.util.*;
import java.io.*;
public class Main {
	static long gcd(long a,long b)
	{
		return b==0?a:gcd(b,a%b);
	}
	static int dx[]= {0,0,1,-1};
	static int dy[]= {1,-1,0,0};
	static int ans;
	static void dfs(char[][] g,int i,int j,int n,int m)
	{
		for(int p = 0; p< 4; p++)
		{
			int x = i+dx[p];
			int y = j+dy[p];
			if(x >= 0 && y>= 0&&x<n&&y<m&&g[x][y]!='#')
			{
				if(g[x][y]=='!')
					ans ++;
				//System.out.println(ans);
				g[x][y]='#';
				dfs(g,x,y,n,m);
			}
			
			
			
		}
	}
public static void main(String[] args) {
	
 InputReader in = new InputReader(System.in);
PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
		int n = in.nextInt();
		int m  = in.nextInt();
		char[][] g = new char[n+1][m+1];
		for(int i = 0; i< n;i ++)
			g[i] = in.next().toCharArray();
		int f = 0;
		for(int i = 1;i <= n;i ++)
			for(int j = 1;j <= m;j ++)
			{
				if(g[i][j] == '@')
					{
						 ans = 0;
						f = 1;
						dfs(g,i,j,n,m);
						out.println(ans);
						break;
					}
				if(f == 1)
					break;
			}
			
			
		
			
			
			
			
			
			
			
			
		

out.flush();

	
}
	
	
	
	
	



	
}





class InputReader {
    private final BufferedReader buf;
    private StringTokenizer tkl;

    public InputReader(InputStream is) {
        buf = new BufferedReader(new InputStreamReader(is));
    }

    public boolean hasNext() {
        try {
            while (tkl == null || !tkl.hasMoreElements()) tkl = new StringTokenizer(buf.readLine());
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public String next() {
        return hasNext() ? tkl.nextToken() : null;
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }
}
"
70,C,Java,61799613,2023-04-07 20:26:21,牛客595843183号,运行超时,"import java.util.*;
import java.io.*;

public class Main {
    
    private static final int[][] dirs = {{-1, 0}, {1, 0}, {0, -1}, {0, 1}};

    public static void main(String[] args) throws IOException{
        int n = FastReadWriteUtil.nextInt();
        int m = FastReadWriteUtil.nextInt();
        char[][] mapArr = new char[n][m];

        int r = 0;
        int c = 0;
        for (int i = 0; i < n; i++) {
            String s = FastReadWriteUtil.nextLine();
            for (int j = 0; j < m; j++) {
                mapArr[i][j] = s.charAt(j);
                if (mapArr[i][j] == '@') {
                    r = i;
                    c = j;
                }
            }
        }


        int ans = getAns(mapArr, r, c);
        System.out.println(ans);


    }

    public static int getAns(char[][] mapArr, int row, int col) {
        int ans = 0;
        Deque<Node> charQueue = new ArrayDeque<>();
        Node node1 = new Node(row, col);
        charQueue.addLast(node1);
        while (!charQueue.isEmpty()) {
            Node node = charQueue.pollFirst();
            int x = node.x;
            int y = node.y;
            if(mapArr[x][y] == '!') {
                ans++;
            }
            mapArr[x][y] = '-';
            for (int i = 0; i < dirs.length; i++) {
                int newX = x + dirs[i][0];
                int newY = y + dirs[i][1];
                if (newX >= 0 && newX < mapArr.length && newY >= 0 && newY < mapArr[0].length) {
                    if (mapArr[newX][newY] != '#' && mapArr[newX][newY] != '-') {
                        Node node2 = new Node(newX, newY);
                        charQueue.add(node2);
                    }
                }
            }
        }
        return ans;
    }

    static class Node {
        public int x;
        public int y;
        public Node(){}
        public Node(int x, int y) {
            this.x = x;
            this.y = y;
        }
    }
    
    
    static class FastReadWriteUtil {

        private static final BufferedReader BR = new BufferedReader(new InputStreamReader(System.in));
        private static final StreamTokenizer ST = new StreamTokenizer(BR);
        private static final PrintWriter OUT = new PrintWriter(new BufferedOutputStream(System.out));

        public static int nextInt() throws IOException {
            ST.nextToken();
            return (int) ST.nval;
        }

        public static long nextLong() throws IOException {
            ST.nextToken();
            return (long) ST.nval;
        }

        public static double nextDouble() throws IOException {
            ST.nextToken();
            return ST.nval;
        }

        /**
         * 不推荐st.sval读取字符串的方法。st.sval方法只能读取字母，不能读取数字与特殊字符
         * 推荐使用此方法
         */
        public static String nextLine() throws IOException {
            return BR.readLine();
        }

        public static void print(Object obj) {
            OUT.print(obj);
            OUT.flush();
        }

        public static void println(Object obj) {
            OUT.println(obj);
            OUT.flush();
        }
    }
}"
71,C,Java,61799656,2023-04-07 20:26:38,牛客815947679号,答案错误,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.nio.channels.AcceptPendingException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Queue;
import java.util.Scanner;
import java.util.Stack;

public class Main {
	static int x;
	static int y;
	static int n;
	static int m;
	static int ans = 0;
	static int temp1 = 0;

	public static void main(String[] args) throws IOException, ParseException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		String[] temp = br.readLine().split("" "");
		n = Integer.parseInt(temp[0]);
		m = Integer.parseInt(temp[1]);
		char[][] num = new char[n][m];

		for (int i = 0; i < n; i++) {
			String t = br.readLine();
			for (int j = 0; j < m; j++) {
				if (t.charAt(j) == '@') {
					num[i][j] = '1';
					x = i;
					y = j;
				}
				if (t.charAt(j) == '.') {
					num[i][j] = '1';

				}
				if (t.charAt(j) == '!') {
					num[i][j] = '1';
					ans++;
				}
				if (t.charAt(j) == '#') {
					num[i][j] = '0';
				}
			}
		}
		System.out.println(numIslands(num));
	}

	public static int numIslands(char[][] grid) {
		if (grid == null || grid.length == 0)
			return 0;

		dfs(grid, x, y);
		for (int z = 0; z < n; z++) {
			for (int i = 0; i < m; i++) {
				if (grid[z][i] == '1') {
					ans--;
				}
			}
		}
		return ans;
	}

	public static void dfs(char[][] grid, int i, int j) {
		if (i < 0 || i >= grid.length || j < 0 || j >= grid[0].length || grid[i][j] == '0') {
			return;
		}
		grid[i][j] = '0';
		dfs(grid, i + 1, j);
		dfs(grid, i - 1, j);
		dfs(grid, i, j + 1);
		dfs(grid, i, j - 1);
	}

}
"
72,C,Java,61799729,2023-04-07 20:27:14,智破云霄,答案正确,"import java.util.*;
import java.io.*;
public class Main {
	static long gcd(long a,long b)
	{
		return b==0?a:gcd(b,a%b);
	}
	static int dx[]= {0,0,1,-1};
	static int dy[]= {1,-1,0,0};
	static int ans;
	static void dfs(char[][] g,int i,int j,int n,int m)
	{
		for(int p = 0; p< 4; p++)
		{
			int x = i+dx[p];
			int y = j+dy[p];
			if(x >= 0 && y>= 0&&x<n&&y<m&&g[x][y]!='#')
			{
				if(g[x][y]=='!')
					ans ++;
				//System.out.println(ans);
				g[x][y]='#';
				dfs(g,x,y,n,m);
			}
			
			
			
		}
	}
public static void main(String[] args) {
	
 InputReader in = new InputReader(System.in);
PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
		int n = in.nextInt();
		int m  = in.nextInt();
		char[][] g = new char[n][m];
		for(int i = 0; i< n;i ++)
			g[i] = in.next().toCharArray();
		int f = 0;
		for(int i = 0;i < n;i ++)
			for(int j = 0;j < m;j ++)
			{
				if(g[i][j] == '@')
					{
						 ans = 0;
						f = 1;
						dfs(g,i,j,n,m);
						out.println(ans);
						break;
					}
				if(f == 1)
					break;
			}
			
			
		
			
			
			
			
			
			
			
			
		

out.flush();

	
}
	
	
	
	
	



	
}





class InputReader {
    private final BufferedReader buf;
    private StringTokenizer tkl;

    public InputReader(InputStream is) {
        buf = new BufferedReader(new InputStreamReader(is));
    }

    public boolean hasNext() {
        try {
            while (tkl == null || !tkl.hasMoreElements()) tkl = new StringTokenizer(buf.readLine());
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public String next() {
        return hasNext() ? tkl.nextToken() : null;
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }
}
"
73,C,Java,61799798,2023-04-07 20:27:56,Ulrica_Ricky_Morhaime,答案正确,"import java.util.Scanner;

public class Main {
    static int count, n, m;
    static char[][] a;
    
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        count = 0;
        
        n = Integer.parseInt(sc.next());
        m = Integer.parseInt(sc.next());
        
        a = new char[n][m];
        
        int x = 0;
        int y = 0;
        
        for (int i = 0; i < n; i++) {
            String s = sc.next();
            for (int j = 0; j < m; j++) {
                a[i][j] = s.charAt(j);
                if (a[i][j] == '@') {
                    x = i;
                    y = j;
                }
            }
        }
        
        flame(x,y);
        
        System.out.println(count);
        
        sc.close();
    }
    
    static void flame(int x, int y) {
        if (x == -1 || y == -1 || x == n || y == m) {
            return;
        }
        
        if (a[x][y] == '-') {
            return;
        }
        
        if (a[x][y] == '!') {
            count++;
            a[x][y] = '-';
        } else if (a[x][y] == '#') {
            return;
        } else {
            a[x][y] = '-';
        }
        
        if (x == n-1) {
            if (y != 0) {
                flame(x, y + 1);
                flame(x, y-1);
                flame(x-1, y);
            } else {
                flame(x, y+1);
                flame(x-1, y);
            }
        } else if (x == 0) {
            if (y != 0) {
                flame(x+1, y);
                flame(x, y-1);
                flame(x, y+1);
            } else {
                flame(x+1,y);
                flame(x,y+1);
            }
        } else {
            flame(x,y+1);
            flame(x,y-1);
            flame(x-1,y);
            flame(x+1,y);
        }
        
    }
}"
74,C,Java,61799847,2023-04-07 20:28:19,牛客815947679号,答案错误,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.nio.channels.AcceptPendingException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Queue;
import java.util.Scanner;
import java.util.Stack;

public class Main {
	static int x;
	static int y;
	static int n;
	static int m;
	static int ans = 0;
	static int temp1 = 0;

	public static void main(String[] args) throws IOException, ParseException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		String[] temp = br.readLine().split("" "");
		n = Integer.parseInt(temp[0]);
		m = Integer.parseInt(temp[1]);
		char[][] num = new char[n][m];

		for (int i = 0; i < n; i++) {
			String t = br.readLine();
			for (int j = 0; j < m; j++) {
				if (t.charAt(j) == '@') {
					num[i][j] = '3';
					x = i;
					y = j;
				}
				if (t.charAt(j) == '.') {
					num[i][j] = '1';

				}
				if (t.charAt(j) == '!') {
					num[i][j] = '1';
					ans++;
				}
				if (t.charAt(j) == '#') {
					num[i][j] = '0';
				}
			}
		}
		System.out.println(numIslands(num));
	}

	public static int numIslands(char[][] grid) {
		if (grid == null || grid.length == 0)
			return 0;

		dfs(grid, x, y);
		for (int z = 0; z < n; z++) {
			for (int i = 0; i < m; i++) {
				if (grid[z][i] == '1') {
					ans--;
				}
			}
		}
		return ans;
	}

	public static void dfs(char[][] grid, int i, int j) {
		if (i < 0 || i >= grid.length || j < 0 || j >= grid[0].length || grid[i][j] == '0') {
			return;
		}
		grid[i][j] = '0';
		dfs(grid, i + 1, j);
		dfs(grid, i - 1, j);
		dfs(grid, i, j + 1);
		dfs(grid, i, j - 1);
	}

}
"
75,C,Java,61800110,2023-04-07 20:30:34,huvz,答案正确,"

import java.io.*;
import java.math.BigInteger;
import java.util.*;

public class Main {
    //static Read in = new Read();

    //static AWriter out = new AWriter();
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    static Scanner in = new Scanner(System.in);

    public static boolean[]  prime= new boolean[4];
    public static List<Integer> list = new ArrayList<>();
    static  int n,m;
    static int ix,iy;
    static  int cnt=0;
     static char[][] a;
    static boolean[][] tur;
    public static void solve() throws IOException {


        String[] str  = in.nextLine().split("" "");
        n =Integer.parseInt(str[0]);
        m =Integer.parseInt(str[1]);
        a= new char[n+2][m+2];
        tur = new boolean[n+2][m+2];
        for(int i=0;i<n;i++)
        {
                a[i]=in.nextLine().toCharArray();
        }
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(a[i][j]=='@'){ix=i;iy=j;}
            }
        }
        find(ix,iy);
        System.out.println(cnt);

    }
    static int[] x1 ={-1,1,0,0};
    static int[] y1={0,0,1,-1};
    public static void find(int x,int y){

        tur[x][y]=true;
            //如果遇到草 烧掉+1
        if(a[x][y]=='!'){
                cnt++;
            }
        for (int i=0;i<4;i++)
        {
            int xx = x+x1[i];
            int yy = y+y1[i];

            if(xx>=0 && xx<n && yy>=0 && yy<m && !tur[xx][yy])
            {
                if(a[xx][yy]!='#'){
                    find(xx,yy);
                }

            }
        }
    }


    public static boolean isPrime(int n){
        while(n>0)
        {
            int t = n%10;

            if(prime[t])return false;
            n/=10;
        }
        return true;
    }

    public static void shai(int n){
        for(int i=2;i<=n;i++)
        {
            if(!prime[i])
            {
                list.add(i);
                for(int j=i+i;j<n;j+=i){
                    prime[j]=true;
                }
            }
        }

    }
    public static void main(String[] arg) throws Exception {
        int t=1;

        //Scanner in = new Scanner(System.in);
        //t = in.nextInt();
        while(t-->0)
        {
            solve();
        }

    }

    static class Read{
        static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        static StreamTokenizer st = new StreamTokenizer(br);
        static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));
        public int nextInt() throws IOException {
            st.nextToken();
            return (int) st.nval;
        }
        public Long nextLong() throws IOException {
            st.nextToken();
            return (long) st.nval;
        }
        public String next() throws IOException{
            st.nextToken();
            return st.sval;
        }
        // 若需要nextDouble等方法，请自行调用Double.parseDouble包装
    }
    static class AWriter implements Closeable {
        private BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(System.out));
        public void print(Object object) throws IOException {
            writer.write(object.toString());
        }
        public void println(Object object) throws IOException {
            writer.write(object.toString());
            writer.write(System.lineSeparator());
        }
        @Override
        public void close() throws IOException {
            writer.close();
        }
    }

}"
76,C,Java,61800673,2023-04-07 20:35:12,ecjtu20-软工6-刘腾,答案正确,"import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.Queue;

public class Main {
	static BufferedReader bReader=new BufferedReader(new InputStreamReader(System.in));
	static BufferedWriter bWriter=new BufferedWriter(new OutputStreamWriter(System.out));
	static int ans=0;
	static boolean[][] status;
	static char maps[][];
	static int[] dx= {0,1,0,-1,0};
	static int[] dy= {0,0,-1,0,1};
	static Queue<Node> queue=new LinkedList<>();
	static class Node{
		int x;
		int y;
		public Node(int x,int y) {
			this.x=x;
			this.y=y;
			status[x][y]=true;
		}
	}
	public static void main(String[] args) throws IOException {
		
		String inp=bReader.readLine();
		String[] inpArr=inp.split("" "");
		int n=Integer.valueOf(inpArr[0]);
		int m=Integer.valueOf(inpArr[1]);
		
		maps=new char[n+1][m+1];
		status=new boolean[n+1][m+1];
		
		for(int i=1;i<=n;i++) {
			// 读入一行
			inp=bReader.readLine();
			String[] inpR=inp.split("""");
			for(int j=1;j<=m;j++) {
				maps[i][j]=inpR[j-1].charAt(0);
				if(maps[i][j]=='@') queue.add(new Node(i, j));// 记录小弟的位置
			}
		}
		
		// 广度遍历
		
		bfs();
		
		System.out.println(ans);
		bReader.close();
		bWriter.flush();
		bWriter.close();
	}
	
	
	public static void bfs() {
		// 将第一个点加入队列
		while(!queue.isEmpty()) {
			// 往下走
			
			int size=queue.size();
			
			while(size-- >0) {
				Node chiNode=queue.poll();
				// 上下左右行走
				for(int i=1;i<=4;i++) {
					int x=chiNode.x+dx[i];
					int y=chiNode.y+dy[i];
					
					if(x>=1&&y>=1&&x<=(maps.length-1)&&y<=(maps.length-1)) {
						if ((!status[x][y])&&maps[x][y]!='#') {
							if(maps[x][y]=='!') ans++;
							queue.add(new Node(x, y));
						}
					}
					
				}
			}
			
		}
		
	}
	
	
	
	
	
	
	
	
}
"
77,C,Java,61800718,2023-04-07 20:35:38,Tdexi,运行超时,"import java.util.*;

public class Main{ 
    public static void main(String[] args) {
        class Point{
            public int x;
            public int y;
            public Point(int i, int j) {
                x = i;
                y = j;
            }
        } 
        Scanner in = new Scanner(System.in);
        String[] firstLine = in.nextLine().split("" "");
        int n = Integer.parseInt(firstLine[0]);
        int m = Integer.parseInt(firstLine[1]);
        int [][] flags = new int[n][m];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                flags[i][j] = 0;
            }
        }
        
        char[][] matrix = new char[n][m];
        int count = 0;
        while (in.hasNextLine()) {
            matrix[count] = in.nextLine().toCharArray();
            count++;
        }
        int x = 0, y = 0;
        for (int i = 0; i < n; i++) {
            for (int j  = 0; j < m; j++) {
                if (matrix[i][j] == '@') {
                    x = i;
                    y = j;
                }
            }
        }
        flags[x][y] = 1;
        LinkedList<Point> queue = new LinkedList<>();
        queue.offer(new Point(x,y));
        while (!queue.isEmpty()) {
            Point cur = queue.poll();
            flags[cur.x][cur.y] = 1;
            if (cur.x+1 < n && flags[cur.x+1][cur.y] == 0 && (matrix[cur.x+1][cur.y]=='.' || matrix[cur.x+1][cur.y] == '!')) {
                queue.offer(new Point(cur.x + 1, cur.y));
            }
            if (cur.y+1 < m && flags[cur.x][cur.y+1] == 0 && (matrix[cur.x][cur.y+1]=='.' || matrix[cur.x][cur.y+1] == '!')) {
                queue.offer(new Point(cur.x, cur.y + 1));
            }
            if (cur.x-1 >= 0 && flags[cur.x-1][cur.y] == 0 && (matrix[cur.x-1][cur.y]=='.' || matrix[cur.x-1][cur.y] == '!')) {
                queue.offer(new Point(cur.x - 1, cur.y));
            }
            if (cur.y-1 >= 0 &&flags[cur.x][cur.y-1] == 0 && (matrix[cur.x][cur.y-1]=='.' || matrix[cur.x][cur.y-1] == '!')) {
                queue.offer(new Point(cur.x, cur.y - 1));
            }
        }
        int result = 0;
        for (int i = 0; i < n; i++) {
            for (int j  = 0; j < m; j++) {
                if (matrix[i][j] == '!' && flags[i][j] == 1) {
                    result++;
                }
            }
        }
        System.out.println(result);
    }
}"
78,C,Java,61800790,2023-04-07 20:36:22,牛客815947679号,答案正确,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.nio.channels.AcceptPendingException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Queue;
import java.util.Scanner;
import java.util.Stack;

public class Main {
	static int x;
	static int y;
	static int n;
	static int m;
	static int ans = 0;
	static int temp1 = 0;

	public static void main(String[] args) throws IOException, ParseException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		String[] temp = br.readLine().split("" "");
		n = Integer.parseInt(temp[0]);
		m = Integer.parseInt(temp[1]);
		char[][] num = new char[n][m];

		for (int i = 0; i < n; i++) {
			String t = br.readLine();
			for (int j = 0; j < m; j++) {
				num[i][j] = t.charAt(j);
				if (t.charAt(j) == '@') {
					x = i;
					y = j;
					num[i][j] = '.';
				}
			}
		}
		System.out.println(numIslands(num));
	}

	public static int numIslands(char[][] grid) {
		if (grid == null || grid.length == 0)
			return 0;
		dfs(grid, x, y);
		return ans;
	}

	public static void dfs(char[][] grid, int i, int j) {
		if (i < 0 || i >= grid.length || j < 0 || j >= grid[0].length || grid[i][j] == '#') {
			return;
		}
		if (grid[i][j] == '!') {
			ans++;
		}
		grid[i][j] = '#';
		dfs(grid, i + 1, j);
		dfs(grid, i - 1, j);
		dfs(grid, i, j + 1);
		dfs(grid, i, j - 1);
		
	}

}
"
79,C,Java,61800816,2023-04-07 20:36:35,xiaofeiwang,答案正确,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.nio.channels.AcceptPendingException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Queue;
import java.util.Scanner;
import java.util.Stack;

public class Main {
	static int x;
	static int y;
	static int n;
	static int m;
	static int ans = 0;
	static int temp1 = 0;

	public static void main(String[] args) throws IOException, ParseException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		String[] temp = br.readLine().split("" "");
		n = Integer.parseInt(temp[0]);
		m = Integer.parseInt(temp[1]);
		char[][] num = new char[n][m];

		for (int i = 0; i < n; i++) {
			String t = br.readLine();
			for (int j = 0; j < m; j++) {
				num[i][j] = t.charAt(j);
				if (t.charAt(j) == '@') {
					x = i;
					y = j;
					num[i][j] = '.';
				}
			}
		}
		System.out.println(numIslands(num));
	}

	public static int numIslands(char[][] grid) {
		if (grid == null || grid.length == 0)
			return 0;
		dfs(grid, x, y);
		return ans;
	}

	public static void dfs(char[][] grid, int i, int j) {
		if (i < 0 || i >= grid.length || j < 0 || j >= grid[0].length || grid[i][j] == '#') {
			return;
		}
		if (grid[i][j] == '!') {
			ans++;
		}
		grid[i][j] = '#';
		dfs(grid, i + 1, j);
		dfs(grid, i - 1, j);
		dfs(grid, i, j + 1);
		dfs(grid, i, j - 1);
		
	}

}
"
80,C,Java,61800943,2023-04-07 20:37:49,牛客829798037号,运行超时,"

import java.util.HashSet;
import java.util.Scanner;

public class Main {
    static char[][] num;
    static int n,m,res=0;
    static int[][]step={{1,0},{0,1},{-1,0},{0,-1}};
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt(); m = sc.nextInt();
        num = new char[n + 1][m + 1];
        for (int i = 1; i <= n; i++) {
            String temp=sc.next();
            for (int j = 1; j <= m; j++) {
                num[i][j] = temp.charAt(j-1);
            }
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<=m;j++){
                if(num[i][j]=='@'){
                    bfs(i,j);
                    break;
                }
            }
        }
        System.out.println(res);
    }
    public static void bfs(int i, int j){
        if(num[i][j]=='!'){
            res++;
        }
        num[i][j]='1';
        for(int q=0;q<=3;q++){
            int a=i+step[q][0],b=j+step[q][1];
            if(a>=1&&a<=n&&b>=1&&b<=m&&num[a][b]!='1'&&num[a][b]!='#'){
                bfs(a,b);
            }
        }
    }
}
"
81,C,Java,61801320,2023-04-07 20:41:10,牛客829798037号,运行超时,"
import java.util.Scanner;

public class Main{
    static char[][] num;
    static int n,m,res=0;
    static int[][]step={{1,0},{0,1},{-1,0},{0,-1}};
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt(); m = sc.nextInt();
        num = new char[n + 1][m + 1];
        for (int i = 1; i <= n; i++) {
            String temp=sc.next();
            for (int j = 1; j <= m; j++) {
                num[i][j] = temp.charAt(j-1);
            }
        }
        boolean flag=false;
        for(int i=1;i<=n&&!flag;i++){
            for(int j=1;j<=m;j++){
                if(num[i][j]=='@'){
                    bfs(i,j);
                    flag=true;
                    break;
                }
            }
        }
        System.out.println(res);
    }
    public static void bfs(int i, int j){
        if(num[i][j]=='!'){
            res++;
        }
        num[i][j]='1';
        for(int q=0;q<=3;q++){
            int a=i+step[q][0],b=j+step[q][1];
            if(a>=1&&a<=n&&b>=1&&b<=m&&num[a][b]!='1'&&num[a][b]!='#'){
                bfs(a,b);
            }
        }
    }
}
"
82,C,Java,61801448,2023-04-07 20:42:24,牛客829798037号,运行超时,"
import java.util.Scanner;

public class Main{
    static char[][] num;
    static int n,m,res=0;
    static int[][]step={{1,0},{0,1},{-1,0},{0,-1}};
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt(); m = sc.nextInt();
        num = new char[n + 1][m + 1];
        for (int i = 1; i <= n; i++) {
            String temp=sc.next();
            for (int j = 1; j <= m; j++) {
                num[i][j] = temp.charAt(j-1);
            }
        }
        boolean flag=false;
        for(int i=1;i<=n&&!flag;i++){
            for(int j=1;j<=m;j++){
                if(num[i][j]=='@'){
                    bfs(i,j);
                    flag=true;
                    break;
                }
            }
        }
        System.out.println(res);
    }
    public static void bfs(int i, int j){
        if(num[i][j]=='!'){
            res++;
        }
        num[i][j]='1';
        for(int q=0;q<=3;q++){
            int a=i+step[q][0],b=j+step[q][1];
            if(a>=1&&a<=n&&b>=1&&b<=m&&num[a][b]!='1'&&num[a][b]!='#'){
                bfs(a,b);
            }
        }
    }
}
"
83,C,Java,61801819,2023-04-07 20:45:27,TuWangren123,运行超时,"import java.util.Scanner;

public class Main {
    static int n;
    static int m;
    static int res = 0;
    static char[][] a;
    static int[][] v;
    static int[][] move = {
        { -1, 0 },
        { 0, 1 },
        { 1, 0 },
        { 0, -1 }
    };
    
    static void dfs(int x, int y) {
        if (a[x][y] == '#' || v[x][y] == 1) {
            return;
        }
        v[x][y] = 1;
        if (a[x][y] == '!') {
            res++;
        }
        
        for (int i = 0; i < 4; i++) {
            int ix = x + move[i][0];
            int iy = y + move[i][1];
            if (ix >= 0 && ix < n
                && iy >= 0 && iy < m
                && v[ix][iy] == 0) {
                dfs(ix, iy);
            }
        }
    }
    
    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        n = s.nextInt();
        m = s.nextInt();
        a = new char[n][m];
        int x = -1, y = -1;
        for (int i = 0; i < n; i++) {
            String str = s.next();
            for (int j = 0; j < m; j++) {
                a[i][j] = str.charAt(j);
                if (a[i][j] == '@') {
                    x = i;
                    y = j;
                }
            }
        }
        v = new int[n][m];
        dfs(x, y);
        System.out.println(res);
    }
}"
84,C,Java,61801872,2023-04-07 20:45:54,小小小巨人,答案正确,"import java.io.*;
import java.math.*;
import java.util.*;
import java.util.Map.*;
/**
 * 
 * @author TCchen 
 */
public class Main {
	public static void main(String[]args) throws IOException {
		new Main().run();
	}
	File input=new File(""input.txt"");
	File output=new File(""output.txt"");
	void run() throws IOException{
		boolean debug=false;
//		debug=true;
		if(debug)new Solve().setIO(input, output).run();
		else new Solve().setIO(System.in,System.out).run();
	}
	class Solve extends ioTask{
		int n,m,k,i,j,len,p,l,r;
		class node{
			int x,y;
			public node(int x,int y) {
				this.x=x;
				this.y=y;
			}
		}
		int[][]nxt= {{1,0},{-1,0},{0,1},{0,-1}};
		void solve()throws IOException{
			n=in.in();
			m=in.in();
			int sx=0,sy=0;
			boolean[][]book=new boolean[n][m];
			char[][]mp=new char[n][];
			for(i=0;i<n;i++) {
				mp[i]=in.ins().toCharArray();
				for(j=0;j<m;j++) {
					if(mp[i][j]=='@') {
						sx=i;
						sy=j;
					}
				}
			}
			Queue<node>q=new LinkedList<node>();
			book[sx][sy]=true;
			q.add(new node(sx,sy));
			int ans=0;
			while(!q.isEmpty()) {
				node node=q.poll();
				for(j=0;j<nxt.length;j++) {
					int x=nxt[j][0]+node.x;
					int y=nxt[j][1]+node.y;
					if(0<=x&&x<n&&0<=y&&y<m&&!book[x][y]&&mp[x][y]!='#') {
						book[x][y]=true;
						q.add(new node(x,y));
						if(mp[x][y]=='!')ans++;
					}
				}
			}
			out.println(ans);
		}
		int te;
		void run()throws IOException{
//			init();
			int t=1;
//			t=in.in();
			for(te=1;te<=t;te++) {
				solve();
//				out.flush();
			}
			out.close();
		}
//		long timeMillis;
//		void st() {
//			timeMillis=System.currentTimeMillis();
//		}
//		void ed() {
//			System.out.println((System.currentTimeMillis()-timeMillis)+""ms"");
//		}
	}
	class QIn{
		StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
		int in() throws IOException {
			st.nextToken();
			return (int)st.nval;
		}
		long inl() throws IOException {
			st.nextToken();
			return (long)st.nval;
		}
		double ind()throws IOException  {
			st.nextToken();
			return st.nval;
		}
		String ins() throws IOException {
			st.nextToken();
			return st.sval;
		}
	}
	class In{
		private StringTokenizer in=new StringTokenizer("""");
		private InputStream is;
		private BufferedReader br;
		public In(File file) throws IOException {
			is=new FileInputStream(file);
			init();
		}
		public In(InputStream is) throws IOException{
			this.is=is;
			init();
		}
		private void init() throws IOException {
			br=new BufferedReader(new InputStreamReader(is));
		}
		/**
		 * File and OJ only
		 */
		boolean hasNext() throws IOException {
			return in.hasMoreTokens()||br.ready();
		}
		String ins() throws IOException {
			while(!in.hasMoreTokens()) {
				in=new StringTokenizer(br.readLine());
			}
			return in.nextToken();
		}
		int in() throws IOException {
			return Integer.parseInt(ins());
		}
		long inl() throws IOException {
			return Long.parseLong(ins());
		}
		double ind() throws IOException {
			return Double.parseDouble(ins());
		}
		String line() throws IOException {
			return br.readLine();
		}
	}
	class Out{
		PrintWriter out;
		private OutputStream os;
		private void init() {
			out=new PrintWriter(new BufferedWriter(new OutputStreamWriter(os)));
		}
		public Out(File file) throws IOException {
			os=new FileOutputStream(file);
			init();
		}
		public Out(OutputStream os) throws IOException{
			this.os=os;
			init();
		}
	}
	abstract class ioTask{
		In in;
		PrintWriter out;
		public ioTask setIO(File in,File out) throws IOException{
			this.in=new In(in);
			this.out=new Out(out).out;
			return this;
		}
		public ioTask setIO(File in,OutputStream out) throws IOException{
			this.in=new In(in);
			this.out=new Out(out).out;
			return this;
		}
		public ioTask setIO(InputStream in,OutputStream out) throws IOException{
			this.in=new In(in);
			this.out=new Out(out).out;
			return this;
		}
		public ioTask setIO(InputStream in,File out) throws IOException{
			this.in=new In(in);
			this.out=new Out(out).out;
			return this;
		}
		void run()throws IOException{}
	}
}"
85,C,Java,61802027,2023-04-07 20:47:13,牛客364316832号,执行出错,"import java.util.Scanner;
import java.io.PrintWriter;

public class Main{
	static final int N=1005;
	static char[][] G=new char[N][N];
	static boolean[][] VIS=new boolean [N][N];
	static int[]d= {-1,0,1,0,-1};
	static int n,m;
	static int nx,ny,ex,ey,CNT;
	//nx，ny是起点坐标；ex,ey是终点坐标，CNT为路径条数
	static void dfs(int x,int y) {
		if(G[x][y]=='!') {
			CNT++;
			return ;
		}
		for(int k=0;k<4;k++) {
			int l=x+d[k],r=y+d[k+1];
			if(l>=1&&r>=1&&l<=n&&r<=m&&G[l][r]!='#'&&!VIS[l][r]) {
				VIS[l][r]=true;
				dfs(l,r);
			}
		}
		return ;
	}
	public static void main(String[] args) {
		int t,zx=0,zy=0;
		Scanner scan=new Scanner(System.in);
		n=scan.nextInt();
		m=scan.nextInt();
		for(int i=0;i<n;i++) {
			for(int j=0;j<m;j++) {
				G[i][j]=scan.next().charAt(0);
				if(G[i][j]=='@') {
					zx=i;
					zy=j;
				}
			}
		}
		dfs(zx,zy);
		System.out.println(CNT);
	}
}"
86,C,Java,61802090,2023-04-07 20:47:51,给个AC吧,答案正确,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.List;
import java.util.Queue;
import java.util.Scanner;

public class Main {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));

	static class sc {
		static StreamTokenizer in = new StreamTokenizer(br);

		static int nextInt() throws IOException {
			in.nextToken();
			return (int) in.nval;
		}
	}

	static int[] dx = { 0, -1, 1, 0, 0 };
	static int[] dy = { 0, 0, 0, -1, 1 };

	public static void main(String[] args) throws IOException {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		int m = sc.nextInt();
		char[][] a = new char[n + 1][m + 1];
		int sx = 0, sy = 0;
		for (int i = 1; i <= n; i++) {
			String s = sc.next();
			for (int j = 1; j <= m; j++) {
				a[i][j] = s.charAt(j - 1);
				if (a[i][j] == '@') {
					sx = i;
					sy = j;
				}
			}
		}
		Queue<Node> q = new LinkedList<>();
		boolean[][] f = new boolean[n + 1][m + 1];
		f[sx][sy] = true;
		int ans=0;
		q.offer(new Node(sx, sy));
		while (!q.isEmpty()) {
			Node tmp = q.poll();
			int x = tmp.x;
			int y = tmp.y;
			for (int i = 1; i <= 4; i++) {
				int xx = dx[i] + x;
				int yy = dy[i] + y;
				if (xx >= 1 && yy >= 1 && xx <= n && yy <= m && !f[xx][yy] && a[xx][yy] != '#') {
					f[xx][yy] = true;
					if(a[xx][yy]=='!') {
						ans++;
					}
					q.offer(new Node(xx,yy));
				}
			}
		}
		out.println(ans);
		out.flush();
		out.close();
	}

	static class Node {
		int x, y;

		public Node(int x, int y) {
			this.x = x;
			this.y = y;
		}
	}
}"
87,C,Java,61802805,2023-04-07 20:53:36,Tdexi,运行超时,"import java.util.*;

public class Main{ 
    public static void main(String[] args) {
        
        Scanner in = new Scanner(System.in);
        String[] firstLine = in.nextLine().split("" "");
        int n = Integer.parseInt(firstLine[0]);
        int m = Integer.parseInt(firstLine[1]);
        int [][] flags = new int[n][m];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                flags[i][j] = 0;
            }
        }
        
        char[][] matrix = new char[n][m];
        int count = 0;
        while (in.hasNextLine()) {
            matrix[count] = in.nextLine().toCharArray();
            count++;
        }
        int x = 0, y = 0;
        for (int i = 0; i < n; i++) {
            for (int j  = 0; j < m; j++) {
                if (matrix[i][j] == '@') {
                    x = i;
                    y = j;
                }
            }
        }
        flags[x][y] = 1;
        List<Integer> xIndex = new ArrayList<>();
        List<Integer> yIndex = new ArrayList<>();
        xIndex.add(x);
        yIndex.add(y);
        while (!xIndex.isEmpty()) {
            int curx = xIndex.get(0);
            int cury = yIndex.get(0);
            yIndex.remove(0);
            xIndex.remove(0);
            flags[curx][cury] = 1;
            if (curx+1 < n && flags[curx+1][cury] == 0 && (matrix[curx+1][cury]=='.' || matrix[curx+1][cury] == '!')) {
                xIndex.add(curx+1);
                yIndex.add(cury);
            }
            if (cury+1 < m && flags[curx][cury+1] == 0 && (matrix[curx][cury+1]=='.' || matrix[curx][cury+1] == '!')) {
                xIndex.add(curx);
                yIndex.add(cury + 1);
            }
            if (curx-1 >= 0 && flags[curx-1][cury] == 0 && (matrix[curx-1][cury]=='.' || matrix[curx-1][cury] == '!')) {
                xIndex.add(curx-1);
                yIndex.add(cury);
            }
            if (cury-1 >= 0 &&flags[curx][cury-1] == 0 && (matrix[curx][cury-1]=='.' || matrix[curx][cury-1] == '!')) {
                xIndex.add(curx);
                yIndex.add(cury-1);   
            }
        }
        int result = 0;
        for (int i = 0; i < n; i++) {
            for (int j  = 0; j < m; j++) {
                if (matrix[i][j] == '!' && flags[i][j] == 1) {
                    result++;
                }
            }
        }
        System.out.println(result);
    }
}"
88,C,Java,61803044,2023-04-07 20:55:32,Tdexi,运行超时,"import java.util.*;

public class Main{ 
    public static void main(String[] args) {
        
        Scanner in = new Scanner(System.in);
        String[] firstLine = in.nextLine().split("" "");
        int n = Integer.parseInt(firstLine[0]);
        int m = Integer.parseInt(firstLine[1]);
        int [][] flags = new int[n][m];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                flags[i][j] = 0;
            }
        }
        
        char[][] matrix = new char[n][m];
        int count = 0;
        while (in.hasNextLine()) {
            matrix[count] = in.nextLine().toCharArray();
            count++;
        }
        int x = 0, y = 0;
        for (int i = 0; i < n; i++) {
            for (int j  = 0; j < m; j++) {
                if (matrix[i][j] == '@') {
                    x = i;
                    y = j;
                }
            }
        }
        flags[x][y] = 1;
        LinkedList<Integer> xIndex = new LinkedList<>();
        LinkedList<Integer> yIndex = new LinkedList<>();
        xIndex.offer(x);
        yIndex.offer(y);
        while (!xIndex.isEmpty()) {
            int curx = xIndex.poll();
            int cury = yIndex.poll();
            flags[curx][cury] = 1;
            if (curx+1 < n && flags[curx+1][cury] == 0 && (matrix[curx+1][cury]=='.' || matrix[curx+1][cury] == '!')) {
                xIndex.offer(curx+1);
                yIndex.offer(cury);
            }
            if (cury+1 < m && flags[curx][cury+1] == 0 && (matrix[curx][cury+1]=='.' || matrix[curx][cury+1] == '!')) {
                xIndex.offer(curx);
                yIndex.offer(cury + 1);
            }
            if (curx-1 >= 0 && flags[curx-1][cury] == 0 && (matrix[curx-1][cury]=='.' || matrix[curx-1][cury] == '!')) {
                xIndex.offer(curx-1);
                yIndex.offer(cury);
            }
            if (cury-1 >= 0 &&flags[curx][cury-1] == 0 && (matrix[curx][cury-1]=='.' || matrix[curx][cury-1] == '!')) {
                xIndex.offer(curx);
                yIndex.offer(cury-1);   
            }
        }
        int result = 0;
        for (int i = 0; i < n; i++) {
            for (int j  = 0; j < m; j++) {
                if (matrix[i][j] == '!' && flags[i][j] == 1) {
                    result++;
                }
            }
        }
        System.out.println(result);
    }
}"
89,C,Java,61803074,2023-04-07 20:55:49,不上紫不该名,答案正确,"//import com.sun.source.tree.Tree;

import java.io.*;
import java.util.*;
public class Main {
    private static long mode = 1_000_000_000+7;
    private static long INF = Long.MAX_VALUE;
  //  private static ArrayList<Character> ans = new ArrayList<Character>();
    static int maxn=200000+100;
    public static FastReader in = new FastReader();
    public static Utility util = new Utility();
  //  Queue<Integer> q=new LinkedList<Integer>();
 //   Vector vt[]=new Vector[maxn];
    static long dp[]=new long[maxn];
    static Vector vt[]=new Vector[maxn];
    static int n,m,ans,sum;
    static int b[]=new int[maxn];
    static int f[]=new int[maxn];
    static long pre[]=new long[maxn];
    static String str=new String();
    static int k;
    static String a[]=new String[1100];
    static Boolean vis[][]=new Boolean[1100][1100];
    static int dx[]={0,0,1,-1};
    static int dy[]={1,-1,0,0};
    static int sx=0,sy=0;
    public static void main (String [] args) {
        //try {
        //BufferedReader f = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter out = new PrintWriter(System.out);
        // HashMap<Integer,Vector> mp = new HashMap<Integer,Vector>();
        //BufferedReader f = new BufferedReader(new FileReader(""input.in""));
        //PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(""output.out"")));
        int t = 1;
       // t = in.nextInt();
       // init();
        while (t > 0) {
            t--;
            n=in.nextInt();m=in.nextInt();
            for(int i=1;i<=n;i++)
            {
                a[i]=in.nextLine();
                a[i]="" ""+a[i];
            }
            int ans=0;
            for(int i=1;i<=n;i++)
            {
                for(int j=1;j<=m;j++)
                {
                    if(a[i].charAt(j)=='@')
                    {
                        sx=i;
                        sy=j;
                        break;
                    }
                }
                if(sx!=0)
                    break;
            }
            for(int i=1;i<=n;i++)
            {
                vis[i]=new Boolean[1100];
                for(int j=0;j<=1009;j++)
                    vis[i][j]=false;
            }
            Queue<Node>q;
            q=new LinkedList<Node>();
            q.add(new Node(sx,sy));
            while(q.size()>0)
            {
                Node res=q.poll();
                int x=res.fi;
                int y=res.se;
                if(a[x].charAt(y)=='!')
                {
                  ans++;
                }
                vis[x][y]=true;
                for(int i=0;i<=3;i++)
                {
                    int xx=x+dx[i];
                    int yy=y+dy[i];

                    if(xx>=1&&xx<=n&&yy>=1&&yy<=m)
                    {
                        if(a[xx].charAt(yy)=='#')
                            continue;
                        if(vis[xx][yy]!=true)
                        {
                            vis[xx][yy]=true;
                            q.add(new Node(xx,yy));
                        }
                    }
                }
            }
            System.out.print(ans);

        }/////////////////////////
    }
    static class Node{
        int fi,se;
        Node(int x,int y)
        {
            fi=x;
            se=y;
        }
    }

    static void init()
    {
        int tt=1;
    }

    static long abs(long x)
    {
        if(x<=0)
            return (-1)*x;
        return x;
    }
    static int abs(int x)
    {
        if(x<=0)
            return (-1)*x;
        return x;
    }




    public static int log2(int N)
    {
        int result = (int)(Math.log(N) / Math.log(2));

        return result;
    }
    public static int lowbit(int x)
    {
        return x&(-x);
    }

    static int max(int a,int b)
    {
        return Math.max(a,b);
    }
    static long max(long a,long b)
    {
        return Math.max(a,b);
    }
    static int min(int a,int b)
    {
        return Math.min(a,b);
    }
    static long min(long a,long b)
    {
        return Math.min(a,b);
    }

    public static long gcd(long a, long b) {
        if (b==0) return a;
        return gcd(b,a%b);
    }
    public static long lcm(long a,long b) {
        long gcd = gcd(a,b);
        return (a*b)/gcd;
    }
   /* public static int[] inp(BufferedReader f, int n){
        try {
            StringTokenizer st = new StringTokenizer(f.readLine());
            int[] out = new int[n];
            for(int i=0;i<n;++i)
                out[i]=Integer.parseInt(st.nextToken());
            return out;
        }catch(Exception e){
            return new int[]{0, 0};
        }
    }
    public static String inp(BufferedReader f,boolean b){
        try {
            return f.readLine();
        }catch(Exception e){
            return """";
        }
    }*/
    public static void out(PrintWriter out,String s) {
       out.print(s);
    }
    public static void nl() {
        System.out.print(""\n"");
    }
    public static void out(PrintWriter out,int[] a) {
        for(int i=0;i<a.length;++i) out.print(a[i]+"" "");

    }
    public static void out(PrintWriter out,long[] a) {
        for(int i=0;i<a.length;++i) out.print(a[i]+"" "");

    }
    public static void out(PrintWriter out,int n) {
        out.println(n);
    }
    public static void out(PrintWriter out,long n) {
        out.println(n);
    }
    public static void sort(int[] a){
        int n = a.length;
        ArrayList<Integer> b = new ArrayList<Integer>();
        for(int i:a)b.add(i);
        Collections.sort(b);
        for(int i=0;i<n;++i){
            a[i]=b.get(i);
        }
    }public static void sort(long[] a){
        int n = a.length;
        ArrayList<Long> b = new ArrayList<Long>();
        for(Long i:a)b.add(i);
        Collections.sort(b);
        for(int i=0;i<n;++i){
            a[i]=b.get(i);
        }
    }
    public static int lower_bound(int[]a,int n,int tar) {
        int k = -1;
        for(int b=n/2;b>=1;b/=2)
            while(k+b<n&&a[k+b]<tar) k+=b;
        return k+1;
    }
    public static int upper_bound(ArrayList<Integer> a,int n,int tar) {
        int k = 0;
        for(int b = n/2; b>=1; b/=2)
            while(k+b<n&&a.get(k+b)<=tar) k+=b;
        return k;
    }
    static class Pair
    {
        int a;
        int b;
        Pair(int a, int b)
        {
            this.a = a;
            this.b = b;
        }
        public void b(int nv){
            b=nv;
        }
        public void a(int nk){
            a=nk;
        }
    }
    static class FastReader{

        BufferedReader br;

        StringTokenizer st;

        public FastReader(){
            br=new BufferedReader(new InputStreamReader(System.in));
        }

        String next(){
            while(st==null || !st.hasMoreTokens()){
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt(){
            return Integer.parseInt(next());
        }

        long nextLong(){
            return Long.parseLong(next());
        }

        double nextDouble(){
            return Double.parseDouble(next());
        }

        String nextLine(){
            String str="""";
            try {
                str=br.readLine().trim();
            } catch (Exception e) {
                e.printStackTrace();
            }
            return str;
        }



    }
    static class Utility{

        int[] createIntArray(){

            String s = in.nextLine();

            return Arrays.stream( s.split("" "") )
                    .mapToInt( Integer::parseInt )
                    .toArray();


        }

        int[] createIntArray(int n){

            int[] arr = new int[n];
            for(int i=0; i<n; i++) arr[i] = in.nextInt();


            return arr;


        }

        int[] createSortedIntArray(int n){

            int [] arr = createIntArray(n);
            Arrays.sort( arr );

            return arr;
        }

        int[][] create2DArray( int n , int m ){

            int[][] arr = new int[n][m];
            for(int i=0; i<n; i++)
                arr[i] = createIntArray( m );

            return arr;



        }

        < T > String joinArray( T[] arr , String s ){

            StringBuilder sb = new StringBuilder("""");

            for(int i=0; i<arr.length; i++)
                sb.append( arr[i] + s  );

            return sb.toString();
        }

        <T> String  joinList(List<T> arr, String s ){

            StringBuilder sb = new StringBuilder("""");

            for(int i=0; i<arr.size(); i++)
                sb.append( arr.get(i) + s  );

            return sb.toString();
        }

    }
}"
90,C,Java,61803147,2023-04-07 20:56:21,Tdexi,运行超时,"import java.util.*;

public class Main{ 
    public static void main(String[] args) {
        
        Scanner in = new Scanner(System.in);
        String[] firstLine = in.nextLine().split("" "");
        int n = Integer.parseInt(firstLine[0]);
        int m = Integer.parseInt(firstLine[1]);
        int [][] flags = new int[n][m];
        
        
        char[][] matrix = new char[n][m];
        int count = 0;
        while (in.hasNextLine()) {
            matrix[count] = in.nextLine().toCharArray();
            count++;
        }
        int x = 0, y = 0;
        for (int i = 0; i < n; i++) {
            for (int j  = 0; j < m; j++) {
                flags[i][j] = 0;
                if (matrix[i][j] == '@') {
                    x = i;
                    y = j;
                }
            }
        }
        flags[x][y] = 1;
        LinkedList<Integer> xIndex = new LinkedList<>();
        LinkedList<Integer> yIndex = new LinkedList<>();
        xIndex.offer(x);
        yIndex.offer(y);
        while (!xIndex.isEmpty()) {
            int curx = xIndex.poll();
            int cury = yIndex.poll();
            flags[curx][cury] = 1;
            if (curx+1 < n && flags[curx+1][cury] == 0 && (matrix[curx+1][cury]=='.' || matrix[curx+1][cury] == '!')) {
                xIndex.offer(curx+1);
                yIndex.offer(cury);
            }
            if (cury+1 < m && flags[curx][cury+1] == 0 && (matrix[curx][cury+1]=='.' || matrix[curx][cury+1] == '!')) {
                xIndex.offer(curx);
                yIndex.offer(cury + 1);
            }
            if (curx-1 >= 0 && flags[curx-1][cury] == 0 && (matrix[curx-1][cury]=='.' || matrix[curx-1][cury] == '!')) {
                xIndex.offer(curx-1);
                yIndex.offer(cury);
            }
            if (cury-1 >= 0 &&flags[curx][cury-1] == 0 && (matrix[curx][cury-1]=='.' || matrix[curx][cury-1] == '!')) {
                xIndex.offer(curx);
                yIndex.offer(cury-1);   
            }
        }
        int result = 0;
        for (int i = 0; i < n; i++) {
            for (int j  = 0; j < m; j++) {
                if (matrix[i][j] == '!' && flags[i][j] == 1) {
                    result++;
                }
            }
        }
        System.out.println(result);
    }
}"
91,C,Java,61803161,2023-04-07 20:56:25,Tdexi,运行超时,"import java.util.*;

public class Main{ 
    public static void main(String[] args) {
        
        Scanner in = new Scanner(System.in);
        String[] firstLine = in.nextLine().split("" "");
        int n = Integer.parseInt(firstLine[0]);
        int m = Integer.parseInt(firstLine[1]);
        int [][] flags = new int[n][m];
        
        
        char[][] matrix = new char[n][m];
        int count = 0;
        while (in.hasNextLine()) {
            matrix[count] = in.nextLine().toCharArray();
            count++;
        }
        int x = 0, y = 0;
        for (int i = 0; i < n; i++) {
            for (int j  = 0; j < m; j++) {
                flags[i][j] = 0;
                if (matrix[i][j] == '@') {
                    x = i;
                    y = j;
                }
            }
        }
        flags[x][y] = 1;
        LinkedList<Integer> xIndex = new LinkedList<>();
        LinkedList<Integer> yIndex = new LinkedList<>();
        xIndex.offer(x);
        yIndex.offer(y);
        while (!xIndex.isEmpty()) {
            int curx = xIndex.poll();
            int cury = yIndex.poll();
            flags[curx][cury] = 1;
            if (curx+1 < n && flags[curx+1][cury] == 0 && (matrix[curx+1][cury]=='.' || matrix[curx+1][cury] == '!')) {
                xIndex.offer(curx+1);
                yIndex.offer(cury);
            }
            if (cury+1 < m && flags[curx][cury+1] == 0 && (matrix[curx][cury+1]=='.' || matrix[curx][cury+1] == '!')) {
                xIndex.offer(curx);
                yIndex.offer(cury + 1);
            }
            if (curx-1 >= 0 && flags[curx-1][cury] == 0 && (matrix[curx-1][cury]=='.' || matrix[curx-1][cury] == '!')) {
                xIndex.offer(curx-1);
                yIndex.offer(cury);
            }
            if (cury-1 >= 0 &&flags[curx][cury-1] == 0 && (matrix[curx][cury-1]=='.' || matrix[curx][cury-1] == '!')) {
                xIndex.offer(curx);
                yIndex.offer(cury-1);   
            }
        }
        int result = 0;
        for (int i = 0; i < n; i++) {
            for (int j  = 0; j < m; j++) {
                if (matrix[i][j] == '!' && flags[i][j] == 1) {
                    result++;
                }
            }
        }
        System.out.println(result);
    }
}"
92,C,Java,61803426,2023-04-07 20:58:25,码农100000号,答案正确,"import java.util.*;
public class Main{
    static int N = 1010;
    static char[][] g = new char[N][N];
    static boolean[][] st = new boolean[N][N];
    static int n;
    static int m;
    public static void main(String[] args){
        Scanner scanner = new Scanner(System.in);
        String[] s1 = scanner.nextLine().split("" "");
        n = Integer.parseInt(s1[0]);
        m = Integer.parseInt(s1[1]);
        for(int i = 0;i < n;i++){
            String str = scanner.nextLine();
            for(int j = 0;j < m;j++){
                g[i][j] = str.charAt(j);
            }
        }
        int x = 0;
        int y = 0;
        for(int i = 0;i < n;i++){
            for(int j = 0;j < m;j++){
                if(g[i][j] == '@'){
                    x = i;
                    y = j;
                    break;
                }
            }
        }
        System.out.println(bfs(x,y));
    }
    public static int bfs(int x,int y){
        Queue<Pair> queue = new LinkedList<>();
        int[] dx = {1,-1,0,0};
        int[] dy = {0,0,1,-1};
        int res = 0;
        queue.add(new Pair(x,y));
        st[x][y] = true;
        while(!queue.isEmpty()){
            Pair t = queue.poll();
            for(int i = 0;i < 4;i++){
                int a = t.x + dx[i];
                int b = t.y + dy[i];
                if(a < 0 || a >= n || b < 0 || b >= m){
                    continue;
                }
                if(st[a][b] || g[a][b] == '#'){
                    continue;
                }
                if(g[a][b] == '!'){
                    res++;
                }
                queue.add(new Pair(a,b));
                st[a][b] = true;
            }
        }
        return res;
    }
}
class Pair{
    int x;
    int y;
    public Pair(int x,int y){
        this.x = x;
        this.y = y;
    }
}"
93,C,Java,61803820,2023-04-07 21:00:44,牛客829798037号,运行超时,"

import java.util.Scanner;

public class Main {
    static String[] num;
    static boolean[][]pd;
    static int n,m,res=0;
    static int[][]step={{1,0},{0,1},{-1,0},{0,-1}};
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt(); m = sc.nextInt();
        num = new String[n+1];
        pd=new boolean[n+1][m+1];
        for (int i = 1; i <= n; i++) {
            num[i]=sc.next();
        }
        boolean flag=false;
        for(int i=1;i<=n&&!flag;i++){
            for(int j=1;j<=m;j++){
                if(num[i].charAt(j-1)=='@'){
                    bfs(i,j);
                    flag=true;
                    break;
                }
            }
        }
        System.out.println(res);
    }
    public static void bfs(int i, int j){
        if(num[i].charAt(j-1)=='!'){
            res++;
        }
       pd[i][j]=true;
        for(int q=0;q<=3;q++){
            int a=i+step[q][0],b=j+step[q][1];
            if(a>=1&&a<=n&&b>=1&&b<=m&&num[a].charAt(b-1)!='1'&&num[a].charAt(b-1)!='#'&&!pd[a][b]){
                bfs(a,b);
            }
        }
    }
}
"
94,C,Java,61804072,2023-04-07 21:03:25,牛客829798037号,运行超时,"import java.util.Scanner;
 
public class Main {
    static char[][] num;
    static int n,m,res=0;
    static int[][]step={{1,0},{0,1},{-1,0},{0,-1}};
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt(); m = sc.nextInt();
        num = new char[n + 1][m + 1];
        for (int i = 1; i <= n; i++) {
            String temp=sc.next();
            for (int j = 1; j <= m; j++) {
                num[i][j] = temp.charAt(j-1);
            }
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<=m;j++){
                if(num[i][j]=='@'){
                    bfs(i,j);
                    break;
                }
            }
        }
        System.out.println(res);
    }
    public static void bfs(int i, int j){
        if(num[i][j]=='1'||num[i][j]=='#'){
            return;
        }
        if(num[i][j]=='!'){
            res++;
        }
        num[i][j]='1';
        for(int q=0;q<=3;q++){
            int a=i+step[q][0],b=j+step[q][1];
            if(a>=1&&a<=n&&b>=1&&b<=m){
                bfs(a,b);
            }
        }
    }
}"
95,C,Java,61804375,2023-04-07 21:06:56,牛客829798037号,运行超时,"

import java.util.Scanner;

public class Main {
    static char[][] num;
    static int n,m,res=0;
    static int[][]step={{1,0},{0,1},{-1,0},{0,-1}};
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt(); m = sc.nextInt();
        num = new char[n + 1][m + 1];
        for (int i = 1; i <= n; i++) {
            String temp=sc.next();
            num[i]=temp.toCharArray();
        }
        boolean flag=true;
        for(int i=1;i<=n&&flag;i++){
            for(int j=0;j<m;j++){
                if(num[i][j]=='@'){
                    bfs(i,j);
                    flag=false;
                    break;
                }
            }
        }
        System.out.println(res);
    }
    public static void bfs(int i, int j){
        if(num[i][j]=='1'||num[i][j]=='#'){
            return;
        }
        if(num[i][j]=='!'){
            res++;
        }
        num[i][j]='1';
        for(int q=0;q<=3;q++){
            int a=i+step[q][0],b=j+step[q][1];
            if(a>=1&&a<=n&&b>=0&&b<m){
                bfs(a,b);
            }
        }
    }
}
"
96,C,Java,61804726,2023-04-07 21:11:48,Aysy,答案正确,"

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.*;


public class Main {

    static char[][] arr;
    static int cnt = 0;
    static int n;
    static int m;
    static boolean[][] vis;

    public static void main(String[] args) {
        n = in.nextInt();
        m = in.nextInt();
        arr = new char[n][m];
        vis = new boolean[n][m];
        int i1 = 0, j1 = 0;
        for (int i = 0; i < n; i++) {
            arr[i] = in.nextLine().toCharArray();
            for (int j = 0; j < arr[i].length; j++) {
                if (arr[i][j] == '@') {
                    i1 = i;
                    j1 = j;
                }
            }
        }

        dfs1(i1, j1);
        System.out.println(cnt);
    }

    private static void dfs1(int i1, int j1) {
        if (i1 < 0 || i1 >= n || j1 < 0 || j1 >= m) {
            return;
        }
        if(vis[i1][j1])return ;
        vis[i1][j1]=true;
        if (arr[i1][j1] == '#') return;
        if (arr[i1][j1] == '!') cnt++;
        dfs1(i1 - 1, j1);
        dfs1(i1 + 1, j1);
        dfs1(i1, j1 - 1);
        dfs1(i1, j1 + 1);
    }


//    private static void dfs(int i) {
//        if (i >= n) {
//            cnt++;
//            return;
//        }
//        for (int j = 0; j < n; j++) {
//            if (!check(i, j)) continue;
//            arr[i][j] = true;
//            dfs(i + 1);
//            arr[i][j] = false;
//        }
//    }


//    private static boolean check(int i, int j) {
//        for (int i1 = i - 1; i1 >= 0; i1--) {
//            if (arr[i1][j]) return false;
//        }
//        for (int i1 = i - 1, j1 = j - 1; i1 >= 0 && j1 >= 0; i1--, j1--) {
//            if (arr[i1][j1]) return false;
//        }
//        for (int i1 = i - 1, j1 = j + 1; i1 >= 0 && j1 < n; i1--, j1++) {
//            if (arr[i1][j1]) return false;
//        }
//        return true;
//    }


    public static int gcd(int a, int b) {
        return b == 0 ? a : gcd(b, a % b);
    }


    static IR in = new IR();
    static PrintWriter out = new PrintWriter(System.out);

    static class IR {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public IR() {
            reader = new BufferedReader(new InputStreamReader(System.in), 32768);
            tokenizer = null;
        }

        public String nextLine() {
            String s = """";
            try {
                s = reader.readLine();
            } catch (IOException e) {
                throw new RuntimeException(e);
            }
            return s;

        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }
    }
}
"
97,C,Java,61805394,2023-04-07 21:22:08,牛客829798037号,运行超时,"

import java.util.Scanner;

public class Main {
    static char[][] num;
    static int n,m,res=0;
    static int[][]step={{1,0},{0,1},{-1,0},{0,-1}};
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt(); m = sc.nextInt();
        num = new char[n + 1][m + 1];
        for (int i = 1; i <= n; i++) {
            String temp=sc.next();
            for(int j=1;j<=m;j++){
                num[i][j]=temp.charAt(j-1);
            }
        }
        boolean flag=true;
        for(int i=1;i<=n&&flag;i++){
            for(int j=0;j<m;j++){
                if(num[i][j]=='@'){
                    bfs(i,j);
                    flag=false;
                    break;
                }
            }
        }
        System.out.println(res);
    }
    public static void bfs(int i, int j){
        if(num[i][j]=='1'||num[i][j]=='#'){
            return;
        }
        if(num[i][j]=='!'){
            res++;
        }
        num[i][j]='1';
        for(int q=0;q<=3;q++){
            int a=i+step[q][0],b=j+step[q][1];
            if(a>=1&&a<=n&&b>=1&&b<=m&&num[a][b]!='1'&&num[a][b]!='#'){
                bfs(a,b);
            }
        }
    }
}
"
98,C,Java,61805595,2023-04-07 21:25:47,吴韩宇,答案错误,"import java.util.Scanner;

public class Main {
    static boolean vis[][];
    static int sum;
    static int n,m;
   static char x[][];
    static int dfs(int i,int j){
        if (x[i+1][j]=='\u0000'||x[i+1][j]=='#'&&vis[i+1][j]==true&&x[i-1][j]=='\u0000'||x[i-1][j]=='#'&&vis[i-1][j]==true&&x[i][j+1]=='\u0000'||x[i][j+1]=='#'&&vis[i][j+1]==true&&x[i][j-1]=='\u0000'||x[i][j-1]=='#'&&vis[i][j-1]==true){
            return sum;
        }
        vis[i][j]=true;
        if (!vis[i][j-1]&&x[i][j-1]!='#'&&x[i][j-1]!='\u0000'){
            vis[i][j-1]=true;
            if (x[i][j-1]=='!') {
                sum++;
            }
            dfs(i,j-1);
//            vis[i][j-1]=false;
        }
        if (!vis[i][j+1]&&x[i][j+1]!='#'&&x[i][j+1]!='\u0000'){
            vis[i][j+1]=true;
            if (x[i][j+1]=='!'){
                sum++;
            }
            dfs(i,j+1);
//            vis[i][j+1]=false;
        }
        if (!vis[i+1][j]&&x[i+1][j]!='#'&&x[i+1][j]!='\u0000'){
            vis[i+1][j]=true;
            if (x[i+1][j]=='!'){
                sum++;
            }dfs(i+1,j);
//            vis[i+1][j]=false;
        }
        if (!vis[i-1][j]&&x[i-1][j]!='#'&&x[i-1][j]!='\u0000'){
            vis[i-1][j]=true;
            if (x[i-1][j]=='!'){
                sum++;
            }dfs(i-1,j);
//            vis[i-1][j]=false;
        }
        return sum;


    }


    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
         n=in.nextInt();
         m=in.nextInt();
       x =new char[n + 2][m + 2];
        int xiao=0,ming=0;
        for (int i = 1; i <=n; i++) {
            String sb=in.next();
            for (int j = 1; j <= sb.length(); j++) {
                x[i][j]=sb.charAt(j-1);
                if (x[i][j]=='@'){
                    xiao=i;
                    ming=j;
                }
            }
        }
        sum=0;
        vis=new boolean[n+2][m+2];
        int dfs = dfs(xiao, ming);
        System.out.println(dfs);


    }
}"
99,C,Java,61805631,2023-04-07 21:26:40,牛客829798037号,答案错误,"

import java.util.Scanner;

public class Main {
    static char[][] num;
    static int n,m,res=0;
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt(); m = sc.nextInt();
        num = new char[n + 1][m + 1];
        for (int i = 1; i <= n; i++) {
            String temp=sc.next();
            for(int j=1;j<=m;j++){
                num[i][j]=temp.charAt(j-1);
            }
        }
        boolean flag=true;
        for(int i=1;i<=n&&flag;i++){
            for(int j=0;j<m;j++){
                if(num[i][j]=='@'){
                    bfs(i,j);
                    flag=false;
                    break;
                }
            }
        }
        System.out.println(res);
    }
    public static void bfs(int i, int j){
        if (i <= 0 || i > n || j <=0 || j >= m || num[i][j]=='1'||num[i][j]=='#') {
            return;
        }
        if(num[i][j]=='!'){
            res++;
        }
        num[i][j]='1';
      bfs(i+1,j);
      bfs(i,j+1);
      bfs(i-1,j);
      bfs(i,j-1);
    }
}
"
100,C,Java,61805683,2023-04-07 21:27:31,牛客829798037号,答案正确,"

import java.util.Scanner;

public class Main {
    static char[][] num;
    static int n,m,res=0;
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt(); m = sc.nextInt();
        num = new char[n + 1][m + 1];
        for (int i = 1; i <= n; i++) {
            String temp=sc.next();
            for(int j=1;j<=m;j++){
                num[i][j]=temp.charAt(j-1);
            }
        }
        boolean flag=true;
        for(int i=1;i<=n&&flag;i++){
            for(int j=0;j<m;j++){
                if(num[i][j]=='@'){
                    bfs(i,j);
                    flag=false;
                    break;
                }
            }
        }
        System.out.println(res);
    }
    public static void bfs(int i, int j){
        if (i <= 0 || i > n || j <=0 || j > m ||num[i][j]=='#') {
            return;
        }
        if(num[i][j]=='!'){
            res++;
        }
        num[i][j]='#';
      bfs(i+1,j);
      bfs(i,j+1);
      bfs(i-1,j);
      bfs(i,j-1);
    }
}
"
101,C,Java,61806171,2023-04-07 21:39:35,SDTBU_LH,答案正确,"import java.io.*;
import java.util.*;

public class Main {
	static int n,m;
	static int N=1100;
	static char g[][]=new char[N][N];
	static int begina,beginb;
	static int res=0;
	static int dx[]= {1,0,0,-1};
	static int dy[]= {0,1,-1,0};
	static boolean st[][]=new boolean[N][N];
	static void dfs(int a,int b) {
		for(int i=0;i<4;i++) {
			int x=a+dx[i];
			int y=b+dy[i];
			if(x<1||y<1||x>n||y>m) continue;
			if(g[x][y]=='#'||st[x][y]==true) continue;
			if(g[x][y]=='!') {
				res++;
			}
			st[x][y]=true;
			dfs(x, y);
		}
	}
	public static void main(String[] args) throws IOException {
		Scanner sc = new Scanner(System.in);
		n=sc.nextInt();
		m=sc.nextInt();
		for(int i=1;i<=n;i++) {
			String s=sc.next();
			for(int j=1;j<=m;j++) {
				g[i][j]=s.charAt(j-1);
				if(g[i][j]=='@') {
					begina=i;
					beginb=j;
				}
			}
		}
		st[begina][beginb]=true;
		dfs(begina,beginb);	
		System.out.println(res);
		
	}
}"
102,C,Java,61806256,2023-04-07 21:42:09,henuyzf,答案正确,"import java.util.*;

// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
    public static int cnt = 0;
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        // 注意 hasNext 和 hasNextLine 的区别
        int n = in.nextInt() ;
        int m = in.nextInt();
        char[][] map = new char[n][m];
        for(int i = 0 ; i < n;i++){
            String s = in.next();
            for(int j = 0 ; j< m;j++){
                map[i][j] = s.charAt(j);
            }
        }
        //
        for(int i = 0 ; i < n;i++){
            for(int j = 0 ; j< m;j++){
                if (map[i][j] == '@'){
                    dfs(map,i,j);
                    break;
                }
            }
        }
        System.out.println(cnt) ;
        
    }
    public static void dfs(char[][] map,int x,int y){
    if(x<0||x>=map.length|| y <0 || y >= map[0].length || map[x][y]
           == '#'){
             return ;
         }
        if (map[x][y] == '!')
            cnt++ ;
        map[x][y]='#';
        dfs(map,x-1,y);
        dfs(map,x+1,y) ;
        dfs(map,x,y-1);
        dfs(map,x,y+1) ;
        
        
    }
}"
103,C,Java,61806284,2023-04-07 21:42:58,SDTBU_LH,运行超时,"import java.io.*;
import java.util.*;

public class Main {
	static int n,m;
	static int N=1100;
	static char g[][]=new char[N][N];
	static int begina,beginb;
	static int res=0;
	static int dx[]= {1,0,0,-1};
	static int dy[]= {0,1,-1,0};
	static boolean st[][]=new boolean[N][N];
	static void dfs(int a,int b) {
		for(int i=0;i<4;i++) {
			int x=a+dx[i];
			int y=b+dy[i];
			if(x<1||y<1||x>n||y>m) continue;
			if(g[x][y]=='#'||st[x][y]==true) continue;
			if(g[x][y]=='!') {
				res++;
			}
			st[x][y]=true;
			dfs(x, y);
		}
	}
	public static void main(String[] args) throws IOException {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter out=new BufferedWriter(new OutputStreamWriter(System.out));
		String s[]=br.readLine().split("" "");
		n=Integer.parseInt(s[0]);
		m=Integer.parseInt(s[1]);
		for(int i=1;i<=n;i++) {
			String ss=br.readLine();
			for(int j=1;j<=m;j++) {
				g[i][j]=ss.charAt(j-1);
				if(g[i][j]=='@') {
					begina=i;
					beginb=j;
				}
			}
		}
		st[begina][beginb]=true;
		dfs(begina,beginb);	
		out.write(res+""\n"");
		out.flush();
		br.close();
		out.close();
		
	}
}"
104,C,Java,61806533,2023-04-07 21:50:25,SDTBU_LH,答案正确,"import java.io.*;
import java.util.*;

public class Main {
	static int n,m;
	static int N=1100;
	static char g[][]=new char[N][N];
	static int begina,beginb;
	static int res=0;
	static int dx[]= {1,0,0,-1};
	static int dy[]= {0,1,-1,0};

	static void dfs(int a,int b) {
		if(a<1||b<1||a>n||b>m||g[a][b]=='#') return;
		
		
		if(g[a][b]=='!') {
			res++;
		}
		g[a][b]='#';
		dfs(a-1,b);
		dfs(a+1,b);
		dfs(a,b+1);
		dfs(a,b-1);
		
	}
	public static void main(String[] args) throws IOException {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter out=new BufferedWriter(new OutputStreamWriter(System.out));
		String s[]=br.readLine().split("" "");
		n=Integer.parseInt(s[0]);
		m=Integer.parseInt(s[1]);
		for(int i=1;i<=n;i++) {
			String ss=br.readLine();
			for(int j=1;j<=m;j++) {
				g[i][j]=ss.charAt(j-1);
				if(g[i][j]=='@') {
					begina=i;
					beginb=j;
				}
			}
		}
		dfs(begina,beginb);	
		out.write(res+""\n"");
		out.flush();
		br.close();
		out.close();
		
	}
}"
105,C,Java,61806583,2023-04-07 21:52:24,牛客824004940号,答案正确,"
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

/**
 * C
 * @author zxf
 * @date 2023/4/7 19:24
 * @version 1.0
 */
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        String[] arr =new String[n];
        int[] weizhi = new int[2];
        for (int i = 0; i < n; i++) {
            arr[i] = sc.next();
            for (int j = 0;j < m;j++){
                if (arr[i].charAt(j)=='@'){
                    weizhi[0] = i;
                    weizhi[1] = j;
                }
            }
        }

        int[] dx = {0,1,0,-1};
        int[] dy = {1,0,-1,0};
        boolean[][] flag = new boolean[n][n];
        Queue<AB> queue = new LinkedList<>();
        queue.add(new AB(weizhi[0],weizhi[1],0));
        flag[weizhi[0]][weizhi[1]] = true;
        int ans = 0;

        while (!queue.isEmpty()){
            AB poll = queue.poll();
            int x = poll.x;
            int y = poll.y;

            for (int i = 0;i < 4;i++){
                int tx = x + dx[i];
                int ty = y + dy[i];
                if (tx <0 || ty < 0 || tx >= n || ty >= n) continue;
                if (flag[tx][ty] || arr[tx].charAt(ty) == '#'){
                    continue;
                }
                int step = poll.step + 1;
                if (arr[tx].charAt(ty) == '!'){
                    ans++;
                }
                queue.add(new AB(tx,ty,step));
                flag[tx][ty] = true;

            }
        }
        System.out.println(ans);
    }

}

class AB{
    public  int x;
    public int y;
    public int step;

    public AB(int x, int y, int step) {
        this.x = x;
        this.y = y;
        this.step = step;
    }
}"
106,C,Java,61807365,2023-04-07 22:22:31,森姐,答案错误,"import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Main {
    static int N = 1010;
    static char[][] g = new char[N][N];
    static boolean[][] st = new boolean[N][N];
    static int n, m;
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt();
        m = sc.nextInt();
        PII start = new PII(0,0);
        for (int i = 0; i < n; i++) {
            char[] s = sc.next().toCharArray();
            for (int j = 0; j < m; j++) {
                g[i][j] = s[j];
                if (s[j] == '@') start = new PII(i,j);
            }
        }
        System.out.println(n + "" "" + m);
        bfs(start);
    }
    static void bfs(PII start) {
        Queue<PII> q = new LinkedList<>();
        q.add(start);
        st[start.x][start.y] = true;
        int res = 0;
        int[] dx = {-1,0,1,0}, dy = {0,1,0,-1};
        while (!q.isEmpty()) {
            PII t = q.poll();
            int x = t.x, y = t.y;
            System.out.println(x + "" "" + y);
            for (int i = 0; i < 4; i++) {
                int xx = x + dx[i], yy = y + dy[i];
//                if (xx < 0 || xx > n || yy < 0 || yy > m) continue;
//                if (st[xx][yy]) continue;
//                if (g[xx][yy] == '#') {
//                    continue;
//                }
//
//                if (g[xx][yy] == '!') {
//                    res++;
//                }
//                st[xx][yy] = true;
//                q.add(new PII(xx, yy));

                if (xx >= 0 && xx < n && yy >= 0 && yy < m && !st[xx][yy] && g[xx][yy] != '#') {
                    if (g[xx][yy] == '!') {
                        res++;
                    }
                    st[xx][yy] = true;
                    q.add(new PII(xx, yy));
                }
            }
        }
        System.out.println(res);
    }
}
class PII {
    public int x;
    public int y;
    public PII(int x, int y) {
        this.x = x;
        this.y = y;
    }
}"
107,C,Java,61807386,2023-04-07 22:23:20,森姐,答案正确,"import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Main {
    static int N = 1010;
    static char[][] g = new char[N][N];
    static boolean[][] st = new boolean[N][N];
    static int n, m;
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt();
        m = sc.nextInt();
        PII start = new PII(0,0);
        for (int i = 0; i < n; i++) {
            char[] s = sc.next().toCharArray();
            for (int j = 0; j < m; j++) {
                g[i][j] = s[j];
                if (s[j] == '@') start = new PII(i,j);
            }
        }
//         System.out.println(n + "" "" + m);
        bfs(start);
    }
    static void bfs(PII start) {
        Queue<PII> q = new LinkedList<>();
        q.add(start);
        st[start.x][start.y] = true;
        int res = 0;
        int[] dx = {-1,0,1,0}, dy = {0,1,0,-1};
        while (!q.isEmpty()) {
            PII t = q.poll();
            int x = t.x, y = t.y;
//             System.out.println(x + "" "" + y);
            for (int i = 0; i < 4; i++) {
                int xx = x + dx[i], yy = y + dy[i];
//                if (xx < 0 || xx > n || yy < 0 || yy > m) continue;
//                if (st[xx][yy]) continue;
//                if (g[xx][yy] == '#') {
//                    continue;
//                }
//
//                if (g[xx][yy] == '!') {
//                    res++;
//                }
//                st[xx][yy] = true;
//                q.add(new PII(xx, yy));

                if (xx >= 0 && xx < n && yy >= 0 && yy < m && !st[xx][yy] && g[xx][yy] != '#') {
                    if (g[xx][yy] == '!') {
                        res++;
                    }
                    st[xx][yy] = true;
                    q.add(new PII(xx, yy));
                }
            }
        }
        System.out.println(res);
    }
}
class PII {
    public int x;
    public int y;
    public PII(int x, int y) {
        this.x = x;
        this.y = y;
    }
}"
108,C,Java,61807502,2023-04-07 22:28:16,人工智能3221王子龙,答案正确,"import java.util.Scanner;

public class Main {
    static int n;
    static int m;
    static int sum;
    static String[][]a=new String[1001][1001];
    static boolean[][]vis =new boolean[1001][1001];
    static int []k={1,0,-1,0};
    static int []l={0,-1,0,1};
    static void dfs(int x,int y){
        if(x<1 || y<1 || x>n || y>m || a[x][y].equals(""#"") || vis[x][y]){
            return;
        }

        vis[x][y]=true;
        if(a[x][y].equals(""!"")){
            sum++;
        }

        for (int i = 0; i < 4; i++) {
            dfs(x+k[i],y+l[i]);
        }

    }
    public static void main(String[] args) {
        Scanner in=new Scanner(System.in);
        n=in.nextInt();
        m=in.nextInt();

        for (int i = 1; i <=n ; i++) {
            String b=in.next();
            for (int j = 1; j <=m ; j++) {
                a[i][j]= String.valueOf(b.charAt(j-1));
            }
        }

        for (int i = 1; i <=n ; i++) {
            for (int j = 1; j <=m ; j++) {
                if(a[i][j].equals(""@"")){
                    dfs(i,j);
                }
            }
        }
        System.out.println(sum);
    }
}
"
109,C,Java,61808161,2023-04-07 23:01:10,人工智能3222周克豪,答案正确,"import java.util.Scanner;

public class Main {
    static boolean vis[][];//访问数组
    static char arr[][];//读入数组
    static int max = 0;
    static int[] dx;
    static int[] dy;
    static int n;
    static int m;

    static void dfs(int i, int j) {
        if (i < 1 || j < 1 || i > n || j > m || vis[i][j] || arr[i][j] == '#') return;
        vis[i][j] = true;
        if (arr[i][j] == '!') {
//                        System.out.println(i);
//                        System.out.println(j);
            max++;
        }
        for (int k = 0; k < 4; k++) {
            int x = i + dx[k];
            int y = j + dy[k];
            dfs(x, y);
        }
    }

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        dx = new int[]{1, 0, -1, 0};//下，上，右，左
        dy = new int[]{0, -1, 0, 1};
        int startx=0;
        int starty=0;

        n = in.nextInt();
        m = in.nextInt();
        vis = new boolean[1010][1010];
        arr = new char[1010][1010];
        for (int i = 1; i <= n; i++) {
            String s = "" "" + in.next();
            for (int j = 1; j <= m; j++) {
                arr[i][j] = s.charAt(j);
                if (arr[i][j] == '@') {
//                    vis[i][j] = true;
                    startx=i;
                    starty=j;
//                    System.out.println(startx);
//                    System.out.println(starty);
                }
            }
        }
        dfs(startx,starty);
//
        System.out.println(max);


    }
}"
110,C,Java,61808707,2023-04-07 23:48:15,Devotedz,答案正确,"import java.util.*;
import java.io.*;
public class Main{
    static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
    static char [][]map;
    static int[]dx = {0,1,0,-1};
    static int[]dy = {1,0,-1,0};
    static boolean [][]vis;
    static int ans = 0;
    static Queue<int[]>qe = new LinkedList<>();
    public static void main(String[]args) throws IOException{
        String []s = in.readLine().split("" "");
        int n = Integer.parseInt(s[0]);
        int m = Integer.parseInt(s[1]);
        map = new char[n][m];
        vis = new boolean[n][m];
        for(int i = 0;i<n;i++){
            String ss = in.readLine();
            for(int j = 0;j<m;j++){
                map[i][j]=ss.charAt(j);
            }
        }
         for(int i = 0;i<n;i++){
            for(int j = 0;j<m;j++){
               if(map[i][j]=='@'){//起始位置入队
                   qe.offer(new int[]{i,j});
                   break;
               }
            }
        }
        while(!qe.isEmpty()){
            int[]num = qe.poll();
            if(vis[num[0]][num[1]]==true){
                continue;
            }
            vis[num[0]][num[1]]=true;
            if(map[num[0]][num[1]]=='!'){
                ans++;
            }
            for(int i = 0;i<4;i++){
                int nx = num[0]+dx[i];
                int ny = num[1]+dy[i];
            if(nx>=0&&nx<n&&ny>=0&&ny<m){
                if(map[nx][ny]!='#'&&!vis[nx][ny]){
                qe.offer(new int[]{nx,ny});
                    }
            }
            }
        }
        out.println(ans);
        in.close();
        out.flush();
        }
    }"
111,C,Java,61808709,2023-04-07 23:48:33,Devotedz,答案正确,"import java.util.*;
import java.io.*;
public class Main{
    static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
    static char [][]map;
    static int[]dx = {0,1,0,-1};
    static int[]dy = {1,0,-1,0};
    static boolean [][]vis;
    static int ans = 0;
    static Queue<int[]>qe = new LinkedList<>();
    public static void main(String[]args) throws IOException{
        String []s = in.readLine().split("" "");
        int n = Integer.parseInt(s[0]);
        int m = Integer.parseInt(s[1]);
        map = new char[n][m];
        vis = new boolean[n][m];
        for(int i = 0;i<n;i++){
            String ss = in.readLine();
            for(int j = 0;j<m;j++){
                map[i][j]=ss.charAt(j);
            }
        }
         for(int i = 0;i<n;i++){
            for(int j = 0;j<m;j++){
               if(map[i][j]=='@'){//起始位置入队
                   qe.offer(new int[]{i,j});
                   break;
               }
            }
        }
        while(!qe.isEmpty()){
            int[]num = qe.poll();
            if(vis[num[0]][num[1]]==true){
                continue;
            }
            vis[num[0]][num[1]]=true;
            if(map[num[0]][num[1]]=='!'){
                ans++;
            }
            for(int i = 0;i<4;i++){
                int nx = num[0]+dx[i];
                int ny = num[1]+dy[i];
            if(nx>=0&&nx<n&&ny>=0&&ny<m){
                if(map[nx][ny]!='#'&&!vis[nx][ny]){
                qe.offer(new int[]{nx,ny});
                    }
            }
            }
        }
        out.println(ans);
        in.close();
        out.flush();
        }
    }"
112,C,Java,61811647,2023-04-08 13:11:19,尖齿柠檬鲨,答案正确,"import java.util.Scanner;

public class Main {
    private static int result = 0;
    static int[] rows = {0, 0, -1, 1};
    static int[] cols = {-1, 1, 0, 0};

    static boolean[][] used;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int m = scanner.nextInt();
        int n = scanner.nextInt();
        char[][] maps = new char[m][n];
        used = new boolean[m][n];
        int row = 0;
        int col = 0;
        for (int i = 0; i < m; i++) {
            maps[i] = scanner.next().toCharArray();
            for (int j = 0; j < n; j++) {
                if (maps[i][j] == '#') {
                    used[i][j] = true;
                }
                if (maps[i][j] == '@') {
                    row = i;
                    col = j;
                }
            }
        }
        dfs(row, col , maps);
        System.out.println(result);
    }

    private static void dfs(int row, int col, char[][] maps) {
        if (maps[row][col] == '!') {
            result += 1;
        }
        for (int i = 0; i < rows.length; i++) {
            int newRow = row + rows[i];
            int newCol = col + cols[i];
            if (isInMaps(newRow, newCol, maps) && !used[newRow][newCol]) {
                used[newRow][newCol] = true;
                dfs(newRow, newCol, maps);
            }
        }
    }

    private static boolean isInMaps(int row, int col, final char[][] maps) {
        return (row >= 0 && row < maps.length) &&
            (col >= 0 && col < maps[row].length);
    }
}"
113,C,Java,61817409,2023-04-08 23:59:27,逍~,答案正确,"import java.util.Scanner;

public class Main {
    static int x=0;
    public static void main(String[] args) {

        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int m=sc.nextInt();

        char[][] arr=new char[n+2][m+2];

        for(int i=1;i<=n;i++) {
            if (sc.hasNext())
                sc.next().getChars(0, m, arr[i], 1);
        }
        sc.close();
        for(int i=0;i<=n+1;i++){
            arr[i][0]='#';
            arr[i][m+1]='#';
        }
        for(int i=0;i<=m+1;i++) {
            arr[0][i] = '#';
            arr[n+1][i] = '#';
        }
        for(int i=1;i<=n;i++)
            for(int j=1;j<=m;j++) {
                if(arr[i][j]=='@') {
                    F(i, j, arr);
                    break;
                }
            }

        System.out.println(x);
    }
    static void F(int i,int j,char[][] arr)
    {
        for(int a=i-1;a<=i+1;a+=2) {
            if (arr[a][j] == '.') {
                arr[a][j] = '#';

                F(a, j, arr);
            }
            if (arr[a][j] == '!') {
                arr[a][j] = '#';
                x++;
                F(a, j, arr);
            }
        }
        for(int b=j-1;b<=j+1;b+=2) {
            if (arr[i][b] == '.') {
                arr[i][b] = '#';

                F(i, b, arr);
            }
            if (arr[i][b] == '!') {
                arr[i][b] = '#';
                x++;
                F(i, b, arr);
            }
        }
    }
}

"
114,C,Java,61819182,2023-04-09 09:55:30,牛客846475265号,答案正确,"import java.util.*;
public class Main {
    static int N = 1100;
    static char[][] a = new char[N][N];
    static int n, m;
    static int ans;

    
    public static void main(String[] args) {
        Scanner cin = new Scanner(System.in);
        n = cin.nextInt();
        m = cin.nextInt();
        cin.nextLine();
        int x = 0, y = 0;
        for (int i = 1; i <= n; i++){
            String str = cin.nextLine();
            for (int j = 1; j <= m; j++) {
                a[i][j] = str.charAt(j-1);
                if (a[i][j] == '@') {
                    x = i;
                    y = j;
                }
             }
        }
        ans = 0;     
        dfs(x, y);
        System.out.println(ans);
    }
    public static void dfs(int x, int y) {
        if (x < 1 || x > n || y < 1 || y > m) {
            return ;
        }
        if (a[x][y] == '#') {
            return ;
        }
        if (a[x][y] == '!') {
            ans++;
        }
        a[x][y] = '#';
        dfs(x-1, y);
        dfs(x, y+1);
        dfs(x+1, y);
        dfs(x, y-1);
    }
}"
115,C,Java,61833943,2023-04-09 23:57:29,人工智能3222周克豪,答案错误,"import java.util.Scanner;

public class Main {
    static int n;
    static int m;
    static boolean vis[][];
    static char chars[][];
    static int ans=0;
    static int dx[];
    static int dy[];

    static void dfs(int x, int y) {
        for (int i = 0; i < 4; i++) {
             x=x+dx[i];
             y=y+dy[i];
             if (x>=1&&x<=n&&y>=1&&y<=m&&chars[x][y]!='#'&&!vis[x][y]){
                 if (chars[x][y]=='!'){
                     ans++;
                 }
                 vis[x][y]=true;
                 dfs(x,y);
             }
        }

    }

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        n = in.nextInt();
        m = in.nextInt();
        vis = new boolean[1010][1010];
        chars = new char[1010][1010];
        dx=new int[]{0,1,0,-1};
        dy=new int[]{1,0,-1,0};
        int startx = 0;
        int starty = 0;
        for (int i = 1; i <= n; i++) {
            String s ="" ""+in.next();
            for (int j = 1; j <= m; j++) {
                chars[i][j] = s.charAt(j);
                if (chars[i][j] == '@') {
                    startx = i;
                    starty = j;
                }
            }
        }
        vis[startx][starty]=true;
        dfs(startx, starty);
        System.out.println(ans);


    }
}"
116,C,Java,61833948,2023-04-09 23:58:00,人工智能3222周克豪,答案错误,"import java.util.Scanner;

public class Main {
    static int n;
    static int m;
    static boolean vis[][];
    static char chars[][];
    static int ans=0;
    static int dx[];
    static int dy[];

    static void dfs(int x, int y) {
        for (int i = 0; i < 4; i++) {
             x=x+dx[i];
             y=y+dy[i];
             if (x>=1&&x<=n&&y>=1&&y<=m&&chars[x][y]!='#'&&!vis[x][y]){
                 if (chars[x][y]=='!'){
                     ans++;
                 }
                 vis[x][y]=true;
                 dfs(x,y);
             }
        }

    }

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        n = in.nextInt();
        m = in.nextInt();
        vis = new boolean[1010][1010];
        chars = new char[1010][1010];
        dx=new int[]{0,1,0,-1};
        dy=new int[]{1,0,-1,0};
        int startx = 0;
        int starty = 0;
        for (int i = 1; i <= n; i++) {
            String s ="" ""+in.next();
            for (int j = 1; j <= m; j++) {
                chars[i][j] = s.charAt(j);
                if (chars[i][j] == '@') {
                    startx = i;
                    starty = j;
                }
            }
        }
        vis[startx][starty]=true;
        dfs(startx, starty);
        System.out.println(ans);


    }
}"
117,C,Java,61834004,2023-04-10 00:10:10,人工智能3222周克豪,答案正确,"import java.util.Scanner;

public class Main {
    static int n;
    static int m;
    static boolean vis[][];
    static char chars[][];
    static int ans=0;
    static int dx[];
    static int dy[];

    static void dfs(int i, int j) {
        for (int k = 0; k < 4; k++) {
            int x=i+dx[k];
            int y=j+dy[k];
             if (x>=1&&x<=n&&y>=1&&y<=m&&chars[x][y]!='#'&&!vis[x][y]){
                 if (chars[x][y]=='!'){
                     ans++;
//                     System.out.println(x);
//                     System.out.println(y);
                 }
                 vis[x][y]=true;
                 dfs(x,y);
             }
        }

    }

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        n = in.nextInt();
        m = in.nextInt();
        vis = new boolean[1010][1010];
        chars = new char[1010][1010];
        dx=new int[]{1,0,-1,0};
        dy=new int[]{0,-1,0,1};
        int startx = 0;
        int starty = 0;
        for (int i = 1; i <= n; i++) {
            String s ="" ""+in.next();
            for (int j = 1; j <= m; j++) {
                chars[i][j] = s.charAt(j);
                if (chars[i][j] == '@') {
                    startx = i;
                    starty = j;
                }
            }
        }
        vis[startx][starty]=true;
        dfs(startx, starty);
        System.out.println(ans);


    }
}"
118,C,Java,61844182,2023-04-11 13:30:51,lllllllle,答案正确,"
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.Period;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Queue;
import java.util.Scanner;
import java.util.Set;
import java.util.TreeMap;
import java.util.TreeSet;

public class Main {
	 
	public static void solve01() throws IOException {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		String s=br.readLine();
		char[] c=s.toCharArray();
		for(int i=0;i<c.length;i++) {
			if(c[i]<'a') {
				c[i]+='a'-'A';
			}
			else {
				c[i]-='a'-'A';
			}
		}
		System.out.println(new String(c));
	}
	
	
	 
	public static void main(String[] args) throws IOException {
//		solve01();
//		solve02();
		solve03();
		
	}


	static class Union{
		int[] fa;
		public Union(int n) {
			fa=new int[n];
			for(int i=0;i<n;i++) {
				fa[i]=i;
			}
		}
		public int find(int x) {
			if(fa[x]!=x) {
				fa[x]=find(fa[x]);
			}
			return fa[x];
		}
		public void merge(int v,int w) {
			int pv=find(v);
			int pw=find(w);
			if(pv==pw) {
				return;
			}
			fa[pv]=pw;
		}
	}
	private static void solve03() throws IOException {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		String[] s=br.readLine().split("" "");
		int n=Integer.parseInt(s[0]);
		int m=Integer.parseInt(s[1]);
		char[][] grid=new char[n][m];
		for(int i=0;i<n;i++) {
			grid[i]=br.readLine().toCharArray();
		}
		Union un=new Union(n*m);
		int[][] dir= {{1,0},{0,1},{-1,0},{0,-1}};
		int tx=-1,ty=-1;
		for(int i=0;i<n;i++) {
			for(int j=0;j<m;j++) {
				if(grid[i][j]=='#') {
					continue;
				}
				if(grid[i][j]=='@') {
					tx=i;
					ty=j;
				}
				for(int k=0;k<4;k++) {
					int x=i+dir[k][0];
					int y=j+dir[k][1];
					if(x>=0&&x<n&&y>=0&&y<m) {
						if(grid[x][y]!='#') {
							un.merge(i*m+j, x*m+y);
						}
					}
				}
			}
		}
		int ans=0;
		int fa=un.find(tx*m+ty);
		for(int i=0;i<n;i++) {
			for(int j=0;j<m;j++) {
				if(grid[i][j]=='#') {
					continue;
				}
				if(grid[i][j]=='!') {
					if(un.find(i*m+j)==fa) {
						ans++;
					}
				}
			}
		}
		System.out.println(ans);
	}



	private static void solve02() throws IOException {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		String[] s=br.readLine().split("" "");
		int n=Integer.parseInt(s[0]);
		int m=Integer.parseInt(s[1]);
		int[][] grid=new int[n][m];
		for(int i=0;i<n;i++) {
			s=br.readLine().split("" "");
			for(int j=0;j<m;j++) {
				grid[i][j]=Integer.parseInt(s[j]);
			}
		}
		int[][] ans=new int[n/2][m/2];
		for(int i=0,ii=0;i<n/2;i++,ii+=2) {
			for(int j=0,jj=0;j<m/2;j++,jj+=2) {
				ans[i][j]=(grid[ii][jj]+grid[ii][jj+1]+grid[ii+1][jj]+grid[ii+1][jj+1])/4;
				System.out.print(ans[i][j]+"" "");
			}
			System.out.println();
		}
	}
	
	
}
"
