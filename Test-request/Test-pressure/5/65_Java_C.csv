,index,languageName,submissionId,submitTime,userName,statusMessage,code
0,C,Java,60142138,2023-01-06 19:13:34,acm_team22311,答案正确,"import java.io.*;
import java.math.BigInteger;
import java.util.*;

public class Main {
    static int N = 200010;
    static int n;

    public static void main(String[] args) throws IOException {
        FastScanner f = new FastScanner();
        PrintWriter w = new PrintWriter(System.out);
        int n = f.nextInt();
        int m = f.nextInt();
        TreeMultiSet<Integer> set = new TreeMultiSet<>();
        for (int i = 1; i <= n; i++) set.add(i);
        for (int i = 0; i < m; i++) {
            int k = f.nextInt();
            int x = f.nextInt();
            if (k == 1) {
                set.remove(x);
            } else {
                if (set.lower(x) == null) w.println(0);
                else w.println(set.lower(x));
            }
        }
        w.flush();
    }

    private static class FastScanner {
        final private int BUFFER_SIZE = 1 << 16;
        private DataInputStream din;
        private byte[] buffer;
        private int bufferPointer, bytesRead;

        private FastScanner() throws IOException {
            din = new DataInputStream(System.in);
            buffer = new byte[BUFFER_SIZE];
            bufferPointer = bytesRead = 0;
        }

        private short nextShort() throws IOException {
            short ret = 0;
            byte c = read();
            while (c <= ' ') c = read();
            boolean neg = (c == '-');
            if (neg) c = read();
            do ret = (short) (ret * 10 + c - '0');
            while ((c = read()) >= '0' && c <= '9');
            if (neg) return (short) -ret;
            return ret;
        }

        private int nextInt() throws IOException {
            int ret = 0;
            byte c = read();
            while (c <= ' ') c = read();
            boolean neg = (c == '-');
            if (neg) c = read();
            do ret = ret * 10 + c - '0';
            while ((c = read()) >= '0' && c <= '9');
            if (neg) return -ret;
            return ret;
        }

        public long nextLong() throws IOException {
            long ret = 0;
            byte c = read();
            while (c <= ' ') c = read();
            boolean neg = (c == '-');
            if (neg) c = read();
            do ret = ret * 10 + c - '0';
            while ((c = read()) >= '0' && c <= '9');
            if (neg) return -ret;
            return ret;
        }

        private char nextChar() throws IOException {
            byte c = read();
            while (c <= ' ') c = read();
            return (char) c;
        }

        private String nextString() throws IOException {
            StringBuilder ret = new StringBuilder();
            byte c = read();
            while (c <= ' ') c = read();
            do {
                ret.append((char) c);
            } while ((c = read()) > ' ');
            return ret.toString();
        }

        private void fillBuffer() throws IOException {
            bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);
            if (bytesRead == -1) buffer[0] = -1;
        }

        private byte read() throws IOException {
            if (bufferPointer == bytesRead) fillBuffer();
            return buffer[bufferPointer++];
        }
    }

    /**
     * 允许重复元素的TreeSet
     *
     * @author: yry
     * @date: 2020/3/15
     */
    static class TreeMultiSet<E> extends AbstractSet<E>
            implements NavigableSet<E>, Cloneable, java.io.Serializable {

        private static final long serialVersionUID = 1L;

        private transient NavigableMap<E, Integer> treeMap;

        // 总个数(重复算多个)
        private transient int size = 0;

        private TreeMultiSet(NavigableMap<E, Integer> m) {
            this.treeMap = m;
        }

        public TreeMultiSet() {
            this(new TreeMap<E, Integer>());
        }

        public TreeMultiSet(Comparator<? super E> comparator) {
            this(new TreeMap<>(comparator));
        }

        public TreeMultiSet(Collection<? extends E> c) {
            this();
            addAll(c);
        }

        public TreeMultiSet(SortedSet<E> s) {
            this(s.comparator());
            addAll(s);
        }

        /**
         * 可重复元素的迭代器
         */
        private class Itr implements Iterator<E> {
            private int cursor;
            // 当前treeMap的key对应的
            private Iterator<E> curKeyItr;
            // 当前元素
            private E curVal;
            // 当前treeMap的key对应的索引，即对应当前第几个重复元素
            private int curKeyItrIndex;

            Itr(NavigableSet<E> keySet) {
                cursor = 0;
                curKeyItr = keySet.iterator();
                if (curKeyItr.hasNext()) {
                    curVal = curKeyItr.next();
                }
                curKeyItrIndex = 0;
            }

            Itr() {
                this(treeMap.navigableKeySet());
            }

            @Override
            public boolean hasNext() {
                return cursor < size;
            }

            @Override
            public E next() {
                if (!hasNext()) {
                    throw new NoSuchElementException();
                }

                int curValCount = treeMap.get(curVal);
                E res = null;
                if (curKeyItrIndex < curValCount) {
                    curKeyItrIndex++;
                    res = curVal;
                    if (curKeyItrIndex == curValCount) {
                        // 移动到下一个key
                        if (curKeyItr.hasNext()) {
                            curVal = curKeyItr.next();
                        }
                        curKeyItrIndex = 0;
                    }
                }

                cursor++;
                return res;
            }
        }

        /**
         * 返回所有不相同的元素的正向迭代器
         *
         * @return 所有不相同的元素的正向迭代器
         */
        public Iterator<E> diffIterator() {
            return treeMap.navigableKeySet().iterator();
        }

        /**
         * 返回所有不相同的元素的反向迭代器
         *
         * @return 所有不相同的元素的反向迭代器
         */
        public Iterator<E> diffDescendingIterator() {
            return treeMap.descendingKeySet().iterator();
        }

        /**
         * 返回所有元素（重复元素要next多次）的正向迭代器
         *
         * @return 所有元素的正向正向迭代器
         */
        @Override
        public Iterator<E> iterator() {
            return new TreeMultiSet.Itr();
        }

        /**
         * 返回所有元素（重复元素要next多次）的反向迭代器
         *
         * @return 所有元素的反向迭代器
         */
        @Override
        public Iterator<E> descendingIterator() {
            return new TreeMultiSet.Itr(treeMap.descendingKeySet());
        }

        /**
         * 返回逆序集合
         *
         * @return 逆序集合
         */
        @Override
        public NavigableSet<E> descendingSet() {
            TreeMultiSet<E> descendingSet = new TreeMultiSet<>(treeMap.descendingMap());
            descendingSet.size = size;
            return descendingSet;
        }

        /**
         * 计算map中的所有元素个数之和（并不是key的个数，而是sum(key * value)）
         *
         * @param countMap key为元素，value为count的map
         * @return map的所有元素个数之和
         */
        private int calcMapSize(NavigableMap<E, Integer> countMap) {
            int size = 0;
            for (E e : countMap.keySet()) {
                size += countMap.get(e);
            }
            return size;
        }

        /**
         * 返回指定头尾元素的连续子集
         */
        @Override
        public NavigableSet<E> subSet(E fromElement, boolean fromInclusive, E toElement, boolean toInclusive) {
            NavigableMap<E, Integer> subMap = treeMap.subMap(fromElement, fromInclusive, toElement, toInclusive);
            TreeMultiSet<E> subSet = new TreeMultiSet<>(subMap);
            subSet.size = calcMapSize(subMap);
            return subSet;
        }

        /**
         * 返回头部连续子集
         */
        @Override
        public NavigableSet<E> headSet(E toElement, boolean inclusive) {
            NavigableMap<E, Integer> headMap = treeMap.headMap(toElement, inclusive);
            TreeMultiSet<E> headSet = new TreeMultiSet<>(headMap);
            headSet.size = calcMapSize(headMap);
            return headSet;
        }

        /**
         * 返回尾部连续子集
         */
        @Override
        public NavigableSet<E> tailSet(E fromElement, boolean inclusive) {
            NavigableMap<E, Integer> tailMap = treeMap.tailMap(fromElement, inclusive);
            TreeMultiSet<E> tailSet = new TreeMultiSet<>(tailMap);
            tailSet.size = calcMapSize(tailMap);
            return tailSet;
        }

        @Override
        public SortedSet<E> subSet(E fromElement, E toElement) {
            return subSet(fromElement, true, toElement, false);
        }

        @Override
        public SortedSet<E> headSet(E toElement) {
            return headSet(toElement, false);
        }

        @Override
        public SortedSet<E> tailSet(E fromElement) {
            return tailSet(fromElement, true);
        }

        @Override
        public Comparator<? super E> comparator() {
            return treeMap.comparator();
        }

        /**
         * 返回总的元素个数（重复算多个）
         *
         * @return 总的元素个数
         */
        public int size() {
            return size;
        }

        /**
         * 返回不同的元素个数。
         *
         * @return 不同的元素个数
         */
        public int diffElementSize() {
            // 也就是treeMap的key的个数
            return treeMap.keySet().size();
        }

        /**
         * 获取第一个元素（如果比较器是从小到大的，第一个元素就是最小的，否则就是最大的）
         *
         * @return 第一个元素
         */
        public E first() {
            if (treeMap.isEmpty()) {
                return null;
            }

            return treeMap.firstKey();
        }

        /**
         * 获取最后一个元素（如果比较器是从小到大的，第一个元素就是最大的，否则就是最小的）
         *
         * @return 最后一个元素
         */
        public E last() {
            if (treeMap.isEmpty()) {
                return null;
            }
            return treeMap.lastKey();
        }

        /**
         * 是否包含某个元素
         *
         * @param o 指定元素
         * @return true-包含，false-不包含
         */
        @Override
        public boolean contains(Object o) {
            return treeMap.containsKey(o);
        }

        @Override
        public void clear() {
            treeMap.clear();
            size = 0;
        }

        /**
         * 添加指定元素(1个)
         *
         * @param e 要添加的元素
         * @return true
         */
        @Override
        public boolean add(E e) {
            return add(e, 1);
        }

        /**
         * 添加指定个数的元素，如果当前元素已经存在，则当前元素的数量+count，否则新建一个key。
         *
         * @param e     要添加的元素
         * @param count 要添加的指定元素的个数
         */
        public boolean add(E e, int count) {
            if (treeMap.containsKey(e)) {
                treeMap.put(e, treeMap.get(e) + count);
            } else {
                treeMap.put(e, count);
            }
            size += count;
            return true;
        }

        /**
         * 设置指定元素的数量
         *
         * @param e     指定元素
         * @param count 数量
         */
        public void setCount(E e, int count) {
            int oldCount = treeMap.getOrDefault(e, 0);
            treeMap.put(e, count);
            size = size - oldCount + count;
        }

        /**
         * 获取指定元素的个数
         *
         * @param e 指定元素
         * @return 指定元素的个数
         */
        public int count(E e) {
            return treeMap.getOrDefault(e, 0);
        }

        /**
         * 注意：一定要复写这个方法，目的是覆盖父类Collection的remove操作(复杂度是O(n))
         * 删除1个指定元素
         *
         * @param e 要删除的元素
         * @return 是否删除成功，若删除的元素不存在，返回false, 若删除的元素存在，但是要删除的count大于存在的count，返回false。否则返回true
         */
        public boolean remove(Object e) {
            return remove((E) e, 1);
        }

        /**
         * 删除count个指定元素，比如集合为[2,3,3,3,2], 若调用removeCount(3,2)，也就是删除2两个2，那么集合就变成[2,3,2]
         *
         * @param e     要删除的元素
         * @param count 要删除的指定元素的个数
         * @return 是否删除成功，若删除的元素不存在，返回false, 若删除的元素存在，但是要删除的count大于存在的count，返回false。否则返回true
         */
        public boolean remove(E e, int count) {
            if (count <= 0) {
                return false;
            }

            if (!treeMap.containsKey(e)) {
                return false;
            }

            int curCount = treeMap.get(e);
            if (curCount < count) {
                return false;
            } else if (curCount == count) {
                treeMap.remove(e);
            } else {
                treeMap.put(e, curCount - count);
            }

            size -= count;
            return true;
        }

        /**
         * 删除指定元素（包括所有的指定元素）。比如集合为[2,3,3,3,2]，若调用removeKey(3)，那么会删除所有的3，则集合变成[2,2]
         *
         * @param e 要删除的元素
         * @return 是否删除成功，若删除的元素不存在，返回false，否则返回true
         */
        public boolean removeAll(Object e) {
            if (!treeMap.containsKey(e)) {
                return false;
            }

            size -= treeMap.get(e);
            treeMap.remove(e);
            return true;
        }

        /**
         * 返回比给定元素严格小的最大元素
         *
         * @param e 给定元素
         * @return 比给定元素严格小的最大元素，若不存在，则返回null
         */
        @Override
        public E lower(E e) {
            return treeMap.lowerKey(e);
        }

        /**
         * 返回小于或等于给定元素的最大元素
         *
         * @param e 给定元素
         * @return 小于或等于给定元素的最大元素，若不存在，则返回null
         */
        @Override
        public E floor(E e) {
            return treeMap.floorKey(e);
        }

        /**
         * 返回比给定元素严格大的最小元素
         *
         * @param e 给定元素
         * @return 比给定元素严格小的最大元素，若不存在，则返回null
         */
        @Override
        public E higher(E e) {
            return treeMap.higherKey(e);
        }

        /**
         * 返回大于或等于给定元素的最小元素
         *
         * @param e 给定元素
         * @return 大于或等于给定元素的最小元素，若不存在，则返回null
         */
        @Override
        public E ceiling(E e) {
            return treeMap.ceilingKey(e);
        }

        /**
         * 删除第一个元素（指定数量）
         *
         * @param count 指定数量
         * @return 第一个元素
         */
        public E pollFirst(int count) {
            if (treeMap.isEmpty()) {
                return null;
            }
            E firstKey = treeMap.firstKey();
            remove(firstKey, count);
            return firstKey;
        }

        /**
         * 删除第一个元素(第一个元素有多个重复，仅删除其中一个)
         *
         * @return 第一个元素
         */
        public E pollFirst() {
            return pollFirst(1);
        }

        /**
         * 删除第一个元素(包括所有数量)
         *
         * @return 第一个元素
         */
        public E pollFirstAll() {
            // firstKey如果不存在可能会抛异常
            if (treeMap.isEmpty()) {
                return null;
            }

            E firstKey = treeMap.firstKey();
            size -= treeMap.get(firstKey);
            treeMap.remove(firstKey);
            return firstKey;
        }

        /**
         * 删除最后一个元素（若最后一个元素有多个重复，仅删除其中一个）
         *
         * @return 最后一个元素
         */
        public E pollLast() {
            return pollLast(1);
        }

        /**
         * 删除最后一个元素（指定数量）
         *
         * @param count 指定数量
         * @return 最后一个元素
         */
        public E pollLast(int count) {
            if (treeMap.isEmpty()) {
                return null;
            }
            E lastKey = treeMap.lastKey();
            remove(lastKey, count);
            return lastKey;
        }

        /**
         * 删除最后一个元素(包括所有数量)
         *
         * @return 最后一个元素
         */
        public E pollLastAll() {
            if (treeMap.isEmpty()) {
                return null;
            }
            E lastKey = treeMap.lastKey();
            size -= treeMap.get(lastKey);
            treeMap.remove(lastKey);
            return lastKey;
        }

        /**
         * 浅拷贝
         *
         * @return 浅拷贝后的TreeMultiSet
         */
        @SuppressWarnings(""unchecked"")
        public Object clone() throws CloneNotSupportedException {
            TreeMultiSet<E> clone = (TreeMultiSet<E>) super.clone();
            clone.treeMap = new TreeMap<>(treeMap);
            return clone;
        }

    }

}"
1,C,Java,60144525,2023-01-06 19:27:12,刘映辰,运行超时,"import java.util.*;
import java.lang.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int k = in.nextInt();
        TreeSet<Integer> set = new TreeSet();
        for(int i = 0; i <= n; i++){
            set.add(i);
        }
        
        for(int i = 0; i < k; i++){
            int command = in.nextInt();
            int id = in.nextInt();
            if(command == 1){
                set.remove(id);
            }
            else{
                System.out.println(set.floor(id - 1));
            }   
        }
        
    }
}"
2,C,Java,60144682,2023-01-06 19:28:01,人工智能3211江海洋,执行出错,"import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        in.close();
        out.close();
    }

    static class TaskA {
        static class Node{
            int f,c;
        }
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int k = in.nextInt();
            Node[] nodes = new Node[n+1];

            for (int i = 0; i < n+1; i++) {
                nodes[i] = new Node();
                if(i==0){
                    nodes[i].f = -1;
                    nodes[i].c = i+1;
                }
                else if(i==n){
                    nodes[i].f = i-1;
                    nodes[i].c = -1;
                }
                else {
                    nodes[i].f = i-1;
                    nodes[i].c = i+1;
                }
            }
            for (int i = 0; i < k; i++) {
                int q = in.nextInt();
                int x = in.nextInt();
                if(q==1){
                    nodes[nodes[x].f].c = nodes[x].c;
                    nodes[nodes[x].c].f = nodes[x].f;
                }
                else{
                    out.println(nodes[x].f);
                }
            }

        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        boolean hasNext() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e) {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }
        void close() {
            if (reader != null)
            {
                try
                {
                    reader.close();
                } catch (IOException e)
                {
                    e.printStackTrace();
                }
            }
        }

    }
}
"
3,C,Java,60145190,2023-01-06 19:31:16,人工智能3211江海洋,答案正确,"import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        in.close();
        out.close();
    }

    static class TaskA {
        static class Node{
            int f,c;
        }
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int k = in.nextInt();
            Node[] nodes = new Node[n+1];

            for (int i = 0; i < n+1; i++) {
                nodes[i] = new Node();
                if(i==0){
                    nodes[i].f = -1;
                    nodes[i].c = i+1;
                }
                else if(i==n){
                    nodes[i].f = i-1;
                    nodes[i].c = -1;
                }
                else {
                    nodes[i].f = i-1;
                    nodes[i].c = i+1;
                }
            }
            for (int i = 0; i < k; i++) {
                int q = in.nextInt();
                int x = in.nextInt();
                if(q==1){
                    if(nodes[x].f==-1){
                        nodes[nodes[x].c].f = -1;
                    }
                    else if(nodes[x].c==-1){
                        nodes[nodes[x].f].c = -1;
                    }
                    else {
                        nodes[nodes[x].f].c = nodes[x].c;
                        nodes[nodes[x].c].f = nodes[x].f;
                    }
                    
                }
                else{
                    out.println(nodes[x].f);
                }
            }

        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        boolean hasNext() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e) {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }

        public BigDecimal nextBigDecimal() {
            return new BigDecimal(next());
        }
        void close() {
            if (reader != null)
            {
                try
                {
                    reader.close();
                } catch (IOException e)
                {
                    e.printStackTrace();
                }
            }
        }

    }
}
"
4,C,Java,60145238,2023-01-06 19:31:35,迷你滨,答案错误,"import java.util.*;
import java.io.*;
import java.math.*;
//那就是希望
//即使需要取模，也是光明

public class Main{
	static int maxn = 200005,n,m,mod = (int)1e9+7;
	static long INF = (long)1e18,ans = 0;
	
	static Scanner sc = new Scanner (System.in);
	static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st  =new StreamTokenizer(bf);
    static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));
    public static void main(String[]args) throws IOException{
    	int T = 1;
    	//T = sc.nextInt();
        while(T-->0) solve();
        pw.flush();
    }
    static int I() throws IOException {
    	st.nextToken();
    	return (int)st.nval;
    }
    
    static long gcd(long a,long b) {
    	if(b == 0) return a;
    	return gcd(b,a%b);
    }
    
    static long fpow(long a,long b,long mod) {
    	long res = 1;
    	a%=mod;
    	while(b>0) {
    		if(b%2 == 1) res = res*a%mod;
    		a = a*a%mod;
    		b/=2;
    	}
    	return res;
    }
    
    static int p[] = new int [1000005];
    
    static int find(int x) {
    	if(p[x] == x) return x;
    	return p[x] = find(p[x]);
    }
    
    static void solve() throws IOException{
    	int n = I(),k = I();
    	for (int i = 1 ; i <=1000003 ; i++)
    		p[i] = i-1;
    	while(k-->0) {
    		int m = I();
    		if(m == 1) {
    			int x = I();
    			p[x+1] = p[x];
    		}
    		else {
    			int x = I();
    			pw.println(p[x]);
    		}
    	}
    }
}"
5,C,Java,60145302,2023-01-06 19:31:59,codingj,答案错误,"import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;

public class Main {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
	static int N = (int)(1e6 + 10);
	static int []a = new int[N];
	public static void main(String[] args) throws Exception{
		String nk[] = br.readLine().split("" "");
		int n = Integer.parseInt(nk[0]);
		int k = Integer.parseInt(nk[1]);
		for(int i = 1; i <= n; i++) {
			a[i] = i - 1;
		}
		while((k--) > 0) {
			String ops[] = br.readLine().split("" "");
			int op = Integer.parseInt(ops[0]);
			int x = Integer.parseInt(ops[1]);
			if(op == 1) {
				if(x != n) {
					a[x + 1] = a[x];
				}
			}else {
				out.println(a[x]);
			}
			out.flush();
		}
	}
}
"
6,C,Java,60145670,2023-01-06 19:34:09,Eunoiay,运行超时,"import java.util.Scanner;

public class Main {
    static final int N = 1000010;
    static int[] a = new int[N];
    
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        int n = sc.nextInt();
        int k = sc.nextInt();
        for (int i = 1; i <= n; i++) {
            a[i] = i;
        }
        
        label:
        while (k-- != 0) {
            int op = sc.nextInt();
            int x  = sc.nextInt();
            if (op == 1) a[x] = 0;
            if (op == 2) {
                for (int i = x - 1; i >= 1; i--) {
                    if (a[i] != 0) {
                        System.out.println(a[i]);
                        continue label;
                    }
                }
                System.out.println(""0"");
            }
        }
    }
}"
7,C,Java,60146407,2023-01-06 19:38:35,Mosyi.,运行超时,"import java.io.*;
import java.lang.reflect.Array;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int[] aa = new int[n+1];
            for (int i = 1; i <= n; i++) {
                aa[i] = i;
            }
            int k = in.nextInt();
            for (int i = 0; i < k; i++) {
                int a = in.nextInt();
                int b = in.nextInt();
                if(a == 1){
                    aa[b] = 0;
                }else if(a == 2){
                    int f = 0;
                    for (int j = b-1; j >= 0; j--) {
                        if(aa[j] != 0){
                            out.println(j);
                            f = 1;
                            break;
                        }
                    }
                    if(f == 0){
                        out.println(0);
                    }
                }
            }
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
8,C,Java,60146488,2023-01-06 19:39:11,牛客935801330号（人工智能3211吴华聪）,运行超时,"









import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {

        public void solve(int testNumber, InputReader in, PrintWriter out) {
       int n=in.nextInt();
       int m=in.nextInt();
        ArrayList<Integer>l=new ArrayList();
            for (int i = 0; i < n; i++) {
                l.add(i+1);
            }
            for (int i = 0; i <m ; i++) {
                int b=in.nextInt();
                int x=in.nextInt();
                if(b==1){
                    l.remove((Object)x);
                }
                else {
                    int index=l.indexOf(x);
                    if(index==0){
                        out.println(0);
                    }
                    else {
                        out.println(l.get(index-1));
                    }
                }
            }
        }


    }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
9,C,Java,60146754,2023-01-06 19:40:42,it`s_all_good_man,运行超时,"import java.sql.SQLOutput;
import java.util.*;

public class Main {

    public static void main(String[] args) {
        new Main().process();
    }

    public void process(){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt(), k = sc.nextInt();
        TreeSet<Integer> set = new TreeSet<>();
        for(int i = 1; i <= n; i++) set.add(i);
        for(int i = 0; i < k; i++){
            if(sc.nextInt() == 1){
                set.remove(sc.nextInt());
            }else {
                Integer res = set.lower(sc.nextInt());
                System.out.println(res == null ? 0 : res);
            }
        }
    }
}"
10,C,Java,60146938,2023-01-06 19:41:45,Eunoiay,运行超时,"import java.io.*;

public class Main {
    static final int N = 1000010;
    static int[] a = new int[N];
    
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter pw = new PrintWriter(System.out);
        
        String[] in = br.readLine().split("" "");
        int n = Integer.parseInt(in[0]);
        int k = Integer.parseInt(in[1]);
        
        for (int i = 1; i <= n; i++) {
            a[i] = i;
        }
        
        label:
        while (k-- != 0) {
            in = br.readLine().split("" "");
            int op = in[0].charAt(0) - '0';
            int x = Integer.parseInt(in[1]);
            if (op == 1) a[x] = 0;
            if (op == 2) {
                for (int i = x - 1; i >= 1; i--) {
                    if (a[i] != 0) {
                        System.out.println(a[i]);
                        continue label;
                    }
                }
                System.out.println(""0"");
            }
        }
    }
}"
11,C,Java,60146954,2023-01-06 19:41:50,人工智能3212卢明涛,答案错误,"import java.util.Arrays;
import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        static int f2(int n){
            if (n==1){
                return 1;
            }
            else if (n==2){
                return 2;
            }
            else{
                return f2(n-1)+f2(n-2);
            }
        }
        static int qpow(int a, int n)
        {
            if (n == 0)
                return 1;
            else if (n % 2 == 1)
                return qpow(a, n - 1) * 2 % 10000;
            else
            {
                int temp = qpow(a, n / 2) % 10000;
                return temp * temp % 10000;
            }
        }
        static int f3(int a){
            if (a==1){
                return 1;
            }
            else if (a==2){
                return 2;
            }
            else{
                return (f3(a-1)+(a-1)*f3(a-2)) % 1000000007;
            }
        }
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int k = in.nextInt();
            int math[] = new int[n+2];
            for (int i=0;i<=n;i++){
                math[i] = i;
            }
            for (int i=0;i<k;i++){
                int f = in.nextInt();
                int id = in.nextInt();
                if (f==1){
                    math[id]=math[id-1];
                }
                else{
                    out.println(math[id-1]);
                }
            }
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
12,C,Java,60147024,2023-01-06 19:42:19,乐观的牛肉丸寄了,运行超时,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int n =input.nextInt();
        int arr[] = new int[n+1];
        for (int i = 1; i < arr.length; i++) {
            arr[i] = i-1;
        }
        int k = input.nextInt();
        for (int i = 0; i < k ; i++) {
            int select =input.nextInt();
            int temp = input.nextInt();
            if (select==1)
            {
               arr[temp] = -1;
                int j;
                for ( j= temp; j >0 ; j--) {
                    if (arr[j]!=-1)
                    {
                        arr[temp+1]=j;
                        break;
                    }
                }
                if (j== 0)
                    arr[temp+1]=j;
            }
            else
            {
                System.out.println(arr[temp]);
            }
        }
    }
}
"
13,C,Java,60147087,2023-01-06 19:42:35,Eunoiay,运行超时,"import java.io.*;

public class Main {
    static final int N = 1000010;
    static int[] a = new int[N];
    
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter pw = new PrintWriter(System.out);
        
        String[] in = br.readLine().split("" "");
        int n = Integer.parseInt(in[0]);
        int k = Integer.parseInt(in[1]);
        
        for (int i = 1; i <= n; i++) {
            a[i] = i;
        }
        
        label:
        while (k-- != 0) {
            in = br.readLine().split("" "");
            int op = in[0].charAt(0) - '0';
            int x = Integer.parseInt(in[1]);
            if (op == 1) a[x] = 0;
            if (op == 2) {
                for (int i = x - 1; i >= 1; i--) {
                    if (a[i] != 0) {
                        pw.println(a[i]);
                        continue label;
                    }
                }
                pw.println(""0"");
            }
        }
        pw.flush();
    }
}"
14,C,Java,60147097,2023-01-06 19:42:41,Eunoiay,运行超时,"import java.io.*;

public class Main {
    static final int N = 1000010;
    static int[] a = new int[N];
    
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter pw = new PrintWriter(System.out);
        
        String[] in = br.readLine().split("" "");
        int n = Integer.parseInt(in[0]);
        int k = Integer.parseInt(in[1]);
        
        for (int i = 1; i <= n; i++) {
            a[i] = i;
        }
        
        label:
        while (k-- != 0) {
            in = br.readLine().split("" "");
            int op = in[0].charAt(0) - '0';
            int x = Integer.parseInt(in[1]);
            if (op == 1) a[x] = 0;
            if (op == 2) {
                for (int i = x - 1; i >= 1; i--) {
                    if (a[i] != 0) {
                        pw.println(a[i]);
                        continue label;
                    }
                }
                pw.println(""0"");
            }
        }
        pw.flush();
    }
}"
15,C,Java,60147422,2023-01-06 19:44:29,it`s_all_good_man,运行超时,"import java.sql.SQLOutput;
import java.util.*;

public class Main {

    public static void main(String[] args) {
        new Main().process();
    }

    public void process(){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt(), k = sc.nextInt();
        TreeSet<Integer> set = new TreeSet<>();
        for(int i = 1; i <= n; i++) set.add(i);
        for(int i = 0; i < k; i++){
            if(sc.nextInt() == 1){
                set.remove(sc.nextInt());
            }else {
                Integer res = set.lower(sc.nextInt());
                System.out.println(res == null ? 0 : res);
            }
        }
    }
}"
16,C,Java,60147616,2023-01-06 19:45:30,迷你滨,答案正确,"import java.util.*;
import java.io.*;
import java.math.*;
//那就是希望
//即使需要取模，也是光明

public class Main{
	static int maxn = 200005,n,m,mod = (int)1e9+7;
	static long INF = (long)1e18,ans = 0;
	
	static Scanner sc = new Scanner (System.in);
	static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
    static StreamTokenizer st  =new StreamTokenizer(bf);
    static PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));
    public static void main(String[]args) throws IOException{
    	int T = 1;
    	//T = sc.nextInt();
        while(T-->0) solve();
        pw.flush();
    }
    static int I() throws IOException {
    	st.nextToken();
    	return (int)st.nval;
    }
    
    static long gcd(long a,long b) {
    	if(b == 0) return a;
    	return gcd(b,a%b);
    }
    
    static long fpow(long a,long b,long mod) {
    	long res = 1;
    	a%=mod;
    	while(b>0) {
    		if(b%2 == 1) res = res*a%mod;
    		a = a*a%mod;
    		b/=2;
    	}
    	return res;
    }
    
    static int p[] = new int [1000005];
    
    static int find(int x) {
    	if(p[x] == x-1) return x-1;
    	return p[x] = find(p[x]);
    }
    
    static void solve() throws IOException{
    	int n = I(),k = I();
    	for (int i = 1 ; i <=1000003 ; i++)
    		p[i] = i-1;
    	while(k-->0) {
    		int m = I();
    		if(m == 1) {
    			int x = I();
    			int xx = p[x+1];
    			p[x+1] = p[x];
    			int y = x+2;
    			while(p[y] == xx) p[y++] = p[x];
    		}
    		else {
    			int x = I();
    			
    			pw.println(p[x]);
    		}
    		//for (int i = 1 ; i <= n ; i++)
    		//	System.out.print(p[i]+"" "");
    		//System.out.println();
    	}
    }
}"
17,C,Java,60147667,2023-01-06 19:45:50,刘映辰,运行超时,"import java.util.*;
import java.lang.*;

public class Main {
    static class Node{
        Node next;
        Node previous;
        int value = 0;;
        Node(int v){
           value = v;
       } 
    }
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int k = in.nextInt();
        HashMap<Integer, Node> map = new HashMap<>();
        map.put(0, new Node(0));
        
        for(int i = 1; i <= n + 1; i++){
            Node current = new Node(i);
            current.previous = map.get(i - 1);
            map.put(i, current);
        }
        
        for(int i = 0; i < k; i++){
            int command = in.nextInt();
            int id = in.nextInt();
            
            
            if(command == 1){
                Node current = map.get(id + 1);
                current.previous = current.previous.previous;
            }
            else{
                Node current = map.get(id);
                System.out.println(current.previous.value);
            }   
        }
        
    }
}"
18,C,Java,60147677,2023-01-06 19:45:55,codingj,答案错误,"import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;

public class Main {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
	static int N = (int)(1e6 + 10);
	static int []a = new int[N];
	public static void main(String[] args) throws Exception{
		String nk[] = br.readLine().split("" "");
		int n = Integer.parseInt(nk[0]);
		int k = Integer.parseInt(nk[1]);
		for(int i = 1; i <= n; i++) {
			a[i] = i - 1;
		}
		while((k--) > 0) {
			String ops[] = br.readLine().split("" "");
			int op = Integer.parseInt(ops[0]);
			int x = Integer.parseInt(ops[1]);
			if(op == 1) {
				a[x + 1] = a[x];
			}else {
				out.println(a[x]);
			}
			out.flush();
		}
	}
}
"
19,C,Java,60147742,2023-01-06 19:46:20,我不叫jhy,执行出错,"import java.io.*;
import java.util.*;
import java.math.*;
public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n= in.nextInt();
            int k= in.nextInt();
            int []x=new int[n+1];
            for (int i = 0; i <n; i++) {
                x[i+1]=i;
            }
            for (int l = 0; l <k; l++) {
                int f= in.nextInt();
                int a= in.nextInt();
                if (f==1){
                    int b=a;
                    while (x[b+1]==0){
                        b++;
                    }
                    x[b+1]=x[a];
                    x[a]=0;
                }
                else {
                    out.println(x[a]);
                }
            }
        }
    }


static class InputReader {
    public BufferedReader reader;
    public StringTokenizer tokenizer;

    public InputReader(InputStream stream) {
        reader = new BufferedReader(new InputStreamReader(stream), 32768);
        tokenizer = null;
    }
    boolean hasNext()
    {
        while (tokenizer == null || !tokenizer.hasMoreTokens())
        {
            try
            {
                tokenizer = new StringTokenizer(reader.readLine());
            } catch (Exception e)
            {
                return false;
                // TODO: handle exception
            }
        }
        return true;
    }
    public String next() {
        while (tokenizer == null || !tokenizer.hasMoreTokens()) {
            try {
                tokenizer = new StringTokenizer(reader.readLine());
            } catch (IOException e) {
                throw new RuntimeException(e);
            }
        }
        return tokenizer.nextToken();
    }
    public String nextLine()
    {
        String str = null;
        try
        {
            str = reader.readLine();
        } catch (IOException e)
        {
            e.printStackTrace();
        }
        return str;
    }
    public int nextInt() {
        return Integer.parseInt(next());
    }
    public double nextDouble(){
        return Double.parseDouble(next());
    }
    public long nextLong(){
        return Long.parseLong(next());
    }
    public BigInteger nextBigInteger()
    {
        return new BigInteger(next());
    }
    public BigDecimal nextBigDecimal()
    {
        return new BigDecimal(next());
    }

}
}"
20,C,Java,60147999,2023-01-06 19:48:01,cyclingle,答案正确,"import java.io.*;
//import java.math.BigInteger;
import java.util.*;
public class Main {
    static int sum=0;
    //static int n;
    static int N=300007;
    //static char [] arr=new char [300007];
    static int [] siz=new int [300007];
    static int [] p=new int[300007];
    static int fa[]=new int [10];
    //static List<Integer>pth[]=new List[300007];
    //static List<Integer>pth[]=new List[N];
    public static int gcd(int x,int y){
         if(x==0) return y;
         else return gcd(y%x,x);
    }
    public static void main(String [] args)throws IOException
    {
        FastScanner f = new FastScanner();
        PrintWriter w = new PrintWriter(System.out);
        int n,k;
        n=f.nextInt();k=f.nextInt();
        int nex[]=new int[1000006];
        int pos[]=new int[1000006];
        for(int i=1;i<=n;i++)
        {
            if(i==1) nex[i]=0;
            else nex[i]=i-1;
            if(i==n) pos[i]=0;
            else pos[i]=i+1;
        }
        for(int i=1;i<=k;i++)
        {
            int op,x;
            op=f.nextInt();x=f.nextInt();
            if(op==1)
            {
                int num=pos[x];
                if(num==0)
                {
                    continue;
                }
                else{
                    pos[nex[x]]=num;
                    nex[num]=nex[x];
                }
            }
            else{
                 w.println(nex[x]);
                w.flush();
            }
        }
        //System.out.println(ans);
        //sc.close();
    }    
    private static class FastScanner {
        final private int BUFFER_SIZE = 1 << 16;
        private DataInputStream din;
        private byte[] buffer;
        private int bufferPointer, bytesRead;
 
        private FastScanner() throws IOException {
            din = new DataInputStream(System.in);
            buffer = new byte[BUFFER_SIZE];
            bufferPointer = bytesRead = 0;
        }
 
        private short nextShort() throws IOException {
            short ret = 0;
            byte c = read();
            while (c <= ' ') c = read();
            boolean neg = (c == '-');
            if (neg) c = read();
            do ret = (short) (ret * 10 + c - '0');
            while ((c = read()) >= '0' && c <= '9');
            if (neg) return (short) -ret;
            return ret;
        }
 
        private int nextInt() throws IOException {
            int ret = 0;
            byte c = read();
            while (c <= ' ') c = read();
            boolean neg = (c == '-');
            if (neg) c = read();
            do ret = ret * 10 + c - '0';
            while ((c = read()) >= '0' && c <= '9');
            if (neg) return -ret;
            return ret;
        }
 
        public long nextLong() throws IOException {
            long ret = 0;
            byte c = read();
            while (c <= ' ') c = read();
            boolean neg = (c == '-');
            if (neg) c = read();
            do ret = ret * 10 + c - '0';
            while ((c = read()) >= '0' && c <= '9');
            if (neg) return -ret;
            return ret;
        }
 
        private char nextChar() throws IOException {
            byte c = read();
            while (c <= ' ') c = read();
            return (char) c;
        }
 
        private String nextString() throws IOException {
            StringBuilder ret = new StringBuilder();
            byte c = read();
            while (c <= ' ') c = read();
            do {
                ret.append((char) c);
            } while ((c = read()) > ' ');
            return ret.toString();
        }
 
        private void fillBuffer() throws IOException {
            bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);
            if (bytesRead == -1) buffer[0] = -1;
        }
 
        private byte read() throws IOException {
            if (bufferPointer == bytesRead) fillBuffer();
            return buffer[bufferPointer++];
        }
    }
}
"
21,C,Java,60148303,2023-01-06 19:49:46,我不叫jhy,答案正确,"import java.io.*;
import java.util.*;
import java.math.*;
public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n= in.nextInt();
            int k= in.nextInt();
            int []x=new int[n+1];
            int []y=new int[n+1];
            for (int i = 0; i <n; i++) {
                x[i+1]=i;
                y[i]=i+1;
            }
            for (int l = 0; l <k; l++) {
                int f= in.nextInt();
                int a= in.nextInt();
                if (f==1){
                    x[y[a]]=x[a];
                    y[x[a]]=y[a];
                }
                else {
                    out.println(x[a]);
                }
            }
        }
    }


static class InputReader {
    public BufferedReader reader;
    public StringTokenizer tokenizer;

    public InputReader(InputStream stream) {
        reader = new BufferedReader(new InputStreamReader(stream), 32768);
        tokenizer = null;
    }
    boolean hasNext()
    {
        while (tokenizer == null || !tokenizer.hasMoreTokens())
        {
            try
            {
                tokenizer = new StringTokenizer(reader.readLine());
            } catch (Exception e)
            {
                return false;
                // TODO: handle exception
            }
        }
        return true;
    }
    public String next() {
        while (tokenizer == null || !tokenizer.hasMoreTokens()) {
            try {
                tokenizer = new StringTokenizer(reader.readLine());
            } catch (IOException e) {
                throw new RuntimeException(e);
            }
        }
        return tokenizer.nextToken();
    }
    public String nextLine()
    {
        String str = null;
        try
        {
            str = reader.readLine();
        } catch (IOException e)
        {
            e.printStackTrace();
        }
        return str;
    }
    public int nextInt() {
        return Integer.parseInt(next());
    }
    public double nextDouble(){
        return Double.parseDouble(next());
    }
    public long nextLong(){
        return Long.parseLong(next());
    }
    public BigInteger nextBigInteger()
    {
        return new BigInteger(next());
    }
    public BigDecimal nextBigDecimal()
    {
        return new BigDecimal(next());
    }

}
}"
22,C,Java,60148392,2023-01-06 19:50:18,人工智能2312陈啸,运行超时,"import java.util.*;
import java.io.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            long n = in.nextLong();
            int m = in.nextInt();
            Set<Integer> c = new HashSet<>();
            for (int i = 1; i <= m; i++) {
                int a = in.nextInt();
                int b = in.nextInt();
                if(a==1)
                    c.add(b);
                else{
                    int k = 1;
                    while (c.contains(b-k)){
                        k ++;
                    }
                    if(b-k>=0)
                        System.out.println(b-k);
                    else
                        System.out.println(0);
                }
            }

        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

    }
}"
23,C,Java,60148410,2023-01-06 19:50:26,it`s_all_good_man,运行超时,"import java.sql.SQLOutput;
import java.util.*;

public class Main {

    public static void main(String[] args) {
        new Main().process();
    }

    public void process(){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt(), k = sc.nextInt();
        TreeSet<Integer> set = new TreeSet<>();
        for(int i = 1; i <= n; i++) set.add(i);
        for(int i = 0; i < k; i++){
            if(sc.nextInt() == 1){
                set.remove(sc.nextInt());
            }else {
                Integer res = set.lower(sc.nextInt());
                System.out.println(res == null ? 0 : res);
            }
        }
    }
}"
24,C,Java,60148649,2023-01-06 19:51:57,chuyb,运行超时,"
import java.text.DecimalFormat;
import java.util.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;


public class Main {

	public static void main(String[] args) {
	 Scanner sc=new Scanner(System.in);
	 int n=sc.nextInt();
	 int k=sc.nextInt();
	 StringBuilder str=new StringBuilder();
	 for(int i=0;i<=n;i++) {
		 str.append(i);
	 }
	 String tmp=str.toString();
	
	 for(int i=0;i<k;i++) {
		 int order=sc.nextInt();
		 int x=sc.nextInt();
		 if(order==1) {
			tmp=tmp.replaceAll(Integer.toString(x), """");
			
		 }else {
			 System.out.println(tmp.charAt((tmp.indexOf(Integer.toString(x))-1)));
		 }
		
	 }
	
     
  }
}
"
25,C,Java,60148838,2023-01-06 19:53:08,牛客722252005号,答案错误,"import java.util.*;
class Node{
    public int pre;
    public int after;

    public Node(int pre, int after) {
        this.pre = pre;
        this.after = after;
    }
}
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        Node[] nodes = new Node[n + 1];
        for (int i = 1; i <= n ; i++) {
            nodes[i] = new Node(i -1,i + 1 );
        }
        for (int i = 0; i < m; i++) {
            int l = sc.nextInt();
            int num = sc.nextInt();
            if(l == 1){
                int pre = nodes[num].pre;
                int after = nodes[num].after;
                if(after != n){
                    nodes[after].pre = pre;
                }
                if(pre != 0)
                    nodes[pre].after = after;
            }else {
                System.out.println(nodes[num].pre);
            }
        }

    }


}


"
26,C,Java,60148858,2023-01-06 19:53:19,shitter,答案正确,"import java.io.*;
import java.util.*;

public class Main {
    static InputReader in;
    static OutputWriter out;

    private static void ezpz() throws IOException {
        int n=in.nextInt();
        int k=in.nextInt();

        TreeSet<Integer> s=new TreeSet<>();
        for(int i=0;i<=n;i++)
            s.add(i);

        while(k-->0) {
            int op=in.nextInt();
            int x=in.nextInt();

            if(op==1)
                s.remove(x);
            else
                out.println(s.lower(x));
        }
    }

    public static void main(String[] args) throws Exception {
        in=new InputReader(System.in);
        out=new OutputWriter(System.out);

        int Cases=1;
        //Cases=in.nextInt();
        while(Cases-->0)
            ezpz();

        out.gg();
    }


    static class InputReader  {
        private final BufferedReader reader;

        public InputReader(InputStream stream) {
            reader=new BufferedReader(new InputStreamReader(stream));
        }

        public int nextInt() throws IOException {
            int c=reader.read();
            while(c<=32) {
                c=reader.read();
            }
            boolean negative=false;
            if (c=='-') {
                negative=true;
                c=reader.read();
            }
            int x=0;
            while(c>32) {
                x=x*10+c-'0';
                c=reader.read();
            }
            return negative ? -x : x;
        }

        public long nextLong() throws IOException {
            int c=reader.read();
            while(c<=32) {
                c=reader.read();
            }
            boolean negative=false;
            if (c=='-') {
                negative=true;
                c=reader.read();
            }
            long x=0;
            while(c>32) {
                x=x*10+c-'0';
                c=reader.read();
            }
            return negative ? -x : x;
        }

        public String next() throws IOException {
            int c=reader.read();
            while(c<=32) {
                c=reader.read();
            }
            StringBuilder sb=new StringBuilder();
            while(c>32) {
                sb.append((char)c);
                c=reader.read();
            }
            return sb.toString();
        }

        public double nextDouble() throws IOException {
            return Double.parseDouble(next());
        }
    }

    static class OutputWriter {

        private final BufferedWriter writer;

        public OutputWriter(OutputStream out) {
            writer=new BufferedWriter(new OutputStreamWriter(out));
        }

        public void print(String str) throws IOException {
            writer.write(str);
        }

        public void print(Object obj) throws IOException {
            print(String.valueOf(obj));
        }

        public void println(String str) throws IOException {
            print(str+""\n"");
        }

        public void println() throws IOException {
            print('\n');
        }

        public void println(Object obj) throws IOException {
            println(String.valueOf(obj));
        }

        public void gg() throws IOException {
            writer.flush();
        }
    }

}"
27,C,Java,60149195,2023-01-06 19:55:31,刘映辰,运行超时,"import java.util.*;
import java.lang.*;

public class Main {
    static class Node{
        Node previous;
        int value = 0;;
        Node(int v){
           value = v;
       } 
    }
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int k = in.nextInt();
        in.nextLine();
        HashMap<Integer, Node> map = new HashMap<>();
        map.put(0, new Node(0));
        
        for(int i = 1; i <= n + 1; i++){
            Node current = new Node(i);
            current.previous = map.get(i - 1);
            map.put(i, current);
        }
        
        for(int i = 0; i < k; i++){
            String s = in.nextLine();
            int id = Integer.parseInt(s.substring(2));
            
            if(s.charAt(0) == '1'){
                Node current = map.get(id + 1);
                current.previous = current.previous.previous;
            }
            else{
                Node current = map.get(id);
                System.out.println(current.previous.value);
            }   
        }
        
    }
}"
28,C,Java,60149202,2023-01-06 19:55:34,Eunoiay,答案正确,"import java.io.*;

public class Main {
    static final int N = 1000010;
    static int[] e = new int[N];
    static int[] l = new int[N];
    static int[] r = new int[N];
    static int idx;
    
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter pw = new PrintWriter(System.out);
        
        String[] in = br.readLine().split("" "");
        int n = Integer.parseInt(in[0]);
        int k = Integer.parseInt(in[1]);
        
        init();
        
        for (int i = 1; i <= n; i++) {
            e[idx] = i;
            r[idx] = 1;
            l[idx] = l[1];
            r[l[1]] = idx;
            l[1] = idx++;
        }
        
        label:
        while (k-- != 0) {
            in = br.readLine().split("" "");
            int op = in[0].charAt(0) - '0';
            int x = Integer.parseInt(in[1]);
            if (op == 1) {
                l[r[x + 1]] = l[x + 1];
                r[l[x + 1]] = r[x + 1];
            }
            if (op == 2) {
                pw.println(e[l[x + 1]]);
            }
        }
        pw.flush();
    }
    
    public static void init() {
        r[0] = 1;
        l[1] = 0;
        idx = 2;
    }
}"
29,C,Java,60149577,2023-01-06 19:57:59,第六序列,运行超时,"import java.util.*;
public class Main{
    static int N=1000010;
    static int []e=new int[N];
    static int []l=new int[N];
    static int []r=new int[N];
    static int []ans=new int[N];
    static int idx;
    
    static void remove(int x){
        int id=ans[x];
        r[l[id]]=r[id];
        l[r[id]]=l[id];
    }
    
    static void check(int x){
        int id=ans[x];
        System.out.println(e[l[id]]);
    }
    

    
    public static void main(String[]args){
        Scanner in=new Scanner(System.in);
        int n=in.nextInt();
        int m=in.nextInt();
        r[0]=1;
        l[1]=0;
        idx=2;
        
        
        for(int i=0;i<=n;i++){  
            ans[i]=idx;
            e[idx]=i; 
            l[idx]=idx-1;
            r[l[idx]]=idx;
            idx++;
        }
        
        while(m-->0){
            int c=in.nextInt();
            int x=in.nextInt();
            if(c==1)remove(x);
            else check(x);
        }
    }
}"
30,C,Java,60149917,2023-01-06 20:00:03,智破云霄,运行超时,"import java.util.*;
import java.io.*;
public class Main {
public static void main(String[] args) {
	
 InputReader in = new InputReader(System.in);
 PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
 int n=in.nextInt();
 int k=in.nextInt();
 int[] a = new int[n+1];
 for(int i=1;i<=n;i++)
	 a[i]=i;
	 
 while(k-->0)
 {
	 int o=in.nextInt();
	 int p=in.nextInt();
	 if(o==1)
		 a[p]=0;
	 else
	 {
		 int cot=0;
		 for(int i=1;i<= n;i++)
		 {
			 if(a[i]==0)
				 continue;
			 else if(i==p)
				 {
				 	out.println(cot);
				 	break;
				 }
			 else
			 {
				 cot=a[i];
			 }
		 }
	 }
 }
 
 out.flush();
}
}


class InputReader {
    private final BufferedReader buf;
    private StringTokenizer tkl;

    public InputReader(InputStream is) {
        buf = new BufferedReader(new InputStreamReader(is));
    }

    public boolean hasNext() {
        try {
            while (tkl == null || !tkl.hasMoreElements()) tkl = new StringTokenizer(buf.readLine());
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public String next() {
        return hasNext() ? tkl.nextToken() : null;
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }
}"
31,C,Java,60150010,2023-01-06 20:00:36,牛客935801330号（人工智能3211吴华聪）,运行超时,"











import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {

        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n=in.nextInt();
            int m=in.nextInt();
            ArrayList<Integer>l=new ArrayList();
            for (int i = 0; i < n; i+=2) {
                l.add(i+1);
                if((i+2)<n){
                    l.add(i+2);
                }
            }
            for (int i = 0; i <m ; i++) {
                int b=in.nextInt();
                int x=in.nextInt();
                if(b==1){
                    l.remove((Object)x);
                }
                else {
                    int index=l.indexOf(x);
                    if(index==0){
                        out.println(0);
                    }
                    else {
                        out.println(l.get(index-1));
                    }
                }
            }
        }


    }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
32,C,Java,60150039,2023-01-06 20:00:47,李嘉豪xatu,运行超时,"import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n=sc.nextInt();
        int k=sc.nextInt();
        
        int a[]=new int[n+1];
        for(int i=0;i<n;i++){
            a[i]=i;
        } 
        int x,y;
        for(int i=0;i<k;i++){
            x=sc.nextInt();
            y=sc.nextInt();
            if(x==1){
                a[y]=-1;
            }
            if(x==2){
                for(int j=y-1;j>=0;j--){
                    if(j<0){
                        System.out.println(0);
                        break;
                    }
                    if(a[j]!=-1){
                        System.out.println(a[j]);
                        break;
                    }
                    if(j==0){
                        System.out.println(0);
                        break;
                    }
                }
            }
        }
    }
}
"
33,C,Java,60150054,2023-01-06 20:00:53,Ytuyx,运行超时,"import java.util.Scanner;
public class Main {
	static int n,k;
	static int N=(int)1e6+10;
	static int[][] c=new int[N][2]; 
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		n=sc.nextInt();
		k=sc.nextInt();
		//初始化
		for(int i=1;i<=n;i++) {
			c[i][0]=1;           //c[i][0]表示第i个人是否还在队伍里
			c[i][1]=i-1;         //c[i][1]表示第i个人的前一个人是谁
		}
		for(int i=1;i<=k;i++) {
			int x=0;
			if(sc.nextInt()==1) {
				x=sc.nextInt();
				c[x][0]=0;
				c[x+1][1]=c[x][1];
			}else {
				x=sc.nextInt();
				System.out.println(c[x][1]);
			}
		}
	}
}
"
34,C,Java,60150076,2023-01-06 20:01:00,牛客722252005号,执行出错,"
import java.util.*;
class Node{
    public int pre;
    public int after;

    public Node(int pre, int after) {
        this.pre = pre;
        this.after = after;
    }
}
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        Node[] nodes = new Node[n + 1];
        for (int i = 1; i <= n ; i++) {
            nodes[i] = new Node(i -1,i + 1 );
        }
        for (int i = 0; i < m; i++) {
            int l = sc.nextInt();
            int num = sc.nextInt();
            if(l == 1){
                int pre = nodes[num].pre;
                int after = nodes[num].after;
                if(pre != 0 || after != n){
                    if(pre == 0){
                        nodes[pre].pre = 0;
                    }else if(after == n){
                        nodes[pre].after = n;
                    }else {
                        nodes[pre].after = after;
                        nodes[after].pre = pre;
                    }
                }
            }else {
                System.out.println(nodes[num].pre);
            }
        }

    }


}


"
35,C,Java,60150210,2023-01-06 20:01:51,高桥凉介712,运行超时,"import java.util.*;
// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
   
   
    public static void main(String[] args) {
         class node{
        int val;
        node next;
        public node(int val){
            this.val = val;
        }
    }
        node head;
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int k = in.nextInt();
        head = new node(0);
        node cur = head;
        for(int i=n;i>=0;i--){
            cur.next = new node(i);
            cur = cur.next;
        }  
        for(int i=0;i<k;i++){
            int op1 = in.nextInt();
            int op2 = in.nextInt();
            node curr = head;
            if(op1==1)
            while(curr.next!=null){
                if(curr.next.val==op2){
                    curr.next = curr.next.next;
                    break;
                }
                curr = curr.next;
            }
            else
            while(curr.next!=null){
                if(curr.next.val==op2){
                    System.out.println(curr.next.next.val);
                    break;
                }
                if(curr.next.val==0){
                    System.out.println(0);
                    break;
                }
                curr = curr.next;
            }
        }    

    }
}"
36,C,Java,60150345,2023-01-06 20:02:53,乐观的牛肉丸寄了,运行超时,"import java.util.Scanner;
class  Link
{
    int value;
    Link(int value)
    {
        this.value= value;
    }
    Link previous;
    Link last;
}
public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int n =input.nextInt();
        Link links[] = new Link[n+1];
        for (int i = 0; i < links.length ; i++) {
            links[i] = new Link(i);
        }
        links[0].last=links[1];
        links[n].previous=links[n-1];
        for (int i = 1; i < links.length-1; i++) {
            links[i].previous = links[i-1];
            links[i].last = links[i+1];
        }
        int k = input.nextInt();
        for (int i = 0; i < k ; i++) {
            int select =input.nextInt();
            int temp = input.nextInt();
            if (select==1)
            {
                links[temp].last.previous=links[temp].previous;
                links[temp].previous.last=links[temp].last;
            }
            else
            {
                System.out.println(links[temp].previous.value);
            }
        }
    }
}
"
37,C,Java,60150354,2023-01-06 20:02:56,李嘉豪xatu,运行超时,"import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n=sc.nextInt();
        int k=sc.nextInt();
        
        int a[]=new int[n+1];
        for(int i=0;i<n;i++){
            a[i]=i;
        } 
        int x,y;
        for(int i=0;i<k;i++){
            x=sc.nextInt();
            y=sc.nextInt();
            if(x==1){
                a[y]=-1;
            }
            if(x==2){
                for(int j=y-1;j>=0;j--){
                    if(j<0){
                        System.out.println(0);
                        break;
                    }
                    if(a[j]!=-1){
                        System.out.println(a[j]);
                        break;
                    }
                    if(j==0){
                        System.out.println(0);
                        break;
                    }
                }
            }
        }
    }
}
"
38,C,Java,60150411,2023-01-06 20:03:19,李嘉豪xatu,运行超时,"import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n=sc.nextInt();
        int k=sc.nextInt();
        
        int a[]=new int[n+1];
        for(int i=0;i<n;i++){
            a[i]=i;
        } 
        int x,y;
        for(int i=0;i<k;i++){
            x=sc.nextInt();
            y=sc.nextInt();
            if(x==1){
                a[y]=-1;
            }
            if(x==2){
                for(int j=y-1;j>=0;j--){
                    if(j<0){
                        System.out.println(0);
                        break;
                    }
                    if(a[j]!=-1){
                        System.out.println(a[j]);
                        break;
                    }
                    if(j==0){
                        System.out.println(0);
                        break;
                    }
                }
            }
        }
    }
}
"
39,C,Java,60150424,2023-01-06 20:03:24,李嘉豪xatu,运行超时,"import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n=sc.nextInt();
        int k=sc.nextInt();
        
        int a[]=new int[n+1];
        for(int i=0;i<n;i++){
            a[i]=i;
        } 
        int x,y;
        for(int i=0;i<k;i++){
            x=sc.nextInt();
            y=sc.nextInt();
            if(x==1){
                a[y]=-1;
            }
            if(x==2){
                for(int j=y-1;j>=0;j--){
                    if(j<0){
                        System.out.println(0);
                        break;
                    }
                    if(a[j]!=-1){
                        System.out.println(a[j]);
                        break;
                    }
                    if(j==0){
                        System.out.println(0);
                        break;
                    }
                }
            }
        }
    }
}
"
40,C,Java,60150429,2023-01-06 20:03:26,牛客722252005号,答案错误,"
import java.util.*;
class Node{
    public int pre;
    public int after;

    public Node(int pre, int after) {
        this.pre = pre;
        this.after = after;
    }
}
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        Node[] nodes = new Node[n + 1];
        for (int i = 1; i <= n ; i++) {
            nodes[i] = new Node(i -1,i + 1 );
        }
        for (int i = 0; i < m; i++) {
            int l = sc.nextInt();
            int num = sc.nextInt();
            if(l == 1){
                int pre = nodes[num].pre;
                int after = nodes[num].after;
                if(pre != 0 || after != n){
                    if(pre == 0){
                        nodes[after].pre = 0;
                    }else if(after == n){
                        nodes[pre].after = n;
                    }else {
                        nodes[pre].after = after;
                        nodes[after].pre = pre;
                    }
                }
            }else {
                System.out.println(nodes[num].pre);
            }
        }

    }


}


"
41,C,Java,60150465,2023-01-06 20:03:42,李嘉豪xatu,运行超时,"import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n=sc.nextInt();
        int k=sc.nextInt();
        
        int a[]=new int[n+1];
        for(int i=0;i<n;i++){
            a[i]=i;
        } 
        int x,y;
        for(int i=0;i<k;i++){
            x=sc.nextInt();
            y=sc.nextInt();
            if(x==1){
                a[y]=-1;
            }
            if(x==2){
                for(int j=y-1;j>=0;j--){
                    if(j<0){
                        System.out.println(0);
                        break;
                    }
                    if(a[j]!=-1){
                        System.out.println(a[j]);
                        break;
                    }
                    if(j==0){
                        System.out.println(0);
                        break;
                    }
                }
            }
        }
    }
}
"
42,C,Java,60150600,2023-01-06 20:04:40,it`s_all_good_man,运行超时,"//import java.sql.SQLOutput;
import java.util.*;

public class Main {

    public static void main(String[] args) {
        new Main().process();
    }

    public void process(){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt(), k = sc.nextInt();
        TreeSet<Integer> set = new TreeSet<>();
        for(int i = 1; i <= n; i++) set.add(i);
        for(int i = 0; i < k; i++){
            if(sc.nextInt() == 1){
                set.remove(sc.nextInt());
            }else {
                Integer res = set.lower(sc.nextInt());
                System.out.println(res == null ? 0 : res);
            }
        }
    }
}"
43,C,Java,60150678,2023-01-06 20:05:14,刘映辰,运行超时,"import java.util.*;
import java.lang.*;

public class Main {
    static class Node{
        Node next;
        Node previous;
        int value = 0;;
        Node(int v){
           value = v;
       } 
    }
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int k = in.nextInt();
        Node head = new Node(0);
        Node tail = new Node(0);
        head.next = tail;
        tail.previous = head;
        
        HashMap<Integer, Node> map = new HashMap<>();
        
        for(int i = 1; i <= n; i++){
            Node current = new Node(i);
            current.previous = tail.previous;
            tail.previous.next = current;
            
            current.next = tail;
            tail.previous = current;
            map.put(i, current);
        }
        
        for(int i = 0; i < k; i++){
            int command = in.nextInt();
            int id = in.nextInt();
            
            if(command == 1){
                Node current = map.get(id);
                current.next.previous = current.previous;
                current.previous.next = current.next.next;
            }
            else{
                Node current = map.get(id);
                System.out.println(current.previous.value);
            }   
        }   
    }
}"
44,C,Java,60150778,2023-01-06 20:05:55,牛客722252005号,运行超时,"
import java.util.*;
class Node{
    public int pre;
    public int after;

    public Node(int pre, int after) {
        this.pre = pre;
        this.after = after;
    }
}
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        Node[] nodes = new Node[n + 1];
        for (int i = 1; i <= n ; i++) {
            nodes[i] = new Node(i -1,i + 1 );
        }
        for (int i = 0; i < m; i++) {
            int l = sc.nextInt();
            int num = sc.nextInt();
            if(l == 1){
                int pre = nodes[num].pre;
                int after = nodes[num].after;
                if(pre != 0 || after != n + 1){
                    if(pre == 0){
                        nodes[after].pre = 0;
                    }else if(after == n + 1){
                        nodes[pre].after = n;
                    }else {
                        nodes[pre].after = after;
                        nodes[after].pre = pre;
                    }
                }
            }else {
                System.out.println(nodes[num].pre);
            }
        }

    }


}


"
45,C,Java,60151093,2023-01-06 20:08:16,牛客722252005号,运行超时,"
import java.util.*;
class Node{
    public int pre;
    public int after;

    public Node(int pre, int after) {
        this.pre = pre;
        this.after = after;
    }
}
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        Node[] nodes = new Node[n + 1];
        for (int i = 1; i <= n ; i++) {
            nodes[i] = new Node(i -1,i + 1 );
        }
        for (int i = 0; i < m; i++) {
            int l = sc.nextInt();
            int num = sc.nextInt();
            if(l == 1){
                int pre = nodes[num].pre;
                int after = nodes[num].after;
                if(pre != 0 || after != n + 1){
                    if(pre == 0){
                        nodes[after].pre = 0;
                    }else if(after == n + 1){
                        nodes[pre].after = n;
                    }else {
                        nodes[pre].after = after;
                        nodes[after].pre = pre;
                    }
                }
            }else {
                System.out.println(nodes[num].pre);
            }
        }

    }


}


"
46,C,Java,60151148,2023-01-06 20:08:37,李嘉豪xatu,运行超时,"import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n=sc.nextInt();
        int k=sc.nextInt();
        
        int a[]=new int[n+1];
        for(int i=0;i<n;i++){
            a[i]=i;
        } 
        int x,y;
        for(int i=0;i<k;i++){
            x=sc.nextInt();
            y=sc.nextInt();
            if(x==1){
                a[y]=-1;
            }
            if(x==2){
                for(int j=y-1;j>=0;j--){
                    if(j<0){
                        System.out.println(0);
                        break;
                    }
                    if(a[j]!=-1){
                        System.out.println(a[j]);
                        break;
                    }
                    if(j==0){
                        System.out.println(0);
                        break;
                    }
                }
            }
        }
    }
}
"
47,C,Java,60151153,2023-01-06 20:08:39,牛客674290329号,运行超时,"import java.util.Arrays;
        import java.util.Scanner;
public class Main
{
    public static void main(String[] args)
    {
        Scanner sc = new Scanner(System.in);
        while (sc.hasNext())
        {
           int n = sc.nextInt();
           int k = sc.nextInt();
           int[] a = new int[n+1];
           a[0] = 0;
           for(int i = 1;i < n+1;i ++)
           {
               a[i] = i;
           }
           for(int i = 0;i < k;i ++)
           {
               int x = sc.nextInt();
               int y =sc.nextInt();
               if(x == 1)
               {
                   a[y] = -1;
               }
               if(x == 2)
               {
                 while(a[y-1]==-1)
                 {
                     y--;
                 }
                 System.out.println(a[y-1]);
               }
           }
        }
        }
        }"
48,C,Java,60151166,2023-01-06 20:08:47,高桥凉介712,运行超时,"import java.util.*;
// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
   
   
    public static void main(String[] args) {
         class node{
        int val;
        node next;
        public node(int val){
            this.val = val;
        }
    }
        node head;
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int k = in.nextInt();
        head = new node(0);
        node cur = head;
        for(int i=n;i>=0;i--){
            cur.next = new node(i);
            cur = cur.next;
        }  
        for(int i=0;i<k;i++){
            int op1 = in.nextInt();
            int op2 = in.nextInt();
            node curr = head;
            if(op1==1)
            while(curr.next!=null){
                if(curr.next.val==op2){
                    curr.next = curr.next.next;
                    break;
                }
                curr = curr.next;
            }
            else
            while(curr.next!=null){
                if(curr.next.val==op2){
                    System.out.println(curr.next.next.val);
                    break;
                }
                if(curr.next.val==0){
                    System.out.println(0);
                    break;
                }
                curr = curr.next;
            }
        }    

    }
}"
49,C,Java,60151192,2023-01-06 20:08:56,高桥凉介712,运行超时,"import java.util.*;
// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
   
   
    public static void main(String[] args) {
         class node{
        int val;
        node next;
        public node(int val){
            this.val = val;
        }
    }
        node head;
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int k = in.nextInt();
        head = new node(0);
        node cur = head;
        for(int i=n;i>=0;i--){
            cur.next = new node(i);
            cur = cur.next;
        }  
        for(int i=0;i<k;i++){
            int op1 = in.nextInt();
            int op2 = in.nextInt();
            node curr = head;
            if(op1==1)
            while(curr.next!=null){
                if(curr.next.val==op2){
                    curr.next = curr.next.next;
                    break;
                }
                curr = curr.next;
            }
            else
            while(curr.next!=null){
                if(curr.next.val==op2){
                    System.out.println(curr.next.next.val);
                    break;
                }
                if(curr.next.val==0){
                    System.out.println(0);
                    break;
                }
                curr = curr.next;
            }
        }    

    }
}"
50,C,Java,60151198,2023-01-06 20:08:58,人工智能3212卢明涛,运行超时,"import java.util.Arrays;
import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        static int f2(int n){
            if (n==1){
                return 1;
            }
            else if (n==2){
                return 2;
            }
            else{
                return f2(n-1)+f2(n-2);
            }
        }
        static int qpow(int a, int n)
        {
            if (n == 0)
                return 1;
            else if (n % 2 == 1)
                return qpow(a, n - 1) * 2 % 10000;
            else
            {
                int temp = qpow(a, n / 2) % 10000;
                return temp * temp % 10000;
            }
        }
        static int f3(int a){
            if (a==1){
                return 1;
            }
            else if (a==2){
                return 2;
            }
            else{
                return (f3(a-1)+(a-1)*f3(a-2)) % 1000000007;
            }
        }
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int k = in.nextInt();
            int math[] = new int[n+2];
            int math2[] = new int[n+2];
            for (int i=0;i<=n;i++){
                math[i] = i;
            }
            for (int i=0;i<k;i++){
                int f = in.nextInt();
                int id = in.nextInt();
                if (f==1){
                    math[id]=math[id-1];
                    math2[id]=-1;
                }
                else{
                    int s = 0;
                    for (int j=id-1;j>=0;j--){
                        if (math2[j]==-1){
                            s--;
                        }
                        else{
                            break;
                        }
                    }
                    out.println(math[id]+s-1);
                }
            }
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
51,C,Java,60151288,2023-01-06 20:09:35,高桥凉介712,运行超时,"import java.util.*;
// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
   
   
    public static void main(String[] args) {
         class node{
        int val;
        node next;
        public node(int val){
            this.val = val;
        }
    }
        node head;
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int k = in.nextInt();
        head = new node(0);
        node cur = head;
        for(int i=n;i>=0;i--){
            cur.next = new node(i);
            cur = cur.next;
        }  
        for(int i=0;i<k;i++){
            int op1 = in.nextInt();
            int op2 = in.nextInt();
            node curr = head;
            if(op1==1)
            while(curr.next!=null){
                if(curr.next.val==op2){
                    curr.next = curr.next.next;
                    break;
                }
                curr = curr.next;
            }
            else
            while(curr.next!=null){
                if(curr.next.val==op2){
                    System.out.println(curr.next.next.val);
                    break;
                }
                if(curr.next.val==0){
                    System.out.println(0);
                    break;
                }
                curr = curr.next;
            }
        }    

    }
}"
52,C,Java,60151304,2023-01-06 20:09:41,HMETAO,运行超时,"

import java.io.*;
import java.util.*;
import java.util.concurrent.TimeUnit;
import java.util.stream.Collectors;

public class Main {

    public static void main(String[] args) throws IOException {
        Reader r = new Reader();
        int n = r.nextInt();
        int k = r.nextInt();
        LinkedList<Integer> que = new LinkedList<>();
        for (int i = 1; i <= n; i++) {
            que.offer(i);
        }
        for (int i = 0; i < k; i++) {
            int type = r.nextInt();
            Integer x = r.nextInt();
            if (type == 1) {
                que.remove(x);
            } else {
                int pre = 0;
                for (Integer integer : que) {
                    if (integer.equals(x)) {
                        break;
                    }
                    pre = integer;
                }
                System.out.println(pre);
            }
        }
    }

    public static long pow3(int a, int b) {
        long ans = 1;
        while (b > 0) {
            if ((b & 1) == 1) {
                ans *= a;
            }
            a *= a;
            b >>= 1;
        }
        return ans;
    }

    public static long pow4(long a, long b, int p) {
        long ans = 1;
        while (b > 0) {
            if ((b & 1) == 1) {
                ans = (ans * a) % p;
            }
            a = (a * a) % p;
            b >>= 1;
        }
        return ans;
    }

    public static List<Integer> euler(int n) {
        boolean[] check = new boolean[n + 1];
        List<Integer> ans = new ArrayList<>();
        for (int i = 2; i <= n; i++) {
            if (!check[i]) {
                ans.add(i);
            }
            for (Integer item : ans) {
                if (item * i > n) break;
                check[item * i] = true;
                if (i % item == 0) break;
            }
        }
        return ans;
    }

    public static void euler_phi(int n) {
        int ans = n;
        for (int i = 2; i <= n / i; i++) {
            if (n % i == 0) {
                ans *= (1 - 1.0 / i);
                while (n % i == 0) {
                    n /= i;
                }
            }
        }
        if (n > 1) ans *= (1 - 1.0 / n);
        System.out.println(ans);
    }

    public static int[] eulers(int n) {
        boolean[] check = new boolean[n + 1];
        int[] phi = new int[n + 1];
        phi[1] = 1;
        ArrayList<Integer> primes = new ArrayList<>();
        for (int i = 2; i <= n; i++) {
            if (!check[i]) {
                primes.add(i);
                phi[i] = i - 1;
            }

            for (Integer item : primes) {
                if (item * i > n) break;
                check[item * i] = true;
                if (i % item == 0) {
                    phi[item * i] = item * phi[i];
                    break;
                }
                phi[item * i] = (item - 1) * phi[i];
            }
        }
        return phi;
    }

    static class Reader {
        BufferedReader buf;
        StringTokenizer tok;

        Reader() {
            buf = new BufferedReader(new InputStreamReader(System.in));
        }

        boolean hasNext() {
            while (tok == null || !tok.hasMoreElements()) {
                try {
                    tok = new StringTokenizer(buf.readLine());
                } catch (Exception e) {
                    return false;
                }
            }
            return true;
        }

        String nextLine() {
            try {
                return buf.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        String next() {
            if (hasNext())
                return tok.nextToken();
            return null;
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }
    }

}


"
53,C,Java,60151319,2023-01-06 20:09:47,高桥凉介712,运行超时,"import java.util.*;
// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
   
   
    public static void main(String[] args) {
         class node{
        int val;
        node next;
        public node(int val){
            this.val = val;
        }
    }
        node head;
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int k = in.nextInt();
        head = new node(0);
        node cur = head;
        for(int i=n;i>=0;i++){
            cur.next = new node(i);
            cur = cur.next;
        }  
        for(int i=0;i<k;i++){
            int op1 = in.nextInt();
            int op2 = in.nextInt();
            node curr = head;
            while(curr.next!=null){
                if(curr.next.val==op1){
                    curr.next = curr.next.next;
                    break;
                }
                curr = curr.next;
            }
            curr = head;
            while(curr.next!=null){
                if(curr.next.val==op2){
                    System.out.println(curr.next.next.val);
                    break;
                }
                if(curr.next.val==0){
                    System.out.println(0);
                    break;
                }
                curr = curr.next;
            }
        }    

    }
}"
54,C,Java,60151377,2023-01-06 20:10:16,闵其其,运行超时,"import java.io.*;
import java.util.*;
import java.math.*;
import java.util.Set;
public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            //代码写这里
            int n = in.nextInt();
            int k = in.nextInt();
            List<String> list = new ArrayList<String>();
            Queue<Integer> q = new ArrayDeque<Integer>();
            for (int i = 0; i < n; i++) {
                list.add(String.valueOf(i+1));
            }
            for (int round = 0; round < k; round++) {
                int c = in.nextInt();
                String x = in.next();
//                System.out.println(x);
                if(c==1){
                    list.remove(x);
                }
                else {
                    if(list.indexOf(x)==0)
                        out.println(0);
                    else
                        out.println(list.get(list.indexOf(x)-1));
                }
            }
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
55,C,Java,60151444,2023-01-06 20:10:45,牛客722252005号,运行超时,"
import java.util.*;
class Node{
    public int pre;
    public int after;

    public Node(int pre, int after) {
        this.pre = pre;
        this.after = after;
    }
}
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        Node[] nodes = new Node[n + 1];
        for (int i = 1; i <= n ; i++) {
            nodes[i] = new Node(i -1,i + 1 );
        }
        for (int i = 0; i < m; i++) {
            int l = sc.nextInt();
            int num = sc.nextInt();
            if(l == 1){
                int pre = nodes[num].pre;
                int after = nodes[num].after;
                if(pre != 0 || after != n + 1){
                    if(pre == 0){
                        nodes[after].pre = 0;
                    }else if(after == n + 1){
                        nodes[pre].after = n;
                    }else {
                        nodes[pre].after = after;
                        nodes[after].pre = pre;
                    }
                }
            }else {
                System.out.println(nodes[num].pre);
            }
        }

    }


}


"
56,C,Java,60151787,2023-01-06 20:13:31,牛客722252005号,运行超时,"
import java.util.*;
class Node{
    public int pre;
    public int after;

    public Node(int pre, int after) {
        this.pre = pre;
        this.after = after;
    }
}
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        Node[] nodes = new Node[n + 1];
        for (int i = 1; i <= n ; i++) {
            nodes[i] = new Node(i -1,i + 1 );
        }
        for (int i = 0; i < m; i++) {
            int l = sc.nextInt();
            int num = sc.nextInt();
            if(l == 1){
                int pre = nodes[num].pre;
                int after = nodes[num].after;
                if(pre != 0 || after != n + 1){
                    if(pre == 0){
                        nodes[after].pre = 0;
                    }else if(after == n + 1){
                        nodes[pre].after = n + 1;
                    }else {
                        nodes[pre].after = after;
                        nodes[after].pre = pre;
                    }
                }
            }else {
                System.out.println(nodes[num].pre);
            }
        }

    }


}


"
57,C,Java,60151919,2023-01-06 20:14:37,刘映辰,运行超时,"import java.util.*;
import java.lang.*;
import java.io.*;

public class Main {
    static class Node{
        Node next;
        Node previous;
        int value = 0;;
        Node(int v){
           value = v;
       } 
    }
    public static void main(String[] args) throws IOException{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String[] test_data = br.readLine().split("" "");
        int n = Integer.parseInt(test_data[0]);
        int k = Integer.parseInt(test_data[1]);
        
        Node head = new Node(0);
        Node tail = new Node(0);
        head.next = tail;
        tail.previous = head;
        
        HashMap<Integer, Node> map = new HashMap<>();
        
        for(int i = 1; i <= n; i++){
            Node current = new Node(i);
            current.previous = tail.previous;
            tail.previous.next = current;
            
            current.next = tail;
            tail.previous = current;
            map.put(i, current);
        }
        
        for(int i = 0; i < k; i++){
            String command = br.readLine();
            int id = Integer.parseInt(command.substring(2));
            
            if(command.charAt(0) == '1'){
                Node current = map.get(id);
                current.next.previous = current.previous;
                current.previous.next = current.next.next;
            }
            else{
                Node current = map.get(id);
                System.out.println(current.previous.value);
            }   
        }   
    }
}"
58,C,Java,60152032,2023-01-06 20:15:23,Ytuyx,答案错误,"import java.util.Scanner;
import java.io.*;

public class Main {
	static int n,k;
	static int N=(int)1e6+10;
	static int[][] c=new int[N][2]; 
	static StreamTokenizer in=new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
	static PrintWriter out=new PrintWriter(new OutputStreamWriter(System.out));
	public static void main(String[] args) throws IOException {
		Scanner sc=new Scanner(System.in);
		in.nextToken();n=(int)in.nval;
		in.nextToken();k=(int)in.nval;
		//初始化
		for(int i=1;i<=n;i++) {
			c[i][0]=1;           //c[i][0]表示第i个人是否还在队伍里
			c[i][1]=i-1;         //c[i][1]表示第i个人的前一个人是谁
		}
		for(int i=1;i<=k;i++) {
			in.nextToken();int q=(int)in.nval;
			in.nextToken();int x=(int)in.nval;
			if(q==1) {
				c[x][0]=0;
				c[x+1][1]=c[x][1];
			}else {
				out.println(c[x][1]);
			}
		}
		out.flush();
	}
}
"
59,C,Java,60152045,2023-01-06 20:15:28,人工智能2312陈啸,运行超时,"import java.util.*;
import java.io.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int a = in.nextInt();
            int b = in.nextInt();
            int [] c = new int[a+1];
            for (int i = 0; i < b; i++) {
                int x = in.nextInt();
                int y = in.nextInt();
                if(x == 1){
                    c[y] ++;
                }else{
                    while (true){
                        if(c[y-1]==0)
                            break;
                        y --;
                    }
                    System.out.println(y-1);
                }
            }
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

    }
}"
60,C,Java,60152108,2023-01-06 20:15:59,牛客722252005号,运行超时,"
import java.util.*;
class Node{
    public int pre;
    public int after;

    public Node(int pre, int after) {
        this.pre = pre;
        this.after = after;
    }
}
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        Node[] nodes = new Node[n + 1];
        for (int i = 1; i <= n ; i++) {
            nodes[i] = new Node(i -1,i + 1 );
        }
        for (int i = 0; i < m; i++) {
            int l = sc.nextInt();
            int num = sc.nextInt();
            if(l == 1){
                int pre = nodes[num].pre;
                int after = nodes[num].after;
                if(pre != 0 || after != n + 1){
                    if(pre == 0){
                        nodes[after].pre = 0;
                    }else if(after == n + 1){
                        nodes[pre].after = n + 1;
                    }else {
                        nodes[pre].after = after;
                        nodes[after].pre = pre;
                    }
                }
            }else {
                System.out.println(nodes[num].pre);
            }
        }

    }


}


"
61,C,Java,60152255,2023-01-06 20:17:06,PhantomBluRay,运行超时,"import java.util.Scanner;

public class Main{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int k = sc.nextInt();

        long[] num = new long[n+1];
        long[] c = new long[k];

        for(int i = 1;i < n+1;i++){ //初始化
            num[i] = i-1;
        }

        int len = n;
        int cs = 0;

        for(int i = 0;i < k;i++){
            switch(sc.nextInt()){
                case 1:
                    for(int j = sc.nextInt();j < n;j++){
                        num[j]--;
                    }
                    len--;
                    break;
                case 2:
                    c[cs] = sc.nextInt();
                    cs++;
                    break;
            }
        }

        for(int i = 0;i < cs;i++){
            System.out.println(num[(int)c[i]]);
        }
    }
}"
62,C,Java,60152274,2023-01-06 20:17:19,刘映辰,运行超时,"import java.util.*;
import java.io.*;

public class Main {
    public static void main(String[] args) throws IOException{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String[] test_data = br.readLine().split("" "");
        int n = Integer.parseInt(test_data[0]);
        int k = Integer.parseInt(test_data[1]);
        
        TreeSet<Integer> set = new TreeSet();
        for(int i = 0; i <= n; i++){
            set.add(i);
        }
         
        for(int i = 0; i < k; i++){
            String command = br.readLine();
            int id = Integer.parseInt(command.substring(2));
             
            if(command.charAt(0) == '1'){
                set.remove(id);
            }
            else{
                System.out.println(set.floor(id - 1));
            }   
        }
    }
}"
63,C,Java,60152283,2023-01-06 20:17:25,HMETAO,运行超时,"

import java.io.*;
import java.util.*;
import java.util.concurrent.TimeUnit;
import java.util.stream.Collectors;

public class Main {

    public static void main(String[] args) throws IOException {
        Reader r = new Reader();
        int n = r.nextInt();
        int k = r.nextInt();
        List<Integer> list = new ArrayList<>();
        for (int i = 1; i <= n; i++) {
            list.add(i);
        }
        int c = 0;
        for (int i = 0; i < k; i++) {
            int type = r.nextInt();
            int x = r.nextInt();
            if (type == 1) {
                list.remove(x - c - 1);
                c++;
            } else {
                if (x - c - 2 < 0) System.out.println(0);
                else
                    System.out.println(list.get(x - c - 2));
            }
        }
    }

    public static long pow3(int a, int b) {
        long ans = 1;
        while (b > 0) {
            if ((b & 1) == 1) {
                ans *= a;
            }
            a *= a;
            b >>= 1;
        }
        return ans;
    }

    public static long pow4(long a, long b, int p) {
        long ans = 1;
        while (b > 0) {
            if ((b & 1) == 1) {
                ans = (ans * a) % p;
            }
            a = (a * a) % p;
            b >>= 1;
        }
        return ans;
    }

    public static List<Integer> euler(int n) {
        boolean[] check = new boolean[n + 1];
        List<Integer> ans = new ArrayList<>();
        for (int i = 2; i <= n; i++) {
            if (!check[i]) {
                ans.add(i);
            }
            for (Integer item : ans) {
                if (item * i > n) break;
                check[item * i] = true;
                if (i % item == 0) break;
            }
        }
        return ans;
    }

    public static void euler_phi(int n) {
        int ans = n;
        for (int i = 2; i <= n / i; i++) {
            if (n % i == 0) {
                ans *= (1 - 1.0 / i);
                while (n % i == 0) {
                    n /= i;
                }
            }
        }
        if (n > 1) ans *= (1 - 1.0 / n);
        System.out.println(ans);
    }

    public static int[] eulers(int n) {
        boolean[] check = new boolean[n + 1];
        int[] phi = new int[n + 1];
        phi[1] = 1;
        ArrayList<Integer> primes = new ArrayList<>();
        for (int i = 2; i <= n; i++) {
            if (!check[i]) {
                primes.add(i);
                phi[i] = i - 1;
            }

            for (Integer item : primes) {
                if (item * i > n) break;
                check[item * i] = true;
                if (i % item == 0) {
                    phi[item * i] = item * phi[i];
                    break;
                }
                phi[item * i] = (item - 1) * phi[i];
            }
        }
        return phi;
    }

    static class Reader {
        BufferedReader buf;
        StringTokenizer tok;

        Reader() {
            buf = new BufferedReader(new InputStreamReader(System.in));
        }

        boolean hasNext() {
            while (tok == null || !tok.hasMoreElements()) {
                try {
                    tok = new StringTokenizer(buf.readLine());
                } catch (Exception e) {
                    return false;
                }
            }
            return true;
        }

        String nextLine() {
            try {
                return buf.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        String next() {
            if (hasNext())
                return tok.nextToken();
            return null;
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }
    }

}


"
64,C,Java,60152369,2023-01-06 20:18:01,人工智能2312陈啸,运行超时,"import java.util.*;
import java.io.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int a = in.nextInt();
            int b = in.nextInt();
            int [] c = new int[a+1];
            for (int i = 0; i < b; i++) {
                int x = in.nextInt();
                int y = in.nextInt();
                if(x == 1){
                    c[y] ++;
                }else{
                    while (true){
                        if(c[y-1]==0)
                            break;
                        y --;
                    }
                    System.out.println(y-1);
                }
            }
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

    }
}"
65,C,Java,60152427,2023-01-06 20:18:28,牛客722252005号,运行超时,"
import java.util.*;
class Node{
    public int pre;
    public int after;

    public Node(int pre, int after) {
        this.pre = pre;
        this.after = after;
    }
}
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        Node[] nodes = new Node[n + 1];
        for (int i = 1; i <= n ; i++) {
            nodes[i] = new Node(i -1,i + 1 );
        }
        for (int i = 0; i < m; i++) {
            int l = sc.nextInt();
            int num = sc.nextInt();
            if(l == 1){
                int pre = nodes[num].pre;
                int after = nodes[num].after;
                if(pre != 0 || after != n + 1){
                    if(pre == 0){
                        nodes[after].pre = 0;
                    }else if(after == n + 1){
                        nodes[pre].after = n + 1;
                    }else {
                        nodes[pre].after = after;
                        nodes[after].pre = pre;
                    }
                }
            }else {
                System.out.println(nodes[num].pre);
            }
        }

    }


}


"
66,C,Java,60152508,2023-01-06 20:19:13,人工智能3212卢明涛,运行超时,"import java.util.Arrays;
import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        static int f2(int n){
            if (n==1){
                return 1;
            }
            else if (n==2){
                return 2;
            }
            else{
                return f2(n-1)+f2(n-2);
            }
        }
        static int qpow(int a, int n)
        {
            if (n == 0)
                return 1;
            else if (n % 2 == 1)
                return qpow(a, n - 1) * 2 % 10000;
            else
            {
                int temp = qpow(a, n / 2) % 10000;
                return temp * temp % 10000;
            }
        }
        static int f3(int a){
            if (a==1){
                return 1;
            }
            else if (a==2){
                return 2;
            }
            else{
                return (f3(a-1)+(a-1)*f3(a-2)) % 1000000007;
            }
        }
        int Two(List<Integer> list, int target){
            int l = 0, r = list.size() - 1;
            while(l <= r){
                int mid = l + (r-l) / 2;
                if(list.get(mid) == target){
                    return mid;
                }else if(list.get(mid)  < target) {
                    l = mid + 1;
                }else {
                    r = mid - 1;
                }
            }
            return -1;
        }
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int k = in.nextInt();
            List<Integer> list = new ArrayList<>();
            for (int i=0;i<=n;i++){
                list.add(i);
            }
            for (int i=0;i<k;i++){
                int f = in.nextInt();
                int ma = in.nextInt();
                if (f==1){
                    int id = Two(list,ma);
                    list.remove(id);
                }
                else{
                    int id = Two(list,ma);
                    out.println(list.get(id-1));
                }
            }
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
67,C,Java,60152697,2023-01-06 20:20:45,牛客722252005号,运行超时,"
import java.util.*;
class Node{
    public int pre;
    public int after;

    public Node(int pre, int after) {
        this.pre = pre;
        this.after = after;
    }
}
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        Node[] nodes = new Node[n + 1];
        for (int i = 1; i <= n ; i++) {
            nodes[i] = new Node(i -1,i + 1 );
        }
        for (int i = 0; i < m; i++) {
            int l = sc.nextInt();
            int num = sc.nextInt();
            if(l == 1){
                int pre = nodes[num].pre;
                int after = nodes[num].after;
                if(pre != 0 || after != n + 1){
                    if(pre == 0){
                        nodes[after].pre = 0;
                    }else if(after == n + 1){
                        nodes[pre].after = n + 1;
                    }else {
                        nodes[pre].after = after;
                        nodes[after].pre = pre;
                    }
                }
            }else {
                System.out.println(nodes[num].pre);
            }
        }

    }


}


"
68,C,Java,60152901,2023-01-06 20:22:45,Mosyi.,运行超时,"import java.io.*;
import java.lang.reflect.Array;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int k = in.nextInt();
            String s = """";
            for (int i = 1; i <= n; i++) {
                s += String.valueOf(i);
            }
            for (int i = 0; i < k; i++) {
                int x = in.nextInt();
                int y = in.nextInt();
                if(x == 1){
                    for (int j = 0; j < s.length(); j++) {
                        if(Integer.parseInt(s.substring(j,j+1)) == y){
                            s = s.substring(0,j) + s.substring(j+1);
                            break;
                        }
                    }
                }else if(x == 2){
                    for (int j = 0; j < s.length(); j++) {
                        if(Integer.parseInt(s.substring(j,j+1)) == y){
                            if(j == 0){
                                out.println(0);
                            }else {
                                out.println(s.charAt(j - 1));
                            }
                            break;
                        }
                    }
                }
            }
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
69,C,Java,60152922,2023-01-06 20:22:53,HMETAO,运行超时,"
import java.io.*;
import java.util.*;
import java.util.concurrent.TimeUnit;
import java.util.stream.Collectors;

public class Main {

    public static void main(String[] args) throws IOException {
        Reader r = new Reader();
        int n = r.nextInt();
        int k = r.nextInt();
        int[] arr = new int[n + 1];
        for (int i = 0; i < k; i++) {
            int type = r.nextInt();
            int x = r.nextInt();
            if (type == 1) {
                arr[x] = 1;
            } else {
                while (arr[x - 1] == 1) x--;
                System.out.println(x - 1);
            }
        }
    }

    public static long pow3(int a, int b) {
        long ans = 1;
        while (b > 0) {
            if ((b & 1) == 1) {
                ans *= a;
            }
            a *= a;
            b >>= 1;
        }
        return ans;
    }

    public static long pow4(long a, long b, int p) {
        long ans = 1;
        while (b > 0) {
            if ((b & 1) == 1) {
                ans = (ans * a) % p;
            }
            a = (a * a) % p;
            b >>= 1;
        }
        return ans;
    }

    public static List<Integer> euler(int n) {
        boolean[] check = new boolean[n + 1];
        List<Integer> ans = new ArrayList<>();
        for (int i = 2; i <= n; i++) {
            if (!check[i]) {
                ans.add(i);
            }
            for (Integer item : ans) {
                if (item * i > n) break;
                check[item * i] = true;
                if (i % item == 0) break;
            }
        }
        return ans;
    }

    public static void euler_phi(int n) {
        int ans = n;
        for (int i = 2; i <= n / i; i++) {
            if (n % i == 0) {
                ans *= (1 - 1.0 / i);
                while (n % i == 0) {
                    n /= i;
                }
            }
        }
        if (n > 1) ans *= (1 - 1.0 / n);
        System.out.println(ans);
    }

    public static int[] eulers(int n) {
        boolean[] check = new boolean[n + 1];
        int[] phi = new int[n + 1];
        phi[1] = 1;
        ArrayList<Integer> primes = new ArrayList<>();
        for (int i = 2; i <= n; i++) {
            if (!check[i]) {
                primes.add(i);
                phi[i] = i - 1;
            }

            for (Integer item : primes) {
                if (item * i > n) break;
                check[item * i] = true;
                if (i % item == 0) {
                    phi[item * i] = item * phi[i];
                    break;
                }
                phi[item * i] = (item - 1) * phi[i];
            }
        }
        return phi;
    }

    static class Reader {
        BufferedReader buf;
        StringTokenizer tok;

        Reader() {
            buf = new BufferedReader(new InputStreamReader(System.in));
        }

        boolean hasNext() {
            while (tok == null || !tok.hasMoreElements()) {
                try {
                    tok = new StringTokenizer(buf.readLine());
                } catch (Exception e) {
                    return false;
                }
            }
            return true;
        }

        String nextLine() {
            try {
                return buf.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        String next() {
            if (hasNext())
                return tok.nextToken();
            return null;
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }
    }

}


"
70,C,Java,60152941,2023-01-06 20:23:00,牛客722252005号,运行超时,"
import java.util.*;
class Node{
    public int pre;
    public int after;

    public Node(int pre, int after) {
        this.pre = pre;
        this.after = after;
    }
}
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        Node[] nodes = new Node[n + 1];
        for (int i = 1; i <= n ; i++) {
            nodes[i] = new Node(i -1,i + 1 );
        }
        for (int i = 0; i < m; i++) {
            int l = sc.nextInt();
            int num = sc.nextInt();
            if(l == 1){
                int pre = nodes[num].pre;
                int after = nodes[num].after;
                if(pre != 0 || after != n + 1){
                    if(pre == 0){
                        nodes[after].pre = 0;
                    }else if(after == n + 1){
                        nodes[pre].after = n + 1;
                    }else {
                        nodes[pre].after = after;
                        nodes[after].pre = pre;
                    }
                }
            }else {
                System.out.println(nodes[num].pre);
            }
        }

    }


}


"
71,C,Java,60152956,2023-01-06 20:23:09,challow,运行超时,"import java.util.*;
import java.io.*;

public class Main {
    
    
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String[] strs = br.readLine().split("" "");
        int n = Integer.parseInt(strs[0]);
        int k = Integer.parseInt(strs[1]);

        Map<Integer, Integer> pre = new HashMap<>();
        Map<Integer, Integer> next = new HashMap<>();
        
        for (int i = 1; i <= n; i ++) {
            if(i == 1) {
                pre.put(i, 0);
                next.put(i, 2);
            } else if(i == n) {
                pre.put(i, i - 1);
                next.put(i, -1);
            } else {
                pre.put(i, i - 1);
                next.put(i, i + 1);
            }
        }
        
        while(k -- > 0) {
            strs = br.readLine().split("" "");
            int b = Integer.parseInt(strs[0]);
            int a = Integer.parseInt(strs[1]);
            if(b == 1) {
                int prev = pre.get(a);
                int nextv = next.get(a);
//                 System.out.println(prev + ""  "" + nextv);
                next.put(prev, nextv);
                pre.put(nextv, prev);
                pre.remove(a);
                next.remove(a);
            } else {
                System.out.println(pre.get(a));
            }
        }
        
    }
}"
72,C,Java,60153076,2023-01-06 20:24:16,牛客674290329号,运行超时,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.StreamTokenizer;
import java.util.Arrays;
        import java.util.Scanner;
public class Main
{
    public static void main(String[] args) throws IOException {
        StreamTokenizer re = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
        while(re.nextToken()!=StreamTokenizer.TT_EOF)
        {
           int n = (int)re.nval;
            re.nextToken();
            int k = (int)re.nval;
           int[] a = new int[n+1];
           a[0] = 0;
           for(int i = 1;i < n+1;i ++)
           {
               a[i] = i;
           }
           for(int i = 0;i < k;i ++)
           {
               re.nextToken();
               int x = (int)re.nval;
               re.nextToken();
               int y = (int)re.nval;
               if(x == 1)
               {
                   a[y] = -1;
               }
               if(x == 2)
               {
                 while(a[y-1]==-1)
                 {
                     y--;
                 }
                 System.out.println(a[y-1]);
               }
           }
        }
        }
        }"
73,C,Java,60153232,2023-01-06 20:25:34,牛客722252005号,运行超时,"
import java.util.*;
class Node{
    public int pre;
    public int after;

    public Node(int pre, int after) {
        this.pre = pre;
        this.after = after;
    }
}
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        Node[] nodes = new Node[n + 1];
        for (int i = 1; i <= n ; i++) {
            nodes[i] = new Node(i -1,i + 1 );
        }
        for (int i = 0; i < m; i++) {
            int l = sc.nextInt();
            int num = sc.nextInt();
            if(l == 1){
                int pre = nodes[num].pre;
                int after = nodes[num].after;
                if(pre != 0 || after != n + 1){
                    if(pre == 0){
                        nodes[after].pre = 0;
                    }else if(after == n + 1){
                        nodes[pre].after = n + 1;
                    }else {
                        nodes[pre].after = after;
                        nodes[after].pre = pre;
                    }
                }
            }else {
                System.out.println(nodes[num].pre);
            }
        }

    }


}


"
74,C,Java,60153296,2023-01-06 20:26:00,牛客935801330号（人工智能3211吴华聪）,执行出错,"











import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        class A{
            int x1=0,x2=0;
        }
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n=in.nextInt();
            int m=in.nextInt();
          A a[]=new A[n+2];
            for (int i = 1; i <=n+1 ; i++) {
               a[i]=new A();
               a[i].x1=i-1;
               a[i].x2=i+1;
            }
            for (int i = 0; i <m ; i++) {
                int b=in.nextInt();
                int x=in.nextInt();
                if(b==1){
                   a[a[x].x2].x1=a[x].x1;
                   a[a[x].x1].x2=a[x].x2;
                }
                else {
                    out.println(a[x].x1);
                }
            }

        }


    }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
75,C,Java,60153448,2023-01-06 20:27:31,刘映辰,运行超时,"import java.util.*;
import java.lang.*;
import java.io.*;

public class Main {
    static class Node{
        Node next;
        Node previous;
        int value = 0;;
        Node(int v){
           value = v;
       } 
    }
    public static void main(String[] args) throws IOException{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String[] test_data = br.readLine().split("" "");
        int n = Integer.parseInt(test_data[0]);
        int k = Integer.parseInt(test_data[1]);
        
        Node head = new Node(0);
        Node tail = new Node(0);
        head.next = tail;
        tail.previous = head;
        
        Node[] map = new Node[n + 1];
        
        for(int i = 1; i <= n; i++){
            Node current = new Node(i);
            current.previous = tail.previous;
            tail.previous.next = current;
            
            current.next = tail;
            tail.previous = current;
            map[i] = current;
        }
        
        for(int i = 0; i < k; i++){
            String command = br.readLine();
            int id = Integer.parseInt(command.substring(2));
            
            if(command.charAt(0) == '1'){
                Node current = map[id];
                current.next.previous = current.previous;
                current.previous.next = current.next.next;
            }
            else{
                Node current = map[id];
                System.out.println(current.previous.value);
            }   
        }   
    }
}"
76,C,Java,60153490,2023-01-06 20:28:00,牛客722252005号,运行超时,"
import java.util.*;
class Node{
    public int pre;
    public int after;

    public Node(int pre, int after) {
        this.pre = pre;
        this.after = after;
    }
}
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        Node[] nodes = new Node[n + 1];
        for (int i = 1; i <= n ; i++) {
            nodes[i] = new Node(i -1,i + 1 );
        }
        for (int i = 0; i < m; i++) {
            int l = sc.nextInt();
            int num = sc.nextInt();
            if(l == 1){
                int pre = nodes[num].pre;
                int after = nodes[num].after;
                if(pre != 0 || after != n + 1){
                    if(pre == 0){
                        nodes[after].pre = 0;
                    }else if(after == n + 1){
                        nodes[pre].after = n + 1;
                    }else {
                        nodes[pre].after = after;
                        nodes[after].pre = pre;
                    }
                }
            }else {
                System.out.println(nodes[num].pre);
            }
        }

    }


}


"
77,C,Java,60153531,2023-01-06 20:28:20,牛客935801330号（人工智能3211吴华聪）,答案正确,"











import java.io.*;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        class A{
            int x1=0,x2=0;
        }
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n=in.nextInt();
            int m=in.nextInt();
          A a[]=new A[n+2];
            for (int i = 1; i <=n+1 ; i++) {
               a[i]=new A();
               a[i].x1=i-1;
               a[i].x2=i+1;
            }
            a[0]=new A();

            for (int i = 0; i <m ; i++) {
                int b=in.nextInt();
                int x=in.nextInt();
                if(b==1){
                   a[a[x].x2].x1=a[x].x1;
                   a[a[x].x1].x2=a[x].x2;
                }
                else {
                    out.println(a[x].x1);
                }
            }

        }


    }
    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
78,C,Java,60153538,2023-01-06 20:28:24,challow,运行超时,"import java.util.*;
import java.io.*;

public class Main {
    
    
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String[] strs = br.readLine().split("" "");
        int n = Integer.parseInt(strs[0]);
        int k = Integer.parseInt(strs[1]);

        Map<Integer, Integer> pre = new HashMap<>();
        Map<Integer, Integer> next = new HashMap<>();
        
        for (int i = 1; i <= n; i ++) {
            if(i == 1) {
                pre.put(i, 0);
                next.put(i, 2);
            } else if(i == n) {
                pre.put(i, i - 1);
                next.put(i, -1);
            } else {
                pre.put(i, i - 1);
                next.put(i, i + 1);
            }
        }
        
        while(k -- > 0) {
            strs = br.readLine().split("" "");
            int b = Integer.parseInt(strs[0]);
            int a = Integer.parseInt(strs[1]);
            if(b == 1) {
                int prev = pre.get(a);
                int nextv = next.get(a);
//                 System.out.println(prev + ""  "" + nextv);
                next.put(prev, nextv);
                pre.put(nextv, prev);
//                 pre.remove(a);
//                 next.remove(a);
            } else {
                System.out.println(pre.get(a));
            }
        }
        
    }
}"
79,C,Java,60153777,2023-01-06 20:30:20,牛客232703472号,运行超时,"import java.util.Scanner;
import java.util.TreeSet;
public class Main{
    
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        
        TreeSet<Integer> tree = new TreeSet<>();
        
        for(int i = 1;i <= n; ++i) tree.add(i);
        
        while(k -- > 0)
        {
            int op = sc.nextInt();
            int x = sc.nextInt();
            if(op == 1) tree.remove(x);
            else{
                if(tree.lower(x) == null) System.out.println(0);
                else System.out.println(tree.lower(x));
            }
        }
        
    }
}"
80,C,Java,60153852,2023-01-06 20:30:55,牛客722252005号,运行超时,"
import java.util.*;
class Node{
    public int pre;
    public int after;

    public Node(int pre, int after) {
        this.pre = pre;
        this.after = after;
    }
}
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        Node[] nodes = new Node[n + 1];
        for (int i = 1; i <= n ; i++) {
            nodes[i] = new Node(i -1,i + 1 );
        }
        for (int i = 0; i < m; i++) {
            int l = sc.nextInt();
            int num = sc.nextInt();
            if(l == 1){
                int pre = nodes[num].pre;
                int after = nodes[num].after;
                if(pre != 0 || after != n + 1){
                    if(pre == 0){
                        nodes[after].pre = 0;
                    }else if(after == n + 1){
                        nodes[pre].after = n + 1;
                    }else {
                        nodes[pre].after = after;
                        nodes[after].pre = pre;
                    }
                }
            }else {
                System.out.println(nodes[num].pre);
            }
        }

    }


}


"
81,C,Java,60153867,2023-01-06 20:31:01,Mosyi.,运行超时,"import java.io.*;
import java.lang.reflect.Array;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int k = in.nextInt();
            String s = """";
            for (int i = 1; i <= n; i++) {
                s += String.valueOf(i);
            }
            for (int i = 0; i < k; i++) {
                int x = in.nextInt();
                int y = in.nextInt();
                if(x == 1){
                    if(y == 1){
                        s = ""0"" + s.substring(1);
                    }else {
                        s = s.substring(0, y - 1) + s.charAt(y - 2) + s.substring(y);
                    }
                }else if(x == 2){
                    if(y == 1){
                        out.println(0);
                    }else {
                        out.println(s.charAt(y - 2));
                    }
                }
            }
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
82,C,Java,60154034,2023-01-06 20:32:34,牛客232703472号,运行超时,"import java.util.Scanner;
import java.util.TreeSet;
public class Main{
    
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        
        TreeSet<Integer> tree = new TreeSet<>();
        
        for(int i = 1;i <= n; ++i) tree.add(i);
        
        while(k -- > 0)
        {
            int op = sc.nextInt();
            int x = sc.nextInt();
            if(op == 1) tree.remove(x);
            else{
                if(tree.lower(x) == null) System.out.println(0);
                else System.out.println(tree.lower(x));
            }
        }
        
    }
}"
83,C,Java,60154134,2023-01-06 20:33:23,牛客232703472号,运行超时,"import java.util.Scanner;
import java.util.TreeSet;
public class Main{
    
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        
        TreeSet<Integer> tree = new TreeSet<>();
        
        for(int i = 1;i <= n; ++i) tree.add(i);
        
        while(k -- > 0)
        {
            int op = sc.nextInt();
            int x = sc.nextInt();
            if(op == 1) tree.remove(x);
            else{
                if(tree.lower(x) == null) System.out.println(0);
                else System.out.println(tree.lower(x));
            }
        }
        
    }
}"
84,C,Java,60154179,2023-01-06 20:33:43,许愿面试顺利的小鱼干很优秀,运行超时,"import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
    	Scanner scanner=new Scanner(System.in);
    	int a=scanner.nextInt();
    	int b=scanner.nextInt();
    	int arr[][]=new int[a+1][2];
    	for(int i=0;i<b;i++) {
    		int t1=scanner.nextInt();
    		int t2=scanner.nextInt();
    		if(t1==1) {
    			arr[t2][1]=1;
    		}else {
				for(int j=t2-1;;j--) {
					if(arr[j][1]==0) {
						System.out.println(j);
						break;
					}
				}
			}
    	}
    	
    }  
}
"
85,C,Java,60154180,2023-01-06 20:33:43,牛客722252005号,运行超时,"
import java.util.*;
class Node{
    public int pre;
    public int after;

    public Node(int pre, int after) {
        this.pre = pre;
        this.after = after;
    }
}
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        Node[] nodes = new Node[n + 1];
        for (int i = 1; i <= n ; i++) {
            nodes[i] = new Node(i -1,i + 1 );
        }
        for (int i = 0; i < m; i++) {
            int l = sc.nextInt();
            int num = sc.nextInt();
            if(l == 1){
                int pre = nodes[num].pre;
                int after = nodes[num].after;
                if(pre != 0 || after != n + 1){
                    if(pre == 0){
                        nodes[after].pre = 0;
                    }else if(after == n + 1){
                        nodes[pre].after = n + 1;
                    }else {
                        nodes[pre].after = after;
                        nodes[after].pre = pre;
                    }
                }
            }else {
                System.out.println(nodes[num].pre);
            }
        }

    }


}


"
86,C,Java,60154195,2023-01-06 20:33:47,牛客232703472号,运行超时,"import java.util.Scanner;
import java.util.TreeSet;
public class Main{
    
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        
        TreeSet<Integer> tree = new TreeSet<>();
        
        for(int i = 1;i <= n; ++i) tree.add(i);
        
        while(k -- > 0)
        {
            int op = sc.nextInt();
            int x = sc.nextInt();
            if(op == 1) tree.remove(x);
            else{
                if(tree.lower(x) == null) System.out.println(0);
                else System.out.println(tree.lower(x));
            }
        }
        
    }
}"
87,C,Java,60154292,2023-01-06 20:34:39,智破云霄,运行超时,"import java.util.*;
import java.io.*;
public class Main {
public static void main(String[] args) {
	List<Integer> list = new LinkedList<>();
 InputReader in = new InputReader(System.in);
 PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
 int n=in.nextInt();
 int k=in.nextInt();
 int[] a = new int[n+1];
 for(int i=1;i<=n;i++)
	 list.add(i);
	 
 while(k-->0)
 {
	 int o=in.nextInt();
	 int p=in.nextInt();
	 if(o==1)
		 list.remove(list.indexOf(p));
	 else
	 {
		 if(list.indexOf(p)==0)
			 out.println(0);
		 else
		 out.println(list.get(list.indexOf(p)-1));
	 }
 }
 
 out.flush();
}
}


class InputReader {
    private final BufferedReader buf;
    private StringTokenizer tkl;

    public InputReader(InputStream is) {
        buf = new BufferedReader(new InputStreamReader(is));
    }

    public boolean hasNext() {
        try {
            while (tkl == null || !tkl.hasMoreElements()) tkl = new StringTokenizer(buf.readLine());
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public String next() {
        return hasNext() ? tkl.nextToken() : null;
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }
}"
88,C,Java,60154312,2023-01-06 20:34:51,许愿面试顺利的小鱼干很优秀,运行超时,"import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
    	Scanner scanner=new Scanner(System.in);
    	int a=scanner.nextInt();
    	int b=scanner.nextInt();
    	int arr[][]=new int[a+1][2];
    	for(int i=0;i<b;i++) {
    		int t1=scanner.nextInt();
    		int t2=scanner.nextInt();
    		if(t1==1) {
    			arr[t2][1]=1;
    		}else {
				for(int j=t2-1;;j--) {
					if(arr[j][1]==0) {
						System.out.println(j);
						break;
					}
				}
			}
    	}
    	
    }  
}
"
89,C,Java,60154332,2023-01-06 20:35:08,acwing-青山_12,运行超时,"import java.util.Scanner;

// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        // 注意 hasNext 和 hasNextLine 的区别
        int n = in.nextInt(), k = in.nextInt();
        int[] p = new int[n + 10], ne = new int[n + 10];
        for (int i = 1; i <= n; ++i) {
            p[i] = i - 1;
            ne[i] = i + 1;
        }
        while (k-- > 0) {
            int u = in.nextInt(), x = in.nextInt();
            if (u == 1) {
                int a = p[x], b = ne[x];
                ne[a] = b;
                p[b] = a;
            } else {
                System.out.println(p[x]);
            }
        }
    }
}"
90,C,Java,60154446,2023-01-06 20:36:07,giao1,运行超时,"import java.util.*;
import java.io.*;

public class Main{
    public static void main(String[] args) throws IOException {
        initReader();
        int n = nextInt();
        int k = nextInt();
        ArrayList<String> li = new ArrayList<>();
        li.add(""a"");
        for(int i = 1;i<=n;i++)li.add(i+"""");
        while(k-->0){
            int q = nextInt();
            String s = next();
            if(q==1) li.remove(s);
            else{
                int index = li.indexOf(s);
                if(index==1) pw.println(0);
                else pw.println(li.get(index-1));
            }
        }
        pw.close();
    }
    static BufferedReader reader;
    static StringTokenizer tokenizer;
    static PrintWriter pw;

    public static void initReader() throws IOException {
        reader = new BufferedReader(new InputStreamReader(System.in));
        tokenizer = new StringTokenizer("""");
        pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
    }


    public static boolean hasNext() {
        try {
            while (!tokenizer.hasMoreTokens()) {
                tokenizer = new StringTokenizer(reader.readLine());
            }
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public static String next() throws IOException {
        while (!tokenizer.hasMoreTokens()) {
            tokenizer = new StringTokenizer(reader.readLine());
        }
        return tokenizer.nextToken();
    }

    public static String nextLine() {
        try {
            return reader.readLine();
        } catch (Exception e) {
            return null;
        }
    }

    public static int nextInt() throws IOException {
        return Integer.parseInt(next());
    }

    public static long nextLong() throws IOException {
        return Long.parseLong(next());
    }

    public static double nextDouble() throws IOException {
        return Double.parseDouble(next());
    }

    public static char nextChar() throws IOException {
        return next().charAt(0);
    }
}"
91,C,Java,60154460,2023-01-06 20:36:14,牛客232703472号,运行超时,"import java.util.Scanner;
import java.util.TreeSet;
public class Main{
    
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        
        TreeSet<Integer> tree = new TreeSet<>();
        
        for(int i = 1;i <= n; ++i) tree.add(i);
        
        while(k -- > 0)
        {
            int op = sc.nextInt();
            int x = sc.nextInt();
            if(op == 1) tree.remove(x);
            else{
                if(tree.lower(x) == null) System.out.println(0);
                else System.out.println(tree.lower(x));
            }
        }
        
    }
}"
92,C,Java,60154472,2023-01-06 20:36:19,牛客722252005号,运行超时,"
import java.util.*;
class Node{
    public int pre;
    public int after;

    public Node(int pre, int after) {
        this.pre = pre;
        this.after = after;
    }
}
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        Node[] nodes = new Node[n + 1];
        for (int i = 1; i <= n ; i++) {
            nodes[i] = new Node(i -1,i + 1 );
        }
        for (int i = 0; i < m; i++) {
            int l = sc.nextInt();
            int num = sc.nextInt();
            if(l == 1){
                int pre = nodes[num].pre;
                int after = nodes[num].after;
                if(pre != 0 || after != n + 1){
                    if(pre == 0){
                        nodes[after].pre = 0;
                    }else if(after == n + 1){
                        nodes[pre].after = n + 1;
                    }else {
                        nodes[pre].after = after;
                        nodes[after].pre = pre;
                    }
                }
            }else {
                System.out.println(nodes[num].pre);
            }
        }

    }


}


"
93,C,Java,60154512,2023-01-06 20:36:40,牛客232703472号,运行超时,"import java.util.Scanner;
import java.util.TreeSet;
public class Main{
    
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        
        TreeSet<Integer> tree = new TreeSet<>();
        
        for(int i = 1;i <= n; ++i) tree.add(i);
        
        while(k -- > 0)
        {
            int op = sc.nextInt();
            int x = sc.nextInt();
            if(op == 1) tree.remove(x);
            else{
                if(tree.lower(x) == null) System.out.println(0);
                else System.out.println(tree.lower(x));
            }
        }
        
    }
}"
94,C,Java,60154748,2023-01-06 20:38:37,牛客722252005号,运行超时,"
import java.util.*;
class Node{
    public int pre;
    public int after;

    public Node(int pre, int after) {
        this.pre = pre;
        this.after = after;
    }
}
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        Node[] nodes = new Node[n + 1];
        for (int i = 1; i <= n ; i++) {
            nodes[i] = new Node(i -1,i + 1 );
        }
        for (int i = 0; i < m; i++) {
            int l = sc.nextInt();
            int num = sc.nextInt();
            if(l == 1){
                int pre = nodes[num].pre;
                int after = nodes[num].after;
                if(pre != 0 || after != n + 1){
                    if(pre == 0){
                        nodes[after].pre = 0;
                    }else if(after == n + 1){
                        nodes[pre].after = n + 1;
                    }else {
                        nodes[pre].after = after;
                        nodes[after].pre = pre;
                    }
                }
            }else {
                System.out.println(nodes[num].pre);
            }
        }

    }


}


"
95,C,Java,60154761,2023-01-06 20:38:43,acwing-青山_12,运行超时,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;

// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
    public static void main(String[] args) {
        MyScanner in = new MyScanner();
        // 注意 hasNext 和 hasNextLine 的区别
        int n = in.nextInt(), k = in.nextInt();
        int[] p = new int[n + 10], ne = new int[n + 10];
        for (int i = 1; i <= n; ++i) {
            p[i] = i - 1;
            ne[i] = i + 1;
        }
        while (k-- > 0) {
            int u = in.nextInt(), x = in.nextInt();
            if (u == 1) {
                int a = p[x], b = ne[x];
                ne[a] = b;
                p[b] = a;
            } else {
                System.out.println(p[x]);
            }
        }
    }
    public static class MyScanner {
        BufferedReader br;
        StringTokenizer st;

        public MyScanner() {
            br = new BufferedReader(new InputStreamReader(System.in));
        }

        String next() {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }

        String nextLine() {
            String str = """";
            try {
                str = br.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }

}"
96,C,Java,60154888,2023-01-06 20:39:48,giao1,运行超时,"import java.util.*;
import java.io.*;

public class Main{
    public static void main(String[] args) throws IOException {
        initReader();
        int n = nextInt();
        int k = nextInt();
        ArrayList<String> li = new ArrayList<>();
        li.add(""a"");
        for(int i = 1;i<=n;i++)li.add(i+"""");
        while(k-->0){
            int q = nextInt();
            String s = next();
            if(q==1) li.remove(s);
            else{
                int index = li.indexOf(s);
                if(index==1) pw.println(0);
                else pw.println(li.get(index-1));
            }
        }
        pw.close();
    }
    static BufferedReader reader;
    static StringTokenizer tokenizer;
    static PrintWriter pw;

    public static void initReader() throws IOException {
        reader = new BufferedReader(new InputStreamReader(System.in));
        tokenizer = new StringTokenizer("""");
        pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
    }


    public static boolean hasNext() {
        try {
            while (!tokenizer.hasMoreTokens()) {
                tokenizer = new StringTokenizer(reader.readLine());
            }
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public static String next() throws IOException {
        while (!tokenizer.hasMoreTokens()) {
            tokenizer = new StringTokenizer(reader.readLine());
        }
        return tokenizer.nextToken();
    }

    public static String nextLine() {
        try {
            return reader.readLine();
        } catch (Exception e) {
            return null;
        }
    }

    public static int nextInt() throws IOException {
        return Integer.parseInt(next());
    }

    public static long nextLong() throws IOException {
        return Long.parseLong(next());
    }

    public static double nextDouble() throws IOException {
        return Double.parseDouble(next());
    }

    public static char nextChar() throws IOException {
        return next().charAt(0);
    }
}"
97,C,Java,60154920,2023-01-06 20:40:01,challow,答案正确,"import java.util.*;
import java.io.*;

public class Main {
    
    
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        
        StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
        PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));

        // 输入
        in.nextToken();
        int n = (int)in.nval;
        in.nextToken();
        int k = (int)in.nval;

        // 输出
        

//         String[] strs = br.readLine().split("" "");
//         int n = Integer.parseInt(strs[0]);
//         int k = Integer.parseInt(strs[1]);
        
        
        Map<Integer, Integer> pre = new HashMap<>();
        Map<Integer, Integer> next = new HashMap<>();
        
        for (int i = 1; i <= n; i ++) {
            if(i == 1) {
                pre.put(i, 0);
                next.put(i, 2);
            } else if(i == n) {
                pre.put(i, i - 1);
                next.put(i, -1);
            } else {
                pre.put(i, i - 1);
                next.put(i, i + 1);
            }
        }
        
        while(k -- > 0) {
//             strs = br.readLine().split("" "");
//             int b = Integer.parseInt(strs[0]);
//             int a = Integer.parseInt(strs[1]);
            in.nextToken();
            int b = (int)in.nval;
            in.nextToken();
            int a = (int)in.nval;
            if(b == 1) {
                int prev = pre.get(a);
                int nextv = next.get(a);
//                 System.out.println(prev + ""  "" + nextv);
                next.put(prev, nextv);
                pre.put(nextv, prev);
//                 pre.remove(a);
//                 next.remove(a);
            } else {
                out.println(pre.get(a));
                out.flush();
            }
        }
        
    }
}"
98,C,Java,60154999,2023-01-06 20:40:42,牛客232703472号,运行超时,"import java.util.Scanner;
import java.util.TreeSet;
public class Main{
    
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        
        TreeSet<Integer> tree = new TreeSet<>();
        
        for(int i = 1;i <= n; ++i) tree.add(i);
        
        while(k -- > 0)
        {
            int op = sc.nextInt();
            int x = sc.nextInt();
            if(op == 1) tree.remove(x);
            else{
                if(tree.lower(x) == null) System.out.println(0);
                else System.out.println(tree.lower(x));
            }
        }
        
    }
}"
99,C,Java,60155045,2023-01-06 20:41:09,codingj,答案正确,"import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;

public class Main {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
	static int N = (int)(1e6 + 10);
	static int []a = new int[N];
	static int e[] = new int[N];
	static int l[] = new int[N];
	static int r[] = new int[N];
	static int id[] = new int[N];
	static int idx = 0;
	public static void main(String[] args) throws Exception{
		String nk[] = br.readLine().split("" "");
		int n = Integer.parseInt(nk[0]);
		int k = Integer.parseInt(nk[1]);
		for(int i = 1; i <= n; i++) {
			id[i] = i;
			l[i] = i - 1;
			r[i] = i + 1;
		}
		while((k--) > 0) {
			String ops[] = br.readLine().split("" "");
			int op = Integer.parseInt(ops[0]);
			int x = Integer.parseInt(ops[1]);
			if(op == 1) {
				l[r[x]] = l[x];
			    r[l[x]] = r[x];
			}else {
				out.println(l[x]);
			}
			out.flush();
		}
	}

	
}
"
100,C,Java,60155177,2023-01-06 20:42:09,许愿面试顺利的小鱼干很优秀,运行超时,"import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
    	Scanner scanner=new Scanner(System.in);
    	int a=scanner.nextInt();
    	int b=scanner.nextInt();
    	int arr[][]=new int[a+1][2];
    	for(int i=0;i<b;i++) {
    		int t1=scanner.nextInt();
    		int t2=scanner.nextInt();
    		if(t1==1) {
    			arr[t2][1]=1;
    		}else {
				for(int j=t2-1;;j--) {
					if(arr[j][1]==0) {
						System.out.println(j);
						break;
					}
				}
			}
    	}
    	
    }  
}
"
101,C,Java,60155179,2023-01-06 20:42:10,牛客722252005号,运行超时,"
import java.util.*;
class Node{
    public int pre;
    public int after;

    public Node(int pre, int after) {
        this.pre = pre;
        this.after = after;
    }
}
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        Node[] nodes = new Node[n + 1];
        for (int i = 1; i <= n ; i++) {
            nodes[i] = new Node(i -1,i + 1 );
        }
        for (int i = 0; i < m; i++) {
            int l = sc.nextInt();
            int num = sc.nextInt();
            if(l == 1){
                int pre = nodes[num].pre;
                int after = nodes[num].after;
                if(pre != 0 || after != n + 1){
                    if(pre == 0){
                        nodes[after].pre = 0;
                    }else if(after == n + 1){
                        nodes[pre].after = n + 1;
                    }else {
                        nodes[pre].after = after;
                        nodes[after].pre = pre;
                    }
                }
            }else {
                System.out.println(nodes[num].pre);
            }
        }

    }


}


"
102,C,Java,60155182,2023-01-06 20:42:11,giao1,运行超时,"import java.util.*;
import java.io.*;

public class Main{
    public static void main(String[] args) throws IOException {
        initReader();
        int n = nextInt();
        int k = nextInt();
        Vector<String> li = new Vector<>((int)1e6);
        li.add(""a"");
        for(int i = 1;i<=n;i++)li.add(i+"""");
        while(k-->0){
            int q = nextInt();
            String s = next();
            if(q==1) li.remove(s);
            else{
                int index = li.indexOf(s);
                if(index==1) pw.println(0);
                else pw.println(li.get(index-1));
            }
        }
        pw.close();
    }
    static BufferedReader reader;
    static StringTokenizer tokenizer;
    static PrintWriter pw;

    public static void initReader() throws IOException {
        reader = new BufferedReader(new InputStreamReader(System.in));
        tokenizer = new StringTokenizer("""");
        pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
    }


    public static boolean hasNext() {
        try {
            while (!tokenizer.hasMoreTokens()) {
                tokenizer = new StringTokenizer(reader.readLine());
            }
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public static String next() throws IOException {
        while (!tokenizer.hasMoreTokens()) {
            tokenizer = new StringTokenizer(reader.readLine());
        }
        return tokenizer.nextToken();
    }

    public static String nextLine() {
        try {
            return reader.readLine();
        } catch (Exception e) {
            return null;
        }
    }

    public static int nextInt() throws IOException {
        return Integer.parseInt(next());
    }

    public static long nextLong() throws IOException {
        return Long.parseLong(next());
    }

    public static double nextDouble() throws IOException {
        return Double.parseDouble(next());
    }

    public static char nextChar() throws IOException {
        return next().charAt(0);
    }
}"
103,C,Java,60155419,2023-01-06 20:44:28,牛客722252005号,运行超时,"
import java.util.*;
class Node{
    public int pre;
    public int after;

    public Node(int pre, int after) {
        this.pre = pre;
        this.after = after;
    }
}
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        Node[] nodes = new Node[n + 1];
        for (int i = 1; i <= n ; i++) {
            nodes[i] = new Node(i -1,i + 1 );
        }
        for (int i = 0; i < m; i++) {
            int l = sc.nextInt();
            int num = sc.nextInt();
            if(l == 1){
                int pre = nodes[num].pre;
                int after = nodes[num].after;
                if(pre != 0 || after != n + 1){
                    if(pre == 0){
                        nodes[after].pre = 0;
                    }else if(after == n + 1){
                        nodes[pre].after = n + 1;
                    }else {
                        nodes[pre].after = after;
                        nodes[after].pre = pre;
                    }
                }
            }else {
                System.out.println(nodes[num].pre);
            }
        }

    }


}


"
104,C,Java,60155488,2023-01-06 20:45:04,牛客232703472号,运行超时,"import java.util.Scanner;
import java.util.TreeSet;
public class Main{
    
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        
        TreeSet<Integer> tree = new TreeSet<>();
        
        for(int i = 1;i <= n; ++i) tree.add(i);
        
        while(k -- > 0)
        {
            int op = sc.nextInt();
            int x = sc.nextInt();
            if(op == 1) tree.remove(x);
            else{
                if(tree.lower(x) == null) System.out.println(0);
                else System.out.println(tree.lower(x));
            }
        }
        
    }
}"
105,C,Java,60155695,2023-01-06 20:46:55,牛客722252005号,运行超时,"
import java.util.*;
class Node{
    public int pre;
    public int after;

    public Node(int pre, int after) {
        this.pre = pre;
        this.after = after;
    }
}
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        Node[] nodes = new Node[n + 1];
        for (int i = 1; i <= n ; i++) {
            nodes[i] = new Node(i -1,i + 1 );
        }
        for (int i = 0; i < m; i++) {
            int l = sc.nextInt();
            int num = sc.nextInt();
            if(l == 1){
                int pre = nodes[num].pre;
                int after = nodes[num].after;
                if(pre != 0 || after != n + 1){
                    if(pre == 0){
                        nodes[after].pre = 0;
                    }else if(after == n + 1){
                        nodes[pre].after = n + 1;
                    }else {
                        nodes[pre].after = after;
                        nodes[after].pre = pre;
                    }
                }
            }else {
                System.out.println(nodes[num].pre);
            }
        }

    }


}


"
106,C,Java,60155799,2023-01-06 20:47:56,Ytuyx,答案错误,"import java.util.Scanner;
import java.io.*;

public class Main {
	static int n,k;
	static int N=(int)1e6+10;
	static int[][] c=new int[N][2]; 
	static StreamTokenizer in=new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
	static PrintWriter out=new PrintWriter(new OutputStreamWriter(System.out));
	public static void main(String[] args) throws IOException {
		Scanner sc=new Scanner(System.in);
		in.nextToken();n=(int)in.nval;
		in.nextToken();k=(int)in.nval;
		//初始化
		for(int i=1;i<=n;i++) {
			c[i][0]=1;           //c[i][0]表示第i个人是否还在队伍里
			c[i][1]=i-1;         //c[i][1]表示第i个人的前一个人是谁
		}
		for(int i=1;i<=k;i++) {
			in.nextToken();int q=(int)in.nval;
			in.nextToken();int x=(int)in.nval;
			if(q==1) {
				c[x][0]=0;
				c[x+1][1]=c[x][1];
			}else {
				out.println(c[x][1]);
			}
		}
		out.flush();
	}
}
"
107,C,Java,60155838,2023-01-06 20:48:21,牛客232703472号,运行超时,"import java.util.Scanner;
import java.util.TreeSet;
public class Main{
    
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        
        TreeSet<Integer> tree = new TreeSet<>();
        
        for(int i = 1;i <= n; ++i) tree.add(i);
        
        while(k -- > 0)
        {
            int op = sc.nextInt();
            int x = sc.nextInt();
            if(op == 1) tree.remove(x);
            else{
                if(tree.lower(x) == null) System.out.println(0);
                else System.out.println(tree.lower(x));
            }
        }
        
    }
}"
108,C,Java,60155975,2023-01-06 20:49:21,牛客722252005号,运行超时,"
import java.util.*;
class Node{
    public int pre;
    public int after;

    public Node(int pre, int after) {
        this.pre = pre;
        this.after = after;
    }
}
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        Node[] nodes = new Node[n + 1];
        for (int i = 1; i <= n ; i++) {
            nodes[i] = new Node(i -1,i + 1 );
        }
        for (int i = 0; i < m; i++) {
            int l = sc.nextInt();
            int num = sc.nextInt();
            if(l == 1){
                int pre = nodes[num].pre;
                int after = nodes[num].after;
                if(pre != 0 || after != n + 1){
                    if(pre == 0){
                        nodes[after].pre = 0;
                    }else if(after == n + 1){
                        nodes[pre].after = n + 1;
                    }else {
                        nodes[pre].after = after;
                        nodes[after].pre = pre;
                    }
                }
            }else {
                System.out.println(nodes[num].pre);
            }
        }

    }


}


"
109,C,Java,60156025,2023-01-06 20:49:50,giao1,运行超时,"import java.util.*;
import java.io.*;

public class Main{
    public static void main(String[] args) throws IOException {
        initReader();
        int n = nextInt();
        int k = nextInt();
        Vector<String> li = new Vector<>((int)1e6);
        li.add(""a"");
        for(int i = 1;i<=n;i++)li.add(String.valueOf(i));
        while(k-->0){
            int q = nextInt();
            String s = next();
            //int s = nextInt();
            if(q==1) li.remove(s);
            else{
                int index = li.indexOf(s);
                if(index==1) pw.println(0);
                else pw.println(li.get(index-1));
            }
        }
        pw.close();
    }
    static BufferedReader reader;
    static StringTokenizer tokenizer;
    static PrintWriter pw;

    public static void initReader() throws IOException {
        reader = new BufferedReader(new InputStreamReader(System.in));
        tokenizer = new StringTokenizer("""");
        pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
    }


    public static boolean hasNext() {
        try {
            while (!tokenizer.hasMoreTokens()) {
                tokenizer = new StringTokenizer(reader.readLine());
            }
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public static String next() throws IOException {
        while (!tokenizer.hasMoreTokens()) {
            tokenizer = new StringTokenizer(reader.readLine());
        }
        return tokenizer.nextToken();
    }

    public static String nextLine() {
        try {
            return reader.readLine();
        } catch (Exception e) {
            return null;
        }
    }

    public static int nextInt() throws IOException {
        return Integer.parseInt(next());
    }

    public static long nextLong() throws IOException {
        return Long.parseLong(next());
    }

    public static double nextDouble() throws IOException {
        return Double.parseDouble(next());
    }

    public static char nextChar() throws IOException {
        return next().charAt(0);
    }
}"
110,C,Java,60156087,2023-01-06 20:50:19,闵其其,输出超限,"import java.io.*;
import java.util.*;
import java.math.*;
import java.util.Set;
public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            //代码写这里
            int n = in.nextInt();
            int k = in.nextInt();
            TreeSet<Integer> set = new TreeSet<Integer>();
            int sum = 0;
            for (int round = 0; round < k; round++) {
                int c = in.nextInt();
                int x = in.nextInt();
//                System.out.println(x);
                if(c==1){
                    set.add(x);
                    sum++;
                }
                else {
                    for (int i = 1; i <= sum+1; i++) {
                        int s = x-i;
                        if(s==0) {
                            out.println(0);
                            break;
                        }
                        else {
                            if (!set.contains(s))
                                out.println(s);
                        }
                    }
                }
            }
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
111,C,Java,60156193,2023-01-06 20:51:15,HMETAO,运行超时,"
import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws IOException {
        Reader r = new Reader();
        int n = r.nextInt();
        int k = r.nextInt();
        ArrayList<Node> list = new ArrayList<>();
        for (int i = 1; i <= n; i++) {
            list.add(new Node(i, i - 1));
        }
        int c = 0;
        for (int i = 0; i < k; i++) {
            int type = r.nextInt();
            int x = r.nextInt();
            if (type == 1) {
                c++;
                Node node = list.get(x-1);
                list.get(x).pre = node.pre;
                list.remove(node);
            } else {
                System.out.println(list.get(x - c-1).pre);
            }
        }
    }

    static class Node {
        int index;
        int pre;

        public Node(int index, int children) {
            this.index = index;
            this.pre = children;
        }
    }

    public static long pow3(int a, int b) {
        long ans = 1;
        while (b > 0) {
            if ((b & 1) == 1) {
                ans *= a;
            }
            a *= a;
            b >>= 1;
        }
        return ans;
    }

    public static long pow4(long a, long b, int p) {
        long ans = 1;
        while (b > 0) {
            if ((b & 1) == 1) {
                ans = (ans * a) % p;
            }
            a = (a * a) % p;
            b >>= 1;
        }
        return ans;
    }

    public static List<Integer> euler(int n) {
        boolean[] check = new boolean[n + 1];
        List<Integer> ans = new ArrayList<>();
        for (int i = 2; i <= n; i++) {
            if (!check[i]) {
                ans.add(i);
            }
            for (Integer item : ans) {
                if (item * i > n) break;
                check[item * i] = true;
                if (i % item == 0) break;
            }
        }
        return ans;
    }

    public static void euler_phi(int n) {
        int ans = n;
        for (int i = 2; i <= n / i; i++) {
            if (n % i == 0) {
                ans *= (1 - 1.0 / i);
                while (n % i == 0) {
                    n /= i;
                }
            }
        }
        if (n > 1) ans *= (1 - 1.0 / n);
        System.out.println(ans);
    }

    public static int[] eulers(int n) {
        boolean[] check = new boolean[n + 1];
        int[] phi = new int[n + 1];
        phi[1] = 1;
        ArrayList<Integer> primes = new ArrayList<>();
        for (int i = 2; i <= n; i++) {
            if (!check[i]) {
                primes.add(i);
                phi[i] = i - 1;
            }

            for (Integer item : primes) {
                if (item * i > n) break;
                check[item * i] = true;
                if (i % item == 0) {
                    phi[item * i] = item * phi[i];
                    break;
                }
                phi[item * i] = (item - 1) * phi[i];
            }
        }
        return phi;
    }

    static class Reader {
        BufferedReader buf;
        StringTokenizer tok;

        Reader() {
            buf = new BufferedReader(new InputStreamReader(System.in));
        }

        boolean hasNext() {
            while (tok == null || !tok.hasMoreElements()) {
                try {
                    tok = new StringTokenizer(buf.readLine());
                } catch (Exception e) {
                    return false;
                }
            }
            return true;
        }

        String nextLine() {
            try {
                return buf.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        String next() {
            if (hasNext())
                return tok.nextToken();
            return null;
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }
    }

}


"
112,C,Java,60156291,2023-01-06 20:52:07,牛客232703472号,运行超时,"import java.util.Scanner;
import java.util.TreeSet;
public class Main{
    
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        
        TreeSet<Integer> tree = new TreeSet<>();
        
        for(int i = 1;i <= n; ++i) tree.add(i);
        
        while(k -- > 0)
        {
            int op = sc.nextInt();
            int x = sc.nextInt();
            if(op == 1) tree.remove(x);
            else{
                if(tree.lower(x) == null) System.out.println(0);
                else System.out.println(tree.lower(x));
            }
        }
        
    }
}"
113,C,Java,60156382,2023-01-06 20:52:56,牛客722252005号,运行超时,"
import java.util.*;
class Node{
    public int pre;
    public int after;

    public Node(int pre, int after) {
        this.pre = pre;
        this.after = after;
    }
}
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        Node[] nodes = new Node[n + 1];
        for (int i = 1; i <= n ; i++) {
            nodes[i] = new Node(i -1,i + 1 );
        }
        for (int i = 0; i < m; i++) {
            int l = sc.nextInt();
            int num = sc.nextInt();
            if(l == 1){
                int pre = nodes[num].pre;
                int after = nodes[num].after;
                if(pre != 0 || after != n + 1){
                    if(pre == 0){
                        nodes[after].pre = 0;
                    }else if(after == n + 1){
                        nodes[pre].after = n + 1;
                    }else {
                        nodes[pre].after = after;
                        nodes[after].pre = pre;
                    }
                }
            }else {
                System.out.println(nodes[num].pre);
            }
        }

    }


}


"
114,C,Java,60156406,2023-01-06 20:53:09,许愿面试顺利的小鱼干很优秀,运行超时,"import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
    	Scanner scanner=new Scanner(System.in);
    	int a=scanner.nextInt();
    	int b=scanner.nextInt();
    	int arr[][]=new int[a+1][2];
    	int arr2[][]=new int[b][2];
    	StringBuffer str=new StringBuffer();
    	for(int i=0;i<b;i++) {
    		arr2[i][0]=scanner.nextInt();
    		arr2[i][1]=scanner.nextInt();
    	}
    	for(int i=0;i<b;i++) {
    		if(arr2[i][0]==1) {
    			arr[arr2[i][1]][1]=1;
    		}else {
    			for(int j=arr2[i][1]-1;;j--) {
    				if(arr[j][1]==0) {
    					str.append(j+""\n"");
    					break;
    				}
    			}
    		}
    	}
    	System.out.println(str);
    }  
}
"
115,C,Java,60156460,2023-01-06 20:53:34,闵其其,运行超时,"import java.io.*;
import java.util.*;
import java.math.*;
import java.util.Set;
public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            //代码写这里
            int n = in.nextInt();
            int k = in.nextInt();
            TreeSet<Integer> set = new TreeSet<Integer>();
            int sum = 0;
            for (int round = 0; round < k; round++) {
                int c = in.nextInt();
                int x = in.nextInt();
//                System.out.println(x);
                if(c==1){
                    set.add(x);
                    sum++;
                }
                else {
                    for (int i = 1; i <= sum+1; i++) {
                        int s = x-i;
                        if(s==0) {
                            out.println(0);
                            break;
                        }
                        else {
                            if (!set.contains(s)){
                                out.println(s);
                                break;
                            }
                        }
                    }
                }
            }
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
116,C,Java,60156531,2023-01-06 20:54:14,giao1,运行超时,"import java.util.*;
import java.io.*;

public class Main{
    public static void main(String[] args) throws IOException {
        initReader();
        int n = nextInt();
        int k = nextInt();
        Vector<String> li = new Vector<>(k+1);
        for(int i = 1;i<=n;i++)li.add(String.valueOf(i));
        while(k-->0){
            int q = nextInt();
            String s = next();
            //int s = nextInt();
            if(q==1) li.remove(s);
            else{
                int index = li.indexOf(s);
                if(index==0) pw.println(0);
                else pw.println(li.get(index-1));
            }
        }
        pw.close();
    }
    static BufferedReader reader;
    static StringTokenizer tokenizer;
    static PrintWriter pw;

    public static void initReader() throws IOException {
        reader = new BufferedReader(new InputStreamReader(System.in));
        tokenizer = new StringTokenizer("""");
        pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
    }


    public static boolean hasNext() {
        try {
            while (!tokenizer.hasMoreTokens()) {
                tokenizer = new StringTokenizer(reader.readLine());
            }
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public static String next() throws IOException {
        while (!tokenizer.hasMoreTokens()) {
            tokenizer = new StringTokenizer(reader.readLine());
        }
        return tokenizer.nextToken();
    }

    public static String nextLine() {
        try {
            return reader.readLine();
        } catch (Exception e) {
            return null;
        }
    }

    public static int nextInt() throws IOException {
        return Integer.parseInt(next());
    }

    public static long nextLong() throws IOException {
        return Long.parseLong(next());
    }

    public static double nextDouble() throws IOException {
        return Double.parseDouble(next());
    }

    public static char nextChar() throws IOException {
        return next().charAt(0);
    }
}"
117,C,Java,60156692,2023-01-06 20:55:52,今天一定早点睡,答案错误,"import java.io.*;

public class Main {
    static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));

    public static void main(String[] args) throws IOException {
        String[] s1 = in.readLine().split("" "");
        int n = Integer.parseInt(s1[0]), m = Integer.parseInt(s1[1]);
        PII[] p = new PII[1000001];
        p[1] = new PII(0, 2);
        for (int i = 2; i < n; i ++)
            p[i] = new PII(i - 1, i + 1);
        p[n] = new PII(n - 1, -1);
        while (m -- > 0) {
            String[] s2 = in.readLine().split("" "");
            int op = Integer.parseInt(s2[0]);
            int x = Integer.parseInt(s2[1]);
            if (op == 1) {
                if (p[x].first != 0) {
                    p[p[x].first].first = p[x].second;
                    p[p[x].second].first = p[x].first;
                }
            }else {
                System.out.println(p[x].first);
            }
        }
    }
}

class PII {
    int first = 0;
    int second = -1;
    public PII(int a, int b) {
        first = a;
        second = b;
    }
}"
118,C,Java,60156847,2023-01-06 20:57:13,今天一定早点睡,答案错误,"import java.io.*;

public class Main {
    static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));

    public static void main(String[] args) throws IOException {
        String[] s1 = in.readLine().split("" "");
        int n = Integer.parseInt(s1[0]), m = Integer.parseInt(s1[1]);
        PII[] p = new PII[1000001];
        p[1] = new PII(0, 2);
        for (int i = 2; i < n; i ++)
            p[i] = new PII(i - 1, i + 1);
        p[n] = new PII(n - 1, -1);
        while (m -- > 0) {
            String[] s2 = in.readLine().split("" "");
            int op = Integer.parseInt(s2[0]);
            int x = Integer.parseInt(s2[1]);
            if (op == 1) {
                if (p[x].first != 0) {
                    p[p[x].first].first = p[x].second;
                    p[p[x].second].first = p[x].first;
                }
            }else {
                out.println(p[x].first);
            }
        }
        out.flush();
    }
}

class PII {
    int first = 0;
    int second = -1;
    public PII(int a, int b) {
        first = a;
        second = b;
    }
}"
119,C,Java,60156885,2023-01-06 20:57:32,challow,答案正确,"import java.util.*;
import java.io.*;

public class Main {
    
    
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
        
        String[] strs = br.readLine().split("" "");
        int n = Integer.parseInt(strs[0]);
        int k = Integer.parseInt(strs[1]);

        Map<Integer, Integer> pre = new HashMap<>();
        Map<Integer, Integer> next = new HashMap<>();
        
        for (int i = 1; i <= n; i ++) {
            if(i == 1) {
                pre.put(i, 0);
                next.put(i, 2);
            } else if(i == n) {
                pre.put(i, i - 1);
                next.put(i, -1);
            } else {
                pre.put(i, i - 1);
                next.put(i, i + 1);
            }
        }
        
        while(k -- > 0) {
            strs = br.readLine().split("" "");
            int b = Integer.parseInt(strs[0]);
            int a = Integer.parseInt(strs[1]);
            if(b == 1) {
                int prev = pre.get(a);
                int nextv = next.get(a);
//                 System.out.println(prev + ""  "" + nextv);
                next.put(prev, nextv);
                pre.put(nextv, prev);
//                 pre.remove(a);
//                 next.remove(a);
            } else {
                out.println(pre.get(a));
                out.flush();
            }
        }
        
    }
}"
120,C,Java,60157232,2023-01-06 20:59:58,giao1,运行超时,"import java.util.*;
import java.io.*;

public class Main{
    public static void main(String[] args) throws IOException {
        initReader();
        int n = nextInt();
        int k = nextInt();
        Vector<String> li = new Vector<>(k+1);
        for(int i = 1;i<=n;i++)li.add(String.valueOf(i));
        while(k-->0){
            String[] sline = nextLine().split("" "");
            if(sline[0].equals(""1"")) li.remove(sline[1]);
            else{
                int index = li.indexOf(sline[1]);
                if(index==0) pw.println(0);
                else pw.println(li.get(index-1));
            }
        }
        pw.close();
    }
    static BufferedReader reader;
    static StringTokenizer tokenizer;
    static PrintWriter pw;

    public static void initReader() throws IOException {
        reader = new BufferedReader(new InputStreamReader(System.in));
        tokenizer = new StringTokenizer("""");
        pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
    }


    public static boolean hasNext() {
        try {
            while (!tokenizer.hasMoreTokens()) {
                tokenizer = new StringTokenizer(reader.readLine());
            }
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public static String next() throws IOException {
        while (!tokenizer.hasMoreTokens()) {
            tokenizer = new StringTokenizer(reader.readLine());
        }
        return tokenizer.nextToken();
    }

    public static String nextLine() {
        try {
            return reader.readLine();
        } catch (Exception e) {
            return null;
        }
    }

    public static int nextInt() throws IOException {
        return Integer.parseInt(next());
    }

    public static long nextLong() throws IOException {
        return Long.parseLong(next());
    }

    public static double nextDouble() throws IOException {
        return Double.parseDouble(next());
    }

    public static char nextChar() throws IOException {
        return next().charAt(0);
    }
}"
121,C,Java,60157621,2023-01-06 21:04:28,今天一定早点睡,执行出错,"import java.io.*;

public class Main {
    static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));

    public static void main(String[] args) throws IOException {
        String[] s1 = in.readLine().split("" "");
        int n = Integer.parseInt(s1[0]), m = Integer.parseInt(s1[1]);
        PII[] p = new PII[1000001];
        p[1] = new PII(0, 2);
        for (int i = 2; i < n; i ++)
            p[i] = new PII(i - 1, i + 1);
        p[n] = new PII(n - 1, -1);
        while (m -- > 0) {
            String[] s2 = in.readLine().split("" "");
            int op = Integer.parseInt(s2[0]);
            int x = Integer.parseInt(s2[1]);
            if (op == 1) {
                if (p[x].first != 0) {
                    p[p[x].first].first = p[x].second;
                    p[p[x].second].first = p[x].first;
                }else{
                    p[p[x].second].first = p[x].first;
                }
            }else {
                out.println(p[x].first);
            }
        }
        out.flush();
    }
}

class PII {
    int first = 0;
    int second = -1;
    public PII(int a, int b) {
        first = a;
        second = b;
    }
}"
122,C,Java,60157747,2023-01-06 21:06:04,HMETAO,运行超时,"
import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws IOException {
        Reader r = new Reader();
        int n = r.nextInt();
        int k = r.nextInt();
        TreeSet<Integer> set = new TreeSet<>();
        for (int i = 1; i <= n; i++) {
            set.add(i);
        }
        int c = 0;
        for (int i = 0; i < k; i++) {
            int type = r.nextInt();
            int x = r.nextInt();
            if (type == 1) {
                set.remove(x);
            } else {
                Integer lower = set.lower(x);
                System.out.println(lower == null ? 0 : lower);
            }
        }
    }


    public static long pow3(int a, int b) {
        long ans = 1;
        while (b > 0) {
            if ((b & 1) == 1) {
                ans *= a;
            }
            a *= a;
            b >>= 1;
        }
        return ans;
    }

    public static long pow4(long a, long b, int p) {
        long ans = 1;
        while (b > 0) {
            if ((b & 1) == 1) {
                ans = (ans * a) % p;
            }
            a = (a * a) % p;
            b >>= 1;
        }
        return ans;
    }

    public static List<Integer> euler(int n) {
        boolean[] check = new boolean[n + 1];
        List<Integer> ans = new ArrayList<>();
        for (int i = 2; i <= n; i++) {
            if (!check[i]) {
                ans.add(i);
            }
            for (Integer item : ans) {
                if (item * i > n) break;
                check[item * i] = true;
                if (i % item == 0) break;
            }
        }
        return ans;
    }

    public static void euler_phi(int n) {
        int ans = n;
        for (int i = 2; i <= n / i; i++) {
            if (n % i == 0) {
                ans *= (1 - 1.0 / i);
                while (n % i == 0) {
                    n /= i;
                }
            }
        }
        if (n > 1) ans *= (1 - 1.0 / n);
        System.out.println(ans);
    }

    public static int[] eulers(int n) {
        boolean[] check = new boolean[n + 1];
        int[] phi = new int[n + 1];
        phi[1] = 1;
        ArrayList<Integer> primes = new ArrayList<>();
        for (int i = 2; i <= n; i++) {
            if (!check[i]) {
                primes.add(i);
                phi[i] = i - 1;
            }

            for (Integer item : primes) {
                if (item * i > n) break;
                check[item * i] = true;
                if (i % item == 0) {
                    phi[item * i] = item * phi[i];
                    break;
                }
                phi[item * i] = (item - 1) * phi[i];
            }
        }
        return phi;
    }

    static class Reader {
        BufferedReader buf;
        StringTokenizer tok;

        Reader() {
            buf = new BufferedReader(new InputStreamReader(System.in));
        }

        boolean hasNext() {
            while (tok == null || !tok.hasMoreElements()) {
                try {
                    tok = new StringTokenizer(buf.readLine());
                } catch (Exception e) {
                    return false;
                }
            }
            return true;
        }

        String nextLine() {
            try {
                return buf.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        String next() {
            if (hasNext())
                return tok.nextToken();
            return null;
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }
    }

}


"
123,C,Java,60157778,2023-01-06 21:06:31,牛客722252005号,运行超时,"
import java.util.*;
class Node{
    public int pre;
    public int after;

    public Node(int pre, int after) {
        this.pre = pre;
        this.after = after;
    }
}
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        Node[] nodes = new Node[n + 1];
        for (int i = 1; i <= n ; i++) {
            nodes[i] = new Node(i -1,i + 1 );
        }
        for (int i = 0; i < m; i++) {
            int l = sc.nextInt();
            int num = sc.nextInt();
            if(l == 1){
                int pre = nodes[num].pre;
                int after = nodes[num].after;
                if(pre != 0 || after != n + 1){
                    if(pre == 0){
                        nodes[after].pre = 0;
                    }else if(after == n + 1){
                        nodes[pre].after = n + 1;
                    }else {
                        nodes[pre].after = after;
                        nodes[after].pre = pre;
                    }
                }
            }else {
                System.out.println(nodes[num].pre);
            }
        }

    }


}


"
124,C,Java,60157880,2023-01-06 21:08:06,今天一定早点睡,答案错误,"import java.io.*;

public class Main {
    static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));

    public static void main(String[] args) throws IOException {
        String[] s1 = in.readLine().split("" "");
        int n = Integer.parseInt(s1[0]), m = Integer.parseInt(s1[1]);
        PII[] p = new PII[1000001];
        p[1] = new PII(0, 2);
        for (int i = 2; i < n; i ++)
            p[i] = new PII(i - 1, i + 1);
        p[n] = new PII(n - 1, -1);
        while (m -- > 0) {
            String[] s2 = in.readLine().split("" "");
            int op = Integer.parseInt(s2[0]);
            int x = Integer.parseInt(s2[1]);
            if (op == 1) {
                if (p[x].first != 0 && p[x].second != -1) {
                    p[p[x].first].first = p[x].second;
                    p[p[x].second].first = p[x].first;
                }else if (p[x].first == 0){
                    p[p[x].second].first = p[x].first;
                }else if (p[x].second == -1) {
                    p[p[x].first].second = p[x].second;
                }
            }else {
                out.println(p[x].first);
            }
        }
        out.flush();
    }
}

class PII {
    int first = 0;
    int second = -1;
    public PII(int a, int b) {
        first = a;
        second = b;
    }
}"
125,C,Java,60158021,2023-01-06 21:10:27,HMETAO,运行超时,"
import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws IOException {
        Reader r = new Reader();
        int n = r.nextInt();
        int k = r.nextInt();
        TreeSet<Integer> set = new TreeSet<>();
        for (int i = 0; i < n; i++) {
            set.add(i);
        }
        for (int i = 0; i < k; i++) {
            int type = r.nextInt();
            int x = r.nextInt();
            if (type == 1) {
                set.remove(x);
            } else {
                System.out.println(set.lower(x));
            }
        }
    }


    public static long pow3(int a, int b) {
        long ans = 1;
        while (b > 0) {
            if ((b & 1) == 1) {
                ans *= a;
            }
            a *= a;
            b >>= 1;
        }
        return ans;
    }

    public static long pow4(long a, long b, int p) {
        long ans = 1;
        while (b > 0) {
            if ((b & 1) == 1) {
                ans = (ans * a) % p;
            }
            a = (a * a) % p;
            b >>= 1;
        }
        return ans;
    }

    public static List<Integer> euler(int n) {
        boolean[] check = new boolean[n + 1];
        List<Integer> ans = new ArrayList<>();
        for (int i = 2; i <= n; i++) {
            if (!check[i]) {
                ans.add(i);
            }
            for (Integer item : ans) {
                if (item * i > n) break;
                check[item * i] = true;
                if (i % item == 0) break;
            }
        }
        return ans;
    }

    public static void euler_phi(int n) {
        int ans = n;
        for (int i = 2; i <= n / i; i++) {
            if (n % i == 0) {
                ans *= (1 - 1.0 / i);
                while (n % i == 0) {
                    n /= i;
                }
            }
        }
        if (n > 1) ans *= (1 - 1.0 / n);
        System.out.println(ans);
    }

    public static int[] eulers(int n) {
        boolean[] check = new boolean[n + 1];
        int[] phi = new int[n + 1];
        phi[1] = 1;
        ArrayList<Integer> primes = new ArrayList<>();
        for (int i = 2; i <= n; i++) {
            if (!check[i]) {
                primes.add(i);
                phi[i] = i - 1;
            }

            for (Integer item : primes) {
                if (item * i > n) break;
                check[item * i] = true;
                if (i % item == 0) {
                    phi[item * i] = item * phi[i];
                    break;
                }
                phi[item * i] = (item - 1) * phi[i];
            }
        }
        return phi;
    }

    static class Reader {
        BufferedReader buf;
        StringTokenizer tok;

        Reader() {
            buf = new BufferedReader(new InputStreamReader(System.in));
        }

        boolean hasNext() {
            while (tok == null || !tok.hasMoreElements()) {
                try {
                    tok = new StringTokenizer(buf.readLine());
                } catch (Exception e) {
                    return false;
                }
            }
            return true;
        }

        String nextLine() {
            try {
                return buf.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        String next() {
            if (hasNext())
                return tok.nextToken();
            return null;
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }
    }

}


"
126,C,Java,60158130,2023-01-06 21:12:23,HMETAO,运行超时,"

import java.io.*;
import java.util.*;

public class Main {
    static OutputWriter out;
    public static void main(String[] args) throws IOException {
        out=new OutputWriter(System.out);
        Reader r = new Reader();
        int n = r.nextInt();
        int k = r.nextInt();
        TreeSet<Integer> set = new TreeSet<>();
        for (int i = 0; i < n; i++) {
            set.add(i);
        }
        for (int i = 0; i < k; i++) {
            int type = r.nextInt();
            int x = r.nextInt();
            if (type == 1) {
                set.remove(x);
            } else {
                System.out.println(set.lower(x));
            }
        }
    }


    public static long pow3(int a, int b) {
        long ans = 1;
        while (b > 0) {
            if ((b & 1) == 1) {
                ans *= a;
            }
            a *= a;
            b >>= 1;
        }
        return ans;
    }

    public static long pow4(long a, long b, int p) {
        long ans = 1;
        while (b > 0) {
            if ((b & 1) == 1) {
                ans = (ans * a) % p;
            }
            a = (a * a) % p;
            b >>= 1;
        }
        return ans;
    }

    public static List<Integer> euler(int n) {
        boolean[] check = new boolean[n + 1];
        List<Integer> ans = new ArrayList<>();
        for (int i = 2; i <= n; i++) {
            if (!check[i]) {
                ans.add(i);
            }
            for (Integer item : ans) {
                if (item * i > n) break;
                check[item * i] = true;
                if (i % item == 0) break;
            }
        }
        return ans;
    }

    public static void euler_phi(int n) {
        int ans = n;
        for (int i = 2; i <= n / i; i++) {
            if (n % i == 0) {
                ans *= (1 - 1.0 / i);
                while (n % i == 0) {
                    n /= i;
                }
            }
        }
        if (n > 1) ans *= (1 - 1.0 / n);
        System.out.println(ans);
    }

    public static int[] eulers(int n) {
        boolean[] check = new boolean[n + 1];
        int[] phi = new int[n + 1];
        phi[1] = 1;
        ArrayList<Integer> primes = new ArrayList<>();
        for (int i = 2; i <= n; i++) {
            if (!check[i]) {
                primes.add(i);
                phi[i] = i - 1;
            }

            for (Integer item : primes) {
                if (item * i > n) break;
                check[item * i] = true;
                if (i % item == 0) {
                    phi[item * i] = item * phi[i];
                    break;
                }
                phi[item * i] = (item - 1) * phi[i];
            }
        }
        return phi;
    }
    static class OutputWriter {

        private final BufferedWriter writer;

        public OutputWriter(OutputStream out) {
            writer=new BufferedWriter(new OutputStreamWriter(out));
        }

        public void print(String str) throws IOException {
            writer.write(str);
        }

        public void print(Object obj) throws IOException {
            print(String.valueOf(obj));
        }

        public void println(String str) throws IOException {
            print(str+""\n"");
        }

        public void println() throws IOException {
            print('\n');
        }

        public void println(Object obj) throws IOException {
            println(String.valueOf(obj));
        }

        public void gg() throws IOException {
            writer.flush();
        }
    }
    static class Reader {
        BufferedReader buf;
        StringTokenizer tok;

        Reader() {
            buf = new BufferedReader(new InputStreamReader(System.in));
        }

        boolean hasNext() {
            while (tok == null || !tok.hasMoreElements()) {
                try {
                    tok = new StringTokenizer(buf.readLine());
                } catch (Exception e) {
                    return false;
                }
            }
            return true;
        }

        String nextLine() {
            try {
                return buf.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        String next() {
            if (hasNext())
                return tok.nextToken();
            return null;
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }
    }

}


"
127,C,Java,60158154,2023-01-06 21:12:47,Mosyi.,答案正确,"import java.io.*;
import java.lang.reflect.Array;
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        class A{
            int x;
            int y;
        }
        public void solve(int testNumber, InputReader in, PrintWriter out) {
            int n = in.nextInt();
            int k = in.nextInt();
            A[] a = new A[n+2];
            for (int i = 1; i <= n+1; i++) {
                a[i] = new A();
                a[i].x = i-1;
                a[i].y = i+1;
            }
            a[0] = new A();
            for (int i = 0; i < k; i++) {
                int xx = in.nextInt();
                int yy = in.nextInt();
                if(xx == 1){
                    a[a[yy].y].x = a[yy].x;
                    a[a[yy].x].y = a[yy].y;
                }else{
                    out.println(a[yy].x);
                }
            }
        }
    }

    static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }
        boolean hasNext()
        {
            while (tokenizer == null || !tokenizer.hasMoreTokens())
            {
                try
                {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (Exception e)
                {
                    return false;
                    // TODO: handle exception
                }
            }
            return true;
        }
        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }
        public String nextLine()
        {
            String str = null;
            try
            {
                str = reader.readLine();
            } catch (IOException e)
            {
                e.printStackTrace();
            }
            return str;
        }
        public int nextInt() {
            return Integer.parseInt(next());
        }
        public double nextDouble(){
            return Double.parseDouble(next());
        }
        public long nextLong(){
            return Long.parseLong(next());
        }
        public BigInteger nextBigInteger()
        {
            return new BigInteger(next());
        }
        public BigDecimal nextBigDecimal()
        {
            return new BigDecimal(next());
        }

    }
}"
128,C,Java,60158166,2023-01-06 21:12:56,HMETAO,答案错误,"
import java.io.*;
import java.util.*;

public class Main {
    static OutputWriter out;
    public static void main(String[] args) throws IOException {
        out=new OutputWriter(System.out);
        Reader r = new Reader();
        int n = r.nextInt();
        int k = r.nextInt();
        TreeSet<Integer> set = new TreeSet<>();
        for (int i = 0; i < n; i++) {
            set.add(i);
        }
        for (int i = 0; i < k; i++) {
            int type = r.nextInt();
            int x = r.nextInt();
            if (type == 1) {
                set.remove(x);
            } else {
                out.println(set.lower(x));
            }
        }
    }


    public static long pow3(int a, int b) {
        long ans = 1;
        while (b > 0) {
            if ((b & 1) == 1) {
                ans *= a;
            }
            a *= a;
            b >>= 1;
        }
        return ans;
    }

    public static long pow4(long a, long b, int p) {
        long ans = 1;
        while (b > 0) {
            if ((b & 1) == 1) {
                ans = (ans * a) % p;
            }
            a = (a * a) % p;
            b >>= 1;
        }
        return ans;
    }

    public static List<Integer> euler(int n) {
        boolean[] check = new boolean[n + 1];
        List<Integer> ans = new ArrayList<>();
        for (int i = 2; i <= n; i++) {
            if (!check[i]) {
                ans.add(i);
            }
            for (Integer item : ans) {
                if (item * i > n) break;
                check[item * i] = true;
                if (i % item == 0) break;
            }
        }
        return ans;
    }

    public static void euler_phi(int n) {
        int ans = n;
        for (int i = 2; i <= n / i; i++) {
            if (n % i == 0) {
                ans *= (1 - 1.0 / i);
                while (n % i == 0) {
                    n /= i;
                }
            }
        }
        if (n > 1) ans *= (1 - 1.0 / n);
        System.out.println(ans);
    }

    public static int[] eulers(int n) {
        boolean[] check = new boolean[n + 1];
        int[] phi = new int[n + 1];
        phi[1] = 1;
        ArrayList<Integer> primes = new ArrayList<>();
        for (int i = 2; i <= n; i++) {
            if (!check[i]) {
                primes.add(i);
                phi[i] = i - 1;
            }

            for (Integer item : primes) {
                if (item * i > n) break;
                check[item * i] = true;
                if (i % item == 0) {
                    phi[item * i] = item * phi[i];
                    break;
                }
                phi[item * i] = (item - 1) * phi[i];
            }
        }
        return phi;
    }
    static class OutputWriter {

        private final BufferedWriter writer;

        public OutputWriter(OutputStream out) {
            writer=new BufferedWriter(new OutputStreamWriter(out));
        }

        public void print(String str) throws IOException {
            writer.write(str);
        }

        public void print(Object obj) throws IOException {
            print(String.valueOf(obj));
        }

        public void println(String str) throws IOException {
            print(str+""\n"");
        }

        public void println() throws IOException {
            print('\n');
        }

        public void println(Object obj) throws IOException {
            println(String.valueOf(obj));
        }

        public void gg() throws IOException {
            writer.flush();
        }
    }
    static class Reader {
        BufferedReader buf;
        StringTokenizer tok;

        Reader() {
            buf = new BufferedReader(new InputStreamReader(System.in));
        }

        boolean hasNext() {
            while (tok == null || !tok.hasMoreElements()) {
                try {
                    tok = new StringTokenizer(buf.readLine());
                } catch (Exception e) {
                    return false;
                }
            }
            return true;
        }

        String nextLine() {
            try {
                return buf.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        String next() {
            if (hasNext())
                return tok.nextToken();
            return null;
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }
    }

}


"
129,C,Java,60158202,2023-01-06 21:13:44,HMETAO,答案正确,"
import java.io.*;
import java.util.*;

public class Main {
    static OutputWriter out;

    public static void main(String[] args) throws IOException {
        Reader r = new Reader();
        int n = r.nextInt();
        int k = r.nextInt();
        TreeSet<Integer> set = new TreeSet<>();
        for (int i = 0; i < n; i++) {
            set.add(i);
        }
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < k; i++) {
            int type = r.nextInt();
            int x = r.nextInt();
            if (type == 1) {
                set.remove(x);
            } else {
                sb.append(set.lower(x)).append(""\n"");
            }
        }
        System.out.println(sb);
    }


    public static long pow3(int a, int b) {
        long ans = 1;
        while (b > 0) {
            if ((b & 1) == 1) {
                ans *= a;
            }
            a *= a;
            b >>= 1;
        }
        return ans;
    }

    public static long pow4(long a, long b, int p) {
        long ans = 1;
        while (b > 0) {
            if ((b & 1) == 1) {
                ans = (ans * a) % p;
            }
            a = (a * a) % p;
            b >>= 1;
        }
        return ans;
    }

    public static List<Integer> euler(int n) {
        boolean[] check = new boolean[n + 1];
        List<Integer> ans = new ArrayList<>();
        for (int i = 2; i <= n; i++) {
            if (!check[i]) {
                ans.add(i);
            }
            for (Integer item : ans) {
                if (item * i > n) break;
                check[item * i] = true;
                if (i % item == 0) break;
            }
        }
        return ans;
    }

    public static void euler_phi(int n) {
        int ans = n;
        for (int i = 2; i <= n / i; i++) {
            if (n % i == 0) {
                ans *= (1 - 1.0 / i);
                while (n % i == 0) {
                    n /= i;
                }
            }
        }
        if (n > 1) ans *= (1 - 1.0 / n);
        System.out.println(ans);
    }

    public static int[] eulers(int n) {
        boolean[] check = new boolean[n + 1];
        int[] phi = new int[n + 1];
        phi[1] = 1;
        ArrayList<Integer> primes = new ArrayList<>();
        for (int i = 2; i <= n; i++) {
            if (!check[i]) {
                primes.add(i);
                phi[i] = i - 1;
            }

            for (Integer item : primes) {
                if (item * i > n) break;
                check[item * i] = true;
                if (i % item == 0) {
                    phi[item * i] = item * phi[i];
                    break;
                }
                phi[item * i] = (item - 1) * phi[i];
            }
        }
        return phi;
    }

    static class OutputWriter {

        private final BufferedWriter writer;

        public OutputWriter(OutputStream out) {
            writer = new BufferedWriter(new OutputStreamWriter(out));
        }

        public void print(String str) throws IOException {
            writer.write(str);
        }

        public void print(Object obj) throws IOException {
            print(String.valueOf(obj));
        }

        public void println(String str) throws IOException {
            print(str + ""\n"");
        }

        public void println() throws IOException {
            print('\n');
        }

        public void println(Object obj) throws IOException {
            println(String.valueOf(obj));
        }

        public void gg() throws IOException {
            writer.flush();
        }
    }

    static class Reader {
        BufferedReader buf;
        StringTokenizer tok;

        Reader() {
            buf = new BufferedReader(new InputStreamReader(System.in));
        }

        boolean hasNext() {
            while (tok == null || !tok.hasMoreElements()) {
                try {
                    tok = new StringTokenizer(buf.readLine());
                } catch (Exception e) {
                    return false;
                }
            }
            return true;
        }

        String nextLine() {
            try {
                return buf.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        String next() {
            if (hasNext())
                return tok.nextToken();
            return null;
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }
    }

}


"
130,C,Java,60158786,2023-01-06 21:24:41,zzl064,运行超时,"import java.util.*;

public class Main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt(), k = sc.nextInt();
        int[][] a = new int[n][2];
        for(int i = 0; i < n; ++i){
            a[i][0] = i - 1;
            a[i][1] = i + 1;
        }
        while(k -- > 0){
            int op = sc.nextInt(), x = sc.nextInt() - 1;
            if(op == 1){
                int prev = a[x][0], next = a[x][1];
                if(prev >= 0){
                    a[prev][1] = next;
                }
                if(next < n){
                    a[next][0] = prev;
                }
            }else{
                System.out.println(a[x][0] + 1);
            }
        }
    }
}"
131,C,Java,60158972,2023-01-06 21:29:05,zzl064,答案正确,"import java.util.*;

public class Main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt(), k = sc.nextInt();
        int[][] a = new int[n][2];
        for(int i = 0; i < n; ++i){
            a[i][0] = i - 1;
            a[i][1] = i + 1;
        }
        StringBuilder sb = new StringBuilder();
        while(k -- > 0){
            int op = sc.nextInt(), x = sc.nextInt() - 1;
            if(op == 1){
                int prev = a[x][0], next = a[x][1];
                if(prev >= 0){
                    a[prev][1] = next;
                }
                if(next < n){
                    a[next][0] = prev;
                }
            }else{
                sb.append(a[x][0] + 1).append('\n');
            }
        }
        System.out.println(sb);
    }
}"
132,C,Java,60159214,2023-01-06 21:35:55,giao1,答案正确,"import java.util.*;
import java.io.*;

public class Main{
    
    static int maxn = (int)1e6+10,idx=0;
    static int[] e = new int[maxn],l=new int[maxn],r=new int[maxn];
    
    public static void main(String[] args) throws IOException {
        initReader();
        String[] temp = nextLine().split("" "");
        int n = Integer.parseInt(temp[0]);
        int k = Integer.parseInt(temp[1]);
        for(int i = 1;i<=n;i++){
            e[i] = i;
            l[i] = i-1;
            r[i] = i+1;
        }
        while(k-->0){
            String oper[] = nextLine().split("" "");
            int a = Integer.parseInt(oper[0]);
            int b =Integer.parseInt(oper[1]);
            if(a==1){
                l[r[b]] = l[b];
                r[l[b]] = r[b];
            }else{
                pw.println(l[b]);
            }
        }
        pw.close();
    }
    static BufferedReader reader;
    static StringTokenizer tokenizer;
    static PrintWriter pw;

    public static void initReader() throws IOException {
        reader = new BufferedReader(new InputStreamReader(System.in));
        tokenizer = new StringTokenizer("""");
        pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
    }


    public static boolean hasNext() {
        try {
            while (!tokenizer.hasMoreTokens()) {
                tokenizer = new StringTokenizer(reader.readLine());
            }
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public static String next() throws IOException {
        while (!tokenizer.hasMoreTokens()) {
            tokenizer = new StringTokenizer(reader.readLine());
        }
        return tokenizer.nextToken();
    }

    public static String nextLine() {
        try {
            return reader.readLine();
        } catch (Exception e) {
            return null;
        }
    }

    public static int nextInt() throws IOException {
        return Integer.parseInt(next());
    }

    public static long nextLong() throws IOException {
        return Long.parseLong(next());
    }

    public static double nextDouble() throws IOException {
        return Double.parseDouble(next());
    }

    public static char nextChar() throws IOException {
        return next().charAt(0);
    }
}"
133,C,Java,60159280,2023-01-06 21:37:37,今天一定早点睡,答案正确,"import java.io.*;

public class Main {
    static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
    static int N = 1000010;
    static int[] l = new int[N], r = new int[N];

    public static void main(String[] args) throws IOException {
        String[] s1 = in.readLine().split("" "");
        int n = Integer.parseInt(s1[0]), m = Integer.parseInt(s1[1]);
        for (int i = 1; i <= n; i ++) {
            l[i] = i - 1;
            r[i] = i + 1;
        }

        while (m -- > 0) {
            String[] s2 = in.readLine().split("" "");
            int op = Integer.parseInt(s2[0]), x = Integer.parseInt(s2[1]);
            if (op == 1) {
                l[r[x]] = l[x];
                r[l[x]] = r[x];
            }else {
                out.println(l[x]);
            }
            out.flush();
        }
    }
}"
134,C,Java,60160552,2023-01-06 22:23:44,摩西摩西1号,运行超时,"import java.util.Scanner;

public class Main {
    static int N = 1000010,idx;
    static int[] l = new int[N],r = new int[N],e=new int[N];
    public static void init(){
        idx=2;
        r[0] = 1;
        l[1] = 0;
    }
    public static void add(int k,int x){
        l[idx] = k;
        r[idx] = r[k];
        l[r[k]] = idx;
        r[k] = idx;
        e[idx++] = x;
    }
    public static void remove(int k){
        r[l[k]] = r[k];
        l[r[k]] = l[k];
    }
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        int n = scan.nextInt();
        int k = scan.nextInt();
        init();
        add(0,1);
        for(int i=1;i<n;i++){
            add(i+1,i+1);
        }
        while (k-->0){
            int op = scan.nextInt();
            int x = scan.nextInt();
            if(op==1){
                remove(x+1);
            }else {
                if(l[x+1]==0) System.out.println(0);
                else System.out.println(e[l[x+1]]);
            }
        }
    }
}"
135,C,Java,60160632,2023-01-06 22:27:16,摩西摩西1号,运行超时,"import java.util.Scanner;

public class Main {
    static int N = 1000010,idx;
    static int[] l = new int[N],r = new int[N],e=new int[N];
    public static void init(){
        idx=2;
        r[0] = 1;
        l[1] = 0;
    }
    public static void add(int k,int x){
        l[idx] = k;
        r[idx] = r[k];
        l[r[k]] = idx;
        r[k] = idx;
        e[idx++] = x;
    }
    public static void remove(int k){
        r[l[k]] = r[k];
        l[r[k]] = l[k];
    }
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        int n = scan.nextInt();
        int k = scan.nextInt();
        init();
        add(0,1);
        for(int i=1;i<n;i++){
            add(i+1,i+1);
        }
        while (k-->0){
            int op = scan.nextInt();
            int x = scan.nextInt();
            if(op==1){
                remove(x+1);
            }else {
                if(l[x+1]==0) System.out.println(0);
                else System.out.println(e[l[x+1]]);
            }
        }
    }
}"
136,C,Java,60160674,2023-01-06 22:29:46,摩西摩西1号,运行超时,"import java.util.Scanner;

public class Main {
    static int N = 1000010,idx;
    static int[] l = new int[N],r = new int[N],e=new int[N];
    public static void init(){
        idx=2;
        r[0] = 1;
        l[1] = 0;
    }
    public static void add(int k,int x){
        l[idx] = k;
        r[idx] = r[k];
        l[r[k]] = idx;
        r[k] = idx;
        e[idx++] = x;
    }
    public static void remove(int k){
        r[l[k]] = r[k];
        l[r[k]] = l[k];
    }
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        int n = scan.nextInt();
        int k = scan.nextInt();
        init();
        add(0,1);
        for(int i=1;i<n;i++){
            add(i+1,i+1);
        }
        while (k-->0){
            int op = scan.nextInt();
            int x = scan.nextInt();
            if(op==1){
                remove(x+1);
            }else {
                if(l[x+1]==0) System.out.println(0);
                else System.out.println(e[l[x+1]]);
            }
        }
    }
}"
137,C,Java,60160694,2023-01-06 22:30:39,MZZW,运行超时,"import java.util.Scanner;

public class Main {
    static int N = 1000010,idx;
    static int[] l = new int[N],r = new int[N],e=new int[N];
    public static void init(){
        idx=2;
        r[0] = 1;
        l[1] = 0;
    }
    public static void add(int k,int x){
        l[idx] = k;
        r[idx] = r[k];
        l[r[k]] = idx;
        r[k] = idx;
        e[idx++] = x;
    }
    public static void remove(int k){
        r[l[k]] = r[k];
        l[r[k]] = l[k];
    }
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        int n = scan.nextInt();
        int k = scan.nextInt();
        init();
        add(0,1);
        for(int i=1;i<n;i++){
            add(i+1,i+1);
        }
        while (k-->0){
            int op = scan.nextInt();
            int x = scan.nextInt();
            if(op==1){
                remove(x+1);
            }else {
                if(l[x+1]==0) System.out.println(0);
                else System.out.println(e[l[x+1]]);
            }
        }
    }
}
"
138,C,Java,60161105,2023-01-06 22:53:40,摩西摩西1号,运行超时,"import java.io.*;

public class Main {
    static int N = 1000010,idx;
    static int[] l = new int[N],r = new int[N],e=new int[N];
    public static void init(){
        idx=2;
        r[0] = 1;
        l[1] = 0;
    }
    public static void add(int k,int x){
        l[idx] = k;
        r[idx] = r[k];
        l[r[k]] = idx;
        r[k] = idx;
        e[idx++] = x;
    }
    public static void remove(int k){
        r[l[k]] = r[k];
        l[r[k]] = l[k];
    }
    public static void main(String[] args) throws IOException {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        String[] s = reader.readLine().split("" "");
        int n = Integer.parseInt(s[0]);
        int k = Integer.parseInt(s[1]);
        init();
        add(0,1);
        for(int i=1;i<n;i++){
            add(i+1,i+1);
        }
        while (k-->0){
            String[] s1 = reader.readLine().split("" "");
            int op = Integer.parseInt(s1[0]);
            int x = Integer.parseInt(s1[1]);
            if(op==1){
                remove(x+1);
            }else {
                if(l[x+1]==0) System.out.println(0);
                else System.out.println(e[l[x+1]]);
            }
        }
    }
}"
139,C,Java,60161199,2023-01-06 23:01:27,摩西摩西1号,答案正确,"import java.io.*;

public class Main {
    static int N = 1000010,idx;
    static int[] l = new int[N],r = new int[N],e=new int[N];
    public static void init(){
        idx=2;
        r[0] = 1;
        l[1] = 0;
    }
    public static void add(int k,int x){
        l[idx] = k;
        r[idx] = r[k];
        l[r[k]] = idx;
        r[k] = idx;
        e[idx++] = x;
    }
    public static void remove(int k){
        r[l[k]] = r[k];
        l[r[k]] = l[k];
    }
    public static void main(String[] args) throws IOException {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(System.out));
        String[] s = reader.readLine().split("" "");
        int n = Integer.parseInt(s[0]);
        int k = Integer.parseInt(s[1]);
        init();
        add(0,1);
        for(int i=1;i<n;i++){
            add(i+1,i+1);
        }
        while (k-->0){
            String[] s1 = reader.readLine().split("" "");
            int op = Integer.parseInt(s1[0]);
            int x = Integer.parseInt(s1[1]);
            if(op==1){
                remove(x+1);
            }else {
                if(l[x+1]==0) writer.write(0+""\n"");
                else writer.write(e[l[x+1]]+""\n"");
            }
        }
        writer.flush();
        writer.close();
        reader.close();
    }
}"
140,C,Java,60161210,2023-01-06 23:01:56,摩西摩西1号,答案正确,"import java.io.*;

public class Main {
    static int N = 1000010,idx;
    static int[] l = new int[N],r = new int[N],e=new int[N];
    public static void init(){
        idx=2;
        r[0] = 1;
        l[1] = 0;
    }
    public static void add(int k,int x){
        l[idx] = k;
        r[idx] = r[k];
        l[r[k]] = idx;
        r[k] = idx;
        e[idx++] = x;
    }
    public static void remove(int k){
        r[l[k]] = r[k];
        l[r[k]] = l[k];
    }
    public static void main(String[] args) throws IOException {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(System.out));
        String[] s = reader.readLine().split("" "");
        int n = Integer.parseInt(s[0]);
        int k = Integer.parseInt(s[1]);
        init();
        add(0,1);
        for(int i=1;i<n;i++){
            add(i+1,i+1);
        }
        while (k-->0){
            String[] s1 = reader.readLine().split("" "");
            int op = Integer.parseInt(s1[0]);
            int x = Integer.parseInt(s1[1]);
            if(op==1){
                remove(x+1);
            }else {
                if(l[x+1]==0) writer.write(0+""\n"");
                else writer.write(e[l[x+1]]+""\n"");
            }
        }
        writer.flush();
        writer.close();
        reader.close();
    }
}"
141,C,Java,60161495,2023-01-06 23:19:22,刘映辰,运行超时,"import java.util.*;
import java.lang.*;
import java.io.*;

public class Main {
    static class Node{
        Node next;
        Node previous;
        int value = 0;;
        Node(int v){
           value = v;
       } 
    }
    public static void main(String[] args) throws IOException{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String[] test_data = br.readLine().split("" "");
        int n = Integer.parseInt(test_data[0]);
        int k = Integer.parseInt(test_data[1]);
        
        Node head = new Node(0);
        Node tail = new Node(0);
        head.next = tail;
        tail.previous = head;
        
        Node[] map = new Node[n + 1];
        
        for(int i = 1; i <= n; i++){
            Node current = new Node(i);
            current.previous = tail.previous;
            tail.previous.next = current;
            
            current.next = tail;
            tail.previous = current;
            map[i] = current;
        }
        
        for(int i = 0; i < k; i++){
            String command = br.readLine();
            int id = Integer.parseInt(command.substring(2));
            
            if(command.charAt(0) == '1'){
                Node current = map[id];
                current.next.previous = current.previous;
                current.previous.next = current.next.next;
            }
            else{
                Node current = map[id];
                System.out.println(current.previous.value);
            }   
        }   
    }
}"
142,C,Java,60162941,2023-01-07 09:26:18,可爱抱抱呀😥,答案正确,"//Java快读快写模板，不定时更新优化内容
//@可爱抱抱呀
import java.util.*;
import java.io.*;
import java.math.*;
import java.text.*;
public class Main{
    public static void main(String args[]) throws IOException{
        Read sc=new Read();
        int n=sc.nextInt();
        int k=sc.nextInt();
        ListNode pos[]=new ListNode[n+8];
        ListNode head=new ListNode(0);
        ListNode tail=new ListNode(1000000000);
        ListNode h=head;
        for(int i=1;i<=n;i++){
            h.next=new ListNode(i);
            h.next.pre=h;
            h=h.next;
            pos[h.val]=h;
        }
        h.next=tail;
        h.next.pre=h;
        for(int i=0;i<k;i++){
            int p=sc.nextInt();
            int x=sc.nextInt();
            if(p==1){
                ListNode pp=pos[x];
                ListNode pp1=pp.pre;
                ListNode pp2=pp.next;
                pp1.next=pp2;
                pp2.pre=pp1;
            }
            else{
                sc.println(pos[x].pre.val);
            }
        }
        //sc.print(0);
        sc.bw.flush();
        sc.bw.close();
    }
}
class ListNode{
    int val;
    ListNode pre,next;
    public ListNode(int val){
        this.val=val;
    }
}
//记住看数字范围，需要开long吗，需要用BigInteger吗，需要手动处理字符串吗，复杂度数量级控制在1e7或者以下了吗
//开数组的数据范围最高 @可爱抱抱 不能超过1e7，数据范围再大就要用哈希表离散化了
//基本数据类型不能自定义sort排序，二维数组就可以了，顺序排序的时候是小减大，注意返回值应该是int
class Read{
    BufferedReader bf;
    StringTokenizer st;
    BufferedWriter bw;
    public Read(){
        bf=new BufferedReader(new InputStreamReader(System.in));
        st=new StringTokenizer("""");
        bw=new BufferedWriter(new OutputStreamWriter(System.out));
        //什么时候才能持续稳定ak力扣、AcWing呢？
        //什么时候才能ak cf的div2，div1呢？才能打div2不计rating呢？
        //什么时候才能ak  abc  不计rating呢？
        //什么时候才能ak 牛客练习赛不计rating呢?
    }
    public String nextLine() throws IOException{
        return bf.readLine();
    }
    public String next() throws IOException{
        while(!st.hasMoreTokens()){
            st=new StringTokenizer(bf.readLine());
        }
        return st.nextToken();
    }
    public char nextChar() throws IOException{
        // 确定下一个@可爱抱抱 只有一个字符的时候再用
        return next().charAt(0);
    }
    public int nextInt() throws IOException{
        return Integer.parseInt(next());
    }
    public long nextLong() throws IOException{
        return Long.parseLong(next());
    }
    public double nextDouble() throws IOException{
        return Double.parseDouble(next());
    }
    public BigInteger nextBigInteger() throws IOException{
        return new BigInteger(next());
    }
    public void println(int a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(int a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(String a) throws IOException{
        bw.write(a);
        bw.newLine();
        return;
    }
    public void print(String a) throws IOException{
        bw.write(a);
        return;
    }
    public void println(long a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(long a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(double a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
    public void print(double a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void print(BigInteger a) throws IOException{
        bw.write(a.toString());
        return;
    }
    public void print(char a) throws IOException{
        bw.write(String.valueOf(a));
        return;
    }
    public void println(char a) throws IOException{
        bw.write(String.valueOf(a));
        bw.newLine();
        return;
    }
}"
143,C,Java,60163240,2023-01-07 10:04:30,乐观的牛肉丸寄了,运行超时,"import java.util.Scanner;
class  Link
{
    int value;
    Link(int value)
    {
        this.value= value;
    }
    Link previous;
    Link last;
}
public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int n =input.nextInt();
        Link links[] = new Link[n+1];
        for (int i = 0; i < links.length ; i++) {
            links[i] = new Link(i);
        }
        links[0].last=links[1];
        links[n].previous=links[n-1];
        for (int i = 1; i < links.length-1; i++) {
            links[i].previous = links[i-1];
            links[i].last = links[i+1];
        }
        int k = input.nextInt();
        for (int i = 0; i < k ; i++) {
            int select =input.nextInt();
            int temp = input.nextInt();
            if (select==1)
            {
                links[temp].last.previous=links[temp].previous;
                links[temp].previous.last=links[temp].last;
            }
            else
            {
                System.out.println(links[temp].previous.value);
            }
        }
    }
}
"
144,C,Java,60163561,2023-01-07 10:32:00,Regis,运行超时,"
import java.util.LinkedList;
import java.util.Scanner;

// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
    public static void main(String[] args) {
//        extracted();
//        extracted1();

        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        int op,x;

        LinkedList<Integer> list = new LinkedList<>();
        for (int i = 0; i <= n; i++) {
            list.add(i);
        }
        while (sc.hasNext()) {
            op = sc.nextInt();
            x = sc.nextInt();
            if(op == 1) {
                list.remove(Integer.valueOf(x));
            } else if(op == 2) {
                int i = list.indexOf(x);
                System.out.println(list.get(i-1));
            }
        }
    }

    private static void extracted1() {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        sc.nextLine();
        String s = sc.nextLine();
        String k = sc.nextLine();
//        System.out.println(""---"" + n + "" "" + m + "" "" + s + k +""----"");
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < s.length(); i++) {
            if(s.charAt(i) >= 'a' && s.charAt(i) <= 'z'){
                sb.append(s.charAt(i));
            }
        }
        s = sb.toString();
        int i = 0;
        int j = 0;
        int lasti = 0;
        while(i < s.length() && j < k.length()){
            if(s.charAt(i) == k.charAt(j)) {
                i++;
                j++;
                if(j == k.length()){
                    System.out.println(""YES"");
                    return;
                }
            }else {
                i = lasti;
                j = 0;
                lasti++;
            }
        }
        System.out.println(""NO"");
    }

    private static void extracted() {
        Scanner in = new Scanner(System.in);
        // 注意 hasNext 和 hasNextLine 的区别
        int n = in.nextInt();
        int a = in.nextInt();
        int b = in.nextInt();
        int minres = 9999;
        for (int i = 0; i < 1001 && a*i <= n; i++) {
            minres = Math.min((n - a * i) % b, minres) ;
            if(minres == 0)break;
        }

        System.out.println(minres);
    }
}
"
145,C,Java,60163656,2023-01-07 10:40:33,Regis,运行超时,"import java.util.LinkedList;
import java.util.Scanner;

// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
    public static void main(String[] args) {
//        extracted();
//        extracted1();

        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        int op,x;

        LinkedList<Integer> list = new LinkedList<>();
        for (int i = 0; i <= n; i++) {
            list.add(i);
        }
        int f= 0;
        while (f++ < k && sc.hasNext()) {
            op = sc.nextInt();
            x = sc.nextInt();
            if(op == 1) {
                list.remove(Integer.valueOf(x));
            } else if(op == 2) {
                int i = list.indexOf(x);
                System.out.println(list.get(i-1));
            }
        }
    }

    private static void extracted1() {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        sc.nextLine();
        String s = sc.nextLine();
        String k = sc.nextLine();
//        System.out.println(""---"" + n + "" "" + m + "" "" + s + k +""----"");
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < s.length(); i++) {
            if(s.charAt(i) >= 'a' && s.charAt(i) <= 'z'){
                sb.append(s.charAt(i));
            }
        }
        s = sb.toString();
        int i = 0;
        int j = 0;
        int lasti = 0;
        while(i < s.length() && j < k.length()){
            if(s.charAt(i) == k.charAt(j)) {
                i++;
                j++;
                if(j == k.length()){
                    System.out.println(""YES"");
                    return;
                }
            }else {
                i = lasti;
                j = 0;
                lasti++;
            }
        }
        System.out.println(""NO"");
    }

    private static void extracted() {
        Scanner in = new Scanner(System.in);
        // 注意 hasNext 和 hasNextLine 的区别
        int n = in.nextInt();
        int a = in.nextInt();
        int b = in.nextInt();
        int minres = 9999;
        for (int i = 0; i < 1001 && a*i <= n; i++) {
            minres = Math.min((n - a * i) % b, minres) ;
            if(minres == 0)break;
        }

        System.out.println(minres);
    }
}
"
146,C,Java,60163665,2023-01-07 10:41:12,乐观的牛肉丸寄了,运行超时,"import java.util.Scanner;
class  Link
{
    int value;
    Link(int value)
    {
        this.value= value;
    }
    Link previous;
    Link last;
}
public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int n =input.nextInt();
        Link links[] = new Link[n+1];
        for (int i = 0; i < links.length ; i++) {
            links[i] = new Link(i);
        }
        links[0].last=links[1];
        links[n].previous=links[n-1];
        for (int i = 1; i < links.length-1; i++) {
            links[i].previous = links[i-1];
            links[i].last = links[i+1];
        }
        int k = input.nextInt();
        for (int i = 0; i < k ; i++) {
            int select =input.nextInt();
            int temp = input.nextInt();
            if (select==1)
            {
                links[temp].last.previous=links[temp].previous;
                links[temp].previous.last=links[temp].last;
            }
            else
            {
                System.out.println(links[temp].previous.value);
            }
        }
    }
}
"
147,C,Java,60163676,2023-01-07 10:41:52,牛客722252005号,答案正确,"
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.util.*;
class Node{
    public int pre;
    public int after;

    public Node(int pre, int after) {
        this.pre = pre;
        this.after = after;
    }
}
public class Main {

    public static void main(String[] args) throws IOException {
        Scanner sc = new Scanner(System.in);
        BufferedWriter bufferedWriter = new BufferedWriter(new OutputStreamWriter(System.out));
        int n = sc.nextInt();
        int m = sc.nextInt();
        Node[] nodes = new Node[n + 1];
        for (int i = 1; i <= n ; i++) {
            nodes[i] = new Node(i -1,i + 1 );
        }
        for (int i = 0; i < m; i++) {
            int l = sc.nextInt();
            int num = sc.nextInt();
            if(l == 1){
                int pre = nodes[num].pre;
                int after = nodes[num].after;
                if(pre != 0 || after != n + 1){
                    if(pre == 0){
                        nodes[after].pre = 0;
                    }else if(after == n + 1){
                        nodes[pre].after = n + 1;
                    }else {
                        nodes[pre].after = after;
                        nodes[after].pre = pre;
                    }
                }
            }else {
                bufferedWriter.write(nodes[num].pre + ""\n"");
            }
        }
        bufferedWriter.flush();
        bufferedWriter.close();

    }


}"
148,C,Java,60163923,2023-01-07 10:58:14,乐观的牛肉丸寄了,运行超时,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int n =input.nextInt();
        int previous[] = new int[n+1];
        int last[] = new int[n+1];
        for (int i = 1; i <=n; i++) {
            previous[i] = i-1;
            last[i] = i+1;
        }
        int k = input.nextInt();
        for (int i = 0; i < k ; i++) {
            int select =input.nextInt();
            int temp = input.nextInt();
            if (select==1)
            {
                last[previous[temp]]=last[temp];
                previous[last[temp]]=previous[temp];
            }
            else
            {
                System.out.println(previous[temp]);
            }
        }
    }
}
"
149,C,Java,60163961,2023-01-07 11:00:43,Regis,运行超时,"
import java.util.LinkedList;
import java.util.Scanner;

// 注意类名必须为 Main, 不要有任何 package xxx 信息
public class Main {
    static class Node {
        int value;
        Node pre;
        Node next;

        public Node(int i) {
            this.value = i;
        }
        public Node() {
        }

        public Node init(int n) {
             Node head = new Node(0);
             head.pre = null;
             Node p = head;
            for(int i = 0; i <= n; i++) {
                p.next = new Node(i);
                p.next.pre = p;
                p = p.next;
            }
            return head;
        }

        public void op1(int i, Node head) {
            Node p = head;
            while(p.next != null) {
                if(p.next.value == i){
                    if(p.next.next != null) {
                        p.next.next.pre = p;
                    }
                    p.next = p.next.next;
                }
                p = p.next;
            }
        }

        public int get(int i, Node head) {
            if(head.next != null) head = head.next;
            while(head.value != i) head = head.next;
            return head.pre.value;
        }
    }
    public static void main(String[] args) {
//        extracted();
//        extracted1();

        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        int op,x;

        LinkedList<Integer> list = new LinkedList<>();
        Node node = new Node();
        Node head = node.init(n);

        int f= 0;
        while (f++ < k && sc.hasNext()) {
            op = sc.nextInt();
            x = sc.nextInt();
            if(op == 1) {
                node.op1(x, head);
            } else if(op == 2) {
                int res = node.get(x, head);
                System.out.println(res);
            }
        }
    }

    private static void extracted1() {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        sc.nextLine();
        String s = sc.nextLine();
        String k = sc.nextLine();
//        System.out.println(""---"" + n + "" "" + m + "" "" + s + k +""----"");
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < s.length(); i++) {
            if(s.charAt(i) >= 'a' && s.charAt(i) <= 'z'){
                sb.append(s.charAt(i));
            }
        }
        s = sb.toString();
        int i = 0;
        int j = 0;
        int lasti = 0;
        while(i < s.length() && j < k.length()){
            if(s.charAt(i) == k.charAt(j)) {
                i++;
                j++;
                if(j == k.length()){
                    System.out.println(""YES"");
                    return;
                }
            }else {
                i = lasti;
                j = 0;
                lasti++;
            }
        }
        System.out.println(""NO"");
    }

    private static void extracted() {
        Scanner in = new Scanner(System.in);
        // 注意 hasNext 和 hasNextLine 的区别
        int n = in.nextInt();
        int a = in.nextInt();
        int b = in.nextInt();
        int minres = 9999;
        for (int i = 0; i < 1001 && a*i <= n; i++) {
            minres = Math.min((n - a * i) % b, minres) ;
            if(minres == 0)break;
        }

        System.out.println(minres);
    }
}
"
150,C,Java,60164116,2023-01-07 11:13:09,乐观的牛肉丸寄了,执行出错,"import java.io.*;

public class Main {
    public static void main(String[] args) throws IOException {
        StreamTokenizer input = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
        PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
        // 输入
        input.nextToken();
        int n =(int)input.nval;
        int previous[] = new int[n+1];
        int last[] = new int[n+1];
        for (int i = 1; i <=n; i++) {
            previous[i] = i-1;
            last[i] = i+1;
        }
        input.nextToken();
        int k = (int)input.nval;
        for (int i = 0; i < k ; i++) {
            input.nextToken();
            int select =(int)input.nval;
            input.nextToken();
            int temp = (int)input.nval;
            if (select==1)
            {
                last[previous[temp]]=last[temp];
                previous[last[temp]]=previous[temp];
            }
            else
            {
                out.println(previous[temp]);
                out.flush();
            }
        }
    }
}
"
151,C,Java,60164146,2023-01-07 11:15:43,乐观的牛肉丸寄了,答案正确,"import java.io.*;

public class Main {
    public static void main(String[] args) throws IOException {
        StreamTokenizer input = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
        PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
        // 输入
        input.nextToken();
        int n =(int)input.nval;
        int previous[] = new int[n+2];
        int last[] = new int[n+2];
        for (int i = 1; i <=n; i++) {
            previous[i] = i-1;
            last[i] = i+1;
        }
        input.nextToken();
        int k = (int)input.nval;
        for (int i = 0; i < k ; i++) {
            input.nextToken();
            int select =(int)input.nval;
            input.nextToken();
            int temp = (int)input.nval;
            if (select==1)
            {
                last[previous[temp]]=last[temp];
                previous[last[temp]]=previous[temp];
            }
            else
            {
                out.println(previous[temp]);
                out.flush();
            }
        }
    }
}
"
152,C,Java,60164899,2023-01-07 12:16:05,Ytuyx,答案正确,"import java.io.*;
public class Main {
	static int n,k;
	static int N=(int)1e6+10;
	static int[][] c=new int[N][2]; 
	static StreamTokenizer in=new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
	static PrintWriter out=new PrintWriter(new OutputStreamWriter(System.out));
	public static void main(String[] args) throws IOException {
		in.nextToken();n=(int)in.nval;
		in.nextToken();k=(int)in.nval;
		//初始化
		for(int i=1;i<=n;i++) {
			c[i][0]=i-1;          //c[i][0]表示第i个人的前一个人是谁
			c[i][1]=i+1;         //c[i][1]表示第i个人的后一个人是谁
		}
		//
		for(int i=1;i<=k;i++) {
			in.nextToken();int q=(int)in.nval;
			in.nextToken();int x=(int)in.nval;
			if(q==1) {
				c[c[x][1]][0]=c[x][0];
				c[c[x][0]][1]=c[x][1];
			}else {
				out.println(c[x][0]);
			}
		}
		out.flush();
	}
}
"
153,C,Java,60164989,2023-01-07 12:23:21,a..ac!,答案正确,"

import java.io.*;
import java.math.*;
import java.util.*;

class Jgt {
    public long index, key;

    public Jgt(long index, long key) {
        this.index = index;
        this.key = key;
    }
}

public class Main {
    public static void main(String[] args) {
        PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
        Input sc = new Input(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        TreeSet<Integer> set = new TreeSet<>();
        for (int i = 0; i <= n; i++) {
            set.add(i);
        }
        while (k-- > 0) {
            int l = sc.nextInt();
            int r = sc.nextInt();
            if (l == 1) {
                set.remove(r);
            } else {
                out.println(set.lower(r));
            }
        }
        out.flush();


    }


    static class Input {

        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public Input(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            String str = null;
            try {
                str = reader.readLine();
            } catch (IOException e) {
                // TODO 自动生成的 catch 块
                e.printStackTrace();
            }
            return str;
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public Double nextDouble() {
            return Double.parseDouble(next());
        }

        public BigInteger nextBigInteger() {
            return new BigInteger(next());
        }
    }
}
"
154,C,Java,60165272,2023-01-07 12:57:33,Ytuyx,答案正确,"import java.io.*;
public class Main {
	static int n,k;
	static int N=(int)1e6+10;
	static int[][] c=new int[N][2]; 
	static StreamTokenizer in=new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
	static PrintWriter out=new PrintWriter(new OutputStreamWriter(System.out));
	public static void main(String[] args) throws IOException {
		in.nextToken();n=(int)in.nval;
		in.nextToken();k=(int)in.nval;
		//初始化
		for(int i=1;i<=n;i++) {
			c[i][0]=i-1;          //c[i][0]表示第i个人的前一个人是谁
			c[i][1]=i+1;         //c[i][1]表示第i个人的后一个人是谁
		}
		//
		for(int i=1;i<=k;i++) {
			in.nextToken();int q=(int)in.nval;
			in.nextToken();int x=(int)in.nval;
			if(q==1) {
				c[c[x][1]][0]=c[x][0];
				c[c[x][0]][1]=c[x][1];
			}else {
				out.println(c[x][0]);
			}
		}
		out.flush();
	}
}
"
155,C,Java,60165820,2023-01-07 13:41:20,一周的,运行超时,"import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Kattio io = new Kattio();
        int n = io.nextInt();
        int k = io.nextInt();
        TreeSet<Integer> set = new TreeSet<>();
        for (int i = 0; i <= n; i++) {
            set.add(i);
        }
        for (int i = 0; i < k; i++) {
            int a = io.nextInt();
            int b = io.nextInt();
            if (a==1) set.remove(b);
            else System.out.println(set.lower(b));
        }
    }
}

class Kattio extends PrintWriter {
    private BufferedReader r;
    private StringTokenizer st;

    // 标准 IO
    public Kattio() {
        this(System.in, System.out);
    }

    public Kattio(InputStream i, OutputStream o) {
        super(o);
        r = new BufferedReader(new InputStreamReader(i));
    }

    // 文件 IO
    public Kattio(String intput, String output) throws IOException {
        super(output);
        r = new BufferedReader(new FileReader(intput));
    }

    // 在没有其他输入时返回 null
    public String next() {
        try {
            while (st == null || !st.hasMoreTokens())
                st = new StringTokenizer(r.readLine());
            return st.nextToken();
        } catch (Exception e) {
        }
        return null;
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }
}
"
156,C,Java,60165885,2023-01-07 13:44:29,一周的,运行超时,"import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Kattio io = new Kattio();
        int n = io.nextInt();
        int k = io.nextInt();
        TreeSet<Integer> set = new TreeSet<>();
        for (int i = 0; i <= n; i++) {
            set.add(i);
        }
        for (int i = 0; i < k; i++) {
            int a = io.nextInt();
            int b = io.nextInt();
            if (a==1) set.remove(b);
            else System.out.println(set.lower(b));
        }
    }
}

class Kattio extends PrintWriter {
    private BufferedReader r;
    private StringTokenizer st;

    // 标准 IO
    public Kattio() {
        this(System.in, System.out);
    }

    public Kattio(InputStream i, OutputStream o) {
        super(o);
        r = new BufferedReader(new InputStreamReader(i));
    }

    // 文件 IO
    public Kattio(String intput, String output) throws IOException {
        super(output);
        r = new BufferedReader(new FileReader(intput));
    }

    // 在没有其他输入时返回 null
    public String next() {
        try {
            while (st == null || !st.hasMoreTokens())
                st = new StringTokenizer(r.readLine());
            return st.nextToken();
        } catch (Exception e) {
        }
        return null;
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }
}
"
157,C,Java,60165960,2023-01-07 13:48:32,一周的,运行超时,"import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Kattio io = new Kattio();
        int n = io.nextInt();
        int k = io.nextInt();
        TreeSet<Integer> set = new TreeSet<>();
        for (int i = 0; i <= n; i++) {
            set.add(i);
        }
        for (int i = 0; i < k; i++) {
            int a = io.nextInt();
            int b = io.nextInt();
            if (a==1) set.remove(b);
            else System.out.println(set.lower(b));
            io.flush();
        }
    }
}

class Kattio extends PrintWriter {
    private BufferedReader r;
    private StringTokenizer st;

    // 标准 IO
    public Kattio() {
        this(System.in, System.out);
    }

    public Kattio(InputStream i, OutputStream o) {
        super(o);
        r = new BufferedReader(new InputStreamReader(i));
    }

    // 文件 IO
    public Kattio(String intput, String output) throws IOException {
        super(output);
        r = new BufferedReader(new FileReader(intput));
    }

    // 在没有其他输入时返回 null
    public String next() {
        try {
            while (st == null || !st.hasMoreTokens())
                st = new StringTokenizer(r.readLine());
            return st.nextToken();
        } catch (Exception e) {
        }
        return null;
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }
}
"
158,C,Java,60166049,2023-01-07 13:53:48,一周的,答案正确,"import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Kattio io = new Kattio();
        int n = io.nextInt();
        int k = io.nextInt();
        TreeSet<Integer> set = new TreeSet<>();
        for (int i = 0; i <= n; i++) {
            set.add(i);
        }
        while (k-- > 0) {
            int l = io.nextInt();
            int r = io.nextInt();
            if (l == 1) set.remove(r);
            else io.println(set.lower(r));
        }
        io.flush();
    }
}

class Kattio extends PrintWriter {
    private BufferedReader r;
    private StringTokenizer st;

    // 标准 IO
    public Kattio() {
        this(System.in, System.out);
    }

    public Kattio(InputStream i, OutputStream o) {
        super(o);
        r = new BufferedReader(new InputStreamReader(i));
    }

    // 文件 IO
    public Kattio(String intput, String output) throws IOException {
        super(output);
        r = new BufferedReader(new FileReader(intput));
    }

    // 在没有其他输入时返回 null
    public String next() {
        try {
            while (st == null || !st.hasMoreTokens())
                st = new StringTokenizer(r.readLine());
            return st.nextToken();
        } catch (Exception e) {
        }
        return null;
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }
}
"
159,C,Java,60167164,2023-01-07 14:52:37,牛客232703472号,运行超时,"import java.util.Scanner;
import java.util.TreeSet;
public class Main{
    
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        
        TreeSet<Integer> tree = new TreeSet<>();
        
        for(int i = 1;i <= n; ++i) tree.add(i);
        
        while(k -- > 0)
        {
            int op = sc.nextInt();
            int x = sc.nextInt();
            if(op == 1) tree.remove(x);
            else{
                if(tree.lower(x) == null) System.out.println(0);
                else System.out.println(tree.lower(x));
            }
        }
        
    }
}"
160,C,Java,60167265,2023-01-07 14:57:45,牛客232703472号,执行出错,"import java.util.Scanner;
import java.util.TreeSet;
public class Main{
    static int N = 1000005;
    static int[] h = new int[N], l = new int[N], r = new int[N];
    static int[] vis = new int[N];
    static int idx;
    
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        
        
        for(int i = 1;i <= n; ++i) {
            h[i] = i;
            l[i] = i - 1;
            r[i] = i + 1;
        }
        
        r[n] = -1;
        l[1] = -1;
        
        while(k -- > 0) {
            int op = sc.nextInt();
            int x = sc.nextInt();
            if(op == 2) {
                if(l[x] == -1) System.out.println(0);
                else System.out.println(h[l[x]]);
            }
            else {
                r[l[x]] = r[x];
                l[r[x]] = l[x];
            }
        }
        
        
    }
}"
161,C,Java,60167328,2023-01-07 15:01:21,牛客232703472号,运行超时,"import java.util.Scanner;

public class Main{
    static int N = 1000005;
    static int[] h = new int[N], l = new int[N], r = new int[N];
    static int[] vis = new int[N];

    
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        
        
        for(int i = 1;i <= n; ++i) {
            h[i] = i;
            l[i] = i - 1;
            r[i] = i + 1;
        }

        
        while(k -- > 0) {
            int op = sc.nextInt();
            int x = sc.nextInt();
            if(op == 2) {
               
                System.out.println(h[l[x]]);
            }
            else {
                r[l[x]] = r[x];
                l[r[x]] = l[x];
            } 
        }
        
        
    }
}"
162,C,Java,60167372,2023-01-07 15:03:15,牛客232703472号,运行超时,"import java.util.Scanner;

public class Main{
    static int N = 1000005;
    static int[] l = new int[N], r = new int[N];


    
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        
        
        for(int i = 1;i <= n; ++i) {

            l[i] = i - 1;
            r[i] = i + 1;
        }

        
        while(k -- > 0) {
            int op = sc.nextInt();
            int x = sc.nextInt();
            if(op == 2) {
               
                System.out.println(l[x]);
            }
            else {
                r[l[x]] = r[x];
                l[r[x]] = l[x];
            } 
        }
        
        
    }
}"
163,C,Java,60167516,2023-01-07 15:09:17,牛客232703472号,运行超时,"import java.util.Scanner;

public class Main{
    

    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt(); 
        int[] l = new int[n + 5];
        int[] r = new int[n + 5];
        for(int i = 1;i <= n; ++i) {
            l[i] = i - 1;
            r[i] = i + 1;
        }

        
        while(k -- > 0) {
            int op = sc.nextInt();
            int x = sc.nextInt();
            if(op == 2) {
               
                System.out.println(l[x]);
            }
            else {
                r[l[x]] = r[x];
                l[r[x]] = l[x];
            } 
        }
        
        
    }
}"
164,C,Java,60167593,2023-01-07 15:13:45,牛客232703472号,运行超时,"import java.util.Scanner;

public class Main{
    

    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt(); 
        int[] l = new int[n + 5];
        int[] r = new int[n + 5];
        for(int i = 1;i <= n; ++i) {
            l[i] = i - 1;
            r[i] = i + 1;
        }

        
        while(k -- > 0) {
            int op = sc.nextInt();
            int x = sc.nextInt();
            if(op == 2) {
               
                System.out.println(l[x]);
            }
            else {
                r[l[x]] = r[x];
                l[r[x]] = l[x];
            } 
        }
        
        
    }
}"
165,C,Java,60167635,2023-01-07 15:15:35,牛客232703472号,答案错误,"import java.util.Scanner;

public class Main{
    

    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt(); 
      

        
        while(k -- > 0) {
            int op = sc.nextInt();
            int x = sc.nextInt();
            
        }
        
        
    }
}"
166,C,Java,60168492,2023-01-07 15:53:27,Faith-cxz,运行超时,"import java.util.*;

public class Main{
    public static void main(String[] args){
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int k = scanner.nextInt();
        ArrayList<Integer> list = new ArrayList<>();
        for(int i = 0; i <= n; i++){
            list.add(i);
        }
        while(k-- > 0){
            int t = scanner.nextInt();
            int x = scanner.nextInt();
            if(t == 1){
                for(int i = 1; i < list.size(); i++){
                    if(list.get(i) == x){
                        list.remove(i);
                    }
                }
            }else{
                for(int i = 1; i < list.size(); i++){
                    if(list.get(i) == x){
                        System.out.println(list.get(i - 1));
                    }
                }
            }
        }
    }
}"
167,C,Java,60168546,2023-01-07 15:55:48,Faith-cxz,运行超时,"import java.util.*;

public class Main{
    public static void main(String[] args){
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int k = scanner.nextInt();
        ArrayList<Integer> list = new ArrayList<>();
        for(int i = 0; i <= n; i++){
            list.add(i);
        }
        while(k-- > 0){
            int t = scanner.nextInt();
            int x = scanner.nextInt();
            if(t == 1){
                for(int i = 1; i < list.size(); i++){
                    if(list.get(i) == x){
                        list.remove(i);
                    }
                }
            }else{
                for(int i = 1; i < list.size(); i++){
                    if(list.get(i) == x){
                        System.out.println(list.get(i - 1));
                    }
                }
            }
        }
    }
}"
168,C,Java,60169176,2023-01-07 16:27:05,codingj,答案正确,"import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;

public class Main {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
	static int N = (int)(1e6 + 10);
	static int l[] = new int[N];
	static int r[] = new int[N];
// 	static int id[] = new int[N];
	static int idx = 0;
	public static void main(String[] args) throws Exception{
		String nk[] = br.readLine().split("" "");
		int n = Integer.parseInt(nk[0]);
		int k = Integer.parseInt(nk[1]);
		for(int i = 1; i <= n; i++) {
// 			id[i] = i;
			l[i] = i - 1;
			r[i] = i + 1;
		}
		while((k--) > 0) {
			String ops[] = br.readLine().split("" "");
			int op = Integer.parseInt(ops[0]);
			int x = Integer.parseInt(ops[1]);
			if(op == 1) {
				l[r[x]] = l[x];
			    r[l[x]] = r[x];
			}else {
				out.println(l[x]);
			}
			out.flush();
		}
	}

	
}
"
169,C,Java,60169182,2023-01-07 16:27:18,牛客232703472号,答案正确,"import java.util.Scanner;

public class Main{
    static int N = 1000005;
    static int[] l = new int[N], r = new int[N];


    
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        
        
        for(int i = 1;i <= n; ++i) {

            l[i] = i - 1;
            r[i] = i + 1;
        }

        StringBuilder bu = new StringBuilder();
        while(k -- > 0) {
            int op = sc.nextInt();
            int x = sc.nextInt();
            if(op == 2) {
               
                bu.append(l[x] + ""\n"");
            }
            else {
                r[l[x]] = r[x];
                l[r[x]] = l[x];
            } 
        }
        System.out.println(bu);
        
        
    }
}"
170,C,Java,60169319,2023-01-07 16:34:37,codingj,答案错误,"import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;

public class Main {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
	static int N = (int)(1e6 + 10);
	static int l[] = new int[N];
	static int r[] = new int[N];
// 	static int id[] = new int[N];
	static int idx = 0;
	public static void main(String[] args) throws Exception{
		String nk[] = br.readLine().split("" "");
		int n = Integer.parseInt(nk[0]);
		int k = Integer.parseInt(nk[1]);
		for(int i = 1; i <= n; i++) {
// 			id[i] = i;
			l[i] = i - 1;
// 			r[i] = i + 1;
		}
		while((k--) > 0) {
			String ops[] = br.readLine().split("" "");
			int op = Integer.parseInt(ops[0]);
			int x = Integer.parseInt(ops[1]);
			if(op == 1) {
				l[r[x]] = l[x];
// 			    r[l[x]] = r[x];
			}else {
				out.println(l[x]);
			}
			out.flush();
		}
	}

	
}
"
171,C,Java,60169394,2023-01-07 16:38:04,codingj,答案正确,"import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;

public class Main {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
	static int N = (int)(1e6 + 10);
	static int l[] = new int[N];
	static int r[] = new int[N];
// 	static int id[] = new int[N];
	static int idx = 0;
	public static void main(String[] args) throws Exception{
		String nk[] = br.readLine().split("" "");
		int n = Integer.parseInt(nk[0]);
		int k = Integer.parseInt(nk[1]);
		for(int i = 1; i <= n; i++) {
// 			id[i] = i;
			l[i] = i - 1;
			r[i] = i + 1;
		}
		while((k--) > 0) {
			String ops[] = br.readLine().split("" "");
			int op = Integer.parseInt(ops[0]);
			int x = Integer.parseInt(ops[1]);
			if(op == 1) {
				l[r[x]] = l[x];
			    r[l[x]] = r[x];
			}else {
				out.println(l[x]);
			}
			out.flush();
		}
	}

	
}
"
172,C,Java,60169669,2023-01-07 16:50:59,JiYuBo,答案正确,"
import java.io.*;
import java.util.HashMap;

/**
 * @author 冀玉博
 * @version 1.0
 */
public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));
        String[] s = bf.readLine().split("" "");
        HashMap<Integer, DD> map = new HashMap<>();
        int n = Integer.parseInt(s[0]);
        int k =Integer.parseInt(s[1]);
        int a[] =new int[n+1];
        DD head = new DD(0,null,null);
        DD last = new DD(0,null,null);
        DD node = head;//辅助节点

        for(int i =1;i<=n;i++){
            node.next = new DD(i,node,null);
            node = node.next;
            map.put(i,node);
        }
        node.next =last;
        last.pre = node;

        for(int i =0;i<k;i++){
            String s2[] =bf.readLine().split("" "");
            //注意这里的get的类型
            DD dd = map.get(Integer.parseInt(s2[1]));
            if(s2[0].equals(""1"")){
                dd.pre.next = dd.next;
                dd.next.pre =dd.pre;
            }
            else{
                    pw.println(dd.pre.x);
            }
//                pw.println();
        }
        pw.flush();
    }
}
class DD{
    int x;
    DD pre;
    DD next;

    public DD(int x, DD pre, DD next) {
        this.x = x;
        this.pre = pre;
        this.next = next;
    }
}
"
173,C,Java,60170638,2023-01-07 17:52:19,codingj,答案正确,"import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.util.Set;
import java.util.TreeSet;

public class Main {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
	static int N = (int)(1e6 + 10);
	public static void main(String[] args) throws Exception{
		TreeSet<Integer>st = new TreeSet<Integer>();
		String nk[] = br.readLine().split("" "");
		int n = Integer.parseInt(nk[0]);
		int k = Integer.parseInt(nk[1]);
		for(int i = 1; i <= n; i++) {
			st.add(i);
		}
		while((k--) > 0) {
			String ops[] = br.readLine().split("" "");
			int op = Integer.parseInt(ops[0]);
			int x = Integer.parseInt(ops[1]);
			if(op == 1) {
				st.remove(x);
			}else {
				if(st.lower(x)!=null) {
					out.println(st.lower(x));
				}else {
					out.println(0);
				}
				
			}
			out.flush();
		}
	}


}
"
174,C,Java,60170677,2023-01-07 17:54:44,codingj,答案正确,"import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.util.Set;
import java.util.TreeSet;

public class Main {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
	static int N = (int)(1e6 + 10);
	public static void main(String[] args) throws Exception{
		TreeSet<Integer>st = new TreeSet<Integer>();
		String nk[] = br.readLine().split("" "");
		int n = Integer.parseInt(nk[0]);
		int k = Integer.parseInt(nk[1]);
		for(int i = 1; i <= n; i++) {
			st.add(i);
		}
		while((k--) > 0) {
			String ops[] = br.readLine().split("" "");
			int op = Integer.parseInt(ops[0]);
			int x = Integer.parseInt(ops[1]);
			if(op == 1) {
				st.remove(x);
			}else {
				if(st.lower(x)!=null) {
					out.println(st.lower(x));
				}else {
					out.println(0);
				}
				
			}
			out.flush();
		}
	}


}
"
175,C,Java,60171402,2023-01-07 18:52:44,第六序列,运行超时,"import java.util.*;
public class Main{
    static int N=1000010;
    static int []l=new int[N];
    static int []r=new int[N];
    public static void main(String[]args){
        Scanner in=new Scanner(System.in);
        int n=in.nextInt();
        int m=in.nextInt();
        l[1]=0;
        r[1]=-1;
        for(int i=2;i<=n;i++)l[i]=i-1;
        for(int i=1;i<n;i++)r[i]=i+1;
            
        while(m-->0){
            int op=in.nextInt();
            int x=in.nextInt();
            if(op==1){
                l[r[x]]=l[x];
                r[l[x]]=r[x];
            }else {
                System.out.println(l[x]);
            }
        }
    }
}"
176,C,Java,60172048,2023-01-07 19:42:38,acm_alone,答案正确,"
import java.io.*;
import java.util.*;

public class Main {
    static int ans = Integer.MAX_VALUE;

    public static void main(String[] args) throws IOException {
        sc = new MScanner(System.in);
        pw = new PrintWriter(System.out);
        //int t = sc.nextInt();
        for (int i = 0; i < 1; i++) {
            solver();
        }
    }

    public static void solver() throws IOException {
        TreeSet<Integer> set=new TreeSet<>();
        int n=sc.nextInt();
        int k=sc.nextInt();
        for (int i=1;i<=n;i++){
            set.add(i);
        }
        for (int i=0;i<k;i++){
            int u=sc.nextInt();
            int uu=sc.nextInt();
            if(u==1){
                set.remove(uu);
                continue;
            }
            Integer floor = set.floor(uu - 1);
            if(floor==null)pw.println(0);
            else pw.println(floor);
        }
        pw.flush();
    }

    static int curt;
    static PrintWriter pw;
    static MScanner sc;

    static class MScanner {
        StringTokenizer st;
        BufferedReader br;

        public MScanner(InputStream system) {
            br = new BufferedReader(new InputStreamReader(system));
        }

        public MScanner(String file) throws Exception {
            br = new BufferedReader(new FileReader(file));
        }

        public String next() throws IOException {
            while (st == null || !st.hasMoreTokens())
                st = new StringTokenizer(br.readLine());
            return st.nextToken();
        }

        public String nextLine() throws IOException {
            return br.readLine();
        }

        public int nextInt() throws IOException {
            return Integer.parseInt(next());
        }

        public double nextDouble() throws IOException {
            return Double.parseDouble(next());
        }

        public char nextChar() throws IOException {
            return next().charAt(0);
        }

        public long nextLong() throws IOException {
            return Long.parseLong(next());
        }
    }
}
"
177,C,Java,60172398,2023-01-07 20:07:13,智破云霄,运行超时,"import java.util.*;
public class Main{
    public static void main(String[] args)
    {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        int[] a = new int[n+1];
        int[] s = new int[n+10];
        int[] next = new int[n+10];
        for(int i=1;i<=n;i++)
        {
            a[i]=i;
            s[i]=i-1;
            next[i]=i+1;
        }
        while(k-->0)
        {
            int o = sc.nextInt();
            int p = sc.nextInt();
            if(o==1)
            {
                next[p-1]=next[p];
                s[p+1]=s[p];
            }
            else
                System.out.println(s[p]);
        }
    }
}"
178,C,Java,60172467,2023-01-07 20:13:17,智破云霄,答案错误,"import java.util.*;
import java.io.*;
public class Main {
public static void main(String[] args) {
 InputReader in = new InputReader(System.in);
 PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
 int n = in.nextInt();
 int k = in.nextInt();
 int[] a = new int[n+1];
 int[] s = new int[n+10];
 int[] next = new int[n+10];
 for(int i=1;i<=n;i++)
 {
     a[i]=i;
     s[i]=i-1;
     next[i]=i+1;
 }
 while(k-->0)
 {
     int o = in.nextInt();
     int p = in.nextInt();
     if(o==1)
     {
         next[p-1]=next[p];
         s[p+1]=s[p];
     }
     else
         out.println(s[p]);
 }
 out.flush();
}
}


class InputReader {
    private final BufferedReader buf;
    private StringTokenizer tkl;

    public InputReader(InputStream is) {
        buf = new BufferedReader(new InputStreamReader(is));
    }

    public boolean hasNext() {
        try {
            while (tkl == null || !tkl.hasMoreElements()) tkl = new StringTokenizer(buf.readLine());
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public String next() {
        return hasNext() ? tkl.nextToken() : null;
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }
}"
179,C,Java,60172485,2023-01-07 20:14:26,第六序列,运行超时,"import java.util.*;
import java.io.*;
public class Main{
    static int N=1000010;
    static int []l=new int[N];
    static int []r=new int[N];
    public static void main(String[]args)throws IOException{
        BufferedReader bf=new BufferedReader(new InputStreamReader(System.in));
        String []s=bf.readLine().split("" "");
        int n=Integer.parseInt(s[0]);
        int m=Integer.parseInt(s[1]);
        l[1]=0;
        r[1]=-1;
        for(int i=2;i<=n;i++)l[i]=i-1;
        for(int i=1;i<n;i++)r[i]=i+1;

        int op,x;
        while(m-->0){
            s=bf.readLine().split("" "");
            op=Integer.parseInt(s[0]);
            x=Integer.parseInt(s[1]);
            if(op==1){
                l[r[x]]=l[x];
                r[l[x]]=r[x];
            }else {
                System.out.println(l[x]);
            }
        }
    }
}"
180,C,Java,60172610,2023-01-07 20:23:38,智破云霄,答案错误,"import java.util.*;
import java.io.*;
public class Main {
public static void main(String[] args) {
 InputReader in = new InputReader(System.in);
 PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
 int n = in.nextInt();
 int k = in.nextInt();
 int[] s = new int[n+10];
 int[] next = new int[n+10];
 for(int i=1;i<=n;i++)
 {
     s[i]=i-1;
     next[i]=i+1;
 }
 while(k-->0)
 {
     int o = in.nextInt();
     int p = in.nextInt();
     if(o==1)
     {
         next[p-1]=next[p];
         s[p+1]=s[p];
     }
     else
         out.println(s[p]);
 }
 out.flush();
}
}


class InputReader {
    private final BufferedReader buf;
    private StringTokenizer tkl;

    public InputReader(InputStream is) {
        buf = new BufferedReader(new InputStreamReader(is));
    }

    public boolean hasNext() {
        try {
            while (tkl == null || !tkl.hasMoreElements()) tkl = new StringTokenizer(buf.readLine());
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public String next() {
        return hasNext() ? tkl.nextToken() : null;
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }
}"
181,C,Java,60172665,2023-01-07 20:28:08,智破云霄,答案正确,"import java.util.*;
import java.io.*;
public class Main {
public static void main(String[] args) {
 InputReader in = new InputReader(System.in);
 PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
 int n = in.nextInt();
 int k = in.nextInt();
 int[] a = new int[n+1];
 int[] s = new int[n+10];
 int[] next = new int[n+10];
 for(int i=1;i<=n;i++)
 {
     a[i]=i;
     s[i]=i-1;
     next[i]=i+1;
 }
 while(k-->0)
 {
     int o = in.nextInt();
     int p = in.nextInt();
     if(o==1)
     {
         next[s[p]]=next[p];
         s[next[p]]=s[p];
     }
     else
         out.println(s[p]);
 }
 out.flush();
}
}


class InputReader {
    private final BufferedReader buf;
    private StringTokenizer tkl;

    public InputReader(InputStream is) {
        buf = new BufferedReader(new InputStreamReader(is));
    }

    public boolean hasNext() {
        try {
            while (tkl == null || !tkl.hasMoreElements()) tkl = new StringTokenizer(buf.readLine());
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    public String next() {
        return hasNext() ? tkl.nextToken() : null;
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }
}"
182,C,Java,60172729,2023-01-07 20:32:08,智破云霄,运行超时,"import java.util.*;
public class Main {
public static void main(String[] args) {
	Scanner sc = new Scanner(System.in);
	int n = sc.nextInt();
	 int k = sc.nextInt();
	 int[] a = new int[n+1];
	 int[] s = new int[n+10];
	 int[] next = new int[n+10];
	 for(int i=1;i<=n;i++)
	 {
	     a[i]=i;
	     s[i]=i-1;
	     next[i]=i+1;
	 }
	 while(k-->0)
	 {
	     int o = sc.nextInt();
	     int p = sc.nextInt();
	     if(o==1)
	     {
	         next[s[p]]=next[p];
	         s[next[p]]=s[p];
	     }
	     else
	         System.out.println(s[p]);
	 }
	 
}
}
"
183,C,Java,60175387,2023-01-08 09:09:18,第六序列,答案正确,"import java.util.*;
import java.io.*;
public class Main{
    static int N=1000010;
    static int []l=new int[N];
    static int []r=new int[N];
    public static void main(String[]args)throws IOException{
        BufferedReader bf=new BufferedReader(new InputStreamReader(System.in));
        PrintWriter out=new PrintWriter(new OutputStreamWriter(System.out));
        String []s=bf.readLine().split("" "");
        int n=Integer.parseInt(s[0]);
        int m=Integer.parseInt(s[1]);
        l[1]=0;
        r[1]=-1;
        for(int i=2;i<=n;i++)l[i]=i-1;
        for(int i=1;i<n;i++)r[i]=i+1;

        int op,x;
        while(m-->0){
            s=bf.readLine().split("" "");
            op=Integer.parseInt(s[0]);
            x=Integer.parseInt(s[1]);
            if(op==1){
                l[r[x]]=l[x];
                r[l[x]]=r[x];
            }else {
                out.println(l[x]);
            }
        }
        out.flush();
        out.flush();
        bf.close();
        
    }
}"
184,C,Java,60183750,2023-01-08 21:05:02,槿a,运行超时,"import java.util.Scanner;
public class Main{
    public static void main(String args[]){
        Scanner sc=new Scanner(System.in);
    int a=sc.nextInt();
    int b=sc.nextInt();
    int c[]=new int [a+1];
    for(int j=0;j<=a;j++){
        c[j]=j;
    }
    for(int i=0;i<b;i++){
        int d=sc.nextInt();
        int e=sc.nextInt();
        if(d==2&&e==1){
            System.out.println(0);
            continue;
        }
        if(d==1){
            c[e]=0;
        }
        if(d==2){
            int f=c[e-1];
            if(f==0){
                f=c[e-2];
            }
            System.out.println(f);
        }
    }
}
}"
185,C,Java,60183766,2023-01-08 21:05:54,槿a,运行超时,"import java.util.Scanner;
public class Main{
    public static void main(String args[]){
        Scanner sc=new Scanner(System.in);
    int a=sc.nextInt();
    int b=sc.nextInt();
    int c[]=new int [a+1];
    for(int j=0;j<=a;j++){
        c[j]=j;
    }
    for(int i=0;i<b;i++){
        int d=sc.nextInt();
        int e=sc.nextInt();
        if(d==2&&e==1){
            System.out.println(0);
            continue;
        }
        if(d==1){
            c[e]=0;
        }
        if(d==2){
            int f=c[e-1];
            if(f==0){
                f=c[e-2];
            }
            System.out.println(f);
        }
    }
}
}"
186,C,Java,60183774,2023-01-08 21:06:17,槿a,运行超时,"import java.util.Scanner;
public class Main{
    public static void main(String args[]){
        Scanner sc=new Scanner(System.in);
    int a=sc.nextInt();
    int b=sc.nextInt();
    int c[]=new int [a+1];
    for(int j=0;j<=a;j++){
        c[j]=j;
    }
    for(int i=0;i<b;i++){
        int d=sc.nextInt();
        int e=sc.nextInt();
        if(d==2&&e==1){
            System.out.println(0);
            continue;
        }
        if(d==1){
            c[e]=0;
        }
        if(d==2){
            int f=c[e-1];
            if(f==0){
                f=c[e-2];
            }
            System.out.println(f);
        }
    }
}
}"
187,C,Java,60183776,2023-01-08 21:06:21,槿a,运行超时,"import java.util.Scanner;
public class Main{
    public static void main(String args[]){
        Scanner sc=new Scanner(System.in);
    int a=sc.nextInt();
    int b=sc.nextInt();
    int c[]=new int [a+1];
    for(int j=0;j<=a;j++){
        c[j]=j;
    }
    for(int i=0;i<b;i++){
        int d=sc.nextInt();
        int e=sc.nextInt();
        if(d==2&&e==1){
            System.out.println(0);
            continue;
        }
        if(d==1){
            c[e]=0;
        }
        if(d==2){
            int f=c[e-1];
            if(f==0){
                f=c[e-2];
            }
            System.out.println(f);
        }
    }
}
}"
188,C,Java,60187873,2023-01-09 14:01:31,客牛12345678号,运行超时,"import java.util.Scanner;
import java.util.TreeSet;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int k = in.nextInt();
        TreeSet<Integer> tree = new TreeSet<>();
        for (int i = 1; i <= n; i++) {
            tree.add(i);
        }
        while (k-- > 0) {
            int op = in.nextInt();
            int index = in.nextInt();
            if (op == 1) {
                tree.remove(index);
            } else {
                System.out.println(tree.lower(index) == null ? 0 : tree.lower(index));
            }
        }
    }
}
"
189,C,Java,60187885,2023-01-09 14:03:03,客牛12345678号,运行超时,"import java.util.Scanner;
import java.util.TreeSet;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int k = in.nextInt();
        TreeSet<Integer> tree = new TreeSet<>();
        for (int i = 1; i <= n; i++) {
            tree.add(i);
        }
        while (k-- > 0) {
            int op = in.nextInt();
            int index = in.nextInt();
            if (op == 1) {
                tree.remove(index);
            } else {
                System.out.println(tree.lower(index) == null ? 0 : tree.lower(index));
            }
        }
    }
}
"
190,C,Java,60187898,2023-01-09 14:04:12,客牛12345678号,运行超时,"import java.io.DataInputStream;
import java.io.IOException;
import java.util.TreeSet;

public class Main {
    public static void main(String[] args) throws IOException {
        FastScanner in = new FastScanner();
        int n = in.nextInt();
        int k = in.nextInt();
        TreeSet<Integer> tree = new TreeSet<>();
        for (int i = 1; i <= n; i++) {
            tree.add(i);
        }
        while (k-- > 0) {
            int op = in.nextInt();
            int index = in.nextInt();
            if (op == 1) {
                tree.remove(index);
            } else {
                System.out.println(tree.lower(index) == null ? 0 : tree.lower(index));
            }
        }
    }

    private static class FastScanner {
        final private int BUFFER_SIZE = 1 << 16;
        private DataInputStream din;
        private byte[] buffer;
        private int bufferPointer, bytesRead;

        private FastScanner() throws IOException {
            din = new DataInputStream(System.in);
            buffer = new byte[BUFFER_SIZE];
            bufferPointer = bytesRead = 0;
        }

        private short nextShort() throws IOException {
            short ret = 0;
            byte c = read();
            while (c <= ' ') c = read();
            boolean neg = (c == '-');
            if (neg) c = read();
            do ret = (short) (ret * 10 + c - '0');
            while ((c = read()) >= '0' && c <= '9');
            if (neg) return (short) -ret;
            return ret;
        }

        private int nextInt() throws IOException {
            int ret = 0;
            byte c = read();
            while (c <= ' ') c = read();
            boolean neg = (c == '-');
            if (neg) c = read();
            do ret = ret * 10 + c - '0';
            while ((c = read()) >= '0' && c <= '9');
            if (neg) return -ret;
            return ret;
        }

        public long nextLong() throws IOException {
            long ret = 0;
            byte c = read();
            while (c <= ' ') c = read();
            boolean neg = (c == '-');
            if (neg) c = read();
            do ret = ret * 10 + c - '0';
            while ((c = read()) >= '0' && c <= '9');
            if (neg) return -ret;
            return ret;
        }

        private char nextChar() throws IOException {
            byte c = read();
            while (c <= ' ') c = read();
            return (char) c;
        }

        private String nextString() throws IOException {
            StringBuilder ret = new StringBuilder();
            byte c = read();
            while (c <= ' ') c = read();
            do {
                ret.append((char) c);
            } while ((c = read()) > ' ');
            return ret.toString();
        }

        private void fillBuffer() throws IOException {
            bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);
            if (bytesRead == -1) buffer[0] = -1;
        }

        private byte read() throws IOException {
            if (bufferPointer == bytesRead) fillBuffer();
            return buffer[bufferPointer++];
        }

    }
}"
191,C,Java,60191009,2023-01-09 18:49:14,HMETAO,运行超时,"
import java.io.*;
import java.util.*;
import java.util.concurrent.TimeUnit;
import java.util.stream.Collectors;

public class Main {

    public static void main(String[] args) throws IOException {
        Reader r = new Reader();
        int n = r.nextInt();
        int k = r.nextInt();
        LinkedList<Integer> que = new LinkedList<>();
        StringBuilder sb = new StringBuilder();
        for (int i = 1; i <= n; i++) {
            que.offer(i);
        }
        for (int i = 0; i < k; i++) {
            int type = r.nextInt();
            Integer x = r.nextInt();
            if (type == 1) {
                que.remove(x);
            } else {
                int pre = 0;
                for (Integer integer : que) {
                    if (integer.equals(x)) {
                        break;
                    }
                    pre = integer;
                }
                sb.append(pre).append(""\n"");
            }
        }
        System.out.println(sb);
    }

    public static long pow3(int a, int b) {
        long ans = 1;
        while (b > 0) {
            if ((b & 1) == 1) {
                ans *= a;
            }
            a *= a;
            b >>= 1;
        }
        return ans;
    }

    public static long pow4(long a, long b, int p) {
        long ans = 1;
        while (b > 0) {
            if ((b & 1) == 1) {
                ans = (ans * a) % p;
            }
            a = (a * a) % p;
            b >>= 1;
        }
        return ans;
    }

    public static List<Integer> euler(int n) {
        boolean[] check = new boolean[n + 1];
        List<Integer> ans = new ArrayList<>();
        for (int i = 2; i <= n; i++) {
            if (!check[i]) {
                ans.add(i);
            }
            for (Integer item : ans) {
                if (item * i > n) break;
                check[item * i] = true;
                if (i % item == 0) break;
            }
        }
        return ans;
    }

    public static void euler_phi(int n) {
        int ans = n;
        for (int i = 2; i <= n / i; i++) {
            if (n % i == 0) {
                ans *= (1 - 1.0 / i);
                while (n % i == 0) {
                    n /= i;
                }
            }
        }
        if (n > 1) ans *= (1 - 1.0 / n);
        System.out.println(ans);
    }

    public static int[] eulers(int n) {
        boolean[] check = new boolean[n + 1];
        int[] phi = new int[n + 1];
        phi[1] = 1;
        ArrayList<Integer> primes = new ArrayList<>();
        for (int i = 2; i <= n; i++) {
            if (!check[i]) {
                primes.add(i);
                phi[i] = i - 1;
            }

            for (Integer item : primes) {
                if (item * i > n) break;
                check[item * i] = true;
                if (i % item == 0) {
                    phi[item * i] = item * phi[i];
                    break;
                }
                phi[item * i] = (item - 1) * phi[i];
            }
        }
        return phi;
    }

    static class Reader {
        BufferedReader buf;
        StringTokenizer tok;

        Reader() {
            buf = new BufferedReader(new InputStreamReader(System.in));
        }

        boolean hasNext() {
            while (tok == null || !tok.hasMoreElements()) {
                try {
                    tok = new StringTokenizer(buf.readLine());
                } catch (Exception e) {
                    return false;
                }
            }
            return true;
        }

        String nextLine() {
            try {
                return buf.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        String next() {
            if (hasNext())
                return tok.nextToken();
            return null;
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }
    }

}


"
192,C,Java,60191058,2023-01-09 18:53:43,HMETAO,运行超时,"import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws IOException {
        Reader r = new Reader();
        int n = r.nextInt();
        int k = r.nextInt();
        ArrayList<Node> list = new ArrayList<>();
        StringBuffer sb = new StringBuffer();
        for (int i = 1; i <= n; i++) {
            list.add(new Node(i, i - 1));
        }
        int c = 0;
        for (int i = 0; i < k; i++) {
            int type = r.nextInt();
            int x = r.nextInt();
            if (type == 1) {
                c++;
                Node node = list.get(x-1);
                list.get(x).pre = node.pre;
                list.remove(node);
            } else {
                sb.append(list.get(x - c-1).pre).append(""\n"");
            }
        }
                System.out.println(sb);
        
    }

    static class Node {
        int index;
        int pre;

        public Node(int index, int children) {
            this.index = index;
            this.pre = children;
        }
    }

    public static long pow3(int a, int b) {
        long ans = 1;
        while (b > 0) {
            if ((b & 1) == 1) {
                ans *= a;
            }
            a *= a;
            b >>= 1;
        }
        return ans;
    }

    public static long pow4(long a, long b, int p) {
        long ans = 1;
        while (b > 0) {
            if ((b & 1) == 1) {
                ans = (ans * a) % p;
            }
            a = (a * a) % p;
            b >>= 1;
        }
        return ans;
    }

    public static List<Integer> euler(int n) {
        boolean[] check = new boolean[n + 1];
        List<Integer> ans = new ArrayList<>();
        for (int i = 2; i <= n; i++) {
            if (!check[i]) {
                ans.add(i);
            }
            for (Integer item : ans) {
                if (item * i > n) break;
                check[item * i] = true;
                if (i % item == 0) break;
            }
        }
        return ans;
    }

    public static void euler_phi(int n) {
        int ans = n;
        for (int i = 2; i <= n / i; i++) {
            if (n % i == 0) {
                ans *= (1 - 1.0 / i);
                while (n % i == 0) {
                    n /= i;
                }
            }
        }
        if (n > 1) ans *= (1 - 1.0 / n);
        System.out.println(ans);
    }

    public static int[] eulers(int n) {
        boolean[] check = new boolean[n + 1];
        int[] phi = new int[n + 1];
        phi[1] = 1;
        ArrayList<Integer> primes = new ArrayList<>();
        for (int i = 2; i <= n; i++) {
            if (!check[i]) {
                primes.add(i);
                phi[i] = i - 1;
            }

            for (Integer item : primes) {
                if (item * i > n) break;
                check[item * i] = true;
                if (i % item == 0) {
                    phi[item * i] = item * phi[i];
                    break;
                }
                phi[item * i] = (item - 1) * phi[i];
            }
        }
        return phi;
    }

    static class Reader {
        BufferedReader buf;
        StringTokenizer tok;

        Reader() {
            buf = new BufferedReader(new InputStreamReader(System.in));
        }

        boolean hasNext() {
            while (tok == null || !tok.hasMoreElements()) {
                try {
                    tok = new StringTokenizer(buf.readLine());
                } catch (Exception e) {
                    return false;
                }
            }
            return true;
        }

        String nextLine() {
            try {
                return buf.readLine();
            } catch (IOException e) {
                return null;
            }
        }

        String next() {
            if (hasNext())
                return tok.nextToken();
            return null;
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }
    }

}


"
193,C,Java,60192678,2023-01-09 20:47:28,it`s_all_good_man,运行超时,"//import java.sql.SQLOutput;
import java.util.*;

public class Main {

    public static void main(String[] args) {
        new Main().process();
    }

    public void process(){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt(), k = sc.nextInt();
        TreeSet<Integer> set = new TreeSet<>();
        for(int i = 1; i <= n; i++) set.add(i);
        for(int i = 0; i < k; i++){
            if(sc.nextInt() == 1){
                set.remove(sc.nextInt());
            }else {
                Integer res = set.lower(sc.nextInt());
                System.out.println(res == null ? 0 : res);
            }
        }
    }
}"
194,C,Java,60202869,2023-01-10 20:12:09,笨蛋锋哥带我上分,答案正确,"import java.io.*;
import java.util.*;
public class Main {
    static TreeSet<Integer> set=new TreeSet<>();
    static Scanner sc=new Scanner(System.in);
    static StreamTokenizer st=new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
    static PrintWriter pw=new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
    public static void main(String[] args) throws IOException {
        st.nextToken();int n=(int)st.nval;
        st.nextToken();int k=(int)st.nval;
        for(int i=0;i<=n;i++)
        {
            set.add(i);
        }
        for(int i=0;i<k;i++)
        {
            st.nextToken();int a=(int)st.nval;
            st.nextToken();int b=(int)st.nval;
            if(a==1)set.remove(b);
            else pw.println(set.lower(b));
        }
        pw.flush();
    }
}"
195,C,Java,60209220,2023-01-11 14:55:35,牛客78851111号,运行超时,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String[] split = scanner.nextLine().split("" "");
        int[] first = {Integer.parseInt(split[0]), Integer.parseInt(split[1])};
        int[] dp = new int[first[0] + 1];
        while (scanner.hasNextLine()) {
            String[] s = scanner.nextLine().split("" "");
            int n = Integer.parseInt(s[0]);
            int k = Integer.parseInt(s[1]);
            if (n == 1){
                dp[k] = 1;
            }else {
                for (int i = k - 1; i >= 0 ; i--) {
                    if (dp[i] == 0){
                        System.out.println(i);
                        break;
                    }
                }
            }
        }
    }
}"
196,C,Java,60209253,2023-01-11 14:58:11,牛客78851111号,运行超时,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String[] split = scanner.nextLine().split("" "");
        int[] first = {Integer.parseInt(split[0]), Integer.parseInt(split[1])};
        int[] dp = new int[first[0] + 1];
        while (scanner.hasNextLine()) {
            String[] s = scanner.nextLine().split("" "");
            int n = Integer.parseInt(s[0]);
            int k = Integer.parseInt(s[1]);
            if (n == 1){
                dp[k] = 1;
            }else {
                for (int i = k - 1; i >= 0 ; i--) {
                    if (dp[i] == 0){
                        System.out.println(i);
                        break;
                    }
                }
            }
        }
    }
}"
197,C,Java,60209350,2023-01-11 15:07:34,牛客78851111号,运行超时,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String[] split = scanner.nextLine().split("" "");
        int[] first = {Integer.parseInt(split[0]), Integer.parseInt(split[1])};
        int[] dp = new int[first[0] + 1];
        int count = 0;
        while (scanner.hasNext() && count <= first[1]) {
            int n = scanner.nextInt();
            int k = scanner.nextInt();
            if (n == 1){
                dp[k] = 1;
            }else {
                for (int i = k - 1; i >= 0 ; i--) {
                    if (dp[i] == 0){
                        System.out.println(i);
                        break;
                    }
                }
            }
            count++;
        }
    }
}"
198,C,Java,60209379,2023-01-11 15:11:48,牛客78851111号,运行超时,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String[] split = scanner.nextLine().split("" "");
        int[] first = {Integer.parseInt(split[0]), Integer.parseInt(split[1])};
        int[] dp = new int[first[0] + 1];
        int count = 0;
        while (scanner.hasNext() && count <= first[1]) {
            int n = scanner.nextInt();
            int k = scanner.nextInt();
            if (n == 1){
                dp[k] = 1;
            }else {
                for (int i = k - 1; i >= 0 ; i--) {
                    if (dp[i] == 0){
                        System.out.println(i);
                        break;
                    }
                }
            }
            count++;
        }
    }
}"
199,C,Java,60209390,2023-01-11 15:13:02,牛客78851111号,运行超时,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String[] split = scanner.nextLine().split("" "");
        int[] first = {Integer.parseInt(split[0]), Integer.parseInt(split[1])};
        int[] dp = new int[first[0] + 1];
        int count = 0;
        while (scanner.hasNext() && count <= first[1]) {
            int n = scanner.nextInt();
            int k = scanner.nextInt();
            if (n == 1){
                dp[k] = 1;
            }else {
                for (int i = k - 1; i >= 0 ; i--) {
                    if (dp[i] == 0){
                        System.out.println(i);
                        break;
                    }
                }
            }
            count++;
        }
    }
}"
